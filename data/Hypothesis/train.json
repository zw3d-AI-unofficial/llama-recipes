[
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of assembly folders in a specified assembly file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAsmFolders\nFile [in] object file name (File[0]=0 or NULL for active file)\nPart [in] root object name (Part[0]=0 or NULL for active target object)\ntype [in] folder type (0: component folder; 1: cosntraint folder; 2: feature folder)\ncount [out] number of assembly folders\nFolders [out] list of assembly folders\n\nOutputs a list of indices of the assembly folders in the specified assembly file.\nThe assembly file does not exist by default and can only be obtained after the user create it.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain a list of assembly folders in an assembly file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAsmFolders\nFile [in] object file name (File[0]=0 or NULL for active file)\nPart [in] root object name (Part[0]=0 or NULL for active target object)\ntype [in] folder type (0: component folder; 1: cosntraint folder; 2: feature folder)\ncount [out] number of assembly folders\nFolders [out] list of assembly folders\n\nOutputs a list of indices of the assembly folders in the specified assembly file.\nThe assembly file does not exist by default and can only be obtained after the user create it.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the assembly folders by folder type?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAsmFolders\nFile [in] object file name (File[0]=0 or NULL for active file)\nPart [in] root object name (Part[0]=0 or NULL for active target object)\ntype [in] folder type (0: component folder; 1: cosntraint folder; 2: feature folder)\ncount [out] number of assembly folders\nFolders [out] list of assembly folders\n\nOutputs a list of indices of the assembly folders in the specified assembly file.\nThe assembly file does not exist by default and can only be obtained after the user create it.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of entities in a specified assembly folder?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAsmFldChildEnts\nFile [in] object file name (File[0]=0 or NULL for active file)\nPart [in] root object name (Part[0]=0 or NULL for active target object)\nidFolder [in] index of assembly folder\nincSubFld [in] 0 exclude sub folders; 1 include sub folders; 2 only sub folders\ncount [out] number of entities in specified assembly folder\nEnts [out] list of entities in specified assembly folder\n\nOutputs a list of indices of the entities in the specified assembly folder.\nThe idFolder can be obtained through the cvxPartInqAsmFolders interface.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the list of entities in a specified assembly folder?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAsmFldChildEnts\nFile [in] object file name (File[0]=0 or NULL for active file)\nPart [in] root object name (Part[0]=0 or NULL for active target object)\nidFolder [in] index of assembly folder\nincSubFld [in] 0 exclude sub folders; 1 include sub folders; 2 only sub folders\ncount [out] number of entities in specified assembly folder\nEnts [out] list of entities in specified assembly folder\n\nOutputs a list of indices of the entities in the specified assembly folder.\nThe idFolder can be obtained through the cvxPartInqAsmFolders interface.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to include sub folders while obtaining the entities in a specified assembly folder?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAsmFldChildEnts\nFile [in] object file name (File[0]=0 or NULL for active file)\nPart [in] root object name (Part[0]=0 or NULL for active target object)\nidFolder [in] index of assembly folder\nincSubFld [in] 0 exclude sub folders; 1 include sub folders; 2 only sub folders\ncount [out] number of entities in specified assembly folder\nEnts [out] list of entities in specified assembly folder\n\nOutputs a list of indices of the entities in the specified assembly folder.\nThe idFolder can be obtained through the cvxPartInqAsmFolders interface.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of assembly features in a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAsmFtrList\nFile [in] object file name (File[0]=0 or NULL for active file)\nPart [in] part/root object name (Part[0]=0 or NULL for active target object)\nCount [out] number of assembly features in the specified part\nFeatures [out] list of id's of assembly features in the specified part\n\nOutputs a list of database id's of assembly features in the specified part. If there are no features, \"*Count\" is output as zero and \"*Features\" as NULL.\nThis function allocates memory for the array output via \"Features\". The calling procedure is responsible for deallocating the memory with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of assembly features in a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAsmFtrList\nFile [in] object file name (File[0]=0 or NULL for active file)\nPart [in] part/root object name (Part[0]=0 or NULL for active target object)\nCount [out] number of assembly features in the specified part\nFeatures [out] list of id's of assembly features in the specified part\n\nOutputs a list of database id's of assembly features in the specified part. If there are no features, \"*Count\" is output as zero and \"*Features\" as NULL.\nThis function allocates memory for the array output via \"Features\". The calling procedure is responsible for deallocating the memory with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the assembly features in a specific part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAsmFtrList\nFile [in] object file name (File[0]=0 or NULL for active file)\nPart [in] part/root object name (Part[0]=0 or NULL for active target object)\nCount [out] number of assembly features in the specified part\nFeatures [out] list of id's of assembly features in the specified part\n\nOutputs a list of database id's of assembly features in the specified part. If there are no features, \"*Count\" is output as zero and \"*Features\" as NULL.\nThis function allocates memory for the array output via \"Features\". The calling procedure is responsible for deallocating the memory with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of components in a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqComps\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part/root name (Part[0]=0 or NULL for active part)\nCount [out] number of components\nComps [out] list of component id's\n\nOutputs a list of indices of the components that belong to the specified part.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of component id's for a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqComps\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part/root name (Part[0]=0 or NULL for active part)\nCount [out] number of components\nComps [out] list of component id's\n\nOutputs a list of indices of the components that belong to the specified part.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to deallocate the output list of component id's?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqComps\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part/root name (Part[0]=0 or NULL for active part)\nCount [out] number of components\nComps [out] list of component id's\n\nOutputs a list of indices of the components that belong to the specified part.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of components in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqComps2\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nOption [in] 1 for filter suppressed components, otherwise for 0\nCount [out] number of components\nComps [out] list of component id's\n\nAccording to the Option to output a list of indices of the components that belong to the specified part.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to filter suppressed components in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqComps2\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nOption [in] 1 for filter suppressed components, otherwise for 0\nCount [out] number of components\nComps [out] list of component id's\n\nAccording to the Option to output a list of indices of the components that belong to the specified part.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get a list of component id's in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqComps2\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nOption [in] 1 for filter suppressed components, otherwise for 0\nCount [out] number of components\nComps [out] list of component id's\n\nAccording to the Option to output a list of indices of the components that belong to the specified part.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of components' path for a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCompsInfo\nPath [in] full file path (Null to the active file)\nName [in] root object name (Null to all root objects)\nCount [out] number of components\nPaths [out] list of components' path\nNames [out] list of components' root object name\n\nOutputs 2 lists of path and root object name of the components that belong to the specified part.\nThe difference between cvxPartInqComps() and cvxPartInqCompsInfo() is cvxPartInqComps() just get the file name and part name, and cvxPartInqCompsInfo() get the path(include file name) and part name.\nnote:\nJust file name output as the path if the components haven't been saved. The calling procedure MUST deallocate the output lists."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the root object name of components for a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCompsInfo\nPath [in] full file path (Null to the active file)\nName [in] root object name (Null to all root objects)\nCount [out] number of components\nPaths [out] list of components' path\nNames [out] list of components' root object name\n\nOutputs 2 lists of path and root object name of the components that belong to the specified part.\nThe difference between cvxPartInqComps() and cvxPartInqCompsInfo() is cvxPartInqComps() just get the file name and part name, and cvxPartInqCompsInfo() get the path(include file name) and part name.\nnote:\nJust file name output as the path if the components haven't been saved. The calling procedure MUST deallocate the output lists."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the count of components for a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCompsInfo\nPath [in] full file path (Null to the active file)\nName [in] root object name (Null to all root objects)\nCount [out] number of components\nPaths [out] list of components' path\nNames [out] list of components' root object name\n\nOutputs 2 lists of path and root object name of the components that belong to the specified part.\nThe difference between cvxPartInqComps() and cvxPartInqCompsInfo() is cvxPartInqComps() just get the file name and part name, and cvxPartInqCompsInfo() get the path(include file name) and part name.\nnote:\nJust file name output as the path if the components haven't been saved. The calling procedure MUST deallocate the output lists."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of components' path for a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCompsInfoByLongPath\nPath [in] full file path (Null to the active file)\nName [in] root object name (Null to all root objects)\nCount [out] number of components\nPaths [out] list of components' path\nNames [out] list of components' root object name\n\nOutputs 2 lists of path and root object name of the components that belong to the specified part.\nThe difference between cvxPartInqComps() and cvxPartInqCompsInfo() is cvxPartInqComps() just get the file name and part name, and cvxPartInqCompsInfo() get the path(include file name) and part name.\nnote:\nJust file name output as the path if the components haven't been saved. The calling procedure MUST deallocate the output lists."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the root object name of components for a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCompsInfoByLongPath\nPath [in] full file path (Null to the active file)\nName [in] root object name (Null to all root objects)\nCount [out] number of components\nPaths [out] list of components' path\nNames [out] list of components' root object name\n\nOutputs 2 lists of path and root object name of the components that belong to the specified part.\nThe difference between cvxPartInqComps() and cvxPartInqCompsInfo() is cvxPartInqComps() just get the file name and part name, and cvxPartInqCompsInfo() get the path(include file name) and part name.\nnote:\nJust file name output as the path if the components haven't been saved. The calling procedure MUST deallocate the output lists."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the count of components for a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCompsInfoByLongPath\nPath [in] full file path (Null to the active file)\nName [in] root object name (Null to all root objects)\nCount [out] number of components\nPaths [out] list of components' path\nNames [out] list of components' root object name\n\nOutputs 2 lists of path and root object name of the components that belong to the specified part.\nThe difference between cvxPartInqComps() and cvxPartInqCompsInfo() is cvxPartInqComps() just get the file name and part name, and cvxPartInqCompsInfo() get the path(include file name) and part name.\nnote:\nJust file name output as the path if the components haven't been saved. The calling procedure MUST deallocate the output lists."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to traverse all pick-paths of components?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqPaths\nCompPath [in] pick-path to start traversal, NULL to traverse current active part\nDepth [in] depth of traversing, -1 to traverse all pick paths\nIgnoreHidden [in] whether to ignore the hidden and suppressed components\nPathCnt [out] number of component paths\nlstPath [out] list of component paths\n\nTraverse all pick-paths of components start with CompPath and store them into lstPath.\nThe memory referenced by \"lstPath\" is allocated by this function. The calling procedure is responsible to free it (cvxMemFree((void**)lstPath))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to store component paths into a list?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqPaths\nCompPath [in] pick-path to start traversal, NULL to traverse current active part\nDepth [in] depth of traversing, -1 to traverse all pick paths\nIgnoreHidden [in] whether to ignore the hidden and suppressed components\nPathCnt [out] number of component paths\nlstPath [out] list of component paths\n\nTraverse all pick-paths of components start with CompPath and store them into lstPath.\nThe memory referenced by \"lstPath\" is allocated by this function. The calling procedure is responsible to free it (cvxMemFree((void**)lstPath))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to ignore hidden and suppressed components during traversal?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqPaths\nCompPath [in] pick-path to start traversal, NULL to traverse current active part\nDepth [in] depth of traversing, -1 to traverse all pick paths\nIgnoreHidden [in] whether to ignore the hidden and suppressed components\nPathCnt [out] number of component paths\nlstPath [out] list of component paths\n\nTraverse all pick-paths of components start with CompPath and store them into lstPath.\nThe memory referenced by \"lstPath\" is allocated by this function. The calling procedure is responsible to free it (cvxMemFree((void**)lstPath))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the file name referenced by a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqPart\nidComp [in] id of component in active file\nFile [out] name of the file instanced by the component\nnFileBytes [in] string size of file name\nPart [out] name of the part instanced by the component\nnPartBytes [in] string size of part name\n\nGets the names of the file and part referenced by the specified component.\nsee:\ncvxCompInqPartByPath"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the part name referenced by a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqPart\nidComp [in] id of component in active file\nFile [out] name of the file instanced by the component\nnFileBytes [in] string size of file name\nPart [out] name of the part instanced by the component\nnPartBytes [in] string size of part name\n\nGets the names of the file and part referenced by the specified component.\nsee:\ncvxCompInqPartByPath"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the file and part referenced by a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqPart\nidComp [in] id of component in active file\nFile [out] name of the file instanced by the component\nnFileBytes [in] string size of file name\nPart [out] name of the part instanced by the component\nnPartBytes [in] string size of part name\n\nGets the names of the file and part referenced by the specified component.\nsee:\ncvxCompInqPartByPath"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name of the file instanced by a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqPartByPath\nCompPath [in] pick path of component in active file\nfileName [out] name of the file instanced by the component\npartName [out] name of the part instanced by the component\n\nGets the names of the file and part referenced by the pick path of specified component.\nsee:\ncvxCompInqPart"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name of the part instanced by a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqPartByPath\nCompPath [in] pick path of component in active file\nfileName [out] name of the file instanced by the component\npartName [out] name of the part instanced by the component\n\nGets the names of the file and part referenced by the pick path of specified component.\nsee:\ncvxCompInqPart"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the file and part names referenced by a pick path of a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqPartByPath\nCompPath [in] pick path of component in active file\nfileName [out] name of the file instanced by the component\npartName [out] name of the part instanced by the component\n\nGets the names of the file and part referenced by the pick path of specified component.\nsee:\ncvxCompInqPart"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the file name referenced by a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqPartByPathByLongPath\nCompPath [in] pick path of component in active file\nfileName [out] name of the file instanced by the component\nsizeDir [in] max size of fileName\npartName [out] name of the part instanced by the component\n\nGets the names of the file and part referenced by the pick path of specified component.\nA fileName that is too long (longer than \"sizefile\") is truncated.\nIt is assumed that the input \"fileName\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the part name referenced by a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqPartByPathByLongPath\nCompPath [in] pick path of component in active file\nfileName [out] name of the file instanced by the component\nsizeDir [in] max size of fileName\npartName [out] name of the part instanced by the component\n\nGets the names of the file and part referenced by the pick path of specified component.\nA fileName that is too long (longer than \"sizefile\") is truncated.\nIt is assumed that the input \"fileName\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a limit on the size of the file name that can be retrieved?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqPartByPathByLongPath\nCompPath [in] pick path of component in active file\nfileName [out] name of the file instanced by the component\nsizeDir [in] max size of fileName\npartName [out] name of the part instanced by the component\n\nGets the names of the file and part referenced by the pick path of specified component.\nA fileName that is too long (longer than \"sizefile\") is truncated.\nIt is assumed that the input \"fileName\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of names in each output array?"
            },
            {
                "role": "assistant",
                "content": "cvxCompGetRefPart\nCount [out] the number of names in each output array\nBinName [out] array of \"*Count\" files referenced by active part\nRootName [out] array of \"*Count\" part names referenced by active part\n\nGet the file names and part names in the active assembly or part. This function determines the number of unique parts referenced by the active assembly or part and assigns that value to *Count, then allocates arrays of that size for BinName and RootName, and fills them with the referenced parts' file names and root names, respectively.\nThe caller is responsible for freeing the output arrays with the cvxMemFree() function.\nIf an error occurs, *Count will be 0, but either or both BinName and RootName might be a non-NULL pointer to an array that the caller must free."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the file names referenced by the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxCompGetRefPart\nCount [out] the number of names in each output array\nBinName [out] array of \"*Count\" files referenced by active part\nRootName [out] array of \"*Count\" part names referenced by active part\n\nGet the file names and part names in the active assembly or part. This function determines the number of unique parts referenced by the active assembly or part and assigns that value to *Count, then allocates arrays of that size for BinName and RootName, and fills them with the referenced parts' file names and root names, respectively.\nThe caller is responsible for freeing the output arrays with the cvxMemFree() function.\nIf an error occurs, *Count will be 0, but either or both BinName and RootName might be a non-NULL pointer to an array that the caller must free."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the part names referenced by the active assembly?"
            },
            {
                "role": "assistant",
                "content": "cvxCompGetRefPart\nCount [out] the number of names in each output array\nBinName [out] array of \"*Count\" files referenced by active part\nRootName [out] array of \"*Count\" part names referenced by active part\n\nGet the file names and part names in the active assembly or part. This function determines the number of unique parts referenced by the active assembly or part and assigns that value to *Count, then allocates arrays of that size for BinName and RootName, and fills them with the referenced parts' file names and root names, respectively.\nThe caller is responsible for freeing the output arrays with the cvxMemFree() function.\nIf an error occurs, *Count will be 0, but either or both BinName and RootName might be a non-NULL pointer to an array that the caller must free."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of names in the output array?"
            },
            {
                "role": "assistant",
                "content": "cvxCompGetRefPartByLongPath\nCount [out] the number of names in each output array\nBinName [out] array of \"*Count\" files referenced by active part\nRootName [out] array of \"*Count\" part names referenced by active part\n\nGet the file names and part names in the active assembly or part. This function determines the number of unique parts referenced by the active assembly or part and assigns that value to *Count, then allocates arrays of that size for BinName and RootName, and fills them with the referenced parts' file names and root names, respectively.\nThe caller is responsible for freeing the output arrays with the cvxMemFree() function.\nIf an error occurs, *Count will be 0, but either or both BinName and RootName might be a non-NULL pointer to an array that the caller must free."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the array of files referenced by the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxCompGetRefPartByLongPath\nCount [out] the number of names in each output array\nBinName [out] array of \"*Count\" files referenced by active part\nRootName [out] array of \"*Count\" part names referenced by active part\n\nGet the file names and part names in the active assembly or part. This function determines the number of unique parts referenced by the active assembly or part and assigns that value to *Count, then allocates arrays of that size for BinName and RootName, and fills them with the referenced parts' file names and root names, respectively.\nThe caller is responsible for freeing the output arrays with the cvxMemFree() function.\nIf an error occurs, *Count will be 0, but either or both BinName and RootName might be a non-NULL pointer to an array that the caller must free."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the array of part names referenced by the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxCompGetRefPartByLongPath\nCount [out] the number of names in each output array\nBinName [out] array of \"*Count\" files referenced by active part\nRootName [out] array of \"*Count\" part names referenced by active part\n\nGet the file names and part names in the active assembly or part. This function determines the number of unique parts referenced by the active assembly or part and assigns that value to *Count, then allocates arrays of that size for BinName and RootName, and fills them with the referenced parts' file names and root names, respectively.\nThe caller is responsible for freeing the output arrays with the cvxMemFree() function.\nIf an error occurs, *Count will be 0, but either or both BinName and RootName might be a non-NULL pointer to an array that the caller must free."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a component is flexible?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAsmIsFlex\nidComp [in] index of component\nisFlexible [out] 1 if flexible; 0 if not\n\nDetermine whether the component is flexible.\nsee:\ncvxPartInqAsmIsFlexByPath"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a component is flexible?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAsmIsFlex\nidComp [in] index of component\nisFlexible [out] 1 if flexible; 0 if not\n\nDetermine whether the component is flexible.\nsee:\ncvxPartInqAsmIsFlexByPath"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find out if a component is flexible or not?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAsmIsFlex\nidComp [in] index of component\nisFlexible [out] 1 if flexible; 0 if not\n\nDetermine whether the component is flexible.\nsee:\ncvxPartInqAsmIsFlexByPath"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if a component is flexible?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAsmIsFlexByPath\nAsmPath [in] pick-path of component\nisFlexible [out] 1 if flexible; 0 if not\n\nDetermine whether the component is flexible.\nsee:\ncvxPartInqAsmIsFlex"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if a component is flexible using pick-path?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAsmIsFlexByPath\nAsmPath [in] pick-path of component\nisFlexible [out] 1 if flexible; 0 if not\n\nDetermine whether the component is flexible.\nsee:\ncvxPartInqAsmIsFlex"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the flexibility status of a component by its pick-path?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAsmIsFlexByPath\nAsmPath [in] pick-path of component\nisFlexible [out] 1 if flexible; 0 if not\n\nDetermine whether the component is flexible.\nsee:\ncvxPartInqAsmIsFlex"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the suppress state of a specified component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSuppressGet\nidComp [in] component id\nsuppress [out] the component suppress state\n\nOutputs the suppress state of specified component. \n\n 1-suppressed 0-unsuppressed."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check if a component is suppressed or unsuppressed?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSuppressGet\nidComp [in] component id\nsuppress [out] the component suppress state\n\nOutputs the suppress state of specified component. \n\n 1-suppressed 0-unsuppressed."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if a component is suppressed or unsuppressed?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSuppressGet\nidComp [in] component id\nsuppress [out] the component suppress state\n\nOutputs the suppress state of specified component. \n\n 1-suppressed 0-unsuppressed."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the suppress state of a specified component path?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSuppressGetByPath\npath [in] component path\nsuppress [out] the component suppress state\n\nOutputs the suppress state of specified component path. \n\n 1-suppressed 0-unsuppressed."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check if a component is suppressed or unsuppressed?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSuppressGetByPath\npath [in] component path\nsuppress [out] the component suppress state\n\nOutputs the suppress state of specified component path. \n\n 1-suppressed 0-unsuppressed."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if a component is suppressed or unsuppressed by its path?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSuppressGetByPath\npath [in] component path\nsuppress [out] the component suppress state\n\nOutputs the suppress state of specified component path. \n\n 1-suppressed 0-unsuppressed."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the visibility of all component objects in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxAssemCompVisAll\nnSize [out] number of int in ppath_mode\nppath_mode [out] sum,cnt,pick_path,mode,cnt,pick_path ,mode...\n\nGet all the component object visibility of active part and encode the pick path and mode.\nThe caller is responsible for releasing the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to encode the pick path and mode for component objects?"
            },
            {
                "role": "assistant",
                "content": "cvxAssemCompVisAll\nnSize [out] number of int in ppath_mode\nppath_mode [out] sum,cnt,pick_path,mode,cnt,pick_path ,mode...\n\nGet all the component object visibility of active part and encode the pick path and mode.\nThe caller is responsible for releasing the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine the number of integer values in the pick path mode?"
            },
            {
                "role": "assistant",
                "content": "cvxAssemCompVisAll\nnSize [out] number of int in ppath_mode\nppath_mode [out] sum,cnt,pick_path,mode,cnt,pick_path ,mode...\n\nGet all the component object visibility of active part and encode the pick path and mode.\nThe caller is responsible for releasing the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check the visibility of a specific component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompVisGet\nCompPath [in] pick-path of component\nVis [out] 1-visible, 0-blank\n\nGet the visibility of specified component.\nsee:\ncvxAssemCompVisAll"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the visibility status of a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompVisGet\nCompPath [in] pick-path of component\nVis [out] 1-visible, 0-blank\n\nGet the visibility of specified component.\nsee:\ncvxAssemCompVisAll"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I determine if a component is visible or blank?"
            },
            {
                "role": "assistant",
                "content": "cvxCompVisGet\nCompPath [in] pick-path of component\nVis [out] 1-visible, 0-blank\n\nGet the visibility of specified component.\nsee:\ncvxAssemCompVisAll"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to highlight a specific component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompHighlight\nCompPath [in] pick-path of component\ncolor [in] color of object to display (NULL to use default)\n\nHighlights the specified component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to change the color of the highlighted component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompHighlight\nCompPath [in] pick-path of component\ncolor [in] color of object to display (NULL to use default)\n\nHighlights the specified component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to display a component with a specific color?"
            },
            {
                "role": "assistant",
                "content": "cvxCompHighlight\nCompPath [in] pick-path of component\ncolor [in] color of object to display (NULL to use default)\n\nHighlights the specified component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to un-highlight a specified component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompUnHighlight\nCompPath [in] pick-path of component\n\nUn-Highlight the specified component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to remove highlight from a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompUnHighlight\nCompPath [in] pick-path of component\n\nUn-Highlight the specified component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use CompPath to un-highlight a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompUnHighlight\nCompPath [in] pick-path of component\n\nUn-Highlight the specified component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to make a component into a virtual component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMakeVirtual\nCompPath [in] pick path of component\n\nMake a component into a virtual component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to convert a component into a virtual component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMakeVirtual\nCompPath [in] pick path of component\n\nMake a component into a virtual component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to create a virtual component from a regular component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMakeVirtual\nCompPath [in] pick path of component\n\nMake a component into a virtual component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if a component is virtual?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsVirtual\nCompPath [in] pick path of component\nisVirtual [out] true if component is virtual\n\nJudge whether a component is a virtual component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if a component is virtual?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsVirtual\nCompPath [in] pick path of component\nisVirtual [out] true if component is virtual\n\nJudge whether a component is a virtual component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I find out if a component is virtual?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsVirtual\nCompPath [in] pick path of component\nisVirtual [out] true if component is virtual\n\nJudge whether a component is a virtual component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the render mode of a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqRenderMode\nCompPath [in] pick path of component\nRenderMode [out] render mode\n\nGet component render mode."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to inquire about the render mode of a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqRenderMode\nCompPath [in] pick path of component\nRenderMode [out] render mode\n\nGet component render mode."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to retrieve the render mode of a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqRenderMode\nCompPath [in] pick path of component\nRenderMode [out] render mode\n\nGet component render mode."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a component is unplaced?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsUnplaced\nidx_Comp [in] index of component\nisUnplaced [out] component unplaced state(1 is unplaced, else 0.)\n\nGet component unplaced state.\nsee:\ncvxCompIsUnplacedByPath"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine the unplaced state of a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsUnplaced\nidx_Comp [in] index of component\nisUnplaced [out] component unplaced state(1 is unplaced, else 0.)\n\nGet component unplaced state.\nsee:\ncvxCompIsUnplacedByPath"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I get the unplaced state of a component by its index?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsUnplaced\nidx_Comp [in] index of component\nisUnplaced [out] component unplaced state(1 is unplaced, else 0.)\n\nGet component unplaced state.\nsee:\ncvxCompIsUnplacedByPath"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a component is unplaced by using pick path?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsUnplacedByPath\npath [in] pick path of component\nisUnplaced [out] 1 is unplaced, 0 is not unplaced\n\nGet component unplaced state by pick-path.\nsee:\ncvxCompIsUnplaced"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a component is unplaced based on its pick path?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsUnplacedByPath\npath [in] pick path of component\nisUnplaced [out] 1 is unplaced, 0 is not unplaced\n\nGet component unplaced state by pick-path.\nsee:\ncvxCompIsUnplaced"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to get the unplaced state of a component using pick path?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsUnplacedByPath\npath [in] pick path of component\nisUnplaced [out] 1 is unplaced, 0 is not unplaced\n\nGet component unplaced state by pick-path.\nsee:\ncvxCompIsUnplaced"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a component file is missing?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsFileLost\npath [in] path of component\nisFileLost [out] 1= file is lost; 0= file is not lost.\n\nDetermine whether the component file is missing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a file is lost for a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsFileLost\npath [in] path of component\nisFileLost [out] 1= file is lost; 0= file is not lost.\n\nDetermine whether the component file is missing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find out if a component file is missing?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsFileLost\npath [in] path of component\nisFileLost [out] 1= file is lost; 0= file is not lost.\n\nDetermine whether the component file is missing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a specific node is expanded?"
            },
            {
                "role": "assistant",
                "content": "cvxCompExpandStateGet\npath [in] component path\nisExpand [out] 1 is expand state, else 0\n\nCheck whether the specified node is expanded."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the expand state of a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompExpandStateGet\npath [in] component path\nisExpand [out] 1 is expand state, else 0\n\nCheck whether the specified node is expanded."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I determine if a node is expanded or not?"
            },
            {
                "role": "assistant",
                "content": "cvxCompExpandStateGet\npath [in] component path\nisExpand [out] 1 is expand state, else 0\n\nCheck whether the specified node is expanded."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the expanded status of a specified node?"
            },
            {
                "role": "assistant",
                "content": "cvxCompExpandStateSet\npath [in] component path\nexpand [in] 1 is expanded state ; 0 is collapsed state.\n\nUpdate whether the specified node's expanded status."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to expand or collapse a specific component node?"
            },
            {
                "role": "assistant",
                "content": "cvxCompExpandStateSet\npath [in] component path\nexpand [in] 1 is expanded state ; 0 is collapsed state.\n\nUpdate whether the specified node's expanded status."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the expanded state of a component node?"
            },
            {
                "role": "assistant",
                "content": "cvxCompExpandStateSet\npath [in] component path\nexpand [in] 1 is expanded state ; 0 is collapsed state.\n\nUpdate whether the specified node's expanded status."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a specific component node is selected?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSelectedStateGet\npath [in] component path\nisSelected [out] 1 is selected, 0 is non-selected\n\nCheck whether the specified node is selected."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine the selected state of a component by its path?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSelectedStateGet\npath [in] component path\nisSelected [out] 1 is selected, 0 is non-selected\n\nCheck whether the specified node is selected."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I get the selected state of a component using its path?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSelectedStateGet\npath [in] component path\nisSelected [out] 1 is selected, 0 is non-selected\n\nCheck whether the specified node is selected."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the selected status of a specified node?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSelectedStateSet\npath [in] component path\nselected [in] 1 is selected state ; 0 is non-selected state.\n\nUpdate whether the specified node's selected status."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set the selected state of a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSelectedStateSet\npath [in] component path\nselected [in] 1 is selected state ; 0 is non-selected state.\n\nUpdate whether the specified node's selected status."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the selected status of a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSelectedStateSet\npath [in] component path\nselected [in] 1 is selected state ; 0 is non-selected state.\n\nUpdate whether the specified node's selected status."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the Exclude state of a specified component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompBomExcludedGet\nEntPath [in] component pick path\nexclude [out] the component Exclude state\n\nOutputs the Exclude state of specified component. 1-excluded 0-included. The 3D BOM table allows user to exclude and include components."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if a component is excluded or included?"
            },
            {
                "role": "assistant",
                "content": "cvxCompBomExcludedGet\nEntPath [in] component pick path\nexclude [out] the component Exclude state\n\nOutputs the Exclude state of specified component. 1-excluded 0-included. The 3D BOM table allows user to exclude and include components."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if a component is excluded in the 3D BOM table?"
            },
            {
                "role": "assistant",
                "content": "cvxCompBomExcludedGet\nEntPath [in] component pick path\nexclude [out] the component Exclude state\n\nOutputs the Exclude state of specified component. 1-excluded 0-included. The 3D BOM table allows user to exclude and include components."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the settings data of the 3D BOM table?"
            },
            {
                "role": "assistant",
                "content": "cvxCompBomSettingGet\ndata [out] settings data of 3d bom table\n\nGet the display content of the 3D BOM table through the interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the display content of the 3D BOM table?"
            },
            {
                "role": "assistant",
                "content": "cvxCompBomSettingGet\ndata [out] settings data of 3d bom table\n\nGet the display content of the 3D BOM table through the interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to access the settings data of the 3D BOM table?"
            },
            {
                "role": "assistant",
                "content": "cvxCompBomSettingGet\ndata [out] settings data of 3d bom table\n\nGet the display content of the 3D BOM table through the interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the display content of the 3D BOM table?"
            },
            {
                "role": "assistant",
                "content": "cvxCompBomSettingSet\ndata [in] settings data of 3d bom table\n\nSet the display content of the 3D BOM table through the interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the settings data of the 3D BOM table?"
            },
            {
                "role": "assistant",
                "content": "cvxCompBomSettingSet\ndata [in] settings data of 3d bom table\n\nSet the display content of the 3D BOM table through the interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the 3D BOM table display settings?"
            },
            {
                "role": "assistant",
                "content": "cvxCompBomSettingSet\ndata [in] settings data of 3d bom table\n\nSet the display content of the 3D BOM table through the interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve row information for display in a BOM table?"
            },
            {
                "role": "assistant",
                "content": "cvxCompBomDispDataGet\ndata [out] table data\n\nGet row infos for display in bom table. The calling procedure MUST deallocate the output list with cvxBomDataFree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get table data for BOM display?"
            },
            {
                "role": "assistant",
                "content": "cvxCompBomDispDataGet\ndata [out] table data\n\nGet row infos for display in bom table. The calling procedure MUST deallocate the output list with cvxBomDataFree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list after retrieving the BOM table data?"
            },
            {
                "role": "assistant",
                "content": "cvxCompBomDispDataGet\ndata [out] table data\n\nGet row infos for display in bom table. The calling procedure MUST deallocate the output list with cvxBomDataFree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxBomDataFree\ndata [inout] svx3DBomData structure\n\nFrees memory associated with the specified svx3DBomData structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxBomDataFree\ndata [inout] svx3DBomData structure\n\nFrees memory associated with the specified svx3DBomData structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxBomDataFree\ndata [inout] svx3DBomData structure\n\nFrees memory associated with the specified svx3DBomData structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the pick path of a specific part in the BOM table?"
            },
            {
                "role": "assistant",
                "content": "cvxCompBomPathByPart\npart [in] part name in the bom table.\ncnt [out] count of paths\npaths [out] list of path\n\nGet the pick path of the specified part in the BOM table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the count of pick paths for a specific part in the BOM table?"
            },
            {
                "role": "assistant",
                "content": "cvxCompBomPathByPart\npart [in] part name in the bom table.\ncnt [out] count of paths\npaths [out] list of path\n\nGet the pick path of the specified part in the BOM table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the list of pick paths for a particular part in the BOM table?"
            },
            {
                "role": "assistant",
                "content": "cvxCompBomPathByPart\npart [in] part name in the bom table.\ncnt [out] count of paths\npaths [out] list of path\n\nGet the pick path of the specified part in the BOM table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to enable component regen for a specific component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompRegenSet\nidComp [in] component entity id\nRegen [in] 1 to enable component regen; 0 to disable it\n\nFlags the input component to regen (Regen=1) or not regen (Regen=0) the part it instances when the it's parent part is regenerated.\nThe specified component (idComp) should belong to the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to disable component regen for a specific component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompRegenSet\nidComp [in] component entity id\nRegen [in] 1 to enable component regen; 0 to disable it\n\nFlags the input component to regen (Regen=1) or not regen (Regen=0) the part it instances when the it's parent part is regenerated.\nThe specified component (idComp) should belong to the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to flag a component to regen when its parent part is regenerated?"
            },
            {
                "role": "assistant",
                "content": "cvxCompRegenSet\nidComp [in] component entity id\nRegen [in] 1 to enable component regen; 0 to disable it\n\nFlags the input component to regen (Regen=1) or not regen (Regen=0) the part it instances when the it's parent part is regenerated.\nThe specified component (idComp) should belong to the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to query the transformation matrix of a flexible assembly?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFlexAsmMat\nAsmPath [in] pick-path of assembly\nAsmMat [out] transformation matrix of assembly\n\nOutput specified transformation matrix by pick-path. This interface can be used to query the matrix of flexible assembly."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the transformation matrix of an assembly using pick-path?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFlexAsmMat\nAsmPath [in] pick-path of assembly\nAsmMat [out] transformation matrix of assembly\n\nOutput specified transformation matrix by pick-path. This interface can be used to query the matrix of flexible assembly."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use pick-path to obtain the transformation matrix of an assembly?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFlexAsmMat\nAsmPath [in] pick-path of assembly\nAsmMat [out] transformation matrix of assembly\n\nOutput specified transformation matrix by pick-path. This interface can be used to query the matrix of flexible assembly."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find open shapes in a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqOpenShapes\nCompPath [in] pick path of the component/shape in the component, NULL to check all components\nIgnoreHide [in] whether to ignore hidden components and hidden shapes(1 is ignore hidden, 0 is not ignore hidden)\nnumShps [out] number of open shapes\nshpPaths [out] pick-paths of open shapes\n\nGet the open shapes in input components or shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to ignore hidden components and shapes while checking for open shapes?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqOpenShapes\nCompPath [in] pick path of the component/shape in the component, NULL to check all components\nIgnoreHide [in] whether to ignore hidden components and hidden shapes(1 is ignore hidden, 0 is not ignore hidden)\nnumShps [out] number of open shapes\nshpPaths [out] pick-paths of open shapes\n\nGet the open shapes in input components or shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of open shapes in a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqOpenShapes\nCompPath [in] pick path of the component/shape in the component, NULL to check all components\nIgnoreHide [in] whether to ignore hidden components and hidden shapes(1 is ignore hidden, 0 is not ignore hidden)\nnumShps [out] number of open shapes\nshpPaths [out] pick-paths of open shapes\n\nGet the open shapes in input components or shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get the pick-paths of open shapes in a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqOpenShapes\nCompPath [in] pick path of the component/shape in the component, NULL to check all components\nIgnoreHide [in] whether to ignore hidden components and hidden shapes(1 is ignore hidden, 0 is not ignore hidden)\nnumShps [out] number of open shapes\nshpPaths [out] pick-paths of open shapes\n\nGet the open shapes in input components or shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the open edges of a shape in a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompShapeInqOpenEdges\nShpPath [in] pick path of the shape in the component\nnumEdg [out] number of open edges\nedgPaths [out] path of open edges\n\nGet the open edges of the input shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the number of open edges in a shape?"
            },
            {
                "role": "assistant",
                "content": "cvxCompShapeInqOpenEdges\nShpPath [in] pick path of the shape in the component\nnumEdg [out] number of open edges\nedgPaths [out] path of open edges\n\nGet the open edges of the input shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the paths of open edges in a shape?"
            },
            {
                "role": "assistant",
                "content": "cvxCompShapeInqOpenEdges\nShpPath [in] pick path of the shape in the component\nnumEdg [out] number of open edges\nedgPaths [out] path of open edges\n\nGet the open edges of the input shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the configuration id of a specified component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompCfgIdGet\npath [in] pick path of component\nidCfg [out] config id\n\nGet the id of the specified component configuration."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the configuration id using the component's pick path?"
            },
            {
                "role": "assistant",
                "content": "cvxCompCfgIdGet\npath [in] pick path of component\nidCfg [out] config id\n\nGet the id of the specified component configuration."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to obtain the configuration id for a specific component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompCfgIdGet\npath [in] pick path of component\nidCfg [out] config id\n\nGet the id of the specified component configuration."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert components to a new folder?"
            },
            {
                "role": "assistant",
                "content": "cvxCompFolderIns\ncnt [in] count of component\nidCom [in] id of component\nfolderName [in] folder name(fileName[0]=0 or NULL for default name)\nidFolder [out] id of folder(pass in NULL to ignore)\n\nInsert components to a new folder using specific name (null to use default name).\nMake sure all the components belong to the same parents. Folder' ids are consisted of start and end, idFolder returns folder start id."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify a folder name while inserting components?"
            },
            {
                "role": "assistant",
                "content": "cvxCompFolderIns\ncnt [in] count of component\nidCom [in] id of component\nfolderName [in] folder name(fileName[0]=0 or NULL for default name)\nidFolder [out] id of folder(pass in NULL to ignore)\n\nInsert components to a new folder using specific name (null to use default name).\nMake sure all the components belong to the same parents. Folder' ids are consisted of start and end, idFolder returns folder start id."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to ignore the folder id while inserting components?"
            },
            {
                "role": "assistant",
                "content": "cvxCompFolderIns\ncnt [in] count of component\nidCom [in] id of component\nfolderName [in] folder name(fileName[0]=0 or NULL for default name)\nidFolder [out] id of folder(pass in NULL to ignore)\n\nInsert components to a new folder using specific name (null to use default name).\nMake sure all the components belong to the same parents. Folder' ids are consisted of start and end, idFolder returns folder start id."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if a component is generated through assembly feature?"
            },
            {
                "role": "assistant",
                "content": "cvxCompFromAsmFtr\npath [in] pick path of component\nisFromAsmFtr [out] 1 if this component is from assembly feature. else 0.\n\nDetermine whether component are generated through assembly feature.\nThe cvxPartInqEntFtr interface can obtain the feature id through the component id.\nThe cvxPartInqFtrTemplate interface can obtain the template command of the feature and determine the feature type through the template command.\nAsm Feature Type | Template Command\nassembly pattern | AsmPtnAll\nassembly mirror  | AsmMirrorAll\npulley           | AsMcmPulley\nspur gear        | CdSpurGear\nbevel gear       | CdBevelGear"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if a component is from assembly feature?"
            },
            {
                "role": "assistant",
                "content": "cvxCompFromAsmFtr\npath [in] pick path of component\nisFromAsmFtr [out] 1 if this component is from assembly feature. else 0.\n\nDetermine whether component are generated through assembly feature.\nThe cvxPartInqEntFtr interface can obtain the feature id through the component id.\nThe cvxPartInqFtrTemplate interface can obtain the template command of the feature and determine the feature type through the template command.\nAsm Feature Type | Template Command\nassembly pattern | AsmPtnAll\nassembly mirror  | AsmMirrorAll\npulley           | AsMcmPulley\nspur gear        | CdSpurGear\nbevel gear       | CdBevelGear"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxCompFromAsmFtr to identify if a component is from assembly feature?"
            },
            {
                "role": "assistant",
                "content": "cvxCompFromAsmFtr\npath [in] pick path of component\nisFromAsmFtr [out] 1 if this component is from assembly feature. else 0.\n\nDetermine whether component are generated through assembly feature.\nThe cvxPartInqEntFtr interface can obtain the feature id through the component id.\nThe cvxPartInqFtrTemplate interface can obtain the template command of the feature and determine the feature type through the template command.\nAsm Feature Type | Template Command\nassembly pattern | AsmPtnAll\nassembly mirror  | AsmMirrorAll\npulley           | AsMcmPulley\nspur gear        | CdSpurGear\nbevel gear       | CdBevelGear"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to reorder an assembly object?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmReorder\nfileName [in] file name (fileName[0] = 0 or NULL for active file)\nrootName [in] part name (rootName[0] = 0 or NULL for active file or single object file)\nidEnt [in] index of entity to reorder (component, assembly feature, assembly constraint are support)\nreorderLoc [in] reorder location method\nidPreEnt [in] index of the previous entity (0 to ignore, component, assembly feature, assembly constraint, group folder are support)\n\nReorder the specified assembly object. the function only modifies the order of objects in the assembly tree and does not add new objects. if the previous entity (idPreEnt) is a group folder object, the location refers to the specified folder, otherwise, the location refers to the assembly tree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to modify the order of objects in the assembly tree?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmReorder\nfileName [in] file name (fileName[0] = 0 or NULL for active file)\nrootName [in] part name (rootName[0] = 0 or NULL for active file or single object file)\nidEnt [in] index of entity to reorder (component, assembly feature, assembly constraint are support)\nreorderLoc [in] reorder location method\nidPreEnt [in] index of the previous entity (0 to ignore, component, assembly feature, assembly constraint, group folder are support)\n\nReorder the specified assembly object. the function only modifies the order of objects in the assembly tree and does not add new objects. if the previous entity (idPreEnt) is a group folder object, the location refers to the specified folder, otherwise, the location refers to the assembly tree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the location for reordering an assembly object?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmReorder\nfileName [in] file name (fileName[0] = 0 or NULL for active file)\nrootName [in] part name (rootName[0] = 0 or NULL for active file or single object file)\nidEnt [in] index of entity to reorder (component, assembly feature, assembly constraint are support)\nreorderLoc [in] reorder location method\nidPreEnt [in] index of the previous entity (0 to ignore, component, assembly feature, assembly constraint, group folder are support)\n\nReorder the specified assembly object. the function only modifies the order of objects in the assembly tree and does not add new objects. if the previous entity (idPreEnt) is a group folder object, the location refers to the specified folder, otherwise, the location refers to the assembly tree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I reorder objects within a group folder in the assembly tree?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmReorder\nfileName [in] file name (fileName[0] = 0 or NULL for active file)\nrootName [in] part name (rootName[0] = 0 or NULL for active file or single object file)\nidEnt [in] index of entity to reorder (component, assembly feature, assembly constraint are support)\nreorderLoc [in] reorder location method\nidPreEnt [in] index of the previous entity (0 to ignore, component, assembly feature, assembly constraint, group folder are support)\n\nReorder the specified assembly object. the function only modifies the order of objects in the assembly tree and does not add new objects. if the previous entity (idPreEnt) is a group folder object, the location refers to the specified folder, otherwise, the location refers to the assembly tree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to flag a part as a sub-part?"
            },
            {
                "role": "assistant",
                "content": "cvxSubPartFlag\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nisSubPart [in] 1=sub-part; 0=ordinary part; -1=ordinary part hidden in root object list\n\nIf \"isSubPart = 1\", the specified part is flagged as a sub-part. It will be skipped when gathering parts for a BoM or assembly-part-list. It will not be displayed in the parent file's root object list.\nIf \"isSubPart = -1\", the specified part is flagged as a pseudo sub-part. It is hidden in the root object list, but is still counted as a free-standing part for BoM or assembly-part-list purposes.\nIf \"isSubPart = 0\", the part is assumed to be a standalone part (i.e. not a sub-part inextricably linked to its parent part).\nGenerally speaking, this function should not be used to change the status of a genuine sub-part unless you 100% know what you are doing, but it may be used to suppress display of a regular part in the root object list (isSubPart = -1).\nnote:\nThis interface had been discarded because the platform can no longer support this operation. If there is a need to get a sub-part, use cvxSubPartIns() to do it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to flag a part as a pseudo sub-part?"
            },
            {
                "role": "assistant",
                "content": "cvxSubPartFlag\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nisSubPart [in] 1=sub-part; 0=ordinary part; -1=ordinary part hidden in root object list\n\nIf \"isSubPart = 1\", the specified part is flagged as a sub-part. It will be skipped when gathering parts for a BoM or assembly-part-list. It will not be displayed in the parent file's root object list.\nIf \"isSubPart = -1\", the specified part is flagged as a pseudo sub-part. It is hidden in the root object list, but is still counted as a free-standing part for BoM or assembly-part-list purposes.\nIf \"isSubPart = 0\", the part is assumed to be a standalone part (i.e. not a sub-part inextricably linked to its parent part).\nGenerally speaking, this function should not be used to change the status of a genuine sub-part unless you 100% know what you are doing, but it may be used to suppress display of a regular part in the root object list (isSubPart = -1).\nnote:\nThis interface had been discarded because the platform can no longer support this operation. If there is a need to get a sub-part, use cvxSubPartIns() to do it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to flag a part as a standalone part?"
            },
            {
                "role": "assistant",
                "content": "cvxSubPartFlag\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nisSubPart [in] 1=sub-part; 0=ordinary part; -1=ordinary part hidden in root object list\n\nIf \"isSubPart = 1\", the specified part is flagged as a sub-part. It will be skipped when gathering parts for a BoM or assembly-part-list. It will not be displayed in the parent file's root object list.\nIf \"isSubPart = -1\", the specified part is flagged as a pseudo sub-part. It is hidden in the root object list, but is still counted as a free-standing part for BoM or assembly-part-list purposes.\nIf \"isSubPart = 0\", the part is assumed to be a standalone part (i.e. not a sub-part inextricably linked to its parent part).\nGenerally speaking, this function should not be used to change the status of a genuine sub-part unless you 100% know what you are doing, but it may be used to suppress display of a regular part in the root object list (isSubPart = -1).\nnote:\nThis interface had been discarded because the platform can no longer support this operation. If there is a need to get a sub-part, use cvxSubPartIns() to do it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any alternative function to flag a part as a sub-part?"
            },
            {
                "role": "assistant",
                "content": "cvxSubPartFlag\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nisSubPart [in] 1=sub-part; 0=ordinary part; -1=ordinary part hidden in root object list\n\nIf \"isSubPart = 1\", the specified part is flagged as a sub-part. It will be skipped when gathering parts for a BoM or assembly-part-list. It will not be displayed in the parent file's root object list.\nIf \"isSubPart = -1\", the specified part is flagged as a pseudo sub-part. It is hidden in the root object list, but is still counted as a free-standing part for BoM or assembly-part-list purposes.\nIf \"isSubPart = 0\", the part is assumed to be a standalone part (i.e. not a sub-part inextricably linked to its parent part).\nGenerally speaking, this function should not be used to change the status of a genuine sub-part unless you 100% know what you are doing, but it may be used to suppress display of a regular part in the root object list (isSubPart = -1).\nnote:\nThis interface had been discarded because the platform can no longer support this operation. If there is a need to get a sub-part, use cvxSubPartIns() to do it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve user attribute data of a specific component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompUserAtGet\nComp [in] pick path of component\nCount [out] number of user attributes\nUserAt [out] list of user attributes\n\nRetrieves user attribute data of the specified component in the current active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the count of user attributes for a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompUserAtGet\nComp [in] pick path of component\nCount [out] number of user attributes\nUserAt [out] list of user attributes\n\nRetrieves user attribute data of the specified component in the current active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I get a list of user attributes for a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompUserAtGet\nComp [in] pick path of component\nCount [out] number of user attributes\nUserAt [out] list of user attributes\n\nRetrieves user attribute data of the specified component in the current active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set user attribute data for a specific component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompUserAtSet\nComp [in] pick path of component\nCount [in] number of user attributes\nUserAt [in] list of user attributes\n\nSet user attribute data of the specified component in the current active file. a new user attribute is inserted if the user attribute for the specified label does not exist."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to insert a new user attribute for a specified label if it does not exist?"
            },
            {
                "role": "assistant",
                "content": "cvxCompUserAtSet\nComp [in] pick path of component\nCount [in] number of user attributes\nUserAt [in] list of user attributes\n\nSet user attribute data of the specified component in the current active file. a new user attribute is inserted if the user attribute for the specified label does not exist."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update user attribute data for a component in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxCompUserAtSet\nComp [in] pick path of component\nCount [in] number of user attributes\nUserAt [in] list of user attributes\n\nSet user attribute data of the specified component in the current active file. a new user attribute is inserted if the user attribute for the specified label does not exist."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete user attributes of a specified component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompUserAtDel\nComp [in] pick path of component\nCount [in] number of user attributes (0 to delete all user attributes)\nUserAt [in] list of user attributes (NULL to delete all user attributes)\n\nDelete user attribute of the specified component in the current active file. the function does not delete any attributes if the specified label is an empty string or the attribute specified label is not found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to delete all user attributes of a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompUserAtDel\nComp [in] pick path of component\nCount [in] number of user attributes (0 to delete all user attributes)\nUserAt [in] list of user attributes (NULL to delete all user attributes)\n\nDelete user attribute of the specified component in the current active file. the function does not delete any attributes if the specified label is an empty string or the attribute specified label is not found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a specific user attribute of a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompUserAtDel\nComp [in] pick path of component\nCount [in] number of user attributes (0 to delete all user attributes)\nUserAt [in] list of user attributes (NULL to delete all user attributes)\n\nDelete user attribute of the specified component in the current active file. the function does not delete any attributes if the specified label is an empty string or the attribute specified label is not found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get display attributes of a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompFaceAtGet\nCompPath [in] pick path of component\nAt [out] face attribute\n\nOutputs display attributes of the specified component. Attributes are grabbed from the first face in the component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve face attributes of a specified component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompFaceAtGet\nCompPath [in] pick path of component\nAt [out] face attribute\n\nOutputs display attributes of the specified component. Attributes are grabbed from the first face in the component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to grab attributes from the first face in a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompFaceAtGet\nCompPath [in] pick path of component\nAt [out] face attribute\n\nOutputs display attributes of the specified component. Attributes are grabbed from the first face in the component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change display attributes of specified components?"
            },
            {
                "role": "assistant",
                "content": "cvxCompFaceAtSet\nCount [in] number of component\nCompPath [in] list of pick path of components\nAt [in] face attribute\n\nChanges display attributes of the specified components. It is assumed the specified components reside in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to modify face attributes of components?"
            },
            {
                "role": "assistant",
                "content": "cvxCompFaceAtSet\nCount [in] number of component\nCompPath [in] list of pick path of components\nAt [in] face attribute\n\nChanges display attributes of the specified components. It is assumed the specified components reside in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the display attributes of components in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxCompFaceAtSet\nCount [in] number of component\nCompPath [in] list of pick path of components\nAt [in] face attribute\n\nChanges display attributes of the specified components. It is assumed the specified components reside in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the type of a specific constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxConsInqType\nidCons [in] index of constraint\nconsType [out] constraint type\n\nGet the constraint type of specified constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to inquire about the type of a constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxConsInqType\nidCons [in] index of constraint\nconsType [out] constraint type\n\nGet the constraint type of specified constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function can be used to retrieve the type of a constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxConsInqType\nidCons [in] index of constraint\nconsType [out] constraint type\n\nGet the constraint type of specified constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of entities associated with a specific constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxConsInqRefEnts\nidCons [in] index of constraint\ncount [out] number of entities associated with constraint\nentPaths [out] list of entity paths associated with constraint\n\nOutputs a list of pick path of entities associated with the specified constraint.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the count of entities associated with a constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxConsInqRefEnts\nidCons [in] index of constraint\ncount [out] number of entities associated with constraint\nentPaths [out] list of entity paths associated with constraint\n\nOutputs a list of pick path of entities associated with the specified constraint.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the entity paths associated with a particular constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxConsInqRefEnts\nidCons [in] index of constraint\ncount [out] number of entities associated with constraint\nentPaths [out] list of entity paths associated with constraint\n\nOutputs a list of pick path of entities associated with the specified constraint.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve custom data of a specific constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxConsInqConsData\nidCons [in] index of common constraint\nConsData [out] data of common constraint\n\nGet custom data of the specified constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the data of a common constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxConsInqConsData\nidCons [in] index of common constraint\nConsData [out] data of common constraint\n\nGet custom data of the specified constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I access the custom data of a specified constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxConsInqConsData\nidCons [in] index of common constraint\nConsData [out] data of common constraint\n\nGet custom data of the specified constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the constraint state of a specified component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqConsState\nidComp [in] index of component or shape\nconsState [out] constraint state of component\n\nGet the constraint state of specified component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to inquire about the constraint state of a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqConsState\nidComp [in] index of component or shape\nconsState [out] constraint state of component\n\nGet the constraint state of specified component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I check the constraint state of a component or shape?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqConsState\nidComp [in] index of component or shape\nconsState [out] constraint state of component\n\nGet the constraint state of specified component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of constraints associated with a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqConstraints\nCompPath [in] pick-path of component\ncount [out] number of constraints\ncons [out] list of constraint ids\n\nOutputs a list of indices of the constraints associated with the specified component.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the list of constraint ids for a specified component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqConstraints\nCompPath [in] pick-path of component\ncount [out] number of constraints\ncons [out] list of constraint ids\n\nOutputs a list of indices of the constraints associated with the specified component.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to obtain the constraints associated with a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqConstraints\nCompPath [in] pick-path of component\ncount [out] number of constraints\ncons [out] list of constraint ids\n\nOutputs a list of indices of the constraints associated with the specified component.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to dissolve a sub-assembly?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmDissolve\npath [in] path of sub-assembly\n\nDissolve the picked sub-assembly\ne.g, we have a asm-tree like this:\nA\n|- B\n   |- D\n   |- E\n   |- F\n|- C\n\nA\n|- C\n|- D\n|- E\n|- F"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to dissolve a picked sub-assembly?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmDissolve\npath [in] path of sub-assembly\n\nDissolve the picked sub-assembly\ne.g, we have a asm-tree like this:\nA\n|- B\n   |- D\n   |- E\n   |- F\n|- C\n\nA\n|- C\n|- D\n|- E\n|- F"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can you provide the method to dissolve a sub-assembly by specifying the path?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmDissolve\npath [in] path of sub-assembly\n\nDissolve the picked sub-assembly\ne.g, we have a asm-tree like this:\nA\n|- B\n   |- D\n   |- E\n   |- F\n|- C\n\nA\n|- C\n|- D\n|- E\n|- F"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a sub-assembly with multiple components?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmGrpComp\ndata [in] group as sub-assembly data\n\nThis function can create a sub-assembly with some several components, and also allow to save sub-assembly with new file format or new object.\nnote:\nThe consumer can initialize the structure using the cvxMemZero((void*)data,sizeof(svxAsmGrpCompData)). \n\n data.isPartOnly is used only for components in multi-object files. \n\n data.isVirtual is used only for components in single-object files. \n\n data.file is used only when data.isPartOnly is 0, otherwise data.file is ignored.\nA\n|- B\n|- C\n|- D\n\nA\n|- B\n|- G\n   |- C\n   |- D"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to save a sub-assembly with a new file format or new object?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmGrpComp\ndata [in] group as sub-assembly data\n\nThis function can create a sub-assembly with some several components, and also allow to save sub-assembly with new file format or new object.\nnote:\nThe consumer can initialize the structure using the cvxMemZero((void*)data,sizeof(svxAsmGrpCompData)). \n\n data.isPartOnly is used only for components in multi-object files. \n\n data.isVirtual is used only for components in single-object files. \n\n data.file is used only when data.isPartOnly is 0, otherwise data.file is ignored.\nA\n|- B\n|- C\n|- D\n\nA\n|- B\n|- G\n   |- C\n   |- D"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of data.isPartOnly in the sub-assembly creation process?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmGrpComp\ndata [in] group as sub-assembly data\n\nThis function can create a sub-assembly with some several components, and also allow to save sub-assembly with new file format or new object.\nnote:\nThe consumer can initialize the structure using the cvxMemZero((void*)data,sizeof(svxAsmGrpCompData)). \n\n data.isPartOnly is used only for components in multi-object files. \n\n data.isVirtual is used only for components in single-object files. \n\n data.file is used only when data.isPartOnly is 0, otherwise data.file is ignored.\nA\n|- B\n|- C\n|- D\n\nA\n|- B\n|- G\n   |- C\n   |- D"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When is data.isVirtual used in the sub-assembly creation process?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmGrpComp\ndata [in] group as sub-assembly data\n\nThis function can create a sub-assembly with some several components, and also allow to save sub-assembly with new file format or new object.\nnote:\nThe consumer can initialize the structure using the cvxMemZero((void*)data,sizeof(svxAsmGrpCompData)). \n\n data.isPartOnly is used only for components in multi-object files. \n\n data.isVirtual is used only for components in single-object files. \n\n data.file is used only when data.isPartOnly is 0, otherwise data.file is ignored.\nA\n|- B\n|- C\n|- D\n\nA\n|- B\n|- G\n   |- C\n   |- D"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the structure for creating a sub-assembly?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmGrpComp\ndata [in] group as sub-assembly data\n\nThis function can create a sub-assembly with some several components, and also allow to save sub-assembly with new file format or new object.\nnote:\nThe consumer can initialize the structure using the cvxMemZero((void*)data,sizeof(svxAsmGrpCompData)). \n\n data.isPartOnly is used only for components in multi-object files. \n\n data.isVirtual is used only for components in single-object files. \n\n data.file is used only when data.isPartOnly is 0, otherwise data.file is ignored.\nA\n|- B\n|- C\n|- D\n\nA\n|- B\n|- G\n   |- C\n   |- D"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a component to Favorites?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmAddToFavorites\npath [in] component pick path\n\nAdd the pick component to Favorites.\nnote:\nIf the return value is ZW_API_INPUT_ERROR, you can use the interface cvxAsmFavoritesEnable() to determine the reason for the interface failure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine the reason for the interface failure when adding a component to Favorites?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmAddToFavorites\npath [in] component pick path\n\nAdd the pick component to Favorites.\nnote:\nIf the return value is ZW_API_INPUT_ERROR, you can use the interface cvxAsmFavoritesEnable() to determine the reason for the interface failure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to enable Favorites for adding a component?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmAddToFavorites\npath [in] component pick path\n\nAdd the pick component to Favorites.\nnote:\nIf the return value is ZW_API_INPUT_ERROR, you can use the interface cvxAsmFavoritesEnable() to determine the reason for the interface failure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove a component from Favorites?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmRemoveFromFavorites\npath [in] component pick path\n\nRemove the pick component from Favorites.\nnote:\nIf the return value is ZW_API_INPUT_ERROR, you can use the interface cvxAsmFavoritesEnable() to determine the reason for the interface failure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine the reason for the interface failure when removing a component from Favorites?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmRemoveFromFavorites\npath [in] component pick path\n\nRemove the pick component from Favorites.\nnote:\nIf the return value is ZW_API_INPUT_ERROR, you can use the interface cvxAsmFavoritesEnable() to determine the reason for the interface failure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What should I do if the return value is ZW_API_INPUT_ERROR after trying to remove a component from Favorites?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmRemoveFromFavorites\npath [in] component pick path\n\nRemove the pick component from Favorites.\nnote:\nIf the return value is ZW_API_INPUT_ERROR, you can use the interface cvxAsmFavoritesEnable() to determine the reason for the interface failure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if a component pick path can be added to favorites?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmFavoritesEnable\npath [in] component pick path\n\nDetermine whether the entered pick-path can be added to the favorites."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if a pick-path can be added to favorites?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmFavoritesEnable\npath [in] component pick path\n\nDetermine whether the entered pick-path can be added to the favorites."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to enable adding a pick-path to favorites?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmFavoritesEnable\npath [in] component pick path\n\nDetermine whether the entered pick-path can be added to the favorites."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update component reference in an assembly?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmUpdateCompRef\nOldRootName [in] the old root name of the target part\nNewRootName [in] the new root name of the target part\n\nTraverse the assembly of the active part, find components that reference current file name and OldRootName, then replace the old reference (OldRootName) with the new one (NewRootName)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to replace old root name with new root name in assembly components?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmUpdateCompRef\nOldRootName [in] the old root name of the target part\nNewRootName [in] the new root name of the target part\n\nTraverse the assembly of the active part, find components that reference current file name and OldRootName, then replace the old reference (OldRootName) with the new one (NewRootName)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to traverse assembly and find components referencing a specific file name?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmUpdateCompRef\nOldRootName [in] the old root name of the target part\nNewRootName [in] the new root name of the target part\n\nTraverse the assembly of the active part, find components that reference current file name and OldRootName, then replace the old reference (OldRootName) with the new one (NewRootName)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to activate a part for editing using component ID?"
            },
            {
                "role": "assistant",
                "content": "cvxCompEditPart\nidComp [in] id of component in active file\n\nActivate the part instanced by the specified component for editing. It is assumed the component (idComp) resides in the active assembly. Use cvxPartExit() to exit the part to its parent assembly part.\nsee:\ncvxCompEditPartByPath()"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to edit a part instanced by a specific component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompEditPart\nidComp [in] id of component in active file\n\nActivate the part instanced by the specified component for editing. It is assumed the component (idComp) resides in the active assembly. Use cvxPartExit() to exit the part to its parent assembly part.\nsee:\ncvxCompEditPartByPath()"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to exit the part to its parent assembly part after editing?"
            },
            {
                "role": "assistant",
                "content": "cvxCompEditPart\nidComp [in] id of component in active file\n\nActivate the part instanced by the specified component for editing. It is assumed the component (idComp) resides in the active assembly. Use cvxPartExit() to exit the part to its parent assembly part.\nsee:\ncvxCompEditPartByPath()"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to activate a part for editing using its component path?"
            },
            {
                "role": "assistant",
                "content": "cvxCompEditPartByPath\ncompPath [in] path of component in active file\n\nActivate the part instanced by the specified component path for editing. It is assumed the component (compPath) resides in the active assembly. Use cvxPartExit() to exit the part to its parent assembly part.\nsee:\ncvxCompEditPart()"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to edit a part by specifying its component path?"
            },
            {
                "role": "assistant",
                "content": "cvxCompEditPartByPath\ncompPath [in] path of component in active file\n\nActivate the part instanced by the specified component path for editing. It is assumed the component (compPath) resides in the active assembly. Use cvxPartExit() to exit the part to its parent assembly part.\nsee:\ncvxCompEditPart()"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxCompEditPartByPath to enter editing mode for a specific part?"
            },
            {
                "role": "assistant",
                "content": "cvxCompEditPartByPath\ncompPath [in] path of component in active file\n\nActivate the part instanced by the specified component path for editing. It is assumed the component (compPath) resides in the active assembly. Use cvxPartExit() to exit the part to its parent assembly part.\nsee:\ncvxCompEditPart()"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to regenerate a specified component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompRegen\nPath [in] pick path of component entity\nflag [in] 1 if activate back to the original node, else 0\n\nRegenerate specified component. This function activates the parent node of the this entity, if flag = 0."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to activate the parent node of the entity?"
            },
            {
                "role": "assistant",
                "content": "cvxCompRegen\nPath [in] pick path of component entity\nflag [in] 1 if activate back to the original node, else 0\n\nRegenerate specified component. This function activates the parent node of the this entity, if flag = 0."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to activate the original node of the component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompRegen\nPath [in] pick path of component entity\nflag [in] 1 if activate back to the original node, else 0\n\nRegenerate specified component. This function activates the parent node of the this entity, if flag = 0."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the instanced part of a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSetPart\nidComp [in] id of component in active file\nFile [in] name of the file containing the part to instance\nPart [in] name of the part to instance from \"File\"\n\nChanges the part instanced by the specified component in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to specify the file containing the part to instance?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSetPart\nidComp [in] id of component in active file\nFile [in] name of the file containing the part to instance\nPart [in] name of the part to instance from \"File\"\n\nChanges the part instanced by the specified component in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to instance a part from a specific file?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSetPart\nidComp [in] id of component in active file\nFile [in] name of the file containing the part to instance\nPart [in] name of the part to instance from \"File\"\n\nChanges the part instanced by the specified component in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a component is lightweight?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsLightweightByPath\ncompPath [in] pick path of component in active file\nisLightweight [out] the status of specified component, 1 is lightweight and else 0\n\nCheck the specified component from compPath is a lightweight component or not."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a component is lightweight?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsLightweightByPath\ncompPath [in] pick path of component in active file\nisLightweight [out] the status of specified component, 1 is lightweight and else 0\n\nCheck the specified component from compPath is a lightweight component or not."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the status of a specified component as lightweight or not?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsLightweightByPath\ncompPath [in] pick path of component in active file\nisLightweight [out] the status of specified component, 1 is lightweight and else 0\n\nCheck the specified component from compPath is a lightweight component or not."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set components to be lightweight loaded?"
            },
            {
                "role": "assistant",
                "content": "cvxCompLightweightSetByPath\ncompPaths [in] pick paths of component in active file\ncompCount [in] count of compPaths\nload [in] 0-make the components be light-weight loading, 1-load the components\nisRecursive [in] 1 if load the components recursively, else 0, the option is used when load=1\n\nSet the components to be lightweight loading or not, this function tries to upgrade the loading status even if failed in some components."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to upgrade the loading status of components?"
            },
            {
                "role": "assistant",
                "content": "cvxCompLightweightSetByPath\ncompPaths [in] pick paths of component in active file\ncompCount [in] count of compPaths\nload [in] 0-make the components be light-weight loading, 1-load the components\nisRecursive [in] 1 if load the components recursively, else 0, the option is used when load=1\n\nSet the components to be lightweight loading or not, this function tries to upgrade the loading status even if failed in some components."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I load components recursively using this function?"
            },
            {
                "role": "assistant",
                "content": "cvxCompLightweightSetByPath\ncompPaths [in] pick paths of component in active file\ncompCount [in] count of compPaths\nload [in] 0-make the components be light-weight loading, 1-load the components\nisRecursive [in] 1 if load the components recursively, else 0, the option is used when load=1\n\nSet the components to be lightweight loading or not, this function tries to upgrade the loading status even if failed in some components."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxCompSetRenderMode\nCompPath [in] pick path of component\nRenderMode [in] render mode\n\nSet component render mode."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxCompSetRenderMode\nCompPath [in] pick path of component\nRenderMode [in] render mode\n\nSet component render mode."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxCompSetRenderMode\nCompPath [in] pick path of component\nRenderMode [in] render mode\n\nSet component render mode."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to move sub-components of a selected component up to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxCompShift\nidComp [in] component id\n\nMoves sub-components of a selected component up to the active part. Also merges top-level geometry and/or alignments associated with the specified component (idComp) into the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to merge top-level geometry and/or alignments associated with a specified component into the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxCompShift\nidComp [in] component id\n\nMoves sub-components of a selected component up to the active part. Also merges top-level geometry and/or alignments associated with the specified component (idComp) into the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I shift sub-components of a component to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxCompShift\nidComp [in] component id\n\nMoves sub-components of a selected component up to the active part. Also merges top-level geometry and/or alignments associated with the specified component (idComp) into the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to suppress a specified component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSuppress\nidComp [in] component id\nsuppress [in] 1-suppress, 0-unsuppress\n\nSuppress or unsuppress the specified component. idComp is the component of the top assembly.\nsee:\ncvxCompSuppressByPath() to suppress the some components by the entity path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to unsuppress a specified component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSuppress\nidComp [in] component id\nsuppress [in] 1-suppress, 0-unsuppress\n\nSuppress or unsuppress the specified component. idComp is the component of the top assembly.\nsee:\ncvxCompSuppressByPath() to suppress the some components by the entity path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to suppress components by entity path?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSuppress\nidComp [in] component id\nsuppress [in] 1-suppress, 0-unsuppress\n\nSuppress or unsuppress the specified component. idComp is the component of the top assembly.\nsee:\ncvxCompSuppressByPath() to suppress the some components by the entity path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to suppress specified components by pick-path?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSuppressByPath\nCount [in] count of input components\nCompPaths [in] pick-path of component\nsuppress [in] 1-suppress, 0-unsuppress\n\nSuppress or unsuppress the specified components. CompPaths is some components from different depth assembly.\nsee:\ncvxCompSuppress() to suppress the sepicified component by id."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to unsuppress components using pick-path?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSuppressByPath\nCount [in] count of input components\nCompPaths [in] pick-path of component\nsuppress [in] 1-suppress, 0-unsuppress\n\nSuppress or unsuppress the specified components. CompPaths is some components from different depth assembly.\nsee:\ncvxCompSuppress() to suppress the sepicified component by id."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to suppress multiple components at different depths in the assembly?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSuppressByPath\nCount [in] count of input components\nCompPaths [in] pick-path of component\nsuppress [in] 1-suppress, 0-unsuppress\n\nSuppress or unsuppress the specified components. CompPaths is some components from different depth assembly.\nsee:\ncvxCompSuppress() to suppress the sepicified component by id."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the visibility of a specified component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompVisSet\nCompPath [in] pick-path of component\nVis [in] 1-visible, 0-blank\n\nSet the visibility of specified component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to make a component visible or invisible?"
            },
            {
                "role": "assistant",
                "content": "cvxCompVisSet\nCompPath [in] pick-path of component\nVis [in] 1-visible, 0-blank\n\nSet the visibility of specified component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the visibility of a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompVisSet\nCompPath [in] pick-path of component\nVis [in] 1-visible, 0-blank\n\nSet the visibility of specified component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the id of a component configuration?"
            },
            {
                "role": "assistant",
                "content": "cvxCompCfgIdSet\npath [in] pick path of component\nidCfg [in] config id\n\nSet the id of the specified component configuration."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the configuration id of a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompCfgIdSet\npath [in] pick path of component\nidCfg [in] config id\n\nSet the id of the specified component configuration."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the id of a component configuration?"
            },
            {
                "role": "assistant",
                "content": "cvxCompCfgIdSet\npath [in] pick path of component\nidCfg [in] config id\n\nSet the id of the specified component configuration."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to redefine an assembly constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxConsRedefine\nidCons [in] index of constraint\n\nLaunches interactive redefinition of the specified assembly constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to interactively redefine a specific assembly constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxConsRedefine\nidCons [in] index of constraint\n\nLaunches interactive redefinition of the specified assembly constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I launch interactive redefinition of a constraint by its index?"
            },
            {
                "role": "assistant",
                "content": "cvxConsRedefine\nidCons [in] index of constraint\n\nLaunches interactive redefinition of the specified assembly constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to enable a specific constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxConsEnable\ncount [in] count of constraints\nidCons [in] list of constraint ids\nenable [in] 1-enable, 0-disable\n\nEnable or disable the specified constraints."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to disable a group of constraints?"
            },
            {
                "role": "assistant",
                "content": "cvxConsEnable\ncount [in] count of constraints\nidCons [in] list of constraint ids\nenable [in] 1-enable, 0-disable\n\nEnable or disable the specified constraints."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to enable multiple constraints at once?"
            },
            {
                "role": "assistant",
                "content": "cvxConsEnable\ncount [in] count of constraints\nidCons [in] list of constraint ids\nenable [in] 1-enable, 0-disable\n\nEnable or disable the specified constraints."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete specified constraints?"
            },
            {
                "role": "assistant",
                "content": "cvxConsDel\ncount [in] count of constraints\nidCons [in] list of constraint ids\n\nDelete the specified constraints."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to delete a list of constraint ids?"
            },
            {
                "role": "assistant",
                "content": "cvxConsDel\ncount [in] count of constraints\nidCons [in] list of constraint ids\n\nDelete the specified constraints."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete multiple constraints at once?"
            },
            {
                "role": "assistant",
                "content": "cvxConsDel\ncount [in] count of constraints\nidCons [in] list of constraint ids\n\nDelete the specified constraints."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert and activate a sub-part in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxSubPartIns\nName [in] sub-part name\nAutoRegen [in] 1 to tag sub-part for automatic regeneration, else 0\nMergeDimen [in] 1 to merge sub-part dimensions, 2 to merge sub-part wireframe entities, 3 to merge both (0 to merge neither dimensions nor wireframe\n\nInserts and activates a sub-part in the active part. If \"Name\" is a blank string, a default name is assigned to the new sub-part. Use cvxPartExit() to exit the sub-part, re-activating its parent part.\nnote:\nIf \"Name\" is the name of an existing sub-part in the active part, the existing sub-part is activated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to tag a sub-part for automatic regeneration?"
            },
            {
                "role": "assistant",
                "content": "cvxSubPartIns\nName [in] sub-part name\nAutoRegen [in] 1 to tag sub-part for automatic regeneration, else 0\nMergeDimen [in] 1 to merge sub-part dimensions, 2 to merge sub-part wireframe entities, 3 to merge both (0 to merge neither dimensions nor wireframe\n\nInserts and activates a sub-part in the active part. If \"Name\" is a blank string, a default name is assigned to the new sub-part. Use cvxPartExit() to exit the sub-part, re-activating its parent part.\nnote:\nIf \"Name\" is the name of an existing sub-part in the active part, the existing sub-part is activated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to merge sub-part dimensions or wireframe entities?"
            },
            {
                "role": "assistant",
                "content": "cvxSubPartIns\nName [in] sub-part name\nAutoRegen [in] 1 to tag sub-part for automatic regeneration, else 0\nMergeDimen [in] 1 to merge sub-part dimensions, 2 to merge sub-part wireframe entities, 3 to merge both (0 to merge neither dimensions nor wireframe\n\nInserts and activates a sub-part in the active part. If \"Name\" is a blank string, a default name is assigned to the new sub-part. Use cvxPartExit() to exit the sub-part, re-activating its parent part.\nnote:\nIf \"Name\" is the name of an existing sub-part in the active part, the existing sub-part is activated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a standard part from reuse library as a component?"
            },
            {
                "role": "assistant",
                "content": "cvxLibPartIns\nComp [in] component data\nInstanceName [in] the instance name, my be null\nValStr [in] string for the selecet value, Like this A,20;B,30;C,40\nfFileType [in] fFileType is the flag to create the part instance as new root(0) or new file(1, 2 if read-only), ignored if fInsShape is 1.\nfInsShape [in] insert as shape\nidComp [out] id of new component, or new feature(fInsShape is 1)\n\nInsert the standard part from reuse library to the current assembly/part as component/shape.\nThe \"ValStr\" given some parameter value to generate the instance. The name for the parameters can be the really name or the description name. The value should be the value in excel or in config table for the key and normal parameter. For custom value, it can be other value not in the excel or in config table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a standard part from reuse library as a shape?"
            },
            {
                "role": "assistant",
                "content": "cvxLibPartIns\nComp [in] component data\nInstanceName [in] the instance name, my be null\nValStr [in] string for the selecet value, Like this A,20;B,30;C,40\nfFileType [in] fFileType is the flag to create the part instance as new root(0) or new file(1, 2 if read-only), ignored if fInsShape is 1.\nfInsShape [in] insert as shape\nidComp [out] id of new component, or new feature(fInsShape is 1)\n\nInsert the standard part from reuse library to the current assembly/part as component/shape.\nThe \"ValStr\" given some parameter value to generate the instance. The name for the parameters can be the really name or the description name. The value should be the value in excel or in config table for the key and normal parameter. For custom value, it can be other value not in the excel or in config table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the ID of the new component or feature after insertion?"
            },
            {
                "role": "assistant",
                "content": "cvxLibPartIns\nComp [in] component data\nInstanceName [in] the instance name, my be null\nValStr [in] string for the selecet value, Like this A,20;B,30;C,40\nfFileType [in] fFileType is the flag to create the part instance as new root(0) or new file(1, 2 if read-only), ignored if fInsShape is 1.\nfInsShape [in] insert as shape\nidComp [out] id of new component, or new feature(fInsShape is 1)\n\nInsert the standard part from reuse library to the current assembly/part as component/shape.\nThe \"ValStr\" given some parameter value to generate the instance. The name for the parameters can be the really name or the description name. The value should be the value in excel or in config table for the key and normal parameter. For custom value, it can be other value not in the excel or in config table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a part as a shape at a specified location?"
            },
            {
                "role": "assistant",
                "content": "cvxInstPartAsShp\nComp [in] component data\n\nInsert the specified part at the specified location as shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to insert a part as a shape?"
            },
            {
                "role": "assistant",
                "content": "cvxInstPartAsShp\nComp [in] component data\n\nInsert the specified part at the specified location as shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use component data to insert a part as a shape?"
            },
            {
                "role": "assistant",
                "content": "cvxInstPartAsShp\nComp [in] component data\n\nInsert the specified part at the specified location as shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change a component's part using the part library method?"
            },
            {
                "role": "assistant",
                "content": "cvxLibPartAdjust\nidComp [in] the index of component\nFile [in] the file name (include the file path)\nPart [in] the Root name\nValStr [in] string for the seleceted value, Like this A,20;B,30;C,40\nInstanceName [in] the instance name, may be null\n\nChange component part use the method like part library"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to adjust a part in the component library?"
            },
            {
                "role": "assistant",
                "content": "cvxLibPartAdjust\nidComp [in] the index of component\nFile [in] the file name (include the file path)\nPart [in] the Root name\nValStr [in] string for the seleceted value, Like this A,20;B,30;C,40\nInstanceName [in] the instance name, may be null\n\nChange component part use the method like part library"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to specify the file name and path when adjusting a part in the component library?"
            },
            {
                "role": "assistant",
                "content": "cvxLibPartAdjust\nidComp [in] the index of component\nFile [in] the file name (include the file path)\nPart [in] the Root name\nValStr [in] string for the seleceted value, Like this A,20;B,30;C,40\nInstanceName [in] the instance name, may be null\n\nChange component part use the method like part library"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if an edge is an open edge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgeOpen\nidEdge [in] edge id (in active file)\n\nCheck if the specified edge is an open edge."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to determine if an edge is open?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgeOpen\nidEdge [in] edge id (in active file)\n\nCheck if the specified edge is an open edge."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I verify if a specific edge is open?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgeOpen\nidEdge [in] edge id (in active file)\n\nCheck if the specified edge is an open edge."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the type of a specified edge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgeType\nidEdge [in] edge id (in active file)\nEdgeType [out] edge type\n\nGets the type of specified edge."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about the edge type?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgeType\nidEdge [in] edge id (in active file)\nEdgeType [out] edge type\n\nGets the type of specified edge."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine the type of an edge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgeType\nidEdge [in] edge id (in active file)\nEdgeType [out] edge type\n\nGets the type of specified edge."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of faces connected to an edge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgeFaces\nidEdge [in] edge id\nCount [out] number of faces\nFaces [out] list of face id's\n\nOutputs a list of indices of the faces connected to an edge in the active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of face id's connected to an edge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgeFaces\nidEdge [in] edge id\nCount [out] number of faces\nFaces [out] list of face id's\n\nOutputs a list of indices of the faces connected to an edge in the active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any function to inquire about the faces connected to an edge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgeFaces\nidEdge [in] edge id\nCount [out] number of faces\nFaces [out] list of face id's\n\nOutputs a list of indices of the faces connected to an edge in the active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of pre-edges associated with a specified edge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgePreEdges\nidEdge [in] edge id\nCount [out] number of pre-edges associated with the specified edge\nPreEdges [out] list of pre-edges associated with the specified edge\n\nGets a list of the pre-edges associated with the specified edge. Memory for the list is allocated by this function and must be freed by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve a list of pre-edges associated with a specified edge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgePreEdges\nidEdge [in] edge id\nCount [out] number of pre-edges associated with the specified edge\nPreEdges [out] list of pre-edges associated with the specified edge\n\nGets a list of the pre-edges associated with the specified edge. Memory for the list is allocated by this function and must be freed by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free the memory allocated for the list of pre-edges?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgePreEdges\nidEdge [in] edge id\nCount [out] number of pre-edges associated with the specified edge\nPreEdges [out] list of pre-edges associated with the specified edge\n\nGets a list of the pre-edges associated with the specified edge. Memory for the list is allocated by this function and must be freed by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the parent loop of a specified edge on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgeLoop\nidFace [in] face id\nidEdge [in] edge id\nidLoop [out] loop id\n\nGet the id of the parent loop of the specified edge on the specified face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the loop id of a specific edge on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgeLoop\nidFace [in] face id\nidEdge [in] edge id\nidLoop [out] loop id\n\nGet the id of the parent loop of the specified edge on the specified face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire about the loop id of an edge on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgeLoop\nidFace [in] face id\nidEdge [in] edge id\nidLoop [out] loop id\n\nGet the id of the parent loop of the specified edge on the specified face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the shape connected to an edge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgeShape\nidEdge [in] index of edge\nidShape [out] index of shape\n\nOutputs the shape connected to an edge in the active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the index of the shape connected to an edge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgeShape\nidEdge [in] index of edge\nidShape [out] index of shape\n\nOutputs the shape connected to an edge in the active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire about the shape connected to an edge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgeShape\nidEdge [in] index of edge\nidShape [out] index of shape\n\nOutputs the shape connected to an edge in the active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get NURBS curve geometry of a specified edge in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgeCrv\nidEdge [in] edge id\nidFace [in] optional face or loop id for retrieving UV geometry (else 0)\nCrv [out] edge's curve geometry\n\nOutputs the NURBS curve geometry of the specified edge in the active part.\nIf \"idFace <= 0\", the 3D definition of the edge is output.\nIf \"idFace > 0\", the UV definition of the edge corresponding to the specified face or loop is output.\nThe calling procedure is responsible for deallocating the memory assigned by this function to the \"Crv\" structure using cvxCurveFree().\nThe direction of UV curves output by this function follow the direction of their parent loops. 3D curves are not given a specific orientation.\nOuter loops proceed counterclockwise relative to the natural normal of the parent surface. Inner loops are clockwise.\nIt is assumed the specified edge (idEdge) resides in the active part.\nnote:\ncvxCurveFree() can use to free Crv."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve UV geometry of an edge corresponding to a specified face or loop?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgeCrv\nidEdge [in] edge id\nidFace [in] optional face or loop id for retrieving UV geometry (else 0)\nCrv [out] edge's curve geometry\n\nOutputs the NURBS curve geometry of the specified edge in the active part.\nIf \"idFace <= 0\", the 3D definition of the edge is output.\nIf \"idFace > 0\", the UV definition of the edge corresponding to the specified face or loop is output.\nThe calling procedure is responsible for deallocating the memory assigned by this function to the \"Crv\" structure using cvxCurveFree().\nThe direction of UV curves output by this function follow the direction of their parent loops. 3D curves are not given a specific orientation.\nOuter loops proceed counterclockwise relative to the natural normal of the parent surface. Inner loops are clockwise.\nIt is assumed the specified edge (idEdge) resides in the active part.\nnote:\ncvxCurveFree() can use to free Crv."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to deallocate the memory assigned by the function to the Crv structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgeCrv\nidEdge [in] edge id\nidFace [in] optional face or loop id for retrieving UV geometry (else 0)\nCrv [out] edge's curve geometry\n\nOutputs the NURBS curve geometry of the specified edge in the active part.\nIf \"idFace <= 0\", the 3D definition of the edge is output.\nIf \"idFace > 0\", the UV definition of the edge corresponding to the specified face or loop is output.\nThe calling procedure is responsible for deallocating the memory assigned by this function to the \"Crv\" structure using cvxCurveFree().\nThe direction of UV curves output by this function follow the direction of their parent loops. 3D curves are not given a specific orientation.\nOuter loops proceed counterclockwise relative to the natural normal of the parent surface. Inner loops are clockwise.\nIt is assumed the specified edge (idEdge) resides in the active part.\nnote:\ncvxCurveFree() can use to free Crv."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get display attributes of a specified face or shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceAt\nidFace [in] face or shape id\nAt [out] face/shape display attributes\n\nOutputs display attributes of the specified face or shape. Attributes for a shape are grabbed from the first face in the shape.\nIt is assumed the specified face or shape (idFace) resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to grab attributes for a shape from the first face in the shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceAt\nidFace [in] face or shape id\nAt [out] face/shape display attributes\n\nOutputs display attributes of the specified face or shape. Attributes for a shape are grabbed from the first face in the shape.\nIt is assumed the specified face or shape (idFace) resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assume the specified face or shape resides in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceAt\nidFace [in] face or shape id\nAt [out] face/shape display attributes\n\nOutputs display attributes of the specified face or shape. Attributes for a shape are grabbed from the first face in the shape.\nIt is assumed the specified face or shape (idFace) resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get shader attributes of a specified face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceSh\nidFace [in] face id\nSh [out] face shader attributes\n\nOutputs shader attributes of the specified face. \"Sh->name[0]\" is set to \"0\" (i.e. empty string) if no shader is defined for the face.\nIt is assumed the specified face (idFace) resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if a shader is defined for a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceSh\nidFace [in] face id\nSh [out] face shader attributes\n\nOutputs shader attributes of the specified face. \"Sh->name[0]\" is set to \"0\" (i.e. empty string) if no shader is defined for the face.\nIt is assumed the specified face (idFace) resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the shader attributes for a specific face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceSh\nidFace [in] face id\nSh [out] face shader attributes\n\nOutputs shader attributes of the specified face. \"Sh->name[0]\" is set to \"0\" (i.e. empty string) if no shader is defined for the face.\nIt is assumed the specified face (idFace) resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get texture attributes of a specified face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceTx\nidFace [in] face id\nTx [out] face texture attributes\n\nOutputs texture attributes of the specified face.\nIf a texture image file is embedded in a Z3 file, it is automatically extracted to a \"temp\" sub-folder in the Z3 runtime folder. The path the temp file is output via \"Tx->file\".\nIt is assumed the specified face (idFace) resides in the active part.\nsee:\ncvxPartInqFaceTxFile()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to extract a texture image file from a Z3 file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceTx\nidFace [in] face id\nTx [out] face texture attributes\n\nOutputs texture attributes of the specified face.\nIf a texture image file is embedded in a Z3 file, it is automatically extracted to a \"temp\" sub-folder in the Z3 runtime folder. The path the temp file is output via \"Tx->file\".\nIt is assumed the specified face (idFace) resides in the active part.\nsee:\ncvxPartInqFaceTxFile()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the path of the extracted texture image file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceTx\nidFace [in] face id\nTx [out] face texture attributes\n\nOutputs texture attributes of the specified face.\nIf a texture image file is embedded in a Z3 file, it is automatically extracted to a \"temp\" sub-folder in the Z3 runtime folder. The path the temp file is output via \"Tx->file\".\nIt is assumed the specified face (idFace) resides in the active part.\nsee:\ncvxPartInqFaceTxFile()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the area of a specific face?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceGetArea\nfaceId [in] The face id in the db\ntolerance [in] The tolerance\narea [out] The area of the face to return\n\nGet the face area of the face which id is \"faceId\" in the db."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the area of a face by its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceGetArea\nfaceId [in] The face id in the db\ntolerance [in] The tolerance\narea [out] The area of the face to return\n\nGet the face area of the face which id is \"faceId\" in the db."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the area of a face in the database?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceGetArea\nfaceId [in] The face id in the db\ntolerance [in] The tolerance\narea [out] The area of the face to return\n\nGet the face area of the face which id is \"faceId\" in the db."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the maximum curvature at a specific UV location on a surface?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceGetMaxCurvature\nfaceId [in] face Id in the db\nuvPoint [in] U,V coordinate to evaluate\npoint [out] 3D point on surface at the uv location (NULL to ignore)\nnormal [out] Surface normal at UV location (NULL to ignore)\ndirection [out] Surface direction(NULL to ignore)\nminCurvature [out] minimum curvature at the uv location (NULL to ignore)\nmaxCurvature [out] maximum curvature at the uv location (NULL to ignore)\ncurvature [out] curvature (NULL to ignore)\ncurvatureDirection [out] curvature direction vector (NULL to ignore)\ncurvatureCenter [out] curvature center (NULL to ignore)\n\nEvaluate curvature information on a surface at a specified uv location in the maximum curvature direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to evaluate the curvature at a specific UV coordinate on a surface?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceGetMaxCurvature\nfaceId [in] face Id in the db\nuvPoint [in] U,V coordinate to evaluate\npoint [out] 3D point on surface at the uv location (NULL to ignore)\nnormal [out] Surface normal at UV location (NULL to ignore)\ndirection [out] Surface direction(NULL to ignore)\nminCurvature [out] minimum curvature at the uv location (NULL to ignore)\nmaxCurvature [out] maximum curvature at the uv location (NULL to ignore)\ncurvature [out] curvature (NULL to ignore)\ncurvatureDirection [out] curvature direction vector (NULL to ignore)\ncurvatureCenter [out] curvature center (NULL to ignore)\n\nEvaluate curvature information on a surface at a specified uv location in the maximum curvature direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the minimum and maximum curvature at a given UV point on a surface?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceGetMaxCurvature\nfaceId [in] face Id in the db\nuvPoint [in] U,V coordinate to evaluate\npoint [out] 3D point on surface at the uv location (NULL to ignore)\nnormal [out] Surface normal at UV location (NULL to ignore)\ndirection [out] Surface direction(NULL to ignore)\nminCurvature [out] minimum curvature at the uv location (NULL to ignore)\nmaxCurvature [out] maximum curvature at the uv location (NULL to ignore)\ncurvature [out] curvature (NULL to ignore)\ncurvatureDirection [out] curvature direction vector (NULL to ignore)\ncurvatureCenter [out] curvature center (NULL to ignore)\n\nEvaluate curvature information on a surface at a specified uv location in the maximum curvature direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSetFaceAt()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSetFaceAtInit\ndata [out] face display attributes\n\nInitialize the parameters of the cvxPartSetFaceAt().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing the face display attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSetFaceAtInit\ndata [out] face display attributes\n\nInitialize the parameters of the cvxPartSetFaceAt().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set the face display attributes without assigning a value to the variable first?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSetFaceAtInit\ndata [out] face display attributes\n\nInitialize the parameters of the cvxPartSetFaceAt().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the display attributes of faces or shapes in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSetFaceAt\nCount [in] number of faces (or shapes)\nidFaces [in] list of face or shape id's\nAt [in] face display attributes\n\nChanges display attributes of the specified faces or shapes. It is assumed the specified faces or shapes reside in the active part.\nnote:\nInterface cvxPartSetFaceAtInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for changing face display attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSetFaceAt\nCount [in] number of faces (or shapes)\nidFaces [in] list of face or shape id's\nAt [in] face display attributes\n\nChanges display attributes of the specified faces or shapes. It is assumed the specified faces or shapes reside in the active part.\nnote:\nInterface cvxPartSetFaceAtInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set face display attributes for a list of face or shape id's?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSetFaceAt\nCount [in] number of faces (or shapes)\nidFaces [in] list of face or shape id's\nAt [in] face display attributes\n\nChanges display attributes of the specified faces or shapes. It is assumed the specified faces or shapes reside in the active part.\nnote:\nInterface cvxPartSetFaceAtInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set texture attributes of a specified face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSetFaceTx\nidFace [in] face id\nTx [in] face texture attributes\n\nSet texture attributes of the specified face.\nIt is assumed the specified face (idFace) resides in the active part. The 'opt' field of svxTextureAt structure is not supported now."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set face texture attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSetFaceTx\nidFace [in] face id\nTx [in] face texture attributes\n\nSet texture attributes of the specified face.\nIt is assumed the specified face (idFace) resides in the active part. The 'opt' field of svxTextureAt structure is not supported now."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update texture attributes of a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSetFaceTx\nidFace [in] face id\nTx [in] face texture attributes\n\nSet texture attributes of the specified face.\nIt is assumed the specified face (idFace) resides in the active part. The 'opt' field of svxTextureAt structure is not supported now."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove a texture from a specific face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDelFaceTx\nCount [in] number of faces (or shapes)\nidFaces [in] list of face or shape id's\n\nRemove a texture or a texture map previously assigned to the specified shape or the specified face. it is assumed the specified face or shape (idFace) resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to delete a texture map from a shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDelFaceTx\nCount [in] number of faces (or shapes)\nidFaces [in] list of face or shape id's\n\nRemove a texture or a texture map previously assigned to the specified shape or the specified face. it is assumed the specified face or shape (idFace) resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I remove a texture from multiple faces at once?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDelFaceTx\nCount [in] number of faces (or shapes)\nidFaces [in] list of face or shape id's\n\nRemove a texture or a texture map previously assigned to the specified shape or the specified face. it is assumed the specified face or shape (idFace) resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the path to the original image file of a texture map applied to a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceTxFile\nidFace [in] face id\nPath [out] path to texture map's original image file\n\nOutputs path to the original image file if a texture map has been applied to a face. Unlike cvxPartInqFaceTx(), which may output the path to a copy of the original image file that ZW3D has put in its temp directory, this function outputs the path that was originally used to create the texture map. The file might no longer exist, although the image may still exist as an embedded object.\nIt is assumed the specified face (idFace) resides in the active part.\nZW3D's native texture map command (!CdTMap) does not save the path to the original image file when a texture map is applied to a face with the embed option selected. For faces that have been assigned a texture map using the texture map command rather than the cvxPartSetFaceTx() function, this function outputs the path that the texture map command saves with the face, which will be the path to a copy of the image file in ZW3D's temp directory.\nsee:\ncvxPartInqFaceTx() for a function that outputs all texture map attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the original image file path of a texture map applied to a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceTxFile\nidFace [in] face id\nPath [out] path to texture map's original image file\n\nOutputs path to the original image file if a texture map has been applied to a face. Unlike cvxPartInqFaceTx(), which may output the path to a copy of the original image file that ZW3D has put in its temp directory, this function outputs the path that was originally used to create the texture map. The file might no longer exist, although the image may still exist as an embedded object.\nIt is assumed the specified face (idFace) resides in the active part.\nZW3D's native texture map command (!CdTMap) does not save the path to the original image file when a texture map is applied to a face with the embed option selected. For faces that have been assigned a texture map using the texture map command rather than the cvxPartSetFaceTx() function, this function outputs the path that the texture map command saves with the face, which will be the path to a copy of the image file in ZW3D's temp directory.\nsee:\ncvxPartInqFaceTx() for a function that outputs all texture map attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the path to the original image file used to create a texture map on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceTxFile\nidFace [in] face id\nPath [out] path to texture map's original image file\n\nOutputs path to the original image file if a texture map has been applied to a face. Unlike cvxPartInqFaceTx(), which may output the path to a copy of the original image file that ZW3D has put in its temp directory, this function outputs the path that was originally used to create the texture map. The file might no longer exist, although the image may still exist as an embedded object.\nIt is assumed the specified face (idFace) resides in the active part.\nZW3D's native texture map command (!CdTMap) does not save the path to the original image file when a texture map is applied to a face with the embed option selected. For faces that have been assigned a texture map using the texture map command rather than the cvxPartSetFaceTx() function, this function outputs the path that the texture map command saves with the face, which will be the path to a copy of the image file in ZW3D's temp directory.\nsee:\ncvxPartInqFaceTx() for a function that outputs all texture map attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the path to the original image file for a texture map applied to a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceTxFileByLongPath\nidFace [in] face id\nPath [out] path to texture map's original image file\nsizePath [in] max size of Path\n\nOutputs path to the original image file if a texture map has been \n\n applied to a face. Unlike cvxPartInqFaceTx(), which may output the \n\n path to a copy of the original image file that ZW3D has put in its \n\n temp directory, this function outputs the path that was originally \n\n used to create the texture map. The file might no longer exist, \n\n although the image may still exist as an embedded object. \n\n\nIt is assumed the specified face (idFace) resides in the active part.\nZW3D's native texture map command (!CdTMap) does not save the path to \n\n the original image file when a texture map is applied to a face with \n\n the embed option selected. For faces that have been assigned a \n\n texture map using the texture map command rather than the \n\n cvxPartSetFaceTx() function, this function outputs the path that the \n\n texture map command saves with the face, which will be the path to a \n\n copy of the image file in ZW3D's temp directory.\nA Path that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes.\nsee:\ncvxPartInqFaceTx() for a function that outputs all texture map attributes. \nsee:\ncvxPartInqFaceTxFile()"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the original image file path for a texture map on a specific face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceTxFileByLongPath\nidFace [in] face id\nPath [out] path to texture map's original image file\nsizePath [in] max size of Path\n\nOutputs path to the original image file if a texture map has been \n\n applied to a face. Unlike cvxPartInqFaceTx(), which may output the \n\n path to a copy of the original image file that ZW3D has put in its \n\n temp directory, this function outputs the path that was originally \n\n used to create the texture map. The file might no longer exist, \n\n although the image may still exist as an embedded object. \n\n\nIt is assumed the specified face (idFace) resides in the active part.\nZW3D's native texture map command (!CdTMap) does not save the path to \n\n the original image file when a texture map is applied to a face with \n\n the embed option selected. For faces that have been assigned a \n\n texture map using the texture map command rather than the \n\n cvxPartSetFaceTx() function, this function outputs the path that the \n\n texture map command saves with the face, which will be the path to a \n\n copy of the image file in ZW3D's temp directory.\nA Path that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes.\nsee:\ncvxPartInqFaceTx() for a function that outputs all texture map attributes. \nsee:\ncvxPartInqFaceTxFile()"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the path to the original image file used to create a texture map on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceTxFileByLongPath\nidFace [in] face id\nPath [out] path to texture map's original image file\nsizePath [in] max size of Path\n\nOutputs path to the original image file if a texture map has been \n\n applied to a face. Unlike cvxPartInqFaceTx(), which may output the \n\n path to a copy of the original image file that ZW3D has put in its \n\n temp directory, this function outputs the path that was originally \n\n used to create the texture map. The file might no longer exist, \n\n although the image may still exist as an embedded object. \n\n\nIt is assumed the specified face (idFace) resides in the active part.\nZW3D's native texture map command (!CdTMap) does not save the path to \n\n the original image file when a texture map is applied to a face with \n\n the embed option selected. For faces that have been assigned a \n\n texture map using the texture map command rather than the \n\n cvxPartSetFaceTx() function, this function outputs the path that the \n\n texture map command saves with the face, which will be the path to a \n\n copy of the image file in ZW3D's temp directory.\nA Path that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes.\nsee:\ncvxPartInqFaceTx() for a function that outputs all texture map attributes. \nsee:\ncvxPartInqFaceTxFile()"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the bounding box of a specified face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceBox\nidFace [in] face id\nBox [out] face bounding box\n\nGets the bounding box of the specified face in the active file.\nsee:\ncvxPartInqEntBox,cvxPartInqShapeBox,cvxEntBndBox. The three interfaces have similar functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the bounding box of a face in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceBox\nidFace [in] face id\nBox [out] face bounding box\n\nGets the bounding box of the specified face in the active file.\nsee:\ncvxPartInqEntBox,cvxPartInqShapeBox,cvxEntBndBox. The three interfaces have similar functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the face bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceBox\nidFace [in] face id\nBox [out] face bounding box\n\nGets the bounding box of the specified face in the active file.\nsee:\ncvxPartInqEntBox,cvxPartInqShapeBox,cvxEntBndBox. The three interfaces have similar functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of trim curves for a specific face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceCrvs\nidFace [in] face id\nCount [out] number of trim curves\nTrimCurves [out] list of trim curves\n\nOutputs a list of the trim curves that bound a face in the active part. The calling application must sort these curves into inner and outer loops as desired. To get the them in sorted order, you must traverse the face and its loops using cvxPartInqFaceLoops(), cvxPartInqLoopEdges() and cvxPartInqEdgeCrv().\nThe calling procedure MUST deallocate the internal data in each element of the output list by calling cvxCurveFree(), after which the output list MUST be deallocated using cvxMemFree((void**)TrimCurves)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to obtain a list of trim curves that bound a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceCrvs\nidFace [in] face id\nCount [out] number of trim curves\nTrimCurves [out] list of trim curves\n\nOutputs a list of the trim curves that bound a face in the active part. The calling application must sort these curves into inner and outer loops as desired. To get the them in sorted order, you must traverse the face and its loops using cvxPartInqFaceLoops(), cvxPartInqLoopEdges() and cvxPartInqEdgeCrv().\nThe calling procedure MUST deallocate the internal data in each element of the output list by calling cvxCurveFree(), after which the output list MUST be deallocated using cvxMemFree((void**)TrimCurves)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the internal data of each trim curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceCrvs\nidFace [in] face id\nCount [out] number of trim curves\nTrimCurves [out] list of trim curves\n\nOutputs a list of the trim curves that bound a face in the active part. The calling application must sort these curves into inner and outer loops as desired. To get the them in sorted order, you must traverse the face and its loops using cvxPartInqFaceLoops(), cvxPartInqLoopEdges() and cvxPartInqEdgeCrv().\nThe calling procedure MUST deallocate the internal data in each element of the output list by calling cvxCurveFree(), after which the output list MUST be deallocated using cvxMemFree((void**)TrimCurves)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of edges that bound a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceEdges\nidFace [in] face id\nCount [out] number of edges\nEdges [out] list of edge id's\n\nOutputs a list of indices of the edges that bound a face in the active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of edge id's that bound a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceEdges\nidFace [in] face id\nCount [out] number of edges\nEdges [out] list of edge id's\n\nOutputs a list of indices of the edges that bound a face in the active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about the edges that bound a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceEdges\nidFace [in] face id\nCount [out] number of edges\nEdges [out] list of edge id's\n\nOutputs a list of indices of the edges that bound a face in the active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of loops for a specific face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceLoops\nidFace [in] face id\nInner [in] 1 to include inner loops; 0 for just the outer loops\nCount [out] number of loops\nLoops [out] list of loop id's\n\nOutputs a list of indices of the loops (outer and inner) that belong to a face in the active file.\nOuter loops proceed counterclockwise relative to the natural normal of the parent surface. Inner loops are clockwise.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to include inner loops for a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceLoops\nidFace [in] face id\nInner [in] 1 to include inner loops; 0 for just the outer loops\nCount [out] number of loops\nLoops [out] list of loop id's\n\nOutputs a list of indices of the loops (outer and inner) that belong to a face in the active file.\nOuter loops proceed counterclockwise relative to the natural normal of the parent surface. Inner loops are clockwise.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of loops for a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceLoops\nidFace [in] face id\nInner [in] 1 to include inner loops; 0 for just the outer loops\nCount [out] number of loops\nLoops [out] list of loop id's\n\nOutputs a list of indices of the loops (outer and inner) that belong to a face in the active file.\nOuter loops proceed counterclockwise relative to the natural normal of the parent surface. Inner loops are clockwise.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list for loops?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceLoops\nidFace [in] face id\nInner [in] 1 to include inner loops; 0 for just the outer loops\nCount [out] number of loops\nLoops [out] list of loop id's\n\nOutputs a list of indices of the loops (outer and inner) that belong to a face in the active file.\nOuter loops proceed counterclockwise relative to the natural normal of the parent surface. Inner loops are clockwise.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get untrimmed NURBS surface geometry of a specified face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceSrf\nidFace [in] face id\nSrf [out] face's untrimmed NURBS surface geometry\n\nOutputs the untrimmed NURBS surface geometry of the specified face. The calling procedure is responsible for deallocating the memory assigned by this function to the \"Srf\" structure using cvxSurfaceFree().\nIt is assumed the specified face (idFace) resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any function to retrieve the NURBS surface geometry of a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceSrf\nidFace [in] face id\nSrf [out] face's untrimmed NURBS surface geometry\n\nOutputs the untrimmed NURBS surface geometry of the specified face. The calling procedure is responsible for deallocating the memory assigned by this function to the \"Srf\" structure using cvxSurfaceFree().\nIt is assumed the specified face (idFace) resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the memory assigned to the NURBS surface structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceSrf\nidFace [in] face id\nSrf [out] face's untrimmed NURBS surface geometry\n\nOutputs the untrimmed NURBS surface geometry of the specified face. The calling procedure is responsible for deallocating the memory assigned by this function to the \"Srf\" structure using cvxSurfaceFree().\nIt is assumed the specified face (idFace) resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free memory associated with a specified NURB surface structure?"
            },
            {
                "role": "assistant",
                "content": "cvxSurfaceFree\nSrf [in] NURB surface structure\n\nFrees memory associated with the specified surface structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to release memory associated with a NURB surface structure?"
            },
            {
                "role": "assistant",
                "content": "cvxSurfaceFree\nSrf [in] NURB surface structure\n\nFrees memory associated with the specified surface structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate memory for a specified surface structure?"
            },
            {
                "role": "assistant",
                "content": "cvxSurfaceFree\nSrf [in] NURB surface structure\n\nFrees memory associated with the specified surface structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get surface geometry for a specified face entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceSrfPrim\nidFace [in] face id\nSrfPrim [out] face's untrimmed NURBS surface geometry\n\nGets surface geometry for the specified face entity. It is assumed the specified face (idFace) resides in the active part.\nThe calling procedure is responsible for deallocating the memory assigned by this function to the \"SrfPrim\" structure using cvxSurfaceFree(&SrfPrim->srfData.srf) when SrfPrim->srfType = VX_SF_PRIM_NURB."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve untrimmed NURBS surface geometry for a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceSrfPrim\nidFace [in] face id\nSrfPrim [out] face's untrimmed NURBS surface geometry\n\nGets surface geometry for the specified face entity. It is assumed the specified face (idFace) resides in the active part.\nThe calling procedure is responsible for deallocating the memory assigned by this function to the \"SrfPrim\" structure using cvxSurfaceFree(&SrfPrim->srfData.srf) when SrfPrim->srfType = VX_SF_PRIM_NURB."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the procedure to deallocate memory assigned to the surface geometry structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceSrfPrim\nidFace [in] face id\nSrfPrim [out] face's untrimmed NURBS surface geometry\n\nGets surface geometry for the specified face entity. It is assumed the specified face (idFace) resides in the active part.\nThe calling procedure is responsible for deallocating the memory assigned by this function to the \"SrfPrim\" structure using cvxSurfaceFree(&SrfPrim->srfData.srf) when SrfPrim->srfType = VX_SF_PRIM_NURB."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free memory associated with a specified surface structure?"
            },
            {
                "role": "assistant",
                "content": "cvxSrfPrimFree\nSrfPrim [in] surface structure\n\nFrees memory associated with the specified svxSrfPrim structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to release memory associated with a surface structure?"
            },
            {
                "role": "assistant",
                "content": "cvxSrfPrimFree\nSrfPrim [in] surface structure\n\nFrees memory associated with the specified svxSrfPrim structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate memory for a specific surface structure?"
            },
            {
                "role": "assistant",
                "content": "cvxSrfPrimFree\nSrfPrim [in] surface structure\n\nFrees memory associated with the specified svxSrfPrim structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the parent shape of a specified face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceShape\nidFace [in] face id\nidShape [out] id face's parent shape\n\nGets the id of the specified face's parent shape (within the active file)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the parent shape of a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceShape\nidFace [in] face id\nidShape [out] id face's parent shape\n\nGets the id of the specified face's parent shape (within the active file)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the id of the parent shape of a specific face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceShape\nidFace [in] face id\nidShape [out] id face's parent shape\n\nGets the id of the specified face's parent shape (within the active file)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the geometry index of a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceGeom\nidFace [in] face id\nidGeom [out] geometry index of the face\n\nOutputs the face's geometry index."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about the geometry index of a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceGeom\nidFace [in] face id\nidGeom [out] geometry index of the face\n\nOutputs the face's geometry index."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the geometry index of a specific face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceGeom\nidFace [in] face id\nidGeom [out] geometry index of the face\n\nOutputs the face's geometry index."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a face is a fillet face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceFillet\nidFace [in] face id\nisFilletFace [out] fillet flag (1 is fillet face, else is 0)\n\nGet the flag indicating if the specified face is a fillet face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a face is a fillet face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceFillet\nidFace [in] face id\nisFilletFace [out] fillet flag (1 is fillet face, else is 0)\n\nGet the flag indicating if the specified face is a fillet face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the flag indicating if a face is a fillet face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceFillet\nidFace [in] face id\nisFilletFace [out] fillet flag (1 is fillet face, else is 0)\n\nGet the flag indicating if the specified face is a fillet face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the radius of a specified face?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceRadius\nidFace [in] face entity id\nRadius [out] radius\n\nGet the radius of specified face, only revolved surfaces (cylinder and sphere) are valid."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the radius of a revolved surface?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceRadius\nidFace [in] face entity id\nRadius [out] radius\n\nGet the radius of specified face, only revolved surfaces (cylinder and sphere) are valid."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the radius of a cylinder or sphere face?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceRadius\nidFace [in] face entity id\nRadius [out] radius\n\nGet the radius of specified face, only revolved surfaces (cylinder and sphere) are valid."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a face is a bending surface?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceInqBend\nidFace [in] index of face\nbendFlag [out] whether the face is a bending surface (1 to yes; 0 to no)\nbendRad [out] bend radius (NULL to ignore)\nneutralRad [out] neutral radius (NULL to ignore)\nangle [out] bend angle (NULL to ignore)\nthick [out] thickness (NULL to ignore)\nkFactor [out] K-factor (NULL to ignore)\nflatTol [out] flat tolerance (NULL to ignore)\n\nGet bend information of specified face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the bend radius of a face?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceInqBend\nidFace [in] index of face\nbendFlag [out] whether the face is a bending surface (1 to yes; 0 to no)\nbendRad [out] bend radius (NULL to ignore)\nneutralRad [out] neutral radius (NULL to ignore)\nangle [out] bend angle (NULL to ignore)\nthick [out] thickness (NULL to ignore)\nkFactor [out] K-factor (NULL to ignore)\nflatTol [out] flat tolerance (NULL to ignore)\n\nGet bend information of specified face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the thickness of a face?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceInqBend\nidFace [in] index of face\nbendFlag [out] whether the face is a bending surface (1 to yes; 0 to no)\nbendRad [out] bend radius (NULL to ignore)\nneutralRad [out] neutral radius (NULL to ignore)\nangle [out] bend angle (NULL to ignore)\nthick [out] thickness (NULL to ignore)\nkFactor [out] K-factor (NULL to ignore)\nflatTol [out] flat tolerance (NULL to ignore)\n\nGet bend information of specified face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine the K-factor of a face?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceInqBend\nidFace [in] index of face\nbendFlag [out] whether the face is a bending surface (1 to yes; 0 to no)\nbendRad [out] bend radius (NULL to ignore)\nneutralRad [out] neutral radius (NULL to ignore)\nangle [out] bend angle (NULL to ignore)\nthick [out] thickness (NULL to ignore)\nkFactor [out] K-factor (NULL to ignore)\nflatTol [out] flat tolerance (NULL to ignore)\n\nGet bend information of specified face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I retrieve the bend angle of a face?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceInqBend\nidFace [in] index of face\nbendFlag [out] whether the face is a bending surface (1 to yes; 0 to no)\nbendRad [out] bend radius (NULL to ignore)\nneutralRad [out] neutral radius (NULL to ignore)\nangle [out] bend angle (NULL to ignore)\nthick [out] thickness (NULL to ignore)\nkFactor [out] K-factor (NULL to ignore)\nflatTol [out] flat tolerance (NULL to ignore)\n\nGet bend information of specified face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a face is concave or convex?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceIsConcave\nidFace [in] index of face\n\nCheck if the specified face is a concave or convex face. the function is only applicable to a small subset of surfaces are universally convex or concave, such as surfaces approximating cylinders and cones and spheres."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to determine if a face is concave or convex?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceIsConcave\nidFace [in] index of face\n\nCheck if the specified face is a concave or convex face. the function is only applicable to a small subset of surfaces are universally convex or concave, such as surfaces approximating cylinders and cones and spheres."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to identify the concave or convex nature of a face?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceIsConcave\nidFace [in] index of face\n\nCheck if the specified face is a concave or convex face. the function is only applicable to a small subset of surfaces are universally convex or concave, such as surfaces approximating cylinders and cones and spheres."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a face is planar?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceIsPlanar\nidFace [in] index of face\n\nCheck if the specified face is real planar face.\nnote:\nThe face of the VX_SRF_GEN type may also be a planar face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to determine if a face is planar?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceIsPlanar\nidFace [in] index of face\n\nCheck if the specified face is real planar face.\nnote:\nThe face of the VX_SRF_GEN type may also be a planar face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I verify if a face is planar?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceIsPlanar\nidFace [in] index of face\n\nCheck if the specified face is real planar face.\nnote:\nThe face of the VX_SRF_GEN type may also be a planar face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the extreme point of a face in a specified direction?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceInqExtreme\nidFace [in] id of face in active part\nDir [in] direction\nCount [out] number of face or edges (NULL to ignore)\nidEnts [out] list of face or edges (NULL to ignore)\nPoint [out] extreme point (NULL to ignore)\n\nGets the extreme point of face in the specified direction, if the farthest end of the specified direction are face or edges, the function also outputs the list of face or edges, in this case, the extreme point output is only any point on a face or edge.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the list of faces or edges in a specified direction?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceInqExtreme\nidFace [in] id of face in active part\nDir [in] direction\nCount [out] number of face or edges (NULL to ignore)\nidEnts [out] list of face or edges (NULL to ignore)\nPoint [out] extreme point (NULL to ignore)\n\nGets the extreme point of face in the specified direction, if the farthest end of the specified direction are face or edges, the function also outputs the list of face or edges, in this case, the extreme point output is only any point on a face or edge.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list after getting the extreme point?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceInqExtreme\nidFace [in] id of face in active part\nDir [in] direction\nCount [out] number of face or edges (NULL to ignore)\nidEnts [out] list of face or edges (NULL to ignore)\nPoint [out] extreme point (NULL to ignore)\n\nGets the extreme point of face in the specified direction, if the farthest end of the specified direction are face or edges, the function also outputs the list of face or edges, in this case, the extreme point output is only any point on a face or edge.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to evaluate the NURBS representation of a face entity?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceEval\nidFace [in] face entity id\nU [in] U parameter value on face\nV [in] V parameter value on face\nPoint [out] point on face (input NULL to ignore)\nNormal [out] normal at point on face (input NULL to ignore)\n\nEvaluates the NURBS representation of the face entity specified by \"idFace\". Outputs the 3D point coordinates (Point) and normal direction (Normal) at the specified U,V location on the surface. Use cvxFaceParam() to get the face's parameter limits.\nnote:\nThe direction of \"Normal\" is set to reflect the outward normal of the face, where \"outward\" means the direction that points towards the outside of the shape that the face is associated with. This may be opposite the natural normal of the NURBS surface associated with the face. \n\n If you want the natural normal of the NURBS surface associated with the face, call cvxPartInqFaceSrf() to get the \"Srf\", and if Srf->OutNormal= 0, call cvxVecReverse() to reverse the \"Normal\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the 3D point coordinates on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceEval\nidFace [in] face entity id\nU [in] U parameter value on face\nV [in] V parameter value on face\nPoint [out] point on face (input NULL to ignore)\nNormal [out] normal at point on face (input NULL to ignore)\n\nEvaluates the NURBS representation of the face entity specified by \"idFace\". Outputs the 3D point coordinates (Point) and normal direction (Normal) at the specified U,V location on the surface. Use cvxFaceParam() to get the face's parameter limits.\nnote:\nThe direction of \"Normal\" is set to reflect the outward normal of the face, where \"outward\" means the direction that points towards the outside of the shape that the face is associated with. This may be opposite the natural normal of the NURBS surface associated with the face. \n\n If you want the natural normal of the NURBS surface associated with the face, call cvxPartInqFaceSrf() to get the \"Srf\", and if Srf->OutNormal= 0, call cvxVecReverse() to reverse the \"Normal\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the normal direction at a specified U,V location on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceEval\nidFace [in] face entity id\nU [in] U parameter value on face\nV [in] V parameter value on face\nPoint [out] point on face (input NULL to ignore)\nNormal [out] normal at point on face (input NULL to ignore)\n\nEvaluates the NURBS representation of the face entity specified by \"idFace\". Outputs the 3D point coordinates (Point) and normal direction (Normal) at the specified U,V location on the surface. Use cvxFaceParam() to get the face's parameter limits.\nnote:\nThe direction of \"Normal\" is set to reflect the outward normal of the face, where \"outward\" means the direction that points towards the outside of the shape that the face is associated with. This may be opposite the natural normal of the NURBS surface associated with the face. \n\n If you want the natural normal of the NURBS surface associated with the face, call cvxPartInqFaceSrf() to get the \"Srf\", and if Srf->OutNormal= 0, call cvxVecReverse() to reverse the \"Normal\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to evaluate the NURBS representation of a face entity?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceEval2\nidFace [in] face entity id\nU [in] U parameter value on face\nV [in] V parameter value on face\nPoint [out] point on face (input NULL to ignore)\nNormal [out] normal at point on face (input NULL to ignore)\nUtan [out] U tangent direction (input NULL to ignore)\nVtan [out] V tangent direction (input NULL to ignore)\n\nEvaluates the NURBS representation of the face entity specified by \"idFace\". Outputs the 3D point coordinates (Point), normal direction (Normal) and UV tangent directions at the specified U,V location on the surface. Use cvxFaceParam() to get the face's parameter limits.\nnote:\nThe direction of \"Normal\" is set to reflect the outward normal of the face, where \"outward\" means the direction that points towards the outside of the shape that the face is associated with. This may be opposite the natural normal of the NURBS surface associated with the face. \n\n If you want the natural normal of the NURBS surface associated with the face, call cvxPartInqFaceSrf() to get the \"Srf\", and if Srf->OutNormal= 0, call cvxVecReverse() to reverse the \"Normal\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the 3D point coordinates on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceEval2\nidFace [in] face entity id\nU [in] U parameter value on face\nV [in] V parameter value on face\nPoint [out] point on face (input NULL to ignore)\nNormal [out] normal at point on face (input NULL to ignore)\nUtan [out] U tangent direction (input NULL to ignore)\nVtan [out] V tangent direction (input NULL to ignore)\n\nEvaluates the NURBS representation of the face entity specified by \"idFace\". Outputs the 3D point coordinates (Point), normal direction (Normal) and UV tangent directions at the specified U,V location on the surface. Use cvxFaceParam() to get the face's parameter limits.\nnote:\nThe direction of \"Normal\" is set to reflect the outward normal of the face, where \"outward\" means the direction that points towards the outside of the shape that the face is associated with. This may be opposite the natural normal of the NURBS surface associated with the face. \n\n If you want the natural normal of the NURBS surface associated with the face, call cvxPartInqFaceSrf() to get the \"Srf\", and if Srf->OutNormal= 0, call cvxVecReverse() to reverse the \"Normal\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the normal direction at a specified U,V location on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceEval2\nidFace [in] face entity id\nU [in] U parameter value on face\nV [in] V parameter value on face\nPoint [out] point on face (input NULL to ignore)\nNormal [out] normal at point on face (input NULL to ignore)\nUtan [out] U tangent direction (input NULL to ignore)\nVtan [out] V tangent direction (input NULL to ignore)\n\nEvaluates the NURBS representation of the face entity specified by \"idFace\". Outputs the 3D point coordinates (Point), normal direction (Normal) and UV tangent directions at the specified U,V location on the surface. Use cvxFaceParam() to get the face's parameter limits.\nnote:\nThe direction of \"Normal\" is set to reflect the outward normal of the face, where \"outward\" means the direction that points towards the outside of the shape that the face is associated with. This may be opposite the natural normal of the NURBS surface associated with the face. \n\n If you want the natural normal of the NURBS surface associated with the face, call cvxPartInqFaceSrf() to get the \"Srf\", and if Srf->OutNormal= 0, call cvxVecReverse() to reverse the \"Normal\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the U and V tangent directions on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceEval2\nidFace [in] face entity id\nU [in] U parameter value on face\nV [in] V parameter value on face\nPoint [out] point on face (input NULL to ignore)\nNormal [out] normal at point on face (input NULL to ignore)\nUtan [out] U tangent direction (input NULL to ignore)\nVtan [out] V tangent direction (input NULL to ignore)\n\nEvaluates the NURBS representation of the face entity specified by \"idFace\". Outputs the 3D point coordinates (Point), normal direction (Normal) and UV tangent directions at the specified U,V location on the surface. Use cvxFaceParam() to get the face's parameter limits.\nnote:\nThe direction of \"Normal\" is set to reflect the outward normal of the face, where \"outward\" means the direction that points towards the outside of the shape that the face is associated with. This may be opposite the natural normal of the NURBS surface associated with the face. \n\n If you want the natural normal of the NURBS surface associated with the face, call cvxPartInqFaceSrf() to get the \"Srf\", and if Srf->OutNormal= 0, call cvxVecReverse() to reverse the \"Normal\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the minimum and maximum U values of a face entity?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceParam\nidFace [in] face entity id\nU [out] min/max U values\nV [out] min/max V values\n\nOutputs the minimum and maximum parameter values of the NURBS representation of the specified face entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the minimum and maximum V values of a face entity?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceParam\nidFace [in] face entity id\nU [out] min/max U values\nV [out] min/max V values\n\nOutputs the minimum and maximum parameter values of the NURBS representation of the specified face entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the NURBS representation of a face entity?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceParam\nidFace [in] face entity id\nU [out] min/max U values\nV [out] min/max V values\n\nOutputs the minimum and maximum parameter values of the NURBS representation of the specified face entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine the location of a point on a face relative to the face's trim boundaries?"
            },
            {
                "role": "assistant",
                "content": "cvxFacePntLoc\nidFace [in] face entity id\nU [in] U parameter value on face\nV [in] V parameter value on face\nLoc [out] point location relative to face boundaries\n\nDetermines the location of the specified point on the specified face relative to the face's trim boundaries."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the point location on a face by U and V parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxFacePntLoc\nidFace [in] face entity id\nU [in] U parameter value on face\nV [in] V parameter value on face\nLoc [out] point location relative to face boundaries\n\nDetermines the location of the specified point on the specified face relative to the face's trim boundaries."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the location of a point on a face using its entity id?"
            },
            {
                "role": "assistant",
                "content": "cvxFacePntLoc\nidFace [in] face entity id\nU [in] U parameter value on face\nV [in] V parameter value on face\nLoc [out] point location relative to face boundaries\n\nDetermines the location of the specified point on the specified face relative to the face's trim boundaries."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to project a point onto a face?"
            },
            {
                "role": "assistant",
                "content": "cvxFacePntProj\nidFace [in] face entity id\nPoint [in] XYZ point on/near face\nU [out] U coordinate of point-on-face\nV [out] V coordinate of point-on-face\n\nOutputs the UV coordinates of the projection of the input XYX point onto the NURBS representation of the specified face. It is assumed that \"Point\" lies on or very close to the face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the UV coordinates of a point on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxFacePntProj\nidFace [in] face entity id\nPoint [in] XYZ point on/near face\nU [out] U coordinate of point-on-face\nV [out] V coordinate of point-on-face\n\nOutputs the UV coordinates of the projection of the input XYX point onto the NURBS representation of the specified face. It is assumed that \"Point\" lies on or very close to the face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the U and V coordinates of a point on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxFacePntProj\nidFace [in] face entity id\nPoint [in] XYZ point on/near face\nU [out] U coordinate of point-on-face\nV [out] V coordinate of point-on-face\n\nOutputs the UV coordinates of the projection of the input XYX point onto the NURBS representation of the specified face. It is assumed that \"Point\" lies on or very close to the face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get radial integrity ratio of a specified surface?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceRadialIntegrity\nidFace [in] face entity id\nURatio [out] radial integrity ratio value in U\nVRatio [out] radial integrity ratio value in V\n\nGet radial integrity ratio value of specified surface. the ratio value is set to 0.0 when it is invalid, and then function is only applicable to cylinder, cone and torus."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to obtain radial integrity ratio value in U and V?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceRadialIntegrity\nidFace [in] face entity id\nURatio [out] radial integrity ratio value in U\nVRatio [out] radial integrity ratio value in V\n\nGet radial integrity ratio value of specified surface. the ratio value is set to 0.0 when it is invalid, and then function is only applicable to cylinder, cone and torus."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if the radial integrity ratio value is valid for a specific surface?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceRadialIntegrity\nidFace [in] face entity id\nURatio [out] radial integrity ratio value in U\nVRatio [out] radial integrity ratio value in V\n\nGet radial integrity ratio value of specified surface. the ratio value is set to 0.0 when it is invalid, and then function is only applicable to cylinder, cone and torus."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to evaluate the NURBS representation of a face entity?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceEvalGeom\nidFace [in] face entity id\nU [in] U parameter value on face\nV [in] V parameter value on face\nLevel [in] level of evaluation(0 ~ 4). See description below\nEvalSrf [out] Result\n\nEvaluates the NURBS representation of the face entity specified by \"idFace\". Use cvxFaceParam() to get the face's parameter limits.\n\"Level\" specifies the level of evaluation. The higher the level, more data gets returned (at the expense of greater computation). \n                      level\n     |  0  |     1     |     2      |      3      |       4\n     +-----+-----------+------------+-------------+-------------\n     | pnt |  normal   | partial_uu | partial_uuu   partial_uuuu\n             partial_u   partial_uv   partial_vuu   partial_vuuu\n             partial_v   partial_vv   partial_uvv   partial_uuvv\n                                      partial_vvv   partial_uvvv\n                                                    partial_vvvv\n\nnote:\nThe direction of normal is set to reflect the outward normal of the face, where \"outward\" means the direction that points towards the outside of the shape that the face is associated with. This may be opposite the natural normal of the NURBS surface associated with the face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to get the result of NURBS evaluation on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceEvalGeom\nidFace [in] face entity id\nU [in] U parameter value on face\nV [in] V parameter value on face\nLevel [in] level of evaluation(0 ~ 4). See description below\nEvalSrf [out] Result\n\nEvaluates the NURBS representation of the face entity specified by \"idFace\". Use cvxFaceParam() to get the face's parameter limits.\n\"Level\" specifies the level of evaluation. The higher the level, more data gets returned (at the expense of greater computation). \n                      level\n     |  0  |     1     |     2      |      3      |       4\n     +-----+-----------+------------+-------------+-------------\n     | pnt |  normal   | partial_uu | partial_uuu   partial_uuuu\n             partial_u   partial_uv   partial_vuu   partial_vuuu\n             partial_v   partial_vv   partial_uvv   partial_uuvv\n                                      partial_vvv   partial_uvvv\n                                                    partial_vvvv\n\nnote:\nThe direction of normal is set to reflect the outward normal of the face, where \"outward\" means the direction that points towards the outside of the shape that the face is associated with. This may be opposite the natural normal of the NURBS surface associated with the face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the point and normal on a face at a specified parameter value?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceEvalGeom\nidFace [in] face entity id\nU [in] U parameter value on face\nV [in] V parameter value on face\nLevel [in] level of evaluation(0 ~ 4). See description below\nEvalSrf [out] Result\n\nEvaluates the NURBS representation of the face entity specified by \"idFace\". Use cvxFaceParam() to get the face's parameter limits.\n\"Level\" specifies the level of evaluation. The higher the level, more data gets returned (at the expense of greater computation). \n                      level\n     |  0  |     1     |     2      |      3      |       4\n     +-----+-----------+------------+-------------+-------------\n     | pnt |  normal   | partial_uu | partial_uuu   partial_uuuu\n             partial_u   partial_uv   partial_vuu   partial_vuuu\n             partial_v   partial_vv   partial_uvv   partial_uuvv\n                                      partial_vvv   partial_uvvv\n                                                    partial_vvvv\n\nnote:\nThe direction of normal is set to reflect the outward normal of the face, where \"outward\" means the direction that points towards the outside of the shape that the face is associated with. This may be opposite the natural normal of the NURBS surface associated with the face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get partial derivatives of a face at a specific level of evaluation?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceEvalGeom\nidFace [in] face entity id\nU [in] U parameter value on face\nV [in] V parameter value on face\nLevel [in] level of evaluation(0 ~ 4). See description below\nEvalSrf [out] Result\n\nEvaluates the NURBS representation of the face entity specified by \"idFace\". Use cvxFaceParam() to get the face's parameter limits.\n\"Level\" specifies the level of evaluation. The higher the level, more data gets returned (at the expense of greater computation). \n                      level\n     |  0  |     1     |     2      |      3      |       4\n     +-----+-----------+------------+-------------+-------------\n     | pnt |  normal   | partial_uu | partial_uuu   partial_uuuu\n             partial_u   partial_uv   partial_vuu   partial_vuuu\n             partial_v   partial_vv   partial_uvv   partial_uuvv\n                                      partial_vvv   partial_uvvv\n                                                    partial_vvvv\n\nnote:\nThe direction of normal is set to reflect the outward normal of the face, where \"outward\" means the direction that points towards the outside of the shape that the face is associated with. This may be opposite the natural normal of the NURBS surface associated with the face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of edges in a loop?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqLoopEdges\nidLoop [in] loop id\nCount [out] number of edges\nEdges [out] list of edge id's\n\nOutputs a list of indices of the edges that belong to a loop on a face in the active file. Edges are output in the order they occur in the loop.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nOuter loops proceed counterclockwise relative to the natural normal of the parent surface. Inner loops are clockwise relative to the natural surface normal."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of edge id's in a loop?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqLoopEdges\nidLoop [in] loop id\nCount [out] number of edges\nEdges [out] list of edge id's\n\nOutputs a list of indices of the edges that belong to a loop on a face in the active file. Edges are output in the order they occur in the loop.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nOuter loops proceed counterclockwise relative to the natural normal of the parent surface. Inner loops are clockwise relative to the natural surface normal."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list of edges?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqLoopEdges\nidLoop [in] loop id\nCount [out] number of edges\nEdges [out] list of edge id's\n\nOutputs a list of indices of the edges that belong to a loop on a face in the active file. Edges are output in the order they occur in the loop.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nOuter loops proceed counterclockwise relative to the natural normal of the parent surface. Inner loops are clockwise relative to the natural surface normal."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the parent face of a specified loop?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqLoopFace\nidLoop [in] loop id\nidFace [out] id of loop's parent face\n\nOutputs the id of the parent face of the specified loop within the active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the id of the parent face of a loop?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqLoopFace\nidLoop [in] loop id\nidFace [out] id of loop's parent face\n\nOutputs the id of the parent face of the specified loop within the active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire about the parent face of a loop within the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqLoopFace\nidLoop [in] loop id\nidFace [out] id of loop's parent face\n\nOutputs the id of the parent face of the specified loop within the active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of PreEdges in a loop?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqLoopPreEdges\nidLoop [in] loop id\nCount [out] number of PreEdges\nPreEdges [out] list of PreEdge id's\n\nOutputs a list of indices of the PreEdges that belong to a loop on a face in the active file. PreEdges are output in the order they occur in the loop.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nOuter loops proceed counterclockwise relative to the natural normal of the parent surface. Inner loops are clockwise relative to the natural surface normal."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of PreEdges in a loop?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqLoopPreEdges\nidLoop [in] loop id\nCount [out] number of PreEdges\nPreEdges [out] list of PreEdge id's\n\nOutputs a list of indices of the PreEdges that belong to a loop on a face in the active file. PreEdges are output in the order they occur in the loop.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nOuter loops proceed counterclockwise relative to the natural normal of the parent surface. Inner loops are clockwise relative to the natural surface normal."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the PreEdges belonging to a loop?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqLoopPreEdges\nidLoop [in] loop id\nCount [out] number of PreEdges\nPreEdges [out] list of PreEdge id's\n\nOutputs a list of indices of the PreEdges that belong to a loop on a face in the active file. PreEdges are output in the order they occur in the loop.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nOuter loops proceed counterclockwise relative to the natural normal of the parent surface. Inner loops are clockwise relative to the natural surface normal."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if a loop is an inner loop?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqLoopInner\nidLoop [in] loop id\nisInner [out] inner loop flag (1=inner, 0=outer)\n\nDetermine whether a given loop is an outer or inner loop."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if a loop is an outer loop?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqLoopInner\nidLoop [in] loop id\nisInner [out] inner loop flag (1=inner, 0=outer)\n\nDetermine whether a given loop is an outer or inner loop."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find out if a loop is an inner or outer loop?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqLoopInner\nidLoop [in] loop id\nisInner [out] inner loop flag (1=inner, 0=outer)\n\nDetermine whether a given loop is an outer or inner loop."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get information about a specific PreEdge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPreEdgeInfo\nidPreEdge [in] id of PreEdge within a loop on a face in the active part\nPreEdge [out] information about the PreEdge\n\nOutputs information about the specified PreEdge (idPreEdge) to the structure referenced by the input pointer (PreEdge)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve information about a PreEdge using its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPreEdgeInfo\nidPreEdge [in] id of PreEdge within a loop on a face in the active part\nPreEdge [out] information about the PreEdge\n\nOutputs information about the specified PreEdge (idPreEdge) to the structure referenced by the input pointer (PreEdge)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to obtain details of a PreEdge within a loop on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPreEdgeInfo\nidPreEdge [in] id of PreEdge within a loop on a face in the active part\nPreEdge [out] information about the PreEdge\n\nOutputs information about the specified PreEdge (idPreEdge) to the structure referenced by the input pointer (PreEdge)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the parent edge of a PreEdge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPreEdgeStartPnt\nidPreEdge [in] id of PreEdge within a loop on a face\nidEdge [out] id of PreEdge's parent edge\nStartPnt [out] coordinates of PreEdge start point\n\nGets the coordinates of the specified PreEdge's start point relative to its parent loop direction. Also, outputs the id of the PreEdge's parent edge."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the coordinates of a PreEdge's start point?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPreEdgeStartPnt\nidPreEdge [in] id of PreEdge within a loop on a face\nidEdge [out] id of PreEdge's parent edge\nStartPnt [out] coordinates of PreEdge start point\n\nGets the coordinates of the specified PreEdge's start point relative to its parent loop direction. Also, outputs the id of the PreEdge's parent edge."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the start point coordinates of a PreEdge relative to its parent loop direction?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPreEdgeStartPnt\nidPreEdge [in] id of PreEdge within a loop on a face\nidEdge [out] id of PreEdge's parent edge\nStartPnt [out] coordinates of PreEdge start point\n\nGets the coordinates of the specified PreEdge's start point relative to its parent loop direction. Also, outputs the id of the PreEdge's parent edge."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve attribute data from a specified shell?"
            },
            {
                "role": "assistant",
                "content": "cvxShellAtGet\nidShape [in] the shell index\nAt [out] shell attribute data\n\nRetrieves attribute data from the specified shell in the active file. If index is small than 1 or an inactive object, return 1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get shell attribute data?"
            },
            {
                "role": "assistant",
                "content": "cvxShellAtGet\nidShape [in] the shell index\nAt [out] shell attribute data\n\nRetrieves attribute data from the specified shell in the active file. If index is small than 1 or an inactive object, return 1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the shell attribute data by index?"
            },
            {
                "role": "assistant",
                "content": "cvxShellAtGet\nidShape [in] the shell index\nAt [out] shell attribute data\n\nRetrieves attribute data from the specified shell in the active file. If index is small than 1 or an inactive object, return 1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the attribute of a specified item for a specified shell?"
            },
            {
                "role": "assistant",
                "content": "cvxShellAtItemGet\nidShape [in] the shell index\nitemId [in] item id\nAt [inout] attribute item data\n\nOutputs the attribute of specified item for the specified shell.\nThe itemId includes part items of evxAtItemId (VX_AT_USER~VX_AT_HEIGHT).\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must be assigned to At->label before calling this function. For all other itemId values, At->label can be an empty string (At->label[0]=0) when this function is called."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the attribute item data for a specific shell and item?"
            },
            {
                "role": "assistant",
                "content": "cvxShellAtItemGet\nidShape [in] the shell index\nitemId [in] item id\nAt [inout] attribute item data\n\nOutputs the attribute of specified item for the specified shell.\nThe itemId includes part items of evxAtItemId (VX_AT_USER~VX_AT_HEIGHT).\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must be assigned to At->label before calling this function. For all other itemId values, At->label can be an empty string (At->label[0]=0) when this function is called."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to obtain the attribute of a particular item within a specified shell?"
            },
            {
                "role": "assistant",
                "content": "cvxShellAtItemGet\nidShape [in] the shell index\nitemId [in] item id\nAt [inout] attribute item data\n\nOutputs the attribute of specified item for the specified shell.\nThe itemId includes part items of evxAtItemId (VX_AT_USER~VX_AT_HEIGHT).\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must be assigned to At->label before calling this function. For all other itemId values, At->label can be an empty string (At->label[0]=0) when this function is called."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the attribute of a specified item for a shell?"
            },
            {
                "role": "assistant",
                "content": "cvxShellAtItemSet\nidShape [in] the shell index\nitemId [in] item id\nAt [in] attribute item data to set\n\nSets the attribute of specified item for the specified shell.\nThe itemId includes part items of evxAtItemId (VX_AT_USER~VX_AT_HEIGHT).\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must be assigned to At->label before calling this function. For all other itemId values, At->label can be an empty string (At->label[0]=0) when this function is called."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to set the attribute item data for a specified shell?"
            },
            {
                "role": "assistant",
                "content": "cvxShellAtItemSet\nidShape [in] the shell index\nitemId [in] item id\nAt [in] attribute item data to set\n\nSets the attribute of specified item for the specified shell.\nThe itemId includes part items of evxAtItemId (VX_AT_USER~VX_AT_HEIGHT).\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must be assigned to At->label before calling this function. For all other itemId values, At->label can be an empty string (At->label[0]=0) when this function is called."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign the name of the user-defined attribute before calling the function?"
            },
            {
                "role": "assistant",
                "content": "cvxShellAtItemSet\nidShape [in] the shell index\nitemId [in] item id\nAt [in] attribute item data to set\n\nSets the attribute of specified item for the specified shell.\nThe itemId includes part items of evxAtItemId (VX_AT_USER~VX_AT_HEIGHT).\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must be assigned to At->label before calling this function. For all other itemId values, At->label can be an empty string (At->label[0]=0) when this function is called."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a shape is open?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeOpen\nidShape [in] shape id (in active file)\nisOpen [out] open flag for shape (1=open, 0=closed)\n\nGet the flag indicating if shape is open."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a shape is open or closed?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeOpen\nidShape [in] shape id (in active file)\nisOpen [out] open flag for shape (1=open, 0=closed)\n\nGet the flag indicating if shape is open."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I get the open flag for a specific shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeOpen\nidShape [in] shape id (in active file)\nisOpen [out] open flag for shape (1=open, 0=closed)\n\nGet the flag indicating if shape is open."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the bounding box of a specified shape in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeBox\nidShape [in] shape or face id\nMat [in] optional local frame (or NULL)\nBox [out] shape bounding box\n\nGets the bounding box of the specified shape in the active file. If \"*Mat = NULL\" && the target object class isn't VX_ROOT_PART(evxRootType), the bounding box coordinates are given relative to the global frame of the parent part.\nIf the target object class is VX_ROOT_PART && \"*Mat = NULL\", initializes \"Mat\" to the identity matrix. The \"idShape\" must belong to the active part, a bounding box relative to the specified local coordinate frame is output.\nsee:\ncvxPartInqEntBox,cvxPartInqFaceBox,cvxEntBndBox. The three interfaces have similar functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize the local frame to the identity matrix if the target object class is VX_ROOT_PART?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeBox\nidShape [in] shape or face id\nMat [in] optional local frame (or NULL)\nBox [out] shape bounding box\n\nGets the bounding box of the specified shape in the active file. If \"*Mat = NULL\" && the target object class isn't VX_ROOT_PART(evxRootType), the bounding box coordinates are given relative to the global frame of the parent part.\nIf the target object class is VX_ROOT_PART && \"*Mat = NULL\", initializes \"Mat\" to the identity matrix. The \"idShape\" must belong to the active part, a bounding box relative to the specified local coordinate frame is output.\nsee:\ncvxPartInqEntBox,cvxPartInqFaceBox,cvxEntBndBox. The three interfaces have similar functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get the bounding box coordinates relative to the global frame of the parent part if the local frame is NULL?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeBox\nidShape [in] shape or face id\nMat [in] optional local frame (or NULL)\nBox [out] shape bounding box\n\nGets the bounding box of the specified shape in the active file. If \"*Mat = NULL\" && the target object class isn't VX_ROOT_PART(evxRootType), the bounding box coordinates are given relative to the global frame of the parent part.\nIf the target object class is VX_ROOT_PART && \"*Mat = NULL\", initializes \"Mat\" to the identity matrix. The \"idShape\" must belong to the active part, a bounding box relative to the specified local coordinate frame is output.\nsee:\ncvxPartInqEntBox,cvxPartInqFaceBox,cvxEntBndBox. The three interfaces have similar functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate mass properties for a specified shape in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeMass\nidShape [in] id of shape in active part\nDensity [in] density (kg/mm^3)\nProp [out] mass properties for specified shape\n\nCalculates mass properties for the specified shape in the active part. If Density = 0, the shape's default density is used."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to calculate mass properties for a shape with specified density?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeMass\nidShape [in] id of shape in active part\nDensity [in] density (kg/mm^3)\nProp [out] mass properties for specified shape\n\nCalculates mass properties for the specified shape in the active part. If Density = 0, the shape's default density is used."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get mass properties for a shape in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeMass\nidShape [in] id of shape in active part\nDensity [in] density (kg/mm^3)\nProp [out] mass properties for specified shape\n\nCalculates mass properties for the specified shape in the active part. If Density = 0, the shape's default density is used."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the structural attributes of a specified shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShapeStructGet\nidShape [in] entity id\nat [out] structural attributes\n\nOutputs the structural attributes of specified shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the structural attributes of a shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShapeStructGet\nidShape [in] entity id\nat [out] structural attributes\n\nOutputs the structural attributes of specified shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the structural attributes of a specific shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShapeStructGet\nidShape [in] entity id\nat [out] structural attributes\n\nOutputs the structural attributes of specified shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of shapes in a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapes\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nCount [out] number of shapes\nShapes [out] list of shape id's\n\nOutputs a list of indices of the shapes that belong to the specified part. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of shape id's for a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapes\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nCount [out] number of shapes\nShapes [out] list of shape id's\n\nOutputs a list of indices of the shapes that belong to the specified part. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about shapes in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapes\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nCount [out] number of shapes\nShapes [out] list of shape id's\n\nOutputs a list of indices of the shapes that belong to the specified part. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the parent component of a specified shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeComp\nidShape [in] shape id (in active file)\nidComp [out] shape's parent component (0 if undefined)\n\nOutputs the id of the component from which the specified shape was merged. Outputs \"idComp = 0\" if the shape was not merged from a component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a shape was merged from a component?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeComp\nidShape [in] shape id (in active file)\nidComp [out] shape's parent component (0 if undefined)\n\nOutputs the id of the component from which the specified shape was merged. Outputs \"idComp = 0\" if the shape was not merged from a component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the component from which a shape was merged?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeComp\nidShape [in] shape id (in active file)\nidComp [out] shape's parent component (0 if undefined)\n\nOutputs the id of the component from which the specified shape was merged. Outputs \"idComp = 0\" if the shape was not merged from a component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of edges for a specified shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeEdges\nidShape [in] shape id\nCount [out] number of edges\nEdges [out] list of edge id's\n\nOutputs a list of indices of the edges that belong to the specified shape in the active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of edge id's for a specified shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeEdges\nidShape [in] shape id\nCount [out] number of edges\nEdges [out] list of edge id's\n\nOutputs a list of indices of the edges that belong to the specified shape in the active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about the edges of a shape in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeEdges\nidShape [in] shape id\nCount [out] number of edges\nEdges [out] list of edge id's\n\nOutputs a list of indices of the edges that belong to the specified shape in the active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of faces for a specified shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeFaces\nidShape [in] shape id\nCount [out] number of faces\nFaces [out] list of face id's\n\nOutputs a list of indices of the faces that belong to the specified shape in the active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of face id's for a specified shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeFaces\nidShape [in] shape id\nCount [out] number of faces\nFaces [out] list of face id's\n\nOutputs a list of indices of the faces that belong to the specified shape in the active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about the faces of a shape in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeFaces\nidShape [in] shape id\nCount [out] number of faces\nFaces [out] list of face id's\n\nOutputs a list of indices of the faces that belong to the specified shape in the active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of features associated with a specified shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeFtrs\nidShape [in] shape id\nOption [in] 0-get all dependencies; 1-get just shape generating features\nCount [out] number of features\nFeatures [out] list of feature id's\n\nOutputs a list of indices of the features associated with the specified shape in the active part. By default (Option = 0), this includes features that generate the shape, features on which the generative features are dependent for their definition and features that modify attributes of the shape. If \"Option=1\", only features that generate shape geometry are output, insofar as that classification can be made.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get only the features that generate shape geometry?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeFtrs\nidShape [in] shape id\nOption [in] 0-get all dependencies; 1-get just shape generating features\nCount [out] number of features\nFeatures [out] list of feature id's\n\nOutputs a list of indices of the features associated with the specified shape in the active part. By default (Option = 0), this includes features that generate the shape, features on which the generative features are dependent for their definition and features that modify attributes of the shape. If \"Option=1\", only features that generate shape geometry are output, insofar as that classification can be made.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to count the number of features associated with a shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeFtrs\nidShape [in] shape id\nOption [in] 0-get all dependencies; 1-get just shape generating features\nCount [out] number of features\nFeatures [out] list of feature id's\n\nOutputs a list of indices of the features associated with the specified shape in the active part. By default (Option = 0), this includes features that generate the shape, features on which the generative features are dependent for their definition and features that modify attributes of the shape. If \"Option=1\", only features that generate shape geometry are output, insofar as that classification can be made.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get the list of features on which the generative features are dependent for their definition?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeFtrs\nidShape [in] shape id\nOption [in] 0-get all dependencies; 1-get just shape generating features\nCount [out] number of features\nFeatures [out] list of feature id's\n\nOutputs a list of indices of the features associated with the specified shape in the active part. By default (Option = 0), this includes features that generate the shape, features on which the generative features are dependent for their definition and features that modify attributes of the shape. If \"Option=1\", only features that generate shape geometry are output, insofar as that classification can be made.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the extreme point of a shape in a specified direction?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeExtreme\nidShape [in] id of shape in active part\nDir [in] direction\nCount [out] number of faces or edges (NULL to ignore)\nidEnts [out] list of faces or edges (NULL to ignore)\nPoint [out] extreme point (NULL to ignore)\n\nGets the extreme point of shape in the specified direction, if the farthest end of the specified direction are faces or edges, the function also outputs the list of faces or edges, in this case, the extreme point output is only any point on a face or edge.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the list of faces or edges in a specified direction?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeExtreme\nidShape [in] id of shape in active part\nDir [in] direction\nCount [out] number of faces or edges (NULL to ignore)\nidEnts [out] list of faces or edges (NULL to ignore)\nPoint [out] extreme point (NULL to ignore)\n\nGets the extreme point of shape in the specified direction, if the farthest end of the specified direction are faces or edges, the function also outputs the list of faces or edges, in this case, the extreme point output is only any point on a face or edge.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list obtained from getting extreme points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeExtreme\nidShape [in] id of shape in active part\nDir [in] direction\nCount [out] number of faces or edges (NULL to ignore)\nidEnts [out] list of faces or edges (NULL to ignore)\nPoint [out] extreme point (NULL to ignore)\n\nGets the extreme point of shape in the specified direction, if the farthest end of the specified direction are faces or edges, the function also outputs the list of faces or edges, in this case, the extreme point output is only any point on a face or edge.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the transformation matrix of a specified shape?"
            },
            {
                "role": "assistant",
                "content": "cvxInstShpGetMatrix\nidShape [in] shape id\nMatrix [out] transformation matrix\n\nOutputs the transformation matrix associated with the specified shape, which was inserted from a part by command \"CdInstPartAsShp\". Now this function is just used for Misumi modify shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the transformation matrix of a shape?"
            },
            {
                "role": "assistant",
                "content": "cvxInstShpGetMatrix\nidShape [in] shape id\nMatrix [out] transformation matrix\n\nOutputs the transformation matrix associated with the specified shape, which was inserted from a part by command \"CdInstPartAsShp\". Now this function is just used for Misumi modify shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the transformation matrix of a shape inserted from a part?"
            },
            {
                "role": "assistant",
                "content": "cvxInstShpGetMatrix\nidShape [in] shape id\nMatrix [out] transformation matrix\n\nOutputs the transformation matrix associated with the specified shape, which was inserted from a part by command \"CdInstPartAsShp\". Now this function is just used for Misumi modify shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntShape\nidEntity [in] entity id (in active file)\nidShape [out] shape id (0 if undefined)\n\nOutputs the id of the shape that the specified face or edge (idEntity) belongs to. It is assumed the entity resides in the active object. If \"idShape = 0\" is output, the entity could not be located or didn't belong to a faceset."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntShape\nidEntity [in] entity id (in active file)\nidShape [out] shape id (0 if undefined)\n\nOutputs the id of the shape that the specified face or edge (idEntity) belongs to. It is assumed the entity resides in the active object. If \"idShape = 0\" is output, the entity could not be located or didn't belong to a faceset."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntShape\nidEntity [in] entity id (in active file)\nidShape [out] shape id (0 if undefined)\n\nOutputs the id of the shape that the specified face or edge (idEntity) belongs to. It is assumed the entity resides in the active object. If \"idShape = 0\" is output, the entity could not be located or didn't belong to a faceset."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of edges associated with a specific vertex of an edge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqVertexEdges\nidEdge [in] the index of edge\nEndPnt [in] 0 to use the starting vertex of the edge, 1 to use the end vertex of the edge\nCount [out] the count of edges\nEdges [out] the list of edges\n\nGets all associated edges of the specified vertex of edge in the active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the list of edges associated with a specific vertex of an edge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqVertexEdges\nidEdge [in] the index of edge\nEndPnt [in] 0 to use the starting vertex of the edge, 1 to use the end vertex of the edge\nCount [out] the count of edges\nEdges [out] the list of edges\n\nGets all associated edges of the specified vertex of edge in the active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the starting vertex of an edge to get associated edges?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqVertexEdges\nidEdge [in] the index of edge\nEndPnt [in] 0 to use the starting vertex of the edge, 1 to use the end vertex of the edge\nCount [out] the count of edges\nEdges [out] the list of edges\n\nGets all associated edges of the specified vertex of edge in the active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the end vertex of an edge to get associated edges?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqVertexEdges\nidEdge [in] the index of edge\nEndPnt [in] 0 to use the starting vertex of the edge, 1 to use the end vertex of the edge\nCount [out] the count of edges\nEdges [out] the list of edges\n\nGets all associated edges of the specified vertex of edge in the active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display buffered error messages?"
            },
            {
                "role": "assistant",
                "content": "cvxNewCommand\n\nDisplays buffered error messages and resets the GUI to prompt the user for a new command. Generally you would call this function at the end of your custom API code before returning control to ZW3D"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to reset the GUI to prompt for a new command?"
            },
            {
                "role": "assistant",
                "content": "cvxNewCommand\n\nDisplays buffered error messages and resets the GUI to prompt the user for a new command. Generally you would call this function at the end of your custom API code before returning control to ZW3D"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should I call the cvxNewCommand function in my custom API code?"
            },
            {
                "role": "assistant",
                "content": "cvxNewCommand\n\nDisplays buffered error messages and resets the GUI to prompt the user for a new command. Generally you would call this function at the end of your custom API code before returning control to ZW3D"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to buffer a command string for execution?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdBuffer\nString [in] command string\nPriority [in] priority of execution (0 or 1)\n\nBuffers the input command string for execution after the current command and any previously-buffered command events are finished executing.\nIf \"Priority\" is input as 1, the input command string is given higher priority for execution than command strings buffered with \"Priority = 0\".\nFor example, if you register a pointer to a \"void MyFunction(void)\" callback function using cvxCmdFunc(), you can cause the function to be invoked after pending commands have executed using cvxCmdBuffer(\"~MyFunction\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of setting priority for command execution?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdBuffer\nString [in] command string\nPriority [in] priority of execution (0 or 1)\n\nBuffers the input command string for execution after the current command and any previously-buffered command events are finished executing.\nIf \"Priority\" is input as 1, the input command string is given higher priority for execution than command strings buffered with \"Priority = 0\".\nFor example, if you register a pointer to a \"void MyFunction(void)\" callback function using cvxCmdFunc(), you can cause the function to be invoked after pending commands have executed using cvxCmdBuffer(\"~MyFunction\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to give higher priority to a command for execution?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdBuffer\nString [in] command string\nPriority [in] priority of execution (0 or 1)\n\nBuffers the input command string for execution after the current command and any previously-buffered command events are finished executing.\nIf \"Priority\" is input as 1, the input command string is given higher priority for execution than command strings buffered with \"Priority = 0\".\nFor example, if you register a pointer to a \"void MyFunction(void)\" callback function using cvxCmdFunc(), you can cause the function to be invoked after pending commands have executed using cvxCmdBuffer(\"~MyFunction\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to execute a command string?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdSend\nCommandString [in] null-terminated ascii command string\n\nExecutes the input command string. If \"String = NULL\", the event queue is polled for buffered command strings, which are allowed to execute in the order they were buffered. When this function is called, any current thread of execution is suspended until pending command strings are processed, after which this function returns control to the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to poll the event queue for buffered command strings?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdSend\nCommandString [in] null-terminated ascii command string\n\nExecutes the input command string. If \"String = NULL\", the event queue is polled for buffered command strings, which are allowed to execute in the order they were buffered. When this function is called, any current thread of execution is suspended until pending command strings are processed, after which this function returns control to the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I suspend the current thread of execution until pending command strings are processed?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdSend\nCommandString [in] null-terminated ascii command string\n\nExecutes the input command string. If \"String = NULL\", the event queue is polled for buffered command strings, which are allowed to execute in the order they were buffered. When this function is called, any current thread of execution is suspended until pending command strings are processed, after which this function returns control to the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a license is valid for a specific command?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdChkLic\nName [in] Command name\n\nCheck whether license is valid."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to verify the validity of a license for a particular command?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdChkLic\nName [in] Command name\n\nCheck whether license is valid."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I determine if a license is valid for a specific command?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdChkLic\nName [in] Command name\n\nCheck whether license is valid."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set a callback function for a specific action type?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdAction\ntype [in] action type\nparam [in] callback function (NULL to remove the callback)\n\nSet a callback function. When processing the target command option, the callback function will be called.\nIf this function called many times with the same 'type', only the last will take effect.\nIf param or param->pfn is NULL, the original callback function, if there exists, will be removed.\nIf type is VX_CMD_START, param->pfn should return 0 if the specified command can be started, else return 1.\nnote:\nIf one call this function to register a callback in a dll module, he must call this function again, with argument param set as NULL, to unregister the callback for each action before the dll module exit. Usually we can do this in the exit function of the dll module."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove a callback function for a specific action type?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdAction\ntype [in] action type\nparam [in] callback function (NULL to remove the callback)\n\nSet a callback function. When processing the target command option, the callback function will be called.\nIf this function called many times with the same 'type', only the last will take effect.\nIf param or param->pfn is NULL, the original callback function, if there exists, will be removed.\nIf type is VX_CMD_START, param->pfn should return 0 if the specified command can be started, else return 1.\nnote:\nIf one call this function to register a callback in a dll module, he must call this function again, with argument param set as NULL, to unregister the callback for each action before the dll module exit. Usually we can do this in the exit function of the dll module."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a specified command can be started using the callback function?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdAction\ntype [in] action type\nparam [in] callback function (NULL to remove the callback)\n\nSet a callback function. When processing the target command option, the callback function will be called.\nIf this function called many times with the same 'type', only the last will take effect.\nIf param or param->pfn is NULL, the original callback function, if there exists, will be removed.\nIf type is VX_CMD_START, param->pfn should return 0 if the specified command can be started, else return 1.\nnote:\nIf one call this function to register a callback in a dll module, he must call this function again, with argument param set as NULL, to unregister the callback for each action before the dll module exit. Usually we can do this in the exit function of the dll module."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to register a function with ZW3D licensing code?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdFunc\nName [in] function name\nFunction [in] function pointer\nCode [in] ZW3D licensing code (e.g. VX_CODE_ADV_MODELING or VX_CODE_GENERAL)\n\nRegisters a function referenced by the \"function=\" or \"custom=\" fields in a command template definition. The function is registered with a ZW3D licensing code. ZW3D ensures the user has the appropriate license before allowing access to the function.\nCallback functions should be registered in the \"Init\" function called when your library is dynamically loaded by ZW3D at runtime.\nFor a standard command operation, the function should be the following type:\nint StandardCommand(int idInputData, int *idOutputData)\nFor a custom command operation, the function should be the following type:\nint CustomOperation(int idInputData)\nFor a callback function invoked by a command string that is the function name preceded by a \"tilda\" (e.g. ~MyFunction), the function should be one of the following types:\nvoid MyFunction(void) or...\nvoid MyFunction(char *string) invoked by sending the string \"~MyFunction(\"text string\")\" using cvxCmdSend() or cvxCmdBuffer().\nThe API functions beginning with cvxData...() are used to compose and to query the data containers referenced by \"idInputData\" or \"idOutputData\".\nFor documentation on the the callback function registered in the header of a GUI template, see cvxFormFunc().\nIf developer wants to unload the DLL plug in file dynamically. It is a MUST to run cvxCmdFuncUnload() in the exit function.\nIn this case, the pre-existing symbol is kept and the input function is ignored."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the types of functions for standard command operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdFunc\nName [in] function name\nFunction [in] function pointer\nCode [in] ZW3D licensing code (e.g. VX_CODE_ADV_MODELING or VX_CODE_GENERAL)\n\nRegisters a function referenced by the \"function=\" or \"custom=\" fields in a command template definition. The function is registered with a ZW3D licensing code. ZW3D ensures the user has the appropriate license before allowing access to the function.\nCallback functions should be registered in the \"Init\" function called when your library is dynamically loaded by ZW3D at runtime.\nFor a standard command operation, the function should be the following type:\nint StandardCommand(int idInputData, int *idOutputData)\nFor a custom command operation, the function should be the following type:\nint CustomOperation(int idInputData)\nFor a callback function invoked by a command string that is the function name preceded by a \"tilda\" (e.g. ~MyFunction), the function should be one of the following types:\nvoid MyFunction(void) or...\nvoid MyFunction(char *string) invoked by sending the string \"~MyFunction(\"text string\")\" using cvxCmdSend() or cvxCmdBuffer().\nThe API functions beginning with cvxData...() are used to compose and to query the data containers referenced by \"idInputData\" or \"idOutputData\".\nFor documentation on the the callback function registered in the header of a GUI template, see cvxFormFunc().\nIf developer wants to unload the DLL plug in file dynamically. It is a MUST to run cvxCmdFuncUnload() in the exit function.\nIn this case, the pre-existing symbol is kept and the input function is ignored."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to register a callback function for a command string?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdFunc\nName [in] function name\nFunction [in] function pointer\nCode [in] ZW3D licensing code (e.g. VX_CODE_ADV_MODELING or VX_CODE_GENERAL)\n\nRegisters a function referenced by the \"function=\" or \"custom=\" fields in a command template definition. The function is registered with a ZW3D licensing code. ZW3D ensures the user has the appropriate license before allowing access to the function.\nCallback functions should be registered in the \"Init\" function called when your library is dynamically loaded by ZW3D at runtime.\nFor a standard command operation, the function should be the following type:\nint StandardCommand(int idInputData, int *idOutputData)\nFor a custom command operation, the function should be the following type:\nint CustomOperation(int idInputData)\nFor a callback function invoked by a command string that is the function name preceded by a \"tilda\" (e.g. ~MyFunction), the function should be one of the following types:\nvoid MyFunction(void) or...\nvoid MyFunction(char *string) invoked by sending the string \"~MyFunction(\"text string\")\" using cvxCmdSend() or cvxCmdBuffer().\nThe API functions beginning with cvxData...() are used to compose and to query the data containers referenced by \"idInputData\" or \"idOutputData\".\nFor documentation on the the callback function registered in the header of a GUI template, see cvxFormFunc().\nIf developer wants to unload the DLL plug in file dynamically. It is a MUST to run cvxCmdFuncUnload() in the exit function.\nIn this case, the pre-existing symbol is kept and the input function is ignored."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the API functions used to compose and query the data containers?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdFunc\nName [in] function name\nFunction [in] function pointer\nCode [in] ZW3D licensing code (e.g. VX_CODE_ADV_MODELING or VX_CODE_GENERAL)\n\nRegisters a function referenced by the \"function=\" or \"custom=\" fields in a command template definition. The function is registered with a ZW3D licensing code. ZW3D ensures the user has the appropriate license before allowing access to the function.\nCallback functions should be registered in the \"Init\" function called when your library is dynamically loaded by ZW3D at runtime.\nFor a standard command operation, the function should be the following type:\nint StandardCommand(int idInputData, int *idOutputData)\nFor a custom command operation, the function should be the following type:\nint CustomOperation(int idInputData)\nFor a callback function invoked by a command string that is the function name preceded by a \"tilda\" (e.g. ~MyFunction), the function should be one of the following types:\nvoid MyFunction(void) or...\nvoid MyFunction(char *string) invoked by sending the string \"~MyFunction(\"text string\")\" using cvxCmdSend() or cvxCmdBuffer().\nThe API functions beginning with cvxData...() are used to compose and to query the data containers referenced by \"idInputData\" or \"idOutputData\".\nFor documentation on the the callback function registered in the header of a GUI template, see cvxFormFunc().\nIf developer wants to unload the DLL plug in file dynamically. It is a MUST to run cvxCmdFuncUnload() in the exit function.\nIn this case, the pre-existing symbol is kept and the input function is ignored."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to register a pointer to an auxiliary callback function?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdCallback\nName [in] function name\nFunction [in] function pointer\n\nRegisters a pointer to an auxiliary callback function used by a command template. The function does not require a licensing code. The \"init=\", \"exit=\", \"echo_obj=\" and \"callback=\" fields reference auxiliary callback functions.\nFunction pointers should be registered in the \"Init\" function called when your library is dynamically loaded by ZW3D at runtime.\nThe callback function should be of the following type:\nint Callback(char *TemplateName, int idField, int idData)\nThe echo_obj function should be of the following type: void Echo(int idData, void *ptr)\nIf developer wants to unload the DLL plug in file dynamically. It is a MUST to run cvxCmdFuncUnload() in the exit function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What type of function pointer should be registered in the 'Init' function?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdCallback\nName [in] function name\nFunction [in] function pointer\n\nRegisters a pointer to an auxiliary callback function used by a command template. The function does not require a licensing code. The \"init=\", \"exit=\", \"echo_obj=\" and \"callback=\" fields reference auxiliary callback functions.\nFunction pointers should be registered in the \"Init\" function called when your library is dynamically loaded by ZW3D at runtime.\nThe callback function should be of the following type:\nint Callback(char *TemplateName, int idField, int idData)\nThe echo_obj function should be of the following type: void Echo(int idData, void *ptr)\nIf developer wants to unload the DLL plug in file dynamically. It is a MUST to run cvxCmdFuncUnload() in the exit function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the format of the callback function?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdCallback\nName [in] function name\nFunction [in] function pointer\n\nRegisters a pointer to an auxiliary callback function used by a command template. The function does not require a licensing code. The \"init=\", \"exit=\", \"echo_obj=\" and \"callback=\" fields reference auxiliary callback functions.\nFunction pointers should be registered in the \"Init\" function called when your library is dynamically loaded by ZW3D at runtime.\nThe callback function should be of the following type:\nint Callback(char *TemplateName, int idField, int idData)\nThe echo_obj function should be of the following type: void Echo(int idData, void *ptr)\nIf developer wants to unload the DLL plug in file dynamically. It is a MUST to run cvxCmdFuncUnload() in the exit function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the format of the echo_obj function?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdCallback\nName [in] function name\nFunction [in] function pointer\n\nRegisters a pointer to an auxiliary callback function used by a command template. The function does not require a licensing code. The \"init=\", \"exit=\", \"echo_obj=\" and \"callback=\" fields reference auxiliary callback functions.\nFunction pointers should be registered in the \"Init\" function called when your library is dynamically loaded by ZW3D at runtime.\nThe callback function should be of the following type:\nint Callback(char *TemplateName, int idField, int idData)\nThe echo_obj function should be of the following type: void Echo(int idData, void *ptr)\nIf developer wants to unload the DLL plug in file dynamically. It is a MUST to run cvxCmdFuncUnload() in the exit function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the requirement to unload the DLL plug in file dynamically?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdCallback\nName [in] function name\nFunction [in] function pointer\n\nRegisters a pointer to an auxiliary callback function used by a command template. The function does not require a licensing code. The \"init=\", \"exit=\", \"echo_obj=\" and \"callback=\" fields reference auxiliary callback functions.\nFunction pointers should be registered in the \"Init\" function called when your library is dynamically loaded by ZW3D at runtime.\nThe callback function should be of the following type:\nint Callback(char *TemplateName, int idField, int idData)\nThe echo_obj function should be of the following type: void Echo(int idData, void *ptr)\nIf developer wants to unload the DLL plug in file dynamically. It is a MUST to run cvxCmdFuncUnload() in the exit function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to unload a specified function?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdFuncUnload\nName [in] function name\n\nUnload specified function registered via cvxCmdFunc()/cvxCmdCallback()/ cvxFormFunc()/cvxFormCallback() if developer wants to unload the DLL plug in file dynamically. The input name must be the same as the one used in cvxCmdFunc()/cvxCmdCallback()/cvxFormFunc()/cvxFormCallback()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to dynamically unload a DLL plug in file?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdFuncUnload\nName [in] function name\n\nUnload specified function registered via cvxCmdFunc()/cvxCmdCallback()/ cvxFormFunc()/cvxFormCallback() if developer wants to unload the DLL plug in file dynamically. The input name must be the same as the one used in cvxCmdFunc()/cvxCmdCallback()/cvxFormFunc()/cvxFormCallback()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to unload a function registered via cvxCmdFunc()/cvxCmdCallback()/ cvxFormFunc()/cvxFormCallback()?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdFuncUnload\nName [in] function name\n\nUnload specified function registered via cvxCmdFunc()/cvxCmdCallback()/ cvxFormFunc()/cvxFormCallback() if developer wants to unload the DLL plug in file dynamically. The input name must be the same as the one used in cvxCmdFunc()/cvxCmdCallback()/cvxFormFunc()/cvxFormCallback()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to register a pointer to a global variable in a command template?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdVariable\nName [in] global variable name\nVariable [in] pointer to global variable\n\nRegisters a pointer to a global variable (i.e. the variable's address) referenced in a command template \"options\" string.\nGlobal variables should be registered in the \"Init\" function called when your library is dynamically loaded by ZW3D at runtime.\nIf developer wants to unload the DLL plug in file dynamically. It is a MUST to run cvxCmdVariableUnload() in the exit function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to dynamically load a DLL plug-in file?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdVariable\nName [in] global variable name\nVariable [in] pointer to global variable\n\nRegisters a pointer to a global variable (i.e. the variable's address) referenced in a command template \"options\" string.\nGlobal variables should be registered in the \"Init\" function called when your library is dynamically loaded by ZW3D at runtime.\nIf developer wants to unload the DLL plug in file dynamically. It is a MUST to run cvxCmdVariableUnload() in the exit function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to unload the DLL plug-in file dynamically?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdVariable\nName [in] global variable name\nVariable [in] pointer to global variable\n\nRegisters a pointer to a global variable (i.e. the variable's address) referenced in a command template \"options\" string.\nGlobal variables should be registered in the \"Init\" function called when your library is dynamically loaded by ZW3D at runtime.\nIf developer wants to unload the DLL plug in file dynamically. It is a MUST to run cvxCmdVariableUnload() in the exit function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to unload a variable registered via cvxCmdVariable()?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdVariableUnload\nName [in] Variable name\n\nUnload the variable registered via cvxCmdVariable() if developer wants to unload the DLL plug in file dynamically. The input name must be the same as the one used in cvxCmdVariable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to dynamically unload the DLL plug in file?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdVariableUnload\nName [in] Variable name\n\nUnload the variable registered via cvxCmdVariable() if developer wants to unload the DLL plug in file dynamically. The input name must be the same as the one used in cvxCmdVariable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What should be the input name for unloading the variable registered via cvxCmdVariable()?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdVariableUnload\nName [in] Variable name\n\nUnload the variable registered via cvxCmdVariable() if developer wants to unload the DLL plug in file dynamically. The input name must be the same as the one used in cvxCmdVariable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to register a Qt resource file?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdRegisterRcc\nFile [in] file name\n\nRegister a Qt resource file(rcc file).The rcc file contains the resources used in dll.If developer wants to unregister the rcc file in file dynamically. It is a MUST to run cvxCmdUnRegisterRcc() in the exit function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to register a rcc file?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdRegisterRcc\nFile [in] file name\n\nRegister a Qt resource file(rcc file).The rcc file contains the resources used in dll.If developer wants to unregister the rcc file in file dynamically. It is a MUST to run cvxCmdUnRegisterRcc() in the exit function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxCmdRegisterRcc to register a resource file?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdRegisterRcc\nFile [in] file name\n\nRegister a Qt resource file(rcc file).The rcc file contains the resources used in dll.If developer wants to unregister the rcc file in file dynamically. It is a MUST to run cvxCmdUnRegisterRcc() in the exit function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to unregister a Qt resource file?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdUnRegisterRcc\nFile [in] file name\n\nUnregister the Qt resource file(rcc file) registered via cvxCmdRegisterRcc(). If developer wants to unload the DLL plug in file dynamically. The input name must be the same as the one used in cvxCmdRegisterRcc()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to unload a DLL plug in file dynamically?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdUnRegisterRcc\nFile [in] file name\n\nUnregister the Qt resource file(rcc file) registered via cvxCmdRegisterRcc(). If developer wants to unload the DLL plug in file dynamically. The input name must be the same as the one used in cvxCmdRegisterRcc()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the input name required to unregister a Qt resource file?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdUnRegisterRcc\nFile [in] file name\n\nUnregister the Qt resource file(rcc file) registered via cvxCmdRegisterRcc(). If developer wants to unload the DLL plug in file dynamically. The input name must be the same as the one used in cvxCmdRegisterRcc()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to execute a series of macro commands?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdMacro\nInput [in] null-terminated ascii string of macro commands\nOutput [out] pointer to of output data string (NULL to ignore)\n\n\"Input\" is interpreted as a string of one or more newline-delimted macro command strings \nThe contents of variables created by the macro commands are output via \"Output\" as a single comma-delimited, null-terminated ascii string. The first item in the string is the total number of variables encoded in the string. This is followed by an encoding of each variable. Each variable is encoded with its name first, followed by the number of array elements in the variable, followed by the array values. Values are either ascii-encoded floating point numbers, or strings enclosed in double quotemarks. The following is an example:\n   # variables\n   Num = 25\n   Strings = {\"hello dolly\", \"hello world\"}\n   Array = {100,125,150}\n\n   # ascii-encoded variable data\n   3,Num,1,25,Strings,2,\"hello dolly\",\"hello world\",Array,3,100,125,150\n\nMemory for \"Output\" is allocated by this function. The memory must be deallocated by the calling procedure. If there is no output data, a NULL pointer is output.\nnote:\nIf user enter a new environment, user need to use the cvxDispSceneUpdate() interface to update the environment. \n\n If this function errors out anywhere along the way, the string \"ERROR\" will be output via \"Output\" and this function will return 1. Otherwise, it will return 0."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the output data from the executed macro commands?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdMacro\nInput [in] null-terminated ascii string of macro commands\nOutput [out] pointer to of output data string (NULL to ignore)\n\n\"Input\" is interpreted as a string of one or more newline-delimted macro command strings \nThe contents of variables created by the macro commands are output via \"Output\" as a single comma-delimited, null-terminated ascii string. The first item in the string is the total number of variables encoded in the string. This is followed by an encoding of each variable. Each variable is encoded with its name first, followed by the number of array elements in the variable, followed by the array values. Values are either ascii-encoded floating point numbers, or strings enclosed in double quotemarks. The following is an example:\n   # variables\n   Num = 25\n   Strings = {\"hello dolly\", \"hello world\"}\n   Array = {100,125,150}\n\n   # ascii-encoded variable data\n   3,Num,1,25,Strings,2,\"hello dolly\",\"hello world\",Array,3,100,125,150\n\nMemory for \"Output\" is allocated by this function. The memory must be deallocated by the calling procedure. If there is no output data, a NULL pointer is output.\nnote:\nIf user enter a new environment, user need to use the cvxDispSceneUpdate() interface to update the environment. \n\n If this function errors out anywhere along the way, the string \"ERROR\" will be output via \"Output\" and this function will return 1. Otherwise, it will return 0."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to handle errors when executing the macro commands?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdMacro\nInput [in] null-terminated ascii string of macro commands\nOutput [out] pointer to of output data string (NULL to ignore)\n\n\"Input\" is interpreted as a string of one or more newline-delimted macro command strings \nThe contents of variables created by the macro commands are output via \"Output\" as a single comma-delimited, null-terminated ascii string. The first item in the string is the total number of variables encoded in the string. This is followed by an encoding of each variable. Each variable is encoded with its name first, followed by the number of array elements in the variable, followed by the array values. Values are either ascii-encoded floating point numbers, or strings enclosed in double quotemarks. The following is an example:\n   # variables\n   Num = 25\n   Strings = {\"hello dolly\", \"hello world\"}\n   Array = {100,125,150}\n\n   # ascii-encoded variable data\n   3,Num,1,25,Strings,2,\"hello dolly\",\"hello world\",Array,3,100,125,150\n\nMemory for \"Output\" is allocated by this function. The memory must be deallocated by the calling procedure. If there is no output data, a NULL pointer is output.\nnote:\nIf user enter a new environment, user need to use the cvxDispSceneUpdate() interface to update the environment. \n\n If this function errors out anywhere along the way, the string \"ERROR\" will be output via \"Output\" and this function will return 1. Otherwise, it will return 0."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to run a macro of a specified path?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdMacro2\npath [in] macro file path\n\nRuns a macro of specified path.\nnote:\nIf user enter a new environment, user need to use the cvxDispSceneUpdate() interface to update the environment."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to execute a macro file?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdMacro2\npath [in] macro file path\n\nRuns a macro of specified path.\nnote:\nIf user enter a new environment, user need to use the cvxDispSceneUpdate() interface to update the environment."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to run a macro?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdMacro2\npath [in] macro file path\n\nRuns a macro of specified path.\nnote:\nIf user enter a new environment, user need to use the cvxDispSceneUpdate() interface to update the environment."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxMacroInqPath\npath [out] path of macro (NULL to ignore)\nfile [out] file name of macro (NULL to ignore)\n\nGets the path and file name of the currently running macro. If no running macro, path[0] = 0 and file[0] = 0. The path and file cannot both be NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxMacroInqPath\npath [out] path of macro (NULL to ignore)\nfile [out] file name of macro (NULL to ignore)\n\nGets the path and file name of the currently running macro. If no running macro, path[0] = 0 and file[0] = 0. The path and file cannot both be NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxMacroInqPath\npath [out] path of macro (NULL to ignore)\nfile [out] file name of macro (NULL to ignore)\n\nGets the path and file name of the currently running macro. If no running macro, path[0] = 0 and file[0] = 0. The path and file cannot both be NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the path of the currently running macro?"
            },
            {
                "role": "assistant",
                "content": "cvxMacroInqPathByLongPath\npath [out] path of macro (NULL to ignore)\nsizepath [in] max size of path\nfile [out] file name of macro (NULL to ignore)\nfilesize [in] max size of file\n\nGets the path and file name of the currently running macro. If no running macro, path[0] = 0 and file[0] = 0. The path and file cannot both be NULL.\nA path that is too long (longer than \"sizepath\") is truncated. A file that is too long (longer than \"filesize\") is truncated.\nIt is assumed that the input \"name\" and \"file\" are no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the file name of the currently running macro?"
            },
            {
                "role": "assistant",
                "content": "cvxMacroInqPathByLongPath\npath [out] path of macro (NULL to ignore)\nsizepath [in] max size of path\nfile [out] file name of macro (NULL to ignore)\nfilesize [in] max size of file\n\nGets the path and file name of the currently running macro. If no running macro, path[0] = 0 and file[0] = 0. The path and file cannot both be NULL.\nA path that is too long (longer than \"sizepath\") is truncated. A file that is too long (longer than \"filesize\") is truncated.\nIt is assumed that the input \"name\" and \"file\" are no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the maximum size of the path for the currently running macro?"
            },
            {
                "role": "assistant",
                "content": "cvxMacroInqPathByLongPath\npath [out] path of macro (NULL to ignore)\nsizepath [in] max size of path\nfile [out] file name of macro (NULL to ignore)\nfilesize [in] max size of file\n\nGets the path and file name of the currently running macro. If no running macro, path[0] = 0 and file[0] = 0. The path and file cannot both be NULL.\nA path that is too long (longer than \"sizepath\") is truncated. A file that is too long (longer than \"filesize\") is truncated.\nIt is assumed that the input \"name\" and \"file\" are no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the maximum size of the file name for the currently running macro?"
            },
            {
                "role": "assistant",
                "content": "cvxMacroInqPathByLongPath\npath [out] path of macro (NULL to ignore)\nsizepath [in] max size of path\nfile [out] file name of macro (NULL to ignore)\nfilesize [in] max size of file\n\nGets the path and file name of the currently running macro. If no running macro, path[0] = 0 and file[0] = 0. The path and file cannot both be NULL.\nA path that is too long (longer than \"sizepath\") is truncated. A file that is too long (longer than \"filesize\") is truncated.\nIt is assumed that the input \"name\" and \"file\" are no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a new component in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIns\nComp [in] component data\nidComp [inout] of new component,as input when this function is called from custom history operation\n\nInserts a new component in the active part. If \"idComp\" is not NULL, the id of the new component is output.\nIf this function is called from a custom history operation, the component will be associated with the custom operation and will be deleted automatically when the custom operation is regenerated and re-inserts the component.\nnote:\nWhen this function is called from within a custom history operation, if \"idComp\" is not NULL, \"*idComp\" must be a value greater than 0, and if this function is Cyclically called from within a custom history operation, \"*idComp\" CAN'T BE THE SAME in every calling, otherwise this function will return \"ZW_API_INPUT_ERROR\". value will be encoded in the component's persistent label to differentiate it from other components added by the custom operation. After the value of \"idComp\" is used to label the new component, the database id of the new component will be output via \"idComp\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to associate a component with a custom operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIns\nComp [in] component data\nidComp [inout] of new component,as input when this function is called from custom history operation\n\nInserts a new component in the active part. If \"idComp\" is not NULL, the id of the new component is output.\nIf this function is called from a custom history operation, the component will be associated with the custom operation and will be deleted automatically when the custom operation is regenerated and re-inserts the component.\nnote:\nWhen this function is called from within a custom history operation, if \"idComp\" is not NULL, \"*idComp\" must be a value greater than 0, and if this function is Cyclically called from within a custom history operation, \"*idComp\" CAN'T BE THE SAME in every calling, otherwise this function will return \"ZW_API_INPUT_ERROR\". value will be encoded in the component's persistent label to differentiate it from other components added by the custom operation. After the value of \"idComp\" is used to label the new component, the database id of the new component will be output via \"idComp\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if the idComp is not NULL when calling this function?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIns\nComp [in] component data\nidComp [inout] of new component,as input when this function is called from custom history operation\n\nInserts a new component in the active part. If \"idComp\" is not NULL, the id of the new component is output.\nIf this function is called from a custom history operation, the component will be associated with the custom operation and will be deleted automatically when the custom operation is regenerated and re-inserts the component.\nnote:\nWhen this function is called from within a custom history operation, if \"idComp\" is not NULL, \"*idComp\" must be a value greater than 0, and if this function is Cyclically called from within a custom history operation, \"*idComp\" CAN'T BE THE SAME in every calling, otherwise this function will return \"ZW_API_INPUT_ERROR\". value will be encoded in the component's persistent label to differentiate it from other components added by the custom operation. After the value of \"idComp\" is used to label the new component, the database id of the new component will be output via \"idComp\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to include an unplaced component in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInclude\nComp [in] component data\nidComp [out] id of new component (NULL to ignore)\n\nInclude an unplaced component in the active part. If \"idComp\" is not NULL, the id of the new component is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to add a component to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInclude\nComp [in] component data\nidComp [out] id of new component (NULL to ignore)\n\nInclude an unplaced component in the active part. If \"idComp\" is not NULL, the id of the new component is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new component after including it in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInclude\nComp [in] component data\nidComp [out] id of new component (NULL to ignore)\n\nInclude an unplaced component in the active part. If \"idComp\" is not NULL, the id of the new component is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to merge a component with the active part using a specific combination method?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMerge\nCombine [in] combination method\nidComp [in] component id (0 for last feature)\nidShape [out] shape id (pass in NULL to ignore)\n\nMerges a component with the active part using the specified combination method. Only the component's top-level geometry is merged. Sub-components of the component are not merged.\nUse cvxCompShift() to merge the component and its sub-components.\nIf \"idShape\" is not NULL, the id of the last shape created by merging the component is output. \"isShape=0\" is output if no shape was created by the merge.\nnote:\nMerging a component could add multiple shapes, or other types of geometry, to the active part. If there is a possibility that the merge created more than a single shape, use cvxEntNewList() to retrieve the new entities created by the merge. \n\n This function can be overloaded to force merging of component dimensions by inputting the component id with a negative sign."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to merge a component and its sub-components using this function?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMerge\nCombine [in] combination method\nidComp [in] component id (0 for last feature)\nidShape [out] shape id (pass in NULL to ignore)\n\nMerges a component with the active part using the specified combination method. Only the component's top-level geometry is merged. Sub-components of the component are not merged.\nUse cvxCompShift() to merge the component and its sub-components.\nIf \"idShape\" is not NULL, the id of the last shape created by merging the component is output. \"isShape=0\" is output if no shape was created by the merge.\nnote:\nMerging a component could add multiple shapes, or other types of geometry, to the active part. If there is a possibility that the merge created more than a single shape, use cvxEntNewList() to retrieve the new entities created by the merge. \n\n This function can be overloaded to force merging of component dimensions by inputting the component id with a negative sign."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the id of the last shape created by merging the component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMerge\nCombine [in] combination method\nidComp [in] component id (0 for last feature)\nidShape [out] shape id (pass in NULL to ignore)\n\nMerges a component with the active part using the specified combination method. Only the component's top-level geometry is merged. Sub-components of the component are not merged.\nUse cvxCompShift() to merge the component and its sub-components.\nIf \"idShape\" is not NULL, the id of the last shape created by merging the component is output. \"isShape=0\" is output if no shape was created by the merge.\nnote:\nMerging a component could add multiple shapes, or other types of geometry, to the active part. If there is a possibility that the merge created more than a single shape, use cvxEntNewList() to retrieve the new entities created by the merge. \n\n This function can be overloaded to force merging of component dimensions by inputting the component id with a negative sign."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to merge a component with the active part using a specific combination method?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMerge2\nCombine [in] combination method\nidComp [in] component id (0 for last feature)\nMergeDim [in] 1 to merge component part dimensions into active part, else 0\nMergeWire [in] 1 to merge component part wireframe geometry into active part, else 0\nidShape [out] shape id (pass in NULL to ignore)\n\nMerges a component with the active part using the specified combination method. Only the component's top-level geometry is merged. Sub-components of the component are not merged.\nUse cvxCompShift() to merge the component and its sub-components.\nIf \"idShape\" is not NULL, the id of the last shape created by merging the component is output. \"isShape=0\" is output if no shape was created by the merge.\nnote:\nMerging a component could add multiple shapes, or other types of geometry, to the active part. If there is a possibility that the merge created more than a single shape, use cvxEntNewList() to retrieve the new entities created by the merge."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to merge component part dimensions into the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMerge2\nCombine [in] combination method\nidComp [in] component id (0 for last feature)\nMergeDim [in] 1 to merge component part dimensions into active part, else 0\nMergeWire [in] 1 to merge component part wireframe geometry into active part, else 0\nidShape [out] shape id (pass in NULL to ignore)\n\nMerges a component with the active part using the specified combination method. Only the component's top-level geometry is merged. Sub-components of the component are not merged.\nUse cvxCompShift() to merge the component and its sub-components.\nIf \"idShape\" is not NULL, the id of the last shape created by merging the component is output. \"isShape=0\" is output if no shape was created by the merge.\nnote:\nMerging a component could add multiple shapes, or other types of geometry, to the active part. If there is a possibility that the merge created more than a single shape, use cvxEntNewList() to retrieve the new entities created by the merge."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to merge component part wireframe geometry into the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMerge2\nCombine [in] combination method\nidComp [in] component id (0 for last feature)\nMergeDim [in] 1 to merge component part dimensions into active part, else 0\nMergeWire [in] 1 to merge component part wireframe geometry into active part, else 0\nidShape [out] shape id (pass in NULL to ignore)\n\nMerges a component with the active part using the specified combination method. Only the component's top-level geometry is merged. Sub-components of the component are not merged.\nUse cvxCompShift() to merge the component and its sub-components.\nIf \"idShape\" is not NULL, the id of the last shape created by merging the component is output. \"isShape=0\" is output if no shape was created by the merge.\nnote:\nMerging a component could add multiple shapes, or other types of geometry, to the active part. If there is a possibility that the merge created more than a single shape, use cvxEntNewList() to retrieve the new entities created by the merge."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the id of the last shape created by merging the component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMerge2\nCombine [in] combination method\nidComp [in] component id (0 for last feature)\nMergeDim [in] 1 to merge component part dimensions into active part, else 0\nMergeWire [in] 1 to merge component part wireframe geometry into active part, else 0\nidShape [out] shape id (pass in NULL to ignore)\n\nMerges a component with the active part using the specified combination method. Only the component's top-level geometry is merged. Sub-components of the component are not merged.\nUse cvxCompShift() to merge the component and its sub-components.\nIf \"idShape\" is not NULL, the id of the last shape created by merging the component is output. \"isShape=0\" is output if no shape was created by the merge.\nnote:\nMerging a component could add multiple shapes, or other types of geometry, to the active part. If there is a possibility that the merge created more than a single shape, use cvxEntNewList() to retrieve the new entities created by the merge."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to extract a shape into a new part?"
            },
            {
                "role": "assistant",
                "content": "cvxCompExtract\nidShape [in] id of shape to extract\nFrame [in] local coordinate frame to map shape into part space\nName [in] name of new part/component\nNewFile [in] 1 to put new part in a new file; 0 for active file\nOverwrite [in] response to \"overwrite existing part?\" query\nidComp [out] id of new component (NULL to ignore)\n\nExtracts a shape from the active part into a new part that is instanced back into the active part as a component (i.e. converts a shape into a component). If the shape was merged from a pre-existing component, \"Frame\" and \"Name\" are ignored and the shape is extracted to the original component using its local frame and name.\nIf \"Frame\" is input as NULL, the identity matrix is used.\nIf \"Name\" is input as NULL, a default name is assigned to the component.\nIf \"idComp\" is not NULL, the id of the new component is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to map a shape into part space using a local coordinate frame?"
            },
            {
                "role": "assistant",
                "content": "cvxCompExtract\nidShape [in] id of shape to extract\nFrame [in] local coordinate frame to map shape into part space\nName [in] name of new part/component\nNewFile [in] 1 to put new part in a new file; 0 for active file\nOverwrite [in] response to \"overwrite existing part?\" query\nidComp [out] id of new component (NULL to ignore)\n\nExtracts a shape from the active part into a new part that is instanced back into the active part as a component (i.e. converts a shape into a component). If the shape was merged from a pre-existing component, \"Frame\" and \"Name\" are ignored and the shape is extracted to the original component using its local frame and name.\nIf \"Frame\" is input as NULL, the identity matrix is used.\nIf \"Name\" is input as NULL, a default name is assigned to the component.\nIf \"idComp\" is not NULL, the id of the new component is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a new component from a shape?"
            },
            {
                "role": "assistant",
                "content": "cvxCompExtract\nidShape [in] id of shape to extract\nFrame [in] local coordinate frame to map shape into part space\nName [in] name of new part/component\nNewFile [in] 1 to put new part in a new file; 0 for active file\nOverwrite [in] response to \"overwrite existing part?\" query\nidComp [out] id of new component (NULL to ignore)\n\nExtracts a shape from the active part into a new part that is instanced back into the active part as a component (i.e. converts a shape into a component). If the shape was merged from a pre-existing component, \"Frame\" and \"Name\" are ignored and the shape is extracted to the original component using its local frame and name.\nIf \"Frame\" is input as NULL, the identity matrix is used.\nIf \"Name\" is input as NULL, a default name is assigned to the component.\nIf \"idComp\" is not NULL, the id of the new component is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to export geometry from the active target part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartGeomExport\nData [in] data that defines geometry to be exported\n\nExports the specified geometry from the active target part to an external part. If the destination part does not exist, it is created. If the destination part already exists, the geometry is added to it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to add geometry to an existing part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartGeomExport\nData [in] data that defines geometry to be exported\n\nExports the specified geometry from the active target part to an external part. If the destination part does not exist, it is created. If the destination part already exists, the geometry is added to it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I create a new part and export geometry to it?"
            },
            {
                "role": "assistant",
                "content": "cvxPartGeomExport\nData [in] data that defines geometry to be exported\n\nExports the specified geometry from the active target part to an external part. If the destination part does not exist, it is created. If the destination part already exists, the geometry is added to it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to export geometry from the active target part to an external part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartGeomExportII\nData [in] data that defines geometry to be exported\n\nExports the specified geometry from the active target part to an external part. If the destination part does not exist, it is created. If the destination part already exists, the geometry is added to it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to create a destination part if it does not exist and export geometry to it?"
            },
            {
                "role": "assistant",
                "content": "cvxPartGeomExportII\nData [in] data that defines geometry to be exported\n\nExports the specified geometry from the active target part to an external part. If the destination part does not exist, it is created. If the destination part already exists, the geometry is added to it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I add geometry to an existing destination part when exporting?"
            },
            {
                "role": "assistant",
                "content": "cvxPartGeomExportII\nData [in] data that defines geometry to be exported\n\nExports the specified geometry from the active target part to an external part. If the destination part does not exist, it is created. If the destination part already exists, the geometry is added to it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to copy and insert a specified part at a location?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIns\nPart [in] component data\nCount [out] number of shapes (NULL to ignore)\nShapeList [out] list of shape id's (NULL to ignore)\n\nCopy and insert the specified part at the specified location. Outputs a list of indices of the new shapes. The calling procedure MUST deallocate the output list with cvxMemFree().\nInterface cvxMemZero() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of shapes after copying and inserting a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIns\nPart [in] component data\nCount [out] number of shapes (NULL to ignore)\nShapeList [out] list of shape id's (NULL to ignore)\n\nCopy and insert the specified part at the specified location. Outputs a list of indices of the new shapes. The calling procedure MUST deallocate the output list with cvxMemFree().\nInterface cvxMemZero() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of shape id's after copying and inserting a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIns\nPart [in] component data\nCount [out] number of shapes (NULL to ignore)\nShapeList [out] list of shape id's (NULL to ignore)\n\nCopy and insert the specified part at the specified location. Outputs a list of indices of the new shapes. The calling procedure MUST deallocate the output list with cvxMemFree().\nInterface cvxMemZero() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a coincident constraint between two entities?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddCoincidentCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nPnt1 [in] coordinate of the coincidence point on the first entity (NULL to ignore)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nPnt2 [in] coordinate of the coincidence point on the second entity (NULL to ignore)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a coincident constraint, the components will remain coincident."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a coincident constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddCoincidentCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nPnt1 [in] coordinate of the coincidence point on the first entity (NULL to ignore)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nPnt2 [in] coordinate of the coincidence point on the second entity (NULL to ignore)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a coincident constraint, the components will remain coincident."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxCompAddCoincidentCons to maintain the coincidence of components?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddCoincidentCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nPnt1 [in] coordinate of the coincidence point on the first entity (NULL to ignore)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nPnt2 [in] coordinate of the coincidence point on the second entity (NULL to ignore)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a coincident constraint, the components will remain coincident."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a tangent constraint between two entities?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddTangentCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a tangent constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a tangent constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddTangentCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a tangent constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxCompAddTangentCons to create a constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddTangentCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a tangent constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a concentric constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddConcentricCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nPnt1 [in] coordinate of the coincidence point on the first entity (NULL to ignore)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nPnt2 [in] coordinate of the coincidence point on the second entity (NULL to ignore)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a concentric constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to add a concentric constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddConcentricCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nPnt1 [in] coordinate of the coincidence point on the first entity (NULL to ignore)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nPnt2 [in] coordinate of the coincidence point on the second entity (NULL to ignore)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a concentric constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a concentric constraint between two entities?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddConcentricCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nPnt1 [in] coordinate of the coincidence point on the first entity (NULL to ignore)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nPnt2 [in] coordinate of the coincidence point on the second entity (NULL to ignore)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a concentric constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a parallel constraint between two entities?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddParallelCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a parallel constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to create a parallel constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddParallelCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a parallel constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a parallel constraint with custom data?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddParallelCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a parallel constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a perpendicular constraint between two entities?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddPerpendicularCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a perpendicular constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a perpendicular constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddPerpendicularCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a perpendicular constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the function to add a perpendicular constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddPerpendicularCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a perpendicular constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add an angular constraint between two entities?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddAngularCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a angular constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create an angular constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddAngularCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a angular constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use custom data for creating an angular constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddAngularCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a angular constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get the index of the new angular constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddAngularCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a angular constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a lock constraint between two components?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddLockCons\nComp1 [in] pick-path of first component\nComp2 [in] pick-path of second component\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a lock constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a lock constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddLockCons\nComp1 [in] pick-path of first component\nComp2 [in] pick-path of second component\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a lock constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use custom data for creating a lock constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddLockCons\nComp1 [in] pick-path of first component\nComp2 [in] pick-path of second component\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a lock constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of a new lock constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddLockCons\nComp1 [in] pick-path of first component\nComp2 [in] pick-path of second component\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a lock constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a distance constraint using cvxCompAddDistanceCons function?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddDistanceCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nPnt1 [in] coordinate of the coincidence point on the first entity (NULL to ignore)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nPnt2 [in] coordinate of the coincidence point on the second entity (NULL to ignore)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a distance constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to add a distance constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddDistanceCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nPnt1 [in] coordinate of the coincidence point on the first entity (NULL to ignore)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nPnt2 [in] coordinate of the coincidence point on the second entity (NULL to ignore)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a distance constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to specify custom data for the distance constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddDistanceCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nPnt1 [in] coordinate of the coincidence point on the first entity (NULL to ignore)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nPnt2 [in] coordinate of the coincidence point on the second entity (NULL to ignore)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a distance constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a middle constraint with the given base entities?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddMiddleCons\nBaseEnt1 [in] pick-path of first base entity (face,datum)\nBaseEnt2 [in] pick-path of second base entity (face,datum)\nnCenter [in] number of center entities (1 or 2)\nCenterEnts [in] list of center entities (edge,curve,face,datum)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a middle constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to add a middle constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddMiddleCons\nBaseEnt1 [in] pick-path of first base entity (face,datum)\nBaseEnt2 [in] pick-path of second base entity (face,datum)\nnCenter [in] number of center entities (1 or 2)\nCenterEnts [in] list of center entities (edge,curve,face,datum)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a middle constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is it possible to add a middle constraint with custom constraint data?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddMiddleCons\nBaseEnt1 [in] pick-path of first base entity (face,datum)\nBaseEnt2 [in] pick-path of second base entity (face,datum)\nnCenter [in] number of center entities (1 or 2)\nCenterEnts [in] list of center entities (edge,curve,face,datum)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a middle constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a symmetry constraint using pick-path of a plane and two symmetric entities?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddSymmetryCons\nPlane [in] pick-path of plane (face,datum)\nSymEnt1 [in] pick-path of first symmetric entity(edge,curve,face,datum,point,datum axis)\nSymEnt2 [in] pick-path of second symmetric entity(edge,curve,face,datum,point,datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a symmetry constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to create a symmetry constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddSymmetryCons\nPlane [in] pick-path of plane (face,datum)\nSymEnt1 [in] pick-path of first symmetric entity(edge,curve,face,datum,point,datum axis)\nSymEnt2 [in] pick-path of second symmetric entity(edge,curve,face,datum,point,datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a symmetry constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to customize the constraint data when adding a symmetry constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddSymmetryCons\nPlane [in] pick-path of plane (face,datum)\nSymEnt1 [in] pick-path of first symmetric entity(edge,curve,face,datum,point,datum axis)\nSymEnt2 [in] pick-path of second symmetric entity(edge,curve,face,datum,point,datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a symmetry constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddFrameCons\nDatum1 [in] pick-path of first datum (datum plane, datum CSYS)\nDatum2 [in] pick-path of second datum (datum plane, datum CSYS)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a frame constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddFrameCons\nDatum1 [in] pick-path of first datum (datum plane, datum CSYS)\nDatum2 [in] pick-path of second datum (datum plane, datum CSYS)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a frame constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddFrameCons\nDatum1 [in] pick-path of first datum (datum plane, datum CSYS)\nDatum2 [in] pick-path of second datum (datum plane, datum CSYS)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a frame constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a gear constraint using pick-path of entities?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddGearCons\nGear1 [in] pick-path of first entity (edge, curve, face, datum plane, point, datum axis)\nGear2 [in] pick-path of second entity (edge, curve, face, datum plane, point, datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a gear constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to add a gear constraint between two entities?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddGearCons\nGear1 [in] pick-path of first entity (edge, curve, face, datum plane, point, datum axis)\nGear2 [in] pick-path of second entity (edge, curve, face, datum plane, point, datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a gear constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use custom data to create a gear constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddGearCons\nGear1 [in] pick-path of first entity (edge, curve, face, datum plane, point, datum axis)\nGear2 [in] pick-path of second entity (edge, curve, face, datum plane, point, datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a gear constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a path constraint using cvxCompAddPathCons function?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddPathCons\nPnt [in] point on component (edge, curve, face, datum plane, point)\nnPaths [in] number of paths\nPaths [in] pick-path list of paths to align to, the curves must be G1 continuous (edge, curve)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a path constraint. If multiple curves or edges are input as constraint paths, all curves or edges are required to come from the same component and G1 continuous between curves or edges."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the required parameters to create a path constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddPathCons\nPnt [in] point on component (edge, curve, face, datum plane, point)\nnPaths [in] number of paths\nPaths [in] pick-path list of paths to align to, the curves must be G1 continuous (edge, curve)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a path constraint. If multiple curves or edges are input as constraint paths, all curves or edges are required to come from the same component and G1 continuous between curves or edges."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is it possible to use default constraint custom data while creating a path constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddPathCons\nPnt [in] point on component (edge, curve, face, datum plane, point)\nnPaths [in] number of paths\nPaths [in] pick-path list of paths to align to, the curves must be G1 continuous (edge, curve)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a path constraint. If multiple curves or edges are input as constraint paths, all curves or edges are required to come from the same component and G1 continuous between curves or edges."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a linear couple constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddLinearCoupleCons\nComp1 [in] pick-path of the first component\nDir1 [in] pick-path of the entity to specify the first component move direction (edge, curve, face, datum, point)\nComp2 [in] pick-path of the second component\nDir2 [in] pick-path of the entity to specify the second component move direction (edge, curve, face, datum, point)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a linear couple constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to add a linear couple constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddLinearCoupleCons\nComp1 [in] pick-path of the first component\nDir1 [in] pick-path of the entity to specify the first component move direction (edge, curve, face, datum, point)\nComp2 [in] pick-path of the second component\nDir2 [in] pick-path of the entity to specify the second component move direction (edge, curve, face, datum, point)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a linear couple constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to specify the move direction for the first and second component in a linear couple constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddLinearCoupleCons\nComp1 [in] pick-path of the first component\nDir1 [in] pick-path of the entity to specify the first component move direction (edge, curve, face, datum, point)\nComp2 [in] pick-path of the second component\nDir2 [in] pick-path of the entity to specify the second component move direction (edge, curve, face, datum, point)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a linear couple constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a rack and pinion constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddRackPinionCons\nRack [in] pick-path of first entity (edge, curve, face, datum plane, point, datum axis)\nPinion [in] pick-path of second entity (edge, curve, face, datum plane, point, datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a rack and pinion constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to add a rack and pinion constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddRackPinionCons\nRack [in] pick-path of first entity (edge, curve, face, datum plane, point, datum axis)\nPinion [in] pick-path of second entity (edge, curve, face, datum plane, point, datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a rack and pinion constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to specify custom data for the rack and pinion constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddRackPinionCons\nRack [in] pick-path of first entity (edge, curve, face, datum plane, point, datum axis)\nPinion [in] pick-path of second entity (edge, curve, face, datum plane, point, datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a rack and pinion constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of the new rack and pinion constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddRackPinionCons\nRack [in] pick-path of first entity (edge, curve, face, datum plane, point, datum axis)\nPinion [in] pick-path of second entity (edge, curve, face, datum plane, point, datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a rack and pinion constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a screw constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddScrewCons\nScrewEnt [in] pick-path of screw entity (edge, curve, face, datum plane, point, datum axis)\nLinearEnt [in] pick-path of linear entity (edge, curve, face, datum plane, point, datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a screw constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to add a screw constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddScrewCons\nScrewEnt [in] pick-path of screw entity (edge, curve, face, datum plane, point, datum axis)\nLinearEnt [in] pick-path of linear entity (edge, curve, face, datum plane, point, datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a screw constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a screw constraint with custom data?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddScrewCons\nScrewEnt [in] pick-path of screw entity (edge, curve, face, datum plane, point, datum axis)\nLinearEnt [in] pick-path of linear entity (edge, curve, face, datum plane, point, datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a screw constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a slot constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddSlotCons\nEnt [in] pick-path of the first entity (edge, curve, face, datum plane, point, datum axis)\nnSlots [in] number of slot faces\nSlots [in] pick-path list of slot faces\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a slot constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to add a slot constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddSlotCons\nEnt [in] pick-path of the first entity (edge, curve, face, datum plane, point, datum axis)\nnSlots [in] number of slot faces\nSlots [in] pick-path list of slot faces\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a slot constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the function to add a slot constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddSlotCons\nEnt [in] pick-path of the first entity (edge, curve, face, datum plane, point, datum axis)\nnSlots [in] number of slot faces\nSlots [in] pick-path list of slot faces\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a slot constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a Cam constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddCamCons\nEnt [in] pick-path of the first entity (edge, curve, face, datum plane, point, datum axis)\nnCamFaces [in] number of cam faces\nCamFaces [in] pick-path list of cam faces\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a Cam constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to add a Cam constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddCamCons\nEnt [in] pick-path of the first entity (edge, curve, face, datum plane, point, datum axis)\nnCamFaces [in] number of cam faces\nCamFaces [in] pick-path list of cam faces\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a Cam constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the function to add a Cam constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddCamCons\nEnt [in] pick-path of the first entity (edge, curve, face, datum plane, point, datum axis)\nnCamFaces [in] number of cam faces\nCamFaces [in] pick-path list of cam faces\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a Cam constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a universal joint constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddUniJointCons\nShaft1 [in] pick-path of first cross or propeller entity (edge, curve, face, datum axis)\nHingePnt1 [in] the first hinge point on entity (edge, curve, face, datum, point) (NULL to ignore)\nShaft2 [in] pick-path of second cross or propeller entity (edge, curve, face, datum axis)\nHingePnt2 [in] the second hinge point on entity (edge, curve, face, datum, point) (NULL to ignore)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a universal joint constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to add a universal joint constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddUniJointCons\nShaft1 [in] pick-path of first cross or propeller entity (edge, curve, face, datum axis)\nHingePnt1 [in] the first hinge point on entity (edge, curve, face, datum, point) (NULL to ignore)\nShaft2 [in] pick-path of second cross or propeller entity (edge, curve, face, datum axis)\nHingePnt2 [in] the second hinge point on entity (edge, curve, face, datum, point) (NULL to ignore)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a universal joint constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to specify the first and second hinge points for the universal joint constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddUniJointCons\nShaft1 [in] pick-path of first cross or propeller entity (edge, curve, face, datum axis)\nHingePnt1 [in] the first hinge point on entity (edge, curve, face, datum, point) (NULL to ignore)\nShaft2 [in] pick-path of second cross or propeller entity (edge, curve, face, datum axis)\nHingePnt2 [in] the second hinge point on entity (edge, curve, face, datum, point) (NULL to ignore)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a universal joint constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to pick the first and second cross or propeller entity for the universal joint constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddUniJointCons\nShaft1 [in] pick-path of first cross or propeller entity (edge, curve, face, datum axis)\nHingePnt1 [in] the first hinge point on entity (edge, curve, face, datum, point) (NULL to ignore)\nShaft2 [in] pick-path of second cross or propeller entity (edge, curve, face, datum axis)\nHingePnt2 [in] the second hinge point on entity (edge, curve, face, datum, point) (NULL to ignore)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a universal joint constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create an alignment constraint between two shapes or components?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAlign\nAlign [in] alignment constraint\n\nCreates an alignment constraint between two shapes or components."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to align two shapes or components using a constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAlign\nAlign [in] alignment constraint\n\nCreates an alignment constraint between two shapes or components."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the 'cvxPartAlign' function to align two components?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAlign\nAlign [in] alignment constraint\n\nCreates an alignment constraint between two shapes or components."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to anchor a component in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAnchor\nidEntity [in] component or shape id in active part\n\nAnchors the specified component or shape so that it does not move when alignment constraints are created between it and another component/shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to prevent a component from moving when creating alignment constraints?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAnchor\nidEntity [in] component or shape id in active part\n\nAnchors the specified component or shape so that it does not move when alignment constraints are created between it and another component/shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to fix the position of a component or shape in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAnchor\nidEntity [in] component or shape id in active part\n\nAnchors the specified component or shape so that it does not move when alignment constraints are created between it and another component/shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the assembly pattern data?"
            },
            {
                "role": "assistant",
                "content": "cvxCompPtnInit\ntype [in] assembly pattern type\ndata [out] assembly pattern data\n\nInitialize the svxAsmPtnData structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize svxAsmPtnData structure?"
            },
            {
                "role": "assistant",
                "content": "cvxCompPtnInit\ntype [in] assembly pattern type\ndata [out] assembly pattern data\n\nInitialize the svxAsmPtnData structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize assembly pattern type?"
            },
            {
                "role": "assistant",
                "content": "cvxCompPtnInit\ntype [in] assembly pattern type\ndata [out] assembly pattern data\n\nInitialize the svxAsmPtnData structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxCompPtn to build an assembly pattern?"
            },
            {
                "role": "assistant",
                "content": "cvxCompPtn\ndata [in] assembly pattern input data\nidPattern [out] id of pattern feature (NULL to ignore)\n\nUse this function to bulid assembly pattern.Six different methods of pattern are available, each method requires different types of input.\nnote:\nInterface cvxAsmPtnInit() can initialize variables assembly pattern of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the six different methods of assembly pattern available in cvxCompPtn?"
            },
            {
                "role": "assistant",
                "content": "cvxCompPtn\ndata [in] assembly pattern input data\nidPattern [out] id of pattern feature (NULL to ignore)\n\nUse this function to bulid assembly pattern.Six different methods of pattern are available, each method requires different types of input.\nnote:\nInterface cvxAsmPtnInit() can initialize variables assembly pattern of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize variables for assembly pattern using cvxAsmPtnInit()?"
            },
            {
                "role": "assistant",
                "content": "cvxCompPtn\ndata [in] assembly pattern input data\nidPattern [out] id of pattern feature (NULL to ignore)\n\nUse this function to bulid assembly pattern.Six different methods of pattern are available, each method requires different types of input.\nnote:\nInterface cvxAsmPtnInit() can initialize variables assembly pattern of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the assembly move data structure?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMoveInit\ntype [in] assembly move type\ndata [out] assembly move data\n\nInitialize the svxAsmMoveData structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize svxAsmMoveData structure?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMoveInit\ntype [in] assembly move type\ndata [out] assembly move data\n\nInitialize the svxAsmMoveData structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize the assembly move type?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMoveInit\ntype [in] assembly move type\ndata [out] assembly move data\n\nInitialize the svxAsmMoveData structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to build an assembly move using cvxCompMove function?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMove\ndata [in] assembly move input data\n\nUse this function to build assembly move. Six different methods of pattern are available, each method requires different types of input.\nnote:\nInterface cvxAsmMoveInit() can initialize variables assembly move of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the six different methods of pattern available in cvxCompMove function?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMove\ndata [in] assembly move input data\n\nUse this function to build assembly move. Six different methods of pattern are available, each method requires different types of input.\nnote:\nInterface cvxAsmMoveInit() can initialize variables assembly move of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What types of input are required for each method of pattern in cvxCompMove function?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMove\ndata [in] assembly move input data\n\nUse this function to build assembly move. Six different methods of pattern are available, each method requires different types of input.\nnote:\nInterface cvxAsmMoveInit() can initialize variables assembly move of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the assembly mirror structure?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMirrorInit\ntype [in] assembly mirror type\ndata [out] assembly mirror data\n\nInitialize the svxAsmMirror structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize svxAsmMirror structure?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMirrorInit\ntype [in] assembly mirror type\ndata [out] assembly mirror data\n\nInitialize the svxAsmMirror structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize assembly mirror data?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMirrorInit\ntype [in] assembly mirror type\ndata [out] assembly mirror data\n\nInitialize the svxAsmMirror structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to build an assembly mirror using cvxCompMirror function?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMirror\ndata [in] assembly mirror input data\nidMirror [out] id of mirror feature (NULL to ignore)\n\nUse this function to build assembly mirror. Two different methods of mirror are available, each method requires different types of input.\nnote:\nInterface cvxCompMirrorInit() can initialize variables assembly mirror of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the different methods available for assembly mirror in cvxCompMirror function?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMirror\ndata [in] assembly mirror input data\nidMirror [out] id of mirror feature (NULL to ignore)\n\nUse this function to build assembly mirror. Two different methods of mirror are available, each method requires different types of input.\nnote:\nInterface cvxCompMirrorInit() can initialize variables assembly mirror of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize variables for assembly mirror using cvxCompMirrorInit() function?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMirror\ndata [in] assembly mirror input data\nidMirror [out] id of mirror feature (NULL to ignore)\n\nUse this function to build assembly mirror. Two different methods of mirror are available, each method requires different types of input.\nnote:\nInterface cvxCompMirrorInit() can initialize variables assembly mirror of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the assembly cut data?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmCutInit\ndata [out] assembly cut data\n\nInitialize the svxAsmCut structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything inside the assembly cut data?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmCutInit\ndata [out] assembly cut data\n\nInitialize the svxAsmCut structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize the svxAsmCut structure?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmCutInit\ndata [out] assembly cut data\n\nInitialize the svxAsmCut structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create an assembly cut?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmCut\ndata [in] assembly mirror input data\nidCut [out] id of cut feature (NULL to ignore)\n\nUse this function to build assembly cut.\nnote:\nInterface cvxAsmCutInit() can initialize variables assembly cut of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for assembly cut?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmCut\ndata [in] assembly mirror input data\nidCut [out] id of cut feature (NULL to ignore)\n\nUse this function to build assembly cut.\nnote:\nInterface cvxAsmCutInit() can initialize variables assembly cut of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the cut feature after creating an assembly cut?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmCut\ndata [in] assembly mirror input data\nidCut [out] id of cut feature (NULL to ignore)\n\nUse this function to build assembly cut.\nnote:\nInterface cvxAsmCutInit() can initialize variables assembly cut of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the assembly fillet data structure?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmFilletInit\ntype [in] assembly fillet type\ndata [out] assembly fillet data\n\nInitialize the svxAsmFllt structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize the assembly fillet type?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmFilletInit\ntype [in] assembly fillet type\ndata [out] assembly fillet data\n\nInitialize the svxAsmFllt structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to empty everything inside the assembly fillet data?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmFilletInit\ntype [in] assembly fillet type\ndata [out] assembly fillet data\n\nInitialize the svxAsmFllt structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxAsmFillet\ndata [in] assembly fillet input data\nidFllt [out] id of fillet feature (NULL to ignore)\n\nUse this function to build assembly fillet. Three different methods of fillet are available, each method requires different types of input.\nnote:\nInterface cvxAsmFilletInit() can initialize variables assembly fillet of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxAsmFillet\ndata [in] assembly fillet input data\nidFllt [out] id of fillet feature (NULL to ignore)\n\nUse this function to build assembly fillet. Three different methods of fillet are available, each method requires different types of input.\nnote:\nInterface cvxAsmFilletInit() can initialize variables assembly fillet of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxAsmFillet\ndata [in] assembly fillet input data\nidFllt [out] id of fillet feature (NULL to ignore)\n\nUse this function to build assembly fillet. Three different methods of fillet are available, each method requires different types of input.\nnote:\nInterface cvxAsmFilletInit() can initialize variables assembly fillet of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the assembly chamfer data?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmChamferInit\ntype [in] assembly chamfer type\ndata [out] assembly chamfer data\n\nInitialize the svxAsmChmf structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize the svxAsmChmf structure?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmChamferInit\ntype [in] assembly chamfer type\ndata [out] assembly chamfer data\n\nInitialize the svxAsmChmf structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to empty everything and initialize the assembly chamfer data?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmChamferInit\ntype [in] assembly chamfer type\ndata [out] assembly chamfer data\n\nInitialize the svxAsmChmf structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to build assembly chamfer using this function?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmChamfer\ndata [in] assembly chamfer input data\nidChmf [out] id of chamfer feature (NULL to ignore)\n\nUse this function to build assembly chamfer. Two different methods of chamfer are available, each method requires different types of input.\nnote:\nInterface cvxAsmChamferInit() can initialize variables assembly chamfer of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the different methods available for assembly chamfer?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmChamfer\ndata [in] assembly chamfer input data\nidChmf [out] id of chamfer feature (NULL to ignore)\n\nUse this function to build assembly chamfer. Two different methods of chamfer are available, each method requires different types of input.\nnote:\nInterface cvxAsmChamferInit() can initialize variables assembly chamfer of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for assembly chamfer?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmChamfer\ndata [in] assembly chamfer input data\nidChmf [out] id of chamfer feature (NULL to ignore)\n\nUse this function to build assembly chamfer. Two different methods of chamfer are available, each method requires different types of input.\nnote:\nInterface cvxAsmChamferInit() can initialize variables assembly chamfer of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check for intersection between two shapes from different components?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsectShpChk\nBaseShpPath [in] the first shape in a component\nOpShpPath [in] the second shape in other component\nfInterfer [out] if found interference, output V_TRUE, otherwise output V_FALSE\n\nDetermine exist or not exist intersection between the input two shapes which come from two components."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if there is an interference between two shapes?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsectShpChk\nBaseShpPath [in] the first shape in a component\nOpShpPath [in] the second shape in other component\nfInterfer [out] if found interference, output V_TRUE, otherwise output V_FALSE\n\nDetermine exist or not exist intersection between the input two shapes which come from two components."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I find out if there is an intersection between two shapes from different components?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsectShpChk\nBaseShpPath [in] the first shape in a component\nOpShpPath [in] the second shape in other component\nfInterfer [out] if found interference, output V_TRUE, otherwise output V_FALSE\n\nDetermine exist or not exist intersection between the input two shapes which come from two components."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check for intersection between two shapes from different components?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsectShpChk2\nBaseShpPath [in] the first shape in a component\nOpShpPath [in] the second shape in other component\nfClosedChk [in] option to control whether check the open shell 1 is excluding the open shell. otherwise is 0\nfInterfer [out] if found interference, output V_TRUE, otherwise output V_FALSE\n\nDetermine exist or not exist intersection between the input two shapes which come from two components."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if there is an interference between two shapes?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsectShpChk2\nBaseShpPath [in] the first shape in a component\nOpShpPath [in] the second shape in other component\nfClosedChk [in] option to control whether check the open shell 1 is excluding the open shell. otherwise is 0\nfInterfer [out] if found interference, output V_TRUE, otherwise output V_FALSE\n\nDetermine exist or not exist intersection between the input two shapes which come from two components."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I find out if there is an intersection between two shapes from different components?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsectShpChk2\nBaseShpPath [in] the first shape in a component\nOpShpPath [in] the second shape in other component\nfClosedChk [in] option to control whether check the open shell 1 is excluding the open shell. otherwise is 0\nfInterfer [out] if found interference, output V_TRUE, otherwise output V_FALSE\n\nDetermine exist or not exist intersection between the input two shapes which come from two components."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check for interference between two components?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIferCheck\nBaseComp [in] pick path of the first Component, can be NULL\nChkComp [in] pick path of the second Component, can be NULL\nSubAsmAsWhole [in] 1:sub-assembly as a whole, don't check interference inside sub-assembly 0:check interference inside sub-assembly\nIgnoreHidden [in] whether to ignore the hidden components within the sub-assembly\nIferCnt [out] number of interference\nIferResults [out] pointer to list of interference result data\n\nCheck if there is interference between the input components and output the interference result. all components in current assembly are checked when both of the input component paths are NULL.\nThe memory referenced by \"IferResults\" is allocated by this function. The calling procedure is responsible to free it (cvxMemFree((void**)IferResults))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to ignore hidden components while checking for interference?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIferCheck\nBaseComp [in] pick path of the first Component, can be NULL\nChkComp [in] pick path of the second Component, can be NULL\nSubAsmAsWhole [in] 1:sub-assembly as a whole, don't check interference inside sub-assembly 0:check interference inside sub-assembly\nIgnoreHidden [in] whether to ignore the hidden components within the sub-assembly\nIferCnt [out] number of interference\nIferResults [out] pointer to list of interference result data\n\nCheck if there is interference between the input components and output the interference result. all components in current assembly are checked when both of the input component paths are NULL.\nThe memory referenced by \"IferResults\" is allocated by this function. The calling procedure is responsible to free it (cvxMemFree((void**)IferResults))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of interferences found?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIferCheck\nBaseComp [in] pick path of the first Component, can be NULL\nChkComp [in] pick path of the second Component, can be NULL\nSubAsmAsWhole [in] 1:sub-assembly as a whole, don't check interference inside sub-assembly 0:check interference inside sub-assembly\nIgnoreHidden [in] whether to ignore the hidden components within the sub-assembly\nIferCnt [out] number of interference\nIferResults [out] pointer to list of interference result data\n\nCheck if there is interference between the input components and output the interference result. all components in current assembly are checked when both of the input component paths are NULL.\nThe memory referenced by \"IferResults\" is allocated by this function. The calling procedure is responsible to free it (cvxMemFree((void**)IferResults))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get the interference result data for the checked components?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIferCheck\nBaseComp [in] pick path of the first Component, can be NULL\nChkComp [in] pick path of the second Component, can be NULL\nSubAsmAsWhole [in] 1:sub-assembly as a whole, don't check interference inside sub-assembly 0:check interference inside sub-assembly\nIgnoreHidden [in] whether to ignore the hidden components within the sub-assembly\nIferCnt [out] number of interference\nIferResults [out] pointer to list of interference result data\n\nCheck if there is interference between the input components and output the interference result. all components in current assembly are checked when both of the input component paths are NULL.\nThe memory referenced by \"IferResults\" is allocated by this function. The calling procedure is responsible to free it (cvxMemFree((void**)IferResults))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate clearance between components?"
            },
            {
                "role": "assistant",
                "content": "cvxCompClearCheck\nCount [in] number of components or shapes (0 to check the whole assembly)\nComps [in] list of components or shapes (NULL to check the whole assembly)\nClear [in] clearance threshold, only results with clearance value less than the threshold are output\nChkCompShp [in] whether to check clearance between component and top shape (0 = no, 1 = yes)\nIgnoreHidden [in] whether to ignore hidden components (0 = no, 1 = yes)\nChkSubAsm [in] whether to check sub-assembly internal parts clearance (0 = no, 1 = yes)\nClrCnt [out] number of clearance check results\nClrDatas [out] list of clearance check results\n\nCalculate the clearance between the input components and output the clearance result. all components in current assembly are checked when the input component paths are NULL.\nThe memory referenced by \"ClrDatas\" is allocated by this function. The calling procedure is responsible to free it (cvxMemFree((void**)ClrDatas))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check clearance for the whole assembly?"
            },
            {
                "role": "assistant",
                "content": "cvxCompClearCheck\nCount [in] number of components or shapes (0 to check the whole assembly)\nComps [in] list of components or shapes (NULL to check the whole assembly)\nClear [in] clearance threshold, only results with clearance value less than the threshold are output\nChkCompShp [in] whether to check clearance between component and top shape (0 = no, 1 = yes)\nIgnoreHidden [in] whether to ignore hidden components (0 = no, 1 = yes)\nChkSubAsm [in] whether to check sub-assembly internal parts clearance (0 = no, 1 = yes)\nClrCnt [out] number of clearance check results\nClrDatas [out] list of clearance check results\n\nCalculate the clearance between the input components and output the clearance result. all components in current assembly are checked when the input component paths are NULL.\nThe memory referenced by \"ClrDatas\" is allocated by this function. The calling procedure is responsible to free it (cvxMemFree((void**)ClrDatas))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to ignore hidden components while checking clearance?"
            },
            {
                "role": "assistant",
                "content": "cvxCompClearCheck\nCount [in] number of components or shapes (0 to check the whole assembly)\nComps [in] list of components or shapes (NULL to check the whole assembly)\nClear [in] clearance threshold, only results with clearance value less than the threshold are output\nChkCompShp [in] whether to check clearance between component and top shape (0 = no, 1 = yes)\nIgnoreHidden [in] whether to ignore hidden components (0 = no, 1 = yes)\nChkSubAsm [in] whether to check sub-assembly internal parts clearance (0 = no, 1 = yes)\nClrCnt [out] number of clearance check results\nClrDatas [out] list of clearance check results\n\nCalculate the clearance between the input components and output the clearance result. all components in current assembly are checked when the input component paths are NULL.\nThe memory referenced by \"ClrDatas\" is allocated by this function. The calling procedure is responsible to free it (cvxMemFree((void**)ClrDatas))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I check clearance between component and top shape?"
            },
            {
                "role": "assistant",
                "content": "cvxCompClearCheck\nCount [in] number of components or shapes (0 to check the whole assembly)\nComps [in] list of components or shapes (NULL to check the whole assembly)\nClear [in] clearance threshold, only results with clearance value less than the threshold are output\nChkCompShp [in] whether to check clearance between component and top shape (0 = no, 1 = yes)\nIgnoreHidden [in] whether to ignore hidden components (0 = no, 1 = yes)\nChkSubAsm [in] whether to check sub-assembly internal parts clearance (0 = no, 1 = yes)\nClrCnt [out] number of clearance check results\nClrDatas [out] list of clearance check results\n\nCalculate the clearance between the input components and output the clearance result. all components in current assembly are checked when the input component paths are NULL.\nThe memory referenced by \"ClrDatas\" is allocated by this function. The calling procedure is responsible to free it (cvxMemFree((void**)ClrDatas))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free memory allocated by clearance check results?"
            },
            {
                "role": "assistant",
                "content": "cvxCompClearCheck\nCount [in] number of components or shapes (0 to check the whole assembly)\nComps [in] list of components or shapes (NULL to check the whole assembly)\nClear [in] clearance threshold, only results with clearance value less than the threshold are output\nChkCompShp [in] whether to check clearance between component and top shape (0 = no, 1 = yes)\nIgnoreHidden [in] whether to ignore hidden components (0 = no, 1 = yes)\nChkSubAsm [in] whether to check sub-assembly internal parts clearance (0 = no, 1 = yes)\nClrCnt [out] number of clearance check results\nClrDatas [out] list of clearance check results\n\nCalculate the clearance between the input components and output the clearance result. all components in current assembly are checked when the input component paths are NULL.\nThe memory referenced by \"ClrDatas\" is allocated by this function. The calling procedure is responsible to free it (cvxMemFree((void**)ClrDatas))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a copy of external geometry in the active target part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRefGeom\nGeomPath [in] pick-path of external geometry relative to top-level parent file\nAssociativeCopy [in] 0 for static copy; \n\n 1 for associative copy; \n\n 2 for time-stamped associative copy; \n\n 3 for time-stamped associative copy - assembly position independent.\nidGeom [out] id of new geometry (NULL to ignore)\n\nCreates a copy of the specified external geometry (face, shape, curve or edge) in the active target part. The input pick-path must give the full traversal path to the external geometry relative to the top-level part of the parent assembly of the active target part. The id of the new geometry created in the active part is output via \"idGeom\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the pick-path of external geometry relative to the top-level parent file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRefGeom\nGeomPath [in] pick-path of external geometry relative to top-level parent file\nAssociativeCopy [in] 0 for static copy; \n\n 1 for associative copy; \n\n 2 for time-stamped associative copy; \n\n 3 for time-stamped associative copy - assembly position independent.\nidGeom [out] id of new geometry (NULL to ignore)\n\nCreates a copy of the specified external geometry (face, shape, curve or edge) in the active target part. The input pick-path must give the full traversal path to the external geometry relative to the top-level part of the parent assembly of the active target part. The id of the new geometry created in the active part is output via \"idGeom\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the type of copy for the external geometry?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRefGeom\nGeomPath [in] pick-path of external geometry relative to top-level parent file\nAssociativeCopy [in] 0 for static copy; \n\n 1 for associative copy; \n\n 2 for time-stamped associative copy; \n\n 3 for time-stamped associative copy - assembly position independent.\nidGeom [out] id of new geometry (NULL to ignore)\n\nCreates a copy of the specified external geometry (face, shape, curve or edge) in the active target part. The input pick-path must give the full traversal path to the external geometry relative to the top-level part of the parent assembly of the active target part. The id of the new geometry created in the active part is output via \"idGeom\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the id of the new geometry created in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRefGeom\nGeomPath [in] pick-path of external geometry relative to top-level parent file\nAssociativeCopy [in] 0 for static copy; \n\n 1 for associative copy; \n\n 2 for time-stamped associative copy; \n\n 3 for time-stamped associative copy - assembly position independent.\nidGeom [out] id of new geometry (NULL to ignore)\n\nCreates a copy of the specified external geometry (face, shape, curve or edge) in the active target part. The input pick-path must give the full traversal path to the external geometry relative to the top-level part of the parent assembly of the active target part. The id of the new geometry created in the active part is output via \"idGeom\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a publication set for specified entities?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPublishSet\nName [in] name of publication set (NULL to use default name)\nCount [in] number of entities to publish\nidEnts [in] list of entity ids to publish (shape, face, edge, curve, point, sketch, datum plane, datum axis, datum CSYS)\nidPubSet [out] id of new publication set (NULL to ignore)\n\nUse the function to create a publication set to publish the specified entity.\nsee:\ncvxPartInqPublishSets(): get a list of indices of the publication set. \nsee:\ncvxPartInqPublishSet(): query data of the specified publication set. \nsee:\ncvxPartPublishSetDel(): delete the specified publication sets."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the list of publication sets indices?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPublishSet\nName [in] name of publication set (NULL to use default name)\nCount [in] number of entities to publish\nidEnts [in] list of entity ids to publish (shape, face, edge, curve, point, sketch, datum plane, datum axis, datum CSYS)\nidPubSet [out] id of new publication set (NULL to ignore)\n\nUse the function to create a publication set to publish the specified entity.\nsee:\ncvxPartInqPublishSets(): get a list of indices of the publication set. \nsee:\ncvxPartInqPublishSet(): query data of the specified publication set. \nsee:\ncvxPartPublishSetDel(): delete the specified publication sets."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to query data of a specific publication set?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPublishSet\nName [in] name of publication set (NULL to use default name)\nCount [in] number of entities to publish\nidEnts [in] list of entity ids to publish (shape, face, edge, curve, point, sketch, datum plane, datum axis, datum CSYS)\nidPubSet [out] id of new publication set (NULL to ignore)\n\nUse the function to create a publication set to publish the specified entity.\nsee:\ncvxPartInqPublishSets(): get a list of indices of the publication set. \nsee:\ncvxPartInqPublishSet(): query data of the specified publication set. \nsee:\ncvxPartPublishSetDel(): delete the specified publication sets."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a specified publication set?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPublishSet\nName [in] name of publication set (NULL to use default name)\nCount [in] number of entities to publish\nidEnts [in] list of entity ids to publish (shape, face, edge, curve, point, sketch, datum plane, datum axis, datum CSYS)\nidPubSet [out] id of new publication set (NULL to ignore)\n\nUse the function to create a publication set to publish the specified entity.\nsee:\ncvxPartInqPublishSets(): get a list of indices of the publication set. \nsee:\ncvxPartInqPublishSet(): query data of the specified publication set. \nsee:\ncvxPartPublishSetDel(): delete the specified publication sets."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a new datum axis to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAxisNew\nAxis [in] Axis data\nidAxis [out] id of new datum Axis (NULL to ignore)\n\nThis function add a new datum axis to the active part according to the *Axis. If \"idAxis\" is not NULL, the id of the new datum axis is output.\nnote:\nInterface cvxMemZero() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a new datum axis?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAxisNew\nAxis [in] Axis data\nidAxis [out] id of new datum Axis (NULL to ignore)\n\nThis function add a new datum axis to the active part according to the *Axis. If \"idAxis\" is not NULL, the id of the new datum axis is output.\nnote:\nInterface cvxMemZero() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new datum axis after adding it to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAxisNew\nAxis [in] Axis data\nidAxis [out] id of new datum Axis (NULL to ignore)\n\nThis function add a new datum axis to the active part according to the *Axis. If \"idAxis\" is not NULL, the id of the new datum axis is output.\nnote:\nInterface cvxMemZero() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a datum plane to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDatum\nFrame [in] transformation matrix\nidDatum [out] id of new datum\n\nAdds a datum plane to the active part, aligned with the specified local coordinate frame. If \"idDatum\" is not NULL, the id of the new datum is output.\nIf Frame is invalid, it will use the identity matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to align a datum plane with a local coordinate frame?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDatum\nFrame [in] transformation matrix\nidDatum [out] id of new datum\n\nAdds a datum plane to the active part, aligned with the specified local coordinate frame. If \"idDatum\" is not NULL, the id of the new datum is output.\nIf Frame is invalid, it will use the identity matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the id of the new datum plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDatum\nFrame [in] transformation matrix\nidDatum [out] id of new datum\n\nAdds a datum plane to the active part, aligned with the specified local coordinate frame. If \"idDatum\" is not NULL, the id of the new datum is output.\nIf Frame is invalid, it will use the identity matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a datum plane to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDatum2\nFrame [in] transformation matrix\niCode [in] position code ,1 add label to entity, 0 don't\nidDatum [out] id of new datum\n\nAdds a datum plane to the active part, aligned with the specified local coordinate frame. \n\n If \"idDatum\" is not NULL, the id of the new datum is output.In addition to need input position \n\n code its function is same as cvxPartDatum(), 1 as the default in cvxPartDatum()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to align a datum plane with a local coordinate frame?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDatum2\nFrame [in] transformation matrix\niCode [in] position code ,1 add label to entity, 0 don't\nidDatum [out] id of new datum\n\nAdds a datum plane to the active part, aligned with the specified local coordinate frame. \n\n If \"idDatum\" is not NULL, the id of the new datum is output.In addition to need input position \n\n code its function is same as cvxPartDatum(), 1 as the default in cvxPartDatum()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the id of the new datum plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDatum2\nFrame [in] transformation matrix\niCode [in] position code ,1 add label to entity, 0 don't\nidDatum [out] id of new datum\n\nAdds a datum plane to the active part, aligned with the specified local coordinate frame. \n\n If \"idDatum\" is not NULL, the id of the new datum is output.In addition to need input position \n\n code its function is same as cvxPartDatum(), 1 as the default in cvxPartDatum()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a new datum plane to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartNewDatum\nFrame [in] transformation matrix\nidDatum [out] id of new datum\n\nThis function add a new datum plane to the active part according to the Frame. \n\n It is different to cvxPartDatum(). If \"idDatum\" is not NULL, the id of the new datum is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the difference between cvxPartNewDatum and cvxPartDatum?"
            },
            {
                "role": "assistant",
                "content": "cvxPartNewDatum\nFrame [in] transformation matrix\nidDatum [out] id of new datum\n\nThis function add a new datum plane to the active part according to the Frame. \n\n It is different to cvxPartDatum(). If \"idDatum\" is not NULL, the id of the new datum is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the id of the new datum after adding it to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartNewDatum\nFrame [in] transformation matrix\nidDatum [out] id of new datum\n\nThis function add a new datum plane to the active part according to the Frame. \n\n It is different to cvxPartDatum(). If \"idDatum\" is not NULL, the id of the new datum is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a datum plane to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlnCrv\nidCrv [in] id of curve entity\nOrigin [in] point at or near plane origin on curve\nXaxis [in] point lying on plane of new datum's X axis (or NULL)\nidPln [out] id of new datum plane (or NULL)\n\nAdds a datum plane to the active part that is normal to the specified curve \"idCrv\", with its origin located at the point on \"idCrv\" that lies closest to the input \"Origin\" point.\nIf the reference point \"Xaxis\" is specified (i.e. not NULL), the new datum plane is oriented so that its X axis lies in the plane that contains \"Xaxis\" and the new datum's Z axis. That is, the point \"Xaxis\" specifies the XZ plane of the new datum."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a datum plane normal to a specified curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlnCrv\nidCrv [in] id of curve entity\nOrigin [in] point at or near plane origin on curve\nXaxis [in] point lying on plane of new datum's X axis (or NULL)\nidPln [out] id of new datum plane (or NULL)\n\nAdds a datum plane to the active part that is normal to the specified curve \"idCrv\", with its origin located at the point on \"idCrv\" that lies closest to the input \"Origin\" point.\nIf the reference point \"Xaxis\" is specified (i.e. not NULL), the new datum plane is oriented so that its X axis lies in the plane that contains \"Xaxis\" and the new datum's Z axis. That is, the point \"Xaxis\" specifies the XZ plane of the new datum."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to specify the origin point for a new datum plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlnCrv\nidCrv [in] id of curve entity\nOrigin [in] point at or near plane origin on curve\nXaxis [in] point lying on plane of new datum's X axis (or NULL)\nidPln [out] id of new datum plane (or NULL)\n\nAdds a datum plane to the active part that is normal to the specified curve \"idCrv\", with its origin located at the point on \"idCrv\" that lies closest to the input \"Origin\" point.\nIf the reference point \"Xaxis\" is specified (i.e. not NULL), the new datum plane is oriented so that its X axis lies in the plane that contains \"Xaxis\" and the new datum's Z axis. That is, the point \"Xaxis\" specifies the XZ plane of the new datum."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to orient a new datum plane using a reference point?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlnCrv\nidCrv [in] id of curve entity\nOrigin [in] point at or near plane origin on curve\nXaxis [in] point lying on plane of new datum's X axis (or NULL)\nidPln [out] id of new datum plane (or NULL)\n\nAdds a datum plane to the active part that is normal to the specified curve \"idCrv\", with its origin located at the point on \"idCrv\" that lies closest to the input \"Origin\" point.\nIf the reference point \"Xaxis\" is specified (i.e. not NULL), the new datum plane is oriented so that its X axis lies in the plane that contains \"Xaxis\" and the new datum's Z axis. That is, the point \"Xaxis\" specifies the XZ plane of the new datum."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a datum plane to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlnCrv2\nidCrv [in] id of curve entity\nOrigin [in] point at or near plane origin on curve\nXaxis [in] point lying on plane of new datum's X axis (or NULL)\nFlip [in] 0-ignore this input; \n\n 1-flip plane 180 degrees about X axis; \n\n 2-flip plane about Y axis; \n\n 3-flip about Z axis\nidPln [out] id of new datum plane (or NULL)\n\nAdds a datum plane to the active part that is normal to the specified curve \"idCrv\", with its origin located at the point on \"idCrv\" that lies closest to the input \"Origin\" point.\nIf the reference point \"Xaxis\" is specified (i.e. not NULL), the new datum plane is oriented so that its X axis lies in the plane that contains \"Xaxis\" and the new datum's Z axis. That is, the point \"Xaxis\" specifies the XZ plane of the new datum.\nIf \"Flip\" is non-zero, flip the datum plane 180 degrees about the specified axis.\nBesides the \"Flip\" argument, the difference between this function and cvxPartPlnCrv() is that \"Origin\" and \"Xaxis\" can be defined more flexibly using the parameters available in \"svxData\". The calling procedure is responsible for defining \"svxData\" correctly.\nnote:\nMake sure you zero the entire \"svxData\" structure before initializing specific parameters {svxData Origin; cvxMemZero(&Origin,sizeof(Origin);}."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a datum plane normal to a specified curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlnCrv2\nidCrv [in] id of curve entity\nOrigin [in] point at or near plane origin on curve\nXaxis [in] point lying on plane of new datum's X axis (or NULL)\nFlip [in] 0-ignore this input; \n\n 1-flip plane 180 degrees about X axis; \n\n 2-flip plane about Y axis; \n\n 3-flip about Z axis\nidPln [out] id of new datum plane (or NULL)\n\nAdds a datum plane to the active part that is normal to the specified curve \"idCrv\", with its origin located at the point on \"idCrv\" that lies closest to the input \"Origin\" point.\nIf the reference point \"Xaxis\" is specified (i.e. not NULL), the new datum plane is oriented so that its X axis lies in the plane that contains \"Xaxis\" and the new datum's Z axis. That is, the point \"Xaxis\" specifies the XZ plane of the new datum.\nIf \"Flip\" is non-zero, flip the datum plane 180 degrees about the specified axis.\nBesides the \"Flip\" argument, the difference between this function and cvxPartPlnCrv() is that \"Origin\" and \"Xaxis\" can be defined more flexibly using the parameters available in \"svxData\". The calling procedure is responsible for defining \"svxData\" correctly.\nnote:\nMake sure you zero the entire \"svxData\" structure before initializing specific parameters {svxData Origin; cvxMemZero(&Origin,sizeof(Origin);}."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to orient a new datum plane using a reference point?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlnCrv2\nidCrv [in] id of curve entity\nOrigin [in] point at or near plane origin on curve\nXaxis [in] point lying on plane of new datum's X axis (or NULL)\nFlip [in] 0-ignore this input; \n\n 1-flip plane 180 degrees about X axis; \n\n 2-flip plane about Y axis; \n\n 3-flip about Z axis\nidPln [out] id of new datum plane (or NULL)\n\nAdds a datum plane to the active part that is normal to the specified curve \"idCrv\", with its origin located at the point on \"idCrv\" that lies closest to the input \"Origin\" point.\nIf the reference point \"Xaxis\" is specified (i.e. not NULL), the new datum plane is oriented so that its X axis lies in the plane that contains \"Xaxis\" and the new datum's Z axis. That is, the point \"Xaxis\" specifies the XZ plane of the new datum.\nIf \"Flip\" is non-zero, flip the datum plane 180 degrees about the specified axis.\nBesides the \"Flip\" argument, the difference between this function and cvxPartPlnCrv() is that \"Origin\" and \"Xaxis\" can be defined more flexibly using the parameters available in \"svxData\". The calling procedure is responsible for defining \"svxData\" correctly.\nnote:\nMake sure you zero the entire \"svxData\" structure before initializing specific parameters {svxData Origin; cvxMemZero(&Origin,sizeof(Origin);}."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a datum plane tangent to a specific face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlnSrf\nidFace [in] id of face entity\nOrigin [in] point at or near plane origin on face\nidPln [out] id of new datum plane (or NULL)\n\nAdds a datum plane to the active part that is tangent to the surface of the specified face \"idFace\", with its origin located at the point on \"idFace\" that lies closest to the input \"Origin\" point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a datum plane on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlnSrf\nidFace [in] id of face entity\nOrigin [in] point at or near plane origin on face\nidPln [out] id of new datum plane (or NULL)\n\nAdds a datum plane to the active part that is tangent to the surface of the specified face \"idFace\", with its origin located at the point on \"idFace\" that lies closest to the input \"Origin\" point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the closest point on a face to a given origin point?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlnSrf\nidFace [in] id of face entity\nOrigin [in] point at or near plane origin on face\nidPln [out] id of new datum plane (or NULL)\n\nAdds a datum plane to the active part that is tangent to the surface of the specified face \"idFace\", with its origin located at the point on \"idFace\" that lies closest to the input \"Origin\" point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a datum plane to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlnSrf2\nidFace [in] id of face entity\nOrigin [in] point at or near plane origin on face\nXZ [in] point on XZ plane (NULL to ignore)\nFlip [in] flip plane about an axis (see DESCRIPTION)\nidPln [out] id of new datum plane (NULL to ignore)\n\nAdds a datum plane to the active part that is tangent to the surface of the specified face \"idFace\", with its origin located at the point on \"idFace\" that lies closest to the input \"Origin\" point and its Z axis pointing along the face's outward normal at \"Origin\".\nIf \"XZ\" is a non-NULL pointer to a 3D point, the point is used to control the plane's orientation by rotating the plane about its Z axis (face's outward normal) until its XZ plane intersects the point.\nIf \"Flip\" is non-zero, the plane is flipped 180 degrees about its X axis (Flip=1), Y axis (Flip=2) or Z axis (Flip=3)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a datum plane tangent to a specified face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlnSrf2\nidFace [in] id of face entity\nOrigin [in] point at or near plane origin on face\nXZ [in] point on XZ plane (NULL to ignore)\nFlip [in] flip plane about an axis (see DESCRIPTION)\nidPln [out] id of new datum plane (NULL to ignore)\n\nAdds a datum plane to the active part that is tangent to the surface of the specified face \"idFace\", with its origin located at the point on \"idFace\" that lies closest to the input \"Origin\" point and its Z axis pointing along the face's outward normal at \"Origin\".\nIf \"XZ\" is a non-NULL pointer to a 3D point, the point is used to control the plane's orientation by rotating the plane about its Z axis (face's outward normal) until its XZ plane intersects the point.\nIf \"Flip\" is non-zero, the plane is flipped 180 degrees about its X axis (Flip=1), Y axis (Flip=2) or Z axis (Flip=3)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to control the orientation of the datum plane using a 3D point?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlnSrf2\nidFace [in] id of face entity\nOrigin [in] point at or near plane origin on face\nXZ [in] point on XZ plane (NULL to ignore)\nFlip [in] flip plane about an axis (see DESCRIPTION)\nidPln [out] id of new datum plane (NULL to ignore)\n\nAdds a datum plane to the active part that is tangent to the surface of the specified face \"idFace\", with its origin located at the point on \"idFace\" that lies closest to the input \"Origin\" point and its Z axis pointing along the face's outward normal at \"Origin\".\nIf \"XZ\" is a non-NULL pointer to a 3D point, the point is used to control the plane's orientation by rotating the plane about its Z axis (face's outward normal) until its XZ plane intersects the point.\nIf \"Flip\" is non-zero, the plane is flipped 180 degrees about its X axis (Flip=1), Y axis (Flip=2) or Z axis (Flip=3)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to flip the plane about its axis?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlnSrf2\nidFace [in] id of face entity\nOrigin [in] point at or near plane origin on face\nXZ [in] point on XZ plane (NULL to ignore)\nFlip [in] flip plane about an axis (see DESCRIPTION)\nidPln [out] id of new datum plane (NULL to ignore)\n\nAdds a datum plane to the active part that is tangent to the surface of the specified face \"idFace\", with its origin located at the point on \"idFace\" that lies closest to the input \"Origin\" point and its Z axis pointing along the face's outward normal at \"Origin\".\nIf \"XZ\" is a non-NULL pointer to a 3D point, the point is used to control the plane's orientation by rotating the plane about its Z axis (face's outward normal) until its XZ plane intersects the point.\nIf \"Flip\" is non-zero, the plane is flipped 180 degrees about its X axis (Flip=1), Y axis (Flip=2) or Z axis (Flip=3)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a new datum Plane to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlaneNew\nPlane [in] Plane data\nidPlane [out] id of new Plane (NULL to ignore)\n\nThis function add a new datum Plane to the active part according to the svxPlaneData. If \"idPlane\" is not NULL, the id of the new datum Plane is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a new plane in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlaneNew\nPlane [in] Plane data\nidPlane [out] id of new Plane (NULL to ignore)\n\nThis function add a new datum Plane to the active part according to the svxPlaneData. If \"idPlane\" is not NULL, the id of the new datum Plane is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new datum Plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlaneNew\nPlane [in] Plane data\nidPlane [out] id of new Plane (NULL to ignore)\n\nThis function add a new datum Plane to the active part according to the svxPlaneData. If \"idPlane\" is not NULL, the id of the new datum Plane is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of adding a new plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlaneAddInit\nmethod [in] New Plane Methods\ndata [out] New template command Plane input data\n\nInitialize the parameters of the cvxPartPlaneAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the methods for initializing a new plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlaneAddInit\nmethod [in] New Plane Methods\ndata [out] New template command Plane input data\n\nInitialize the parameters of the cvxPartPlaneAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before adding a new plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlaneAddInit\nmethod [in] New Plane Methods\ndata [out] New template command Plane input data\n\nInitialize the parameters of the cvxPartPlaneAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a new datum Plane to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlaneAdd\nplane [in] new plane data\nidPlane [out] id of new plane (pass in NULL to ignore)\n\nThis function add a new datum Plane to the active part according to the svxNewPlaneData. If \"idPlane\" is not NULL, the id of the new datum Plane is output.\nThis function is similar to cvxPartPlaneNew(). This interface uses a different command template than cvxPartPlaneNew().\nnote:\nInterface cvxPartPlaneAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for adding a new datum Plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlaneAdd\nplane [in] new plane data\nidPlane [out] id of new plane (pass in NULL to ignore)\n\nThis function add a new datum Plane to the active part according to the svxNewPlaneData. If \"idPlane\" is not NULL, the id of the new datum Plane is output.\nThis function is similar to cvxPartPlaneNew(). This interface uses a different command template than cvxPartPlaneNew().\nnote:\nInterface cvxPartPlaneAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new datum Plane after adding?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlaneAdd\nplane [in] new plane data\nidPlane [out] id of new plane (pass in NULL to ignore)\n\nThis function add a new datum Plane to the active part according to the svxNewPlaneData. If \"idPlane\" is not NULL, the id of the new datum Plane is output.\nThis function is similar to cvxPartPlaneNew(). This interface uses a different command template than cvxPartPlaneNew().\nnote:\nInterface cvxPartPlaneAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartCSYSNew()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCSYSNewInit\nmethod [in] csys method\ndata [out] csys data\n\nInitialize the parameters of the cvxPartCSYSNew().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to initialize the coordinate system?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCSYSNewInit\nmethod [in] csys method\ndata [out] csys data\n\nInitialize the parameters of the cvxPartCSYSNew().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to empty everything before calling cvxPartCSYSNew()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCSYSNewInit\nmethod [in] csys method\ndata [out] csys data\n\nInitialize the parameters of the cvxPartCSYSNew().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a new datum CSYS to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCSYSNew\nCSYS [in] CSYS data\nidCSYS [out] id of new CSYS (NULL to ignore)\n\nThis function add a new datum CSYS to the active part according to the Frame. If \"idCSYS\" is not NULL, the id of the new datum CSYS is output.\nnote:\nInterface cvxPartCSYSNewInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for adding a new datum CSYS?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCSYSNew\nCSYS [in] CSYS data\nidCSYS [out] id of new CSYS (NULL to ignore)\n\nThis function add a new datum CSYS to the active part according to the Frame. If \"idCSYS\" is not NULL, the id of the new datum CSYS is output.\nnote:\nInterface cvxPartCSYSNewInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new datum CSYS?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCSYSNew\nCSYS [in] CSYS data\nidCSYS [out] id of new CSYS (NULL to ignore)\n\nThis function add a new datum CSYS to the active part according to the Frame. If \"idCSYS\" is not NULL, the id of the new datum CSYS is output.\nnote:\nInterface cvxPartCSYSNewInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set a datum/CSYS as the active LCS?"
            },
            {
                "role": "assistant",
                "content": "cvxPartActiveAsLCS\nid [in] id of datum/CSYS\n\nActive the specified datum/CSYS as the LCS."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to make a specific datum/CSYS the active LCS?"
            },
            {
                "role": "assistant",
                "content": "cvxPartActiveAsLCS\nid [in] id of datum/CSYS\n\nActive the specified datum/CSYS as the LCS."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to activate a datum/CSYS as the local coordinate system (LCS)?"
            },
            {
                "role": "assistant",
                "content": "cvxPartActiveAsLCS\nid [in] id of datum/CSYS\n\nActive the specified datum/CSYS as the LCS."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxDEMove structure for part or assembly DE move type?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEMoveInit\ntype [in] part or assembly DE(Direct Edit) move type\ndata [out] part or assembly DE(Direct Edit) move data\n\nInitialize the svxDEMove structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything inside the svxDEMove structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEMoveInit\ntype [in] part or assembly DE(Direct Edit) move type\ndata [out] part or assembly DE(Direct Edit) move data\n\nInitialize the svxDEMove structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize the part or assembly DE move data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEMoveInit\ntype [in] part or assembly DE(Direct Edit) move type\ndata [out] part or assembly DE(Direct Edit) move data\n\nInitialize the svxDEMove structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to move faces using DE (Direct Edit) move input data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEMove\ndata [in] part or assembly DE(Direct Edit) move input data\nidMove [out] id of DE(Direct Edit) move feature (NULL to ignore)\n\nUse this function to DE(Direct Edit) move faces. Six different methods of move are available, each method requires different types of input.\nnote:\nInterface cvxPartDEMoveInit() can initialize variables DE(Direct Edit) move of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the different methods available for DE (Direct Edit) move?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEMove\ndata [in] part or assembly DE(Direct Edit) move input data\nidMove [out] id of DE(Direct Edit) move feature (NULL to ignore)\n\nUse this function to DE(Direct Edit) move faces. Six different methods of move are available, each method requires different types of input.\nnote:\nInterface cvxPartDEMoveInit() can initialize variables DE(Direct Edit) move of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for DE (Direct Edit) move?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEMove\ndata [in] part or assembly DE(Direct Edit) move input data\nidMove [out] id of DE(Direct Edit) move feature (NULL to ignore)\n\nUse this function to DE(Direct Edit) move faces. Six different methods of move are available, each method requires different types of input.\nnote:\nInterface cvxPartDEMoveInit() can initialize variables DE(Direct Edit) move of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxDEAlignMove structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEAlignMoveInit\ntype [in] DE(Direct Edit) align move type\ndata [out] DE(Direct Edit) align move data\n\nInitialize the svxDEAlignMove structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize the DE align move data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEAlignMoveInit\ntype [in] DE(Direct Edit) align move type\ndata [out] DE(Direct Edit) align move data\n\nInitialize the svxDEAlignMove structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything inside the svxDEAlignMove structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEAlignMoveInit\ntype [in] DE(Direct Edit) align move type\ndata [out] DE(Direct Edit) align move data\n\nInitialize the svxDEAlignMove structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize variables for DE(Direct Edit) move?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEAlignMove\ndata [in] DE(Direct Edit) align move input data\nidMove [out] id of DE(Direct Edit) align move feature (NULL to ignore)\n\nInterface cvxPartDEAlignMoveInit() can initialize variables DE(Direct Edit) move of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any function to perform DE(Direct Edit align move?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEAlignMove\ndata [in] DE(Direct Edit) align move input data\nidMove [out] id of DE(Direct Edit) align move feature (NULL to ignore)\n\nInterface cvxPartDEAlignMoveInit() can initialize variables DE(Direct Edit) move of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of DE(Direct Edit) align move feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEAlignMove\ndata [in] DE(Direct Edit) align move input data\nidMove [out] id of DE(Direct Edit) align move feature (NULL to ignore)\n\nInterface cvxPartDEAlignMoveInit() can initialize variables DE(Direct Edit) move of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxDEDimMove structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEDimMoveInit\ntype [in] DE(Direct Edit) dim move type\ndata [out] DE(Direct Edit) dim move data\n\nInitialize the svxDEDimMove structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize DE dim move type?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEDimMoveInit\ntype [in] DE(Direct Edit) dim move type\ndata [out] DE(Direct Edit) dim move data\n\nInitialize the svxDEDimMove structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything inside the svxDEDimMove structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEDimMoveInit\ntype [in] DE(Direct Edit) dim move type\ndata [out] DE(Direct Edit) dim move data\n\nInitialize the svxDEDimMove structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to move DE(Direct Edit) dimension faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEDimMove\ndata [in] DE(Direct Edit) dim move input data\nidMove [out] id of DE(Direct Edit) dim move feature (NULL to ignore)\n\nUse this function to DE(Direct Edit) dim move faces. Two different methods of move are available, each method requires different types of input.\nnote:\nInterface cvxPartDEDimMoveInit() can initialize variables DE(Direct Edit) move of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the different methods available for moving DE(Direct Edit) dimension faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEDimMove\ndata [in] DE(Direct Edit) dim move input data\nidMove [out] id of DE(Direct Edit) dim move feature (NULL to ignore)\n\nUse this function to DE(Direct Edit) dim move faces. Two different methods of move are available, each method requires different types of input.\nnote:\nInterface cvxPartDEDimMoveInit() can initialize variables DE(Direct Edit) move of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for DE(Direct Edit) move?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEDimMove\ndata [in] DE(Direct Edit) dim move input data\nidMove [out] id of DE(Direct Edit) dim move feature (NULL to ignore)\n\nUse this function to DE(Direct Edit) dim move faces. Two different methods of move are available, each method requires different types of input.\nnote:\nInterface cvxPartDEDimMoveInit() can initialize variables DE(Direct Edit) move of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxDEOffset structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEOffsetInit\ndata [out] \n\nInitialize the svxDEOffset structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything inside the svxDEOffset structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEOffsetInit\ndata [out] \n\nInitialize the svxDEOffset structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize the svxDEOffset structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEOffsetInit\ndata [out] \n\nInitialize the svxDEOffset structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the Direct Edit face offset?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEOffset\ndata [in] DE(Direct Edit) face offset input data\nidOffset [out] id of DE(Direct Edit) face offset feature (NULL to ignore)\n\nUse this function to change DE(Direct Edit) face offset.\nnote:\nInterface cvxPartDEOffsetInit() can initialize variables DE(Direct Edit) offset of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for Direct Edit face offset?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEOffset\ndata [in] DE(Direct Edit) face offset input data\nidOffset [out] id of DE(Direct Edit) face offset feature (NULL to ignore)\n\nUse this function to change DE(Direct Edit) face offset.\nnote:\nInterface cvxPartDEOffsetInit() can initialize variables DE(Direct Edit) offset of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of Direct Edit face offset feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEOffset\ndata [in] DE(Direct Edit) face offset input data\nidOffset [out] id of DE(Direct Edit) face offset feature (NULL to ignore)\n\nUse this function to change DE(Direct Edit) face offset.\nnote:\nInterface cvxPartDEOffsetInit() can initialize variables DE(Direct Edit) offset of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxDEDraft structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEDraftInit\ndata [out] DE(Direct Edit) face draft data\n\nInitialize the svxDEDraft structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize the DE(Direct Edit) face draft data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEDraftInit\ndata [out] DE(Direct Edit) face draft data\n\nInitialize the svxDEDraft structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to empty everything inside the svxDEDraft structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEDraftInit\ndata [out] DE(Direct Edit) face draft data\n\nInitialize the svxDEDraft structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxDEDraft structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEDraft\ndata [in] DE(Direct Edit) face draft input data\nidDraft [out] id of DE(Direct Edit) face draft feature (NULL to ignore)\n\nInitialize the svxDEDraft structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything inside the svxDEDraft structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEDraft\ndata [in] DE(Direct Edit) face draft input data\nidDraft [out] id of DE(Direct Edit) face draft feature (NULL to ignore)\n\nInitialize the svxDEDraft structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of DE(Direct Edit) face draft feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEDraft\ndata [in] DE(Direct Edit) face draft input data\nidDraft [out] id of DE(Direct Edit) face draft feature (NULL to ignore)\n\nInitialize the svxDEDraft structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxDECopy structure for part or assembly DE copy type?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDECopyInit\ntype [in] part or assembly DE(Direct Edit) copy type\ndata [out] id of DE(Direct Edit) face draft feature (NULL to ignore)\n\nInitialize the svxDECopy structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to empty everything inside the svxDECopy structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDECopyInit\ntype [in] part or assembly DE(Direct Edit) copy type\ndata [out] id of DE(Direct Edit) face draft feature (NULL to ignore)\n\nInitialize the svxDECopy structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any function to get the id of DE face draft feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDECopyInit\ntype [in] part or assembly DE(Direct Edit) copy type\ndata [out] id of DE(Direct Edit) face draft feature (NULL to ignore)\n\nInitialize the svxDECopy structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to copy faces using DE(Direct Edit) copy feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDECopy\ndata [in] part or assembly DE(Direct Edit) copy input data\nidCopy [out] id of DE(Direct Edit) copy feature (NULL to ignore)\n\nUse this function to DE(Direct Edit) copy faces. Six different methods of copy are available, each method requires different types of input.\nnote:\nInterface cvxPartDECopyInit() can initialize variables DE(Direct Edit) copy of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the different methods available for DE(Direct Edit) copy?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDECopy\ndata [in] part or assembly DE(Direct Edit) copy input data\nidCopy [out] id of DE(Direct Edit) copy feature (NULL to ignore)\n\nUse this function to DE(Direct Edit) copy faces. Six different methods of copy are available, each method requires different types of input.\nnote:\nInterface cvxPartDECopyInit() can initialize variables DE(Direct Edit) copy of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for DE(Direct Edit) copy?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDECopy\ndata [in] part or assembly DE(Direct Edit) copy input data\nidCopy [out] id of DE(Direct Edit) copy feature (NULL to ignore)\n\nUse this function to DE(Direct Edit) copy faces. Six different methods of copy are available, each method requires different types of input.\nnote:\nInterface cvxPartDECopyInit() can initialize variables DE(Direct Edit) copy of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxDEMirror structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEMirrorInit\ndata [out] DE(Direct Edit) face mirror data\n\nInitialize the svxDEMirror structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to initialize DE face mirror data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEMirrorInit\ndata [out] DE(Direct Edit) face mirror data\n\nInitialize the svxDEMirror structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to empty everything inside the svxDEMirror structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEMirrorInit\ndata [out] DE(Direct Edit) face mirror data\n\nInitialize the svxDEMirror structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a DE(Direct Edit) face mirror?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEMirror\ndata [in] DE(Direct Edit) mirror input data\nidMirror [out] id of DE(Direct Edit) mirror feature (NULL to ignore)\n\nUse this function to create DE(Direct Edit) face mirror.\nnote:\nInterface cvxPartDEMirrorInit() can initialize variables DE(Direct Edit) mirror of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for DE(Direct Edit) mirror?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEMirror\ndata [in] DE(Direct Edit) mirror input data\nidMirror [out] id of DE(Direct Edit) mirror feature (NULL to ignore)\n\nUse this function to create DE(Direct Edit) face mirror.\nnote:\nInterface cvxPartDEMirrorInit() can initialize variables DE(Direct Edit) mirror of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of DE(Direct Edit) mirror feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEMirror\ndata [in] DE(Direct Edit) mirror input data\nidMirror [out] id of DE(Direct Edit) mirror feature (NULL to ignore)\n\nUse this function to create DE(Direct Edit) face mirror.\nnote:\nInterface cvxPartDEMirrorInit() can initialize variables DE(Direct Edit) mirror of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxDEPattern structure for part or assembly DE pattern type?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEPtnInit\ntype [in] part or assembly DE(Direct Edit) pattern type\ndata [out] part or assembly DE(Direct Edit) pattern data\n\nInitialize the svxDEPattern structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything inside the svxDEPattern structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEPtnInit\ntype [in] part or assembly DE(Direct Edit) pattern type\ndata [out] part or assembly DE(Direct Edit) pattern data\n\nInitialize the svxDEPattern structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the part or assembly DE pattern data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEPtnInit\ntype [in] part or assembly DE(Direct Edit) pattern type\ndata [out] part or assembly DE(Direct Edit) pattern data\n\nInitialize the svxDEPattern structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use DE pattern on faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEPtn\ndata [in] part or assembly DE(Direct Edit) pattern input data\nidPtn [out] id of DE(Direct Edit) pattern feature (NULL to ignore)\n\nUse this function to DE(Direct Edit) pattern faces. Six different methods of pattern are available, each method requires different types of input.\nnote:\nInterface cvxPartDEMirrorInit() can initialize variables DE(Direct Edit) mirror of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the different methods available for DE pattern?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEPtn\ndata [in] part or assembly DE(Direct Edit) pattern input data\nidPtn [out] id of DE(Direct Edit) pattern feature (NULL to ignore)\n\nUse this function to DE(Direct Edit) pattern faces. Six different methods of pattern are available, each method requires different types of input.\nnote:\nInterface cvxPartDEMirrorInit() can initialize variables DE(Direct Edit) mirror of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize DE mirror for this pattern?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEPtn\ndata [in] part or assembly DE(Direct Edit) pattern input data\nidPtn [out] id of DE(Direct Edit) pattern feature (NULL to ignore)\n\nUse this function to DE(Direct Edit) pattern faces. Six different methods of pattern are available, each method requires different types of input.\nnote:\nInterface cvxPartDEMirrorInit() can initialize variables DE(Direct Edit) mirror of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxDEFllt structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEFlltInit\ndata [out] DE(Direct Edit) face fillet data\n\nInitialize the svxDEFllt structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize the DE(Direct Edit) face fillet data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEFlltInit\ndata [out] DE(Direct Edit) face fillet data\n\nInitialize the svxDEFllt structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to empty everything and initialize the DE face fillet data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEFlltInit\ndata [out] DE(Direct Edit) face fillet data\n\nInitialize the svxDEFllt structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify DE(Direct Edit) face fillet?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEFllt\ndata [in] DE(Direct Edit) fillet input data\nidFllt [out] id of DE(Direct Edit) fillet feature (NULL to ignore)\n\nUse this function to modify DE(Direct Edit) face fillet.\nnote:\nInterface cvxPartDEMirrorInit() can initialize variables DE(Direct Edit) mirror of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the id of DE(Direct Edit) fillet feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEFllt\ndata [in] DE(Direct Edit) fillet input data\nidFllt [out] id of DE(Direct Edit) fillet feature (NULL to ignore)\n\nUse this function to modify DE(Direct Edit) face fillet.\nnote:\nInterface cvxPartDEMirrorInit() can initialize variables DE(Direct Edit) mirror of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize variables for DE(Direct Edit) mirror?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEFllt\ndata [in] DE(Direct Edit) fillet input data\nidFllt [out] id of DE(Direct Edit) fillet feature (NULL to ignore)\n\nUse this function to modify DE(Direct Edit) face fillet.\nnote:\nInterface cvxPartDEMirrorInit() can initialize variables DE(Direct Edit) mirror of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxDERad structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDERadInit\ndata [out] DE(Direct Edit) face radius data\n\nInitialize the svxDERad structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything inside the svxDERad structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDERadInit\ndata [out] DE(Direct Edit) face radius data\n\nInitialize the svxDERad structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the DE face radius data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDERadInit\ndata [out] DE(Direct Edit) face radius data\n\nInitialize the svxDERad structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify Direct Edit face radius using cvxPartDERad?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDERad\ndata [in] DE(Direct Edit) radius input data\nidRad [out] id of DE(Direct Edit) radius feature (NULL to ignore)\n\nUse this function to modify DE(Direct Edit) face radius.\nnote:\nInterface cvxPartDEMirrorInit() can initialize variables DE(Direct Edit) mirror of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the id of Direct Edit radius feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDERad\ndata [in] DE(Direct Edit) radius input data\nidRad [out] id of DE(Direct Edit) radius feature (NULL to ignore)\n\nUse this function to modify DE(Direct Edit) face radius.\nnote:\nInterface cvxPartDEMirrorInit() can initialize variables DE(Direct Edit) mirror of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize variables for Direct Edit mirror using cvxPartDEMirrorInit?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDERad\ndata [in] DE(Direct Edit) radius input data\nidRad [out] id of DE(Direct Edit) radius feature (NULL to ignore)\n\nUse this function to modify DE(Direct Edit) face radius.\nnote:\nInterface cvxPartDEMirrorInit() can initialize variables DE(Direct Edit) mirror of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add auto dimension using special parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAutoDimAdd\npDimData [in] dimension parameters\nidDim [out] id of Dim (input NULL to ignore)\n\nAdd auto dimension by special parameter.\nnote:\nInterface cvxDwgAutoDimAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for adding auto dimensions?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAutoDimAdd\npDimData [in] dimension parameters\nidDim [out] id of Dim (input NULL to ignore)\n\nAdd auto dimension by special parameter.\nnote:\nInterface cvxDwgAutoDimAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the added dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAutoDimAdd\npDimData [in] dimension parameters\nidDim [out] id of Dim (input NULL to ignore)\n\nAdd auto dimension by special parameter.\nnote:\nInterface cvxDwgAutoDimAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of auto dimension addition?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAutoDimAddInit\ndata [out] auto dimension data\n\nInitialize the parameters of the cvxDwgAutoDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to initialize auto dimension data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAutoDimAddInit\ndata [out] auto dimension data\n\nInitialize the parameters of the cvxDwgAutoDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to empty everything before initializing auto dimension data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAutoDimAddInit\ndata [out] auto dimension data\n\nInitialize the parameters of the cvxDwgAutoDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a linear dimension in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgLineDimAdd\npData [in] data of line dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a Linear dimension between the specified obj in drawing.\npData->cons.type is set by evxDimLineType, as follows: \n\n VX_DIM_LINE_LH \n\n VX_DIM_LINE_LV \n\n VX_DIM_LINE_LA \n\n VX_DIM_LINE_LR \n\n VX_DIM_LINE_LP"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to add a linear dimension between specified objects in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgLineDimAdd\npData [in] data of line dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a Linear dimension between the specified obj in drawing.\npData->cons.type is set by evxDimLineType, as follows: \n\n VX_DIM_LINE_LH \n\n VX_DIM_LINE_LV \n\n VX_DIM_LINE_LA \n\n VX_DIM_LINE_LR \n\n VX_DIM_LINE_LP"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the ID of the dimension created after adding a linear dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgLineDimAdd\npData [in] data of line dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a Linear dimension between the specified obj in drawing.\npData->cons.type is set by evxDimLineType, as follows: \n\n VX_DIM_LINE_LH \n\n VX_DIM_LINE_LV \n\n VX_DIM_LINE_LA \n\n VX_DIM_LINE_LR \n\n VX_DIM_LINE_LP"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a Baseline dimension in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgBaseLineDimAdd\npData [in] data of BaseLine dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a Baseline dimension between the specified object in drawing.\npData->sub.cons.type is set by evxDimLineType, as follows: \n\n VX_DIM_LINE_LH \n\n VX_DIM_LINE_LV \n\n VX_DIM_LINE_LA \n\n VX_DIM_LINE_LR \n\n VX_DIM_LINE_LP"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to add a Baseline dimension between specified objects?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgBaseLineDimAdd\npData [in] data of BaseLine dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a Baseline dimension between the specified object in drawing.\npData->sub.cons.type is set by evxDimLineType, as follows: \n\n VX_DIM_LINE_LH \n\n VX_DIM_LINE_LV \n\n VX_DIM_LINE_LA \n\n VX_DIM_LINE_LR \n\n VX_DIM_LINE_LP"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the type of Baseline dimension line?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgBaseLineDimAdd\npData [in] data of BaseLine dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a Baseline dimension between the specified object in drawing.\npData->sub.cons.type is set by evxDimLineType, as follows: \n\n VX_DIM_LINE_LH \n\n VX_DIM_LINE_LV \n\n VX_DIM_LINE_LA \n\n VX_DIM_LINE_LR \n\n VX_DIM_LINE_LP"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a continuous dimension in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgContinuousDimAdd\npData [in] data of Continuous dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a Continuous dimension between the specified object in drawing.\npData->sub.cons.type is set by evxDimLineType, as follows: \n\n VX_DIM_LINE_LH \n\n VX_DIM_LINE_LV \n\n VX_DIM_LINE_LA \n\n VX_DIM_LINE_LR \n\n VX_DIM_LINE_LP"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to add continuous dimension between specified objects?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgContinuousDimAdd\npData [in] data of Continuous dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a Continuous dimension between the specified object in drawing.\npData->sub.cons.type is set by evxDimLineType, as follows: \n\n VX_DIM_LINE_LH \n\n VX_DIM_LINE_LV \n\n VX_DIM_LINE_LA \n\n VX_DIM_LINE_LR \n\n VX_DIM_LINE_LP"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the type of dimension line for continuous dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgContinuousDimAdd\npData [in] data of Continuous dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a Continuous dimension between the specified object in drawing.\npData->sub.cons.type is set by evxDimLineType, as follows: \n\n VX_DIM_LINE_LH \n\n VX_DIM_LINE_LV \n\n VX_DIM_LINE_LA \n\n VX_DIM_LINE_LR \n\n VX_DIM_LINE_LP"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create an Ordinate dimension in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgOrdinateDimAdd\npData [in] data of Ordinate dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a Ordinate dimension between the specified object in drawing.\npData->sub.cons.type is set by evxDimLineType, as follows: \n\n VX_DIM_LINE_LH \n\n VX_DIM_LINE_LV \n\n VX_DIM_LINE_LA \n\n VX_DIM_LINE_LR \n\n VX_DIM_LINE_LP \n\n VX_DIM_LINE_LO"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to add an Ordinate dimension between specified objects?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgOrdinateDimAdd\npData [in] data of Ordinate dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a Ordinate dimension between the specified object in drawing.\npData->sub.cons.type is set by evxDimLineType, as follows: \n\n VX_DIM_LINE_LH \n\n VX_DIM_LINE_LV \n\n VX_DIM_LINE_LA \n\n VX_DIM_LINE_LR \n\n VX_DIM_LINE_LP \n\n VX_DIM_LINE_LO"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the dimension created after adding an Ordinate dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgOrdinateDimAdd\npData [in] data of Ordinate dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a Ordinate dimension between the specified object in drawing.\npData->sub.cons.type is set by evxDimLineType, as follows: \n\n VX_DIM_LINE_LH \n\n VX_DIM_LINE_LV \n\n VX_DIM_LINE_LA \n\n VX_DIM_LINE_LR \n\n VX_DIM_LINE_LP \n\n VX_DIM_LINE_LO"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a Linear offset dimension between two specified entities in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgLineOffsetDimAdd\npData [in] data of LineOffset dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a Linear offset dimension between the specified two entities in drawing. Supported entities include two lines, a point and a line\ntype of pData is as follows by evxDimLineOffset: \n\n VX_DIM_OFFSET_LOL offset dimension - line to line \n\n VX_DIM_OFFSET_LOP offset dimension - line to point"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the supported entities for creating a Linear offset dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgLineOffsetDimAdd\npData [in] data of LineOffset dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a Linear offset dimension between the specified two entities in drawing. Supported entities include two lines, a point and a line\ntype of pData is as follows by evxDimLineOffset: \n\n VX_DIM_OFFSET_LOL offset dimension - line to line \n\n VX_DIM_OFFSET_LOP offset dimension - line to point"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the dimension created?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgLineOffsetDimAdd\npData [in] data of LineOffset dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a Linear offset dimension between the specified two entities in drawing. Supported entities include two lines, a point and a line\ntype of pData is as follows by evxDimLineOffset: \n\n VX_DIM_OFFSET_LOL offset dimension - line to line \n\n VX_DIM_OFFSET_LOP offset dimension - line to point"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a symmetry dimension in a drawing sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymmetryDimAdd\nsymmetryDimData [in] symmetry dimension input data\nidDim [out] id of the symmetry dimension (input NULL to ignore)\n\nCreate a symmetry dimension in a drawing sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a symmetry dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymmetryDimAdd\nsymmetryDimData [in] symmetry dimension input data\nidDim [out] id of the symmetry dimension (input NULL to ignore)\n\nCreate a symmetry dimension in a drawing sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the symmetry dimension after adding it to the drawing sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymmetryDimAdd\nsymmetryDimData [in] symmetry dimension input data\nidDim [out] id of the symmetry dimension (input NULL to ignore)\n\nCreate a symmetry dimension in a drawing sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of linear chamfer dimension addition?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgLnrChmDimAddInit\ndata [out] the info of the linear chamfer dim\n\nInitialize the parameters of the cvxDwgLnrChmDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to empty everything before adding linear chamfer dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgLnrChmDimAddInit\ndata [out] the info of the linear chamfer dim\n\nInitialize the parameters of the cvxDwgLnrChmDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize the info of linear chamfer dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgLnrChmDimAddInit\ndata [out] the info of the linear chamfer dim\n\nInitialize the parameters of the cvxDwgLnrChmDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a linear chamfer dimension in sheeting?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgLnrChmDimAdd\nDimData [in] the information of linear chamfer dim which will create\nidDim [out] id of the linear chamfer dim (input NULL to ignore)\n\nCreate a linear chamfer dimension in sheeting. dimInfo must initialize before use.\nnote:\nInterface cvxDwgLnrChmDimAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for creating a linear chamfer dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgLnrChmDimAdd\nDimData [in] the information of linear chamfer dim which will create\nidDim [out] id of the linear chamfer dim (input NULL to ignore)\n\nCreate a linear chamfer dimension in sheeting. dimInfo must initialize before use.\nnote:\nInterface cvxDwgLnrChmDimAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the linear chamfer dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgLnrChmDimAdd\nDimData [in] the information of linear chamfer dim which will create\nidDim [out] id of the linear chamfer dim (input NULL to ignore)\n\nCreate a linear chamfer dimension in sheeting. dimInfo must initialize before use.\nnote:\nInterface cvxDwgLnrChmDimAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create an angular dimension in a drawing sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAngDimAdd\nangDimData [in] angular dimension input data\nidDim [out] id of the angular dimension (input NULL to ignore)\n\nCreate an angular dimension in a drawing sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add an angular dimension to a drawing sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAngDimAdd\nangDimData [in] angular dimension input data\nidDim [out] id of the angular dimension (input NULL to ignore)\n\nCreate an angular dimension in a drawing sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to input angular dimension data for creating a dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAngDimAdd\nangDimData [in] angular dimension input data\nidDim [out] id of the angular dimension (input NULL to ignore)\n\nCreate an angular dimension in a drawing sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a radial or diametric dimension to a specified entity in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgRadDimAdd\nradDimData [in] radial or diametric input data\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a radial or diametric dimension for the specified entity in drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a radial or diametric dimension in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgRadDimAdd\nradDimData [in] radial or diametric input data\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a radial or diametric dimension for the specified entity in drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the dimension created for a radial or diametric input?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgRadDimAdd\nradDimData [in] radial or diametric input data\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a radial or diametric dimension for the specified entity in drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add an arc length dimension in a drawing sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgArcDimAdd\narcDimData [in] arc dimension input data\nidDim [out] id of the arc dimension (input NULL to ignore)\n\nCreate an arc length dimension in a drawing sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create an arc length dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgArcDimAdd\narcDimData [in] arc dimension input data\nidDim [out] id of the arc dimension (input NULL to ignore)\n\nCreate an arc length dimension in a drawing sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the arc dimension after creating it?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgArcDimAdd\narcDimData [in] arc dimension input data\nidDim [out] id of the arc dimension (input NULL to ignore)\n\nCreate an arc length dimension in a drawing sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of Hole Callout dimension addition?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgHoleCallOutDimAddinit\ndata [out] Hole Callout data\n\nInitialize the parameters of the cvxDwgHoleCallOutDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function is used to initialize the parameters of Hole Callout dimension addition?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgHoleCallOutDimAddinit\ndata [out] Hole Callout data\n\nInitialize the parameters of the cvxDwgHoleCallOutDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a specific method to empty everything before initializing the Hole Callout dimension addition parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgHoleCallOutDimAddinit\ndata [out] Hole Callout data\n\nInitialize the parameters of the cvxDwgHoleCallOutDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a Hole Callout dimension between specified holes in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgHoleCallOutDimAdd\npData [in] data of hole callout dimension\nnumDim [out] number of resulting dimension (NULL to ignore)\nidDims [out] id of list of id's of resulting dimension (input NULL to ignore)\n\nCreate a Hole Callout dimension between the specified holes in drawing. pData->iCalloutemt is set by evxCalloutEmt combined Memory for the idDims is allocated by this function. The calling procedure is responsible to free the memory\nnote:\nInterface cvxDwgHoleCallOutDimAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for creating a Hole Callout dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgHoleCallOutDimAdd\npData [in] data of hole callout dimension\nnumDim [out] number of resulting dimension (NULL to ignore)\nidDims [out] id of list of id's of resulting dimension (input NULL to ignore)\n\nCreate a Hole Callout dimension between the specified holes in drawing. pData->iCalloutemt is set by evxCalloutEmt combined Memory for the idDims is allocated by this function. The calling procedure is responsible to free the memory\nnote:\nInterface cvxDwgHoleCallOutDimAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of resulting dimensions after creating a Hole Callout dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgHoleCallOutDimAdd\npData [in] data of hole callout dimension\nnumDim [out] number of resulting dimension (NULL to ignore)\nidDims [out] id of list of id's of resulting dimension (input NULL to ignore)\n\nCreate a Hole Callout dimension between the specified holes in drawing. pData->iCalloutemt is set by evxCalloutEmt combined Memory for the idDims is allocated by this function. The calling procedure is responsible to free the memory\nnote:\nInterface cvxDwgHoleCallOutDimAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a label coordinate dimension for a specified entity in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgLabelCoorDimAdd\ncoorDimData [in] label coordinate dimension input data\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a label coordinate dimension for the specified entity in drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a label coordinate dimension to a specific entity in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgLabelCoorDimAdd\ncoorDimData [in] label coordinate dimension input data\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a label coordinate dimension for the specified entity in drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I get the id of the dimension created after adding a label coordinate dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgLabelCoorDimAdd\ncoorDimData [in] label coordinate dimension input data\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a label coordinate dimension for the specified entity in drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a label dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgLabelDimAdd\npLabel [in] information needed by creating dimension label\nidDim [out] id of Dim (input NULL to ignore)\n\nCreate a label dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What information is needed to create a dimension label?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgLabelDimAdd\npLabel [in] information needed by creating dimension label\nidDim [out] id of Dim (input NULL to ignore)\n\nCreate a label dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the id of the created dimension label?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgLabelDimAdd\npLabel [in] information needed by creating dimension label\nidDim [out] id of Dim (input NULL to ignore)\n\nCreate a label dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a balloon dimension in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgBalloonDimAdd\npData [in] data of balloon dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a Balloon dimension between the specified points in drawing. pData->condition is set by evxBalloonCon"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a balloon dimension between specified points?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgBalloonDimAdd\npData [in] data of balloon dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a Balloon dimension between the specified points in drawing. pData->condition is set by evxBalloonCon"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the dimension created after adding a balloon dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgBalloonDimAdd\npData [in] data of balloon dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a Balloon dimension between the specified points in drawing. pData->condition is set by evxBalloonCon"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of creating auto balloon?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAutoBlnAddInit\ndata [out] Information of creating auto balloon\n\nInitialize the parameters of the cvxDwgAutoBlnAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function is used to initialize the parameters of creating auto balloon?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAutoBlnAddInit\ndata [out] Information of creating auto balloon\n\nInitialize the parameters of the cvxDwgAutoBlnAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to empty everything before creating auto balloon?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAutoBlnAddInit\ndata [out] Information of creating auto balloon\n\nInitialize the parameters of the cvxDwgAutoBlnAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create an auto balloon?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAutoBlnAdd\natBlnData [in] the information of Creating auto balloon\nidDimCount [out] number of created balloon dim id (input NULL to ignore)\nidDimList [out] list of created balloon dim id (input NULL to ignore)\n\nCreate auto balloon. all values of atBllnInfo need initialization.\nnote:\nInterface cvxDwgAutoBlnAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for creating an auto balloon?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAutoBlnAdd\natBlnData [in] the information of Creating auto balloon\nidDimCount [out] number of created balloon dim id (input NULL to ignore)\nidDimList [out] list of created balloon dim id (input NULL to ignore)\n\nCreate auto balloon. all values of atBllnInfo need initialization.\nnote:\nInterface cvxDwgAutoBlnAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of created balloon dimension IDs?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAutoBlnAdd\natBlnData [in] the information of Creating auto balloon\nidDimCount [out] number of created balloon dim id (input NULL to ignore)\nidDimList [out] list of created balloon dim id (input NULL to ignore)\n\nCreate auto balloon. all values of atBllnInfo need initialization.\nnote:\nInterface cvxDwgAutoBlnAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of created balloon dimension IDs?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAutoBlnAdd\natBlnData [in] the information of Creating auto balloon\nidDimCount [out] number of created balloon dim id (input NULL to ignore)\nidDimList [out] list of created balloon dim id (input NULL to ignore)\n\nCreate auto balloon. all values of atBllnInfo need initialization.\nnote:\nInterface cvxDwgAutoBlnAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters for creating stack balloons?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgStkBlnAddInit\ndata [out] information of creating stack balloons\n\nInitialize the parameters of the cvxDwgStkBlnAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize the stack balloon creation information?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgStkBlnAddInit\ndata [out] information of creating stack balloons\n\nInitialize the parameters of the cvxDwgStkBlnAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize the stack balloon creation parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgStkBlnAddInit\ndata [out] information of creating stack balloons\n\nInitialize the parameters of the cvxDwgStkBlnAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create stack balloons in sheeting?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgStkBlnAdd\nstkBlnData [in] information of creating stack balloons\nidDimCount [out] number of stacked balloon dim id (input NULL to ignore)\nidDimList [out] list of stacked balloon dim id (input NULL to ignore)\n\nCreate stack balloons in sheeting.\nnote:\nInterface cvxDwgStkBlnAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for creating stack balloons?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgStkBlnAdd\nstkBlnData [in] information of creating stack balloons\nidDimCount [out] number of stacked balloon dim id (input NULL to ignore)\nidDimList [out] list of stacked balloon dim id (input NULL to ignore)\n\nCreate stack balloons in sheeting.\nnote:\nInterface cvxDwgStkBlnAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of stacked balloon dim id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgStkBlnAdd\nstkBlnData [in] information of creating stack balloons\nidDimCount [out] number of stacked balloon dim id (input NULL to ignore)\nidDimList [out] list of stacked balloon dim id (input NULL to ignore)\n\nCreate stack balloons in sheeting.\nnote:\nInterface cvxDwgStkBlnAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of stacked balloon dim id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgStkBlnAdd\nstkBlnData [in] information of creating stack balloons\nidDimCount [out] number of stacked balloon dim id (input NULL to ignore)\nidDimList [out] list of stacked balloon dim id (input NULL to ignore)\n\nCreate stack balloons in sheeting.\nnote:\nInterface cvxDwgStkBlnAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a feature control dimension for a specific entity in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgFtrCtrlDimAdd\npData [in] data of feature control dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a feature control dimension for the specified entity in drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add feature control dimension to a drawing entity?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgFtrCtrlDimAdd\npData [in] data of feature control dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a feature control dimension for the specified entity in drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the dimension created after adding a feature control dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgFtrCtrlDimAdd\npData [in] data of feature control dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a feature control dimension for the specified entity in drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a datum dimension for a specified entity in drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgDatumDimAdd\ndatumData [in] datum input data\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a datum dimension for the specified entity in drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add datum dimension to an entity in drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgDatumDimAdd\ndatumData [in] datum input data\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a datum dimension for the specified entity in drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the dimension created in drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgDatumDimAdd\ndatumData [in] datum input data\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a datum dimension for the specified entity in drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxDwgDatumTargDimAdd()?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgDatumTargDimAddInit\ndata [out] datum target dim data\n\nInitialize the parameters of the cvxDwgDatumTargDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to empty everything before calling cvxDwgDatumTargDimAdd()?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgDatumTargDimAddInit\ndata [out] datum target dim data\n\nInitialize the parameters of the cvxDwgDatumTargDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize datum target dim data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgDatumTargDimAddInit\ndata [out] datum target dim data\n\nInitialize the parameters of the cvxDwgDatumTargDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a datum target dimension for a specified entity in drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgDatumTargDimAdd\ndatumTData [in] datum target input data\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a datum target dimension for the specified entity in drawing.\nnote:\nInterface cvxDwgDatumTargDimAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for creating a datum target dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgDatumTargDimAdd\ndatumTData [in] datum target input data\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a datum target dimension for the specified entity in drawing.\nnote:\nInterface cvxDwgDatumTargDimAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the dimension created after adding a datum target dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgDatumTargDimAdd\ndatumTData [in] datum target input data\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a datum target dimension for the specified entity in drawing.\nnote:\nInterface cvxDwgDatumTargDimAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxDwgCenterMarkDimAdd()?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCenterMarkDimAddInit\ndata [out] Center Mark data\n\nInitialize the parameters of the cvxDwgCenterMarkDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to empty everything before calling cvxDwgCenterMarkDimAdd()?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCenterMarkDimAddInit\ndata [out] Center Mark data\n\nInitialize the parameters of the cvxDwgCenterMarkDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize the Center Mark data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCenterMarkDimAddInit\ndata [out] Center Mark data\n\nInitialize the parameters of the cvxDwgCenterMarkDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a center dimension with specified coordinates?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCenterMarkDimAdd\npzCenterMark [in] id of the first entity\nidDim [out] id of dim (input NULL to ignore)\n\nCenter dimension with specify coordinate.\ndefault value: \n   svxCenterDim \n      cmSize   : 4.254534 \n      breakLen : 1.5 \n      overRun  : 3.06324 \n      scaleFac : 1\n\nnote:\nInterface cvxDwgCenterMarkDimAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to ignore the id of dimension when adding a center mark dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCenterMarkDimAdd\npzCenterMark [in] id of the first entity\nidDim [out] id of dim (input NULL to ignore)\n\nCenter dimension with specify coordinate.\ndefault value: \n   svxCenterDim \n      cmSize   : 4.254534 \n      breakLen : 1.5 \n      overRun  : 3.06324 \n      scaleFac : 1\n\nnote:\nInterface cvxDwgCenterMarkDimAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can you explain how to initialize variables for this function using cvxDwgCenterMarkDimAddInit()?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCenterMarkDimAdd\npzCenterMark [in] id of the first entity\nidDim [out] id of dim (input NULL to ignore)\n\nCenter dimension with specify coordinate.\ndefault value: \n   svxCenterDim \n      cmSize   : 4.254534 \n      breakLen : 1.5 \n      overRun  : 3.06324 \n      scaleFac : 1\n\nnote:\nInterface cvxDwgCenterMarkDimAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of center mark circle dimension add function?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCenMarkCirDimAddInit\ndata [out] center mark circle dim data\n\nInitialize the parameters of the cvxDwgCenMarkCirDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to empty everything before calling the center mark circle dimension add function?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCenMarkCirDimAddInit\ndata [out] center mark circle dim data\n\nInitialize the parameters of the cvxDwgCenMarkCirDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the center mark circle dimension data initialized?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCenMarkCirDimAddInit\ndata [out] center mark circle dim data\n\nInitialize the parameters of the cvxDwgCenMarkCirDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a center mark circle dimension in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCenMarkCirDimAdd\ncmcDimData [in] center mark circle dimension input data\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a center mark circle dimension for the specified entities in drawing.\nnote:\nInterface cvxDwgCenMarkCirDimAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for creating a center mark circle dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCenMarkCirDimAdd\ncmcDimData [in] center mark circle dimension input data\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a center mark circle dimension for the specified entities in drawing.\nnote:\nInterface cvxDwgCenMarkCirDimAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the dimension created after adding a center mark circle dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCenMarkCirDimAdd\ncmcDimData [in] center mark circle dimension input data\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a center mark circle dimension for the specified entities in drawing.\nnote:\nInterface cvxDwgCenMarkCirDimAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxDwgCenterLineDimAdd()?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCenterLineDimAddInit\ndata [out] Center Line data\n\nInitialize the parameters of the cvxDwgCenterLineDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing the center line data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCenterLineDimAddInit\ndata [out] Center Line data\n\nInitialize the parameters of the cvxDwgCenterLineDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the center line data without assigning a value to the variable?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCenterLineDimAddInit\ndata [out] Center Line data\n\nInitialize the parameters of the cvxDwgCenterLineDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a center line dimension using two lines?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCenterLineDimAdd\npzCenterLine [in] info of two lines or two points\nidDim [out] id of dim (input NULL to ignore)\n\nCreate a center line dimension by two lines or two points.\nBy two lines: should be the same type, one is a straight line, the other must be a straight line; one is a arc or a circle, the other must be a arc or circle;\nBy two points: any point; default value: svxCenterDim cmSize : 4.254534 breakLen : 1.5 overRun : 3.06324 scaleFac : 1\nnote:\nInterface cvxDwgCenterLineDimAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a center line dimension using two points?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCenterLineDimAdd\npzCenterLine [in] info of two lines or two points\nidDim [out] id of dim (input NULL to ignore)\n\nCreate a center line dimension by two lines or two points.\nBy two lines: should be the same type, one is a straight line, the other must be a straight line; one is a arc or a circle, the other must be a arc or circle;\nBy two points: any point; default value: svxCenterDim cmSize : 4.254534 breakLen : 1.5 overRun : 3.06324 scaleFac : 1\nnote:\nInterface cvxDwgCenterLineDimAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for creating a center line dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCenterLineDimAdd\npzCenterLine [in] info of two lines or two points\nidDim [out] id of dim (input NULL to ignore)\n\nCreate a center line dimension by two lines or two points.\nBy two lines: should be the same type, one is a straight line, the other must be a straight line; one is a arc or a circle, the other must be a arc or circle;\nBy two points: any point; default value: svxCenterDim cmSize : 4.254534 breakLen : 1.5 overRun : 3.06324 scaleFac : 1\nnote:\nInterface cvxDwgCenterLineDimAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a standard weld symbol with specified data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymWeldNew\nidEnt [in] id of the parent entity of the reference point (0 to ignore)\nrefPoint [in] coordinate of the reference point\ndata [in] weld symbol data\nidSymWeld [out] index of new symbol (NULL to ignore)\n\nCreates a standard weld symbol with specified data.\nnote:\nInterface cvxDwgSymWeldNewInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for creating a weld symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymWeldNew\nidEnt [in] id of the parent entity of the reference point (0 to ignore)\nrefPoint [in] coordinate of the reference point\ndata [in] weld symbol data\nidSymWeld [out] index of new symbol (NULL to ignore)\n\nCreates a standard weld symbol with specified data.\nnote:\nInterface cvxDwgSymWeldNewInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of the new weld symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymWeldNew\nidEnt [in] id of the parent entity of the reference point (0 to ignore)\nrefPoint [in] coordinate of the reference point\ndata [in] weld symbol data\nidSymWeld [out] index of new symbol (NULL to ignore)\n\nCreates a standard weld symbol with specified data.\nnote:\nInterface cvxDwgSymWeldNewInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of weld symbol data for cvxDwgSymWeldNew()?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymWeldNewInit\ndata [out] weld symbol data\n\nInitialize the parameters of the cvxDwgSymWeldNew().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to empty everything and initialize weld symbol data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymWeldNewInit\ndata [out] weld symbol data\n\nInitialize the parameters of the cvxDwgSymWeldNew().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize weld symbol data without assigning a value beforehand?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymWeldNewInit\ndata [out] weld symbol data\n\nInitialize the parameters of the cvxDwgSymWeldNew().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of surface finish symbol data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymSurfNewInit\ndata [out] surface finish symbol data\n\nInitialize the parameters of the cvxDwgSymSurfNew().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything and initialize surface finish symbol data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymSurfNewInit\ndata [out] surface finish symbol data\n\nInitialize the parameters of the cvxDwgSymSurfNew().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to initialize the parameters of cvxDwgSymSurfNew()?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymSurfNewInit\ndata [out] surface finish symbol data\n\nInitialize the parameters of the cvxDwgSymSurfNew().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a surface finish symbol with specified data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymSurfNew\nidEnt [in] id of the parent entity of the reference point (0 to ignore)\nrefPoint [in] coordinate of the reference point\ndata [in] surface finish symbol data\nidSymSurf [out] index of new symbol (NULL to ignore)\n\nCreates a surface finish symbol with specified data.\nnote:\nInterface cvxDwgSymSurfNewInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for creating a surface finish symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymSurfNew\nidEnt [in] id of the parent entity of the reference point (0 to ignore)\nrefPoint [in] coordinate of the reference point\ndata [in] surface finish symbol data\nidSymSurf [out] index of new symbol (NULL to ignore)\n\nCreates a surface finish symbol with specified data.\nnote:\nInterface cvxDwgSymSurfNewInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of a new surface finish symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymSurfNew\nidEnt [in] id of the parent entity of the reference point (0 to ignore)\nrefPoint [in] coordinate of the reference point\ndata [in] surface finish symbol data\nidSymSurf [out] index of new symbol (NULL to ignore)\n\nCreates a surface finish symbol with specified data.\nnote:\nInterface cvxDwgSymSurfNewInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a new image with symbol image data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymImgNew\ndata [in] symbol image data\nembed [in] 1-embed image file,0 not\nlocked [in] 1-lock aspect ratio,0 not\nidSymImg [out] image id (NULL to ignore)\n\nCreates a new image with the symbol image data.\nIf the \"locked\" of data is true, the width and the height's aspect ratio should be the same as the image. The width and the height can also be zero and it will be calculated based on the input points.\nif idSymImg != NULL, output the id of new image.\nnote:\nInterface cvxDwgSymImgNewInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to embed an image file while creating a new image?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymImgNew\ndata [in] symbol image data\nembed [in] 1-embed image file,0 not\nlocked [in] 1-lock aspect ratio,0 not\nidSymImg [out] image id (NULL to ignore)\n\nCreates a new image with the symbol image data.\nIf the \"locked\" of data is true, the width and the height's aspect ratio should be the same as the image. The width and the height can also be zero and it will be calculated based on the input points.\nif idSymImg != NULL, output the id of new image.\nnote:\nInterface cvxDwgSymImgNewInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to lock the aspect ratio of the image while creating a new image?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymImgNew\ndata [in] symbol image data\nembed [in] 1-embed image file,0 not\nlocked [in] 1-lock aspect ratio,0 not\nidSymImg [out] image id (NULL to ignore)\n\nCreates a new image with the symbol image data.\nIf the \"locked\" of data is true, the width and the height's aspect ratio should be the same as the image. The width and the height can also be zero and it will be calculated based on the input points.\nif idSymImg != NULL, output the id of new image.\nnote:\nInterface cvxDwgSymImgNewInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get the id of the new image after creating it?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymImgNew\ndata [in] symbol image data\nembed [in] 1-embed image file,0 not\nlocked [in] 1-lock aspect ratio,0 not\nidSymImg [out] image id (NULL to ignore)\n\nCreates a new image with the symbol image data.\nIf the \"locked\" of data is true, the width and the height's aspect ratio should be the same as the image. The width and the height can also be zero and it will be calculated based on the input points.\nif idSymImg != NULL, output the id of new image.\nnote:\nInterface cvxDwgSymImgNewInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxDwgSymImgNew()?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymImgNewInit\ndata [out] image symbol data\n\nInitialize the parameters of the cvxDwgSymImgNew().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to initialize image symbol data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymImgNewInit\ndata [out] image symbol data\n\nInitialize the parameters of the cvxDwgSymImgNew().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to empty everything before initializing image symbol data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymImgNewInit\ndata [out] image symbol data\n\nInitialize the parameters of the cvxDwgSymImgNew().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a symbol from a specified file to the current file?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInsertSymbol\nfileName [in] file name of specified symbol\nsymName [in] name of symbol\npnt [in] insert position\nsymId [out] symbol id (pass in NULL to ignore)\n\nInsert the symbol of specified file to current file. Output the new symbol id if \"symId\" is not NULL.\nThe \"symName\" can be inquired by cvxRootInqSymbol()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to inquire the name of a symbol before inserting it?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInsertSymbol\nfileName [in] file name of specified symbol\nsymName [in] name of symbol\npnt [in] insert position\nsymId [out] symbol id (pass in NULL to ignore)\n\nInsert the symbol of specified file to current file. Output the new symbol id if \"symId\" is not NULL.\nThe \"symName\" can be inquired by cvxRootInqSymbol()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the symbol id after inserting a symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInsertSymbol\nfileName [in] file name of specified symbol\nsymName [in] name of symbol\npnt [in] insert position\nsymId [out] symbol id (pass in NULL to ignore)\n\nInsert the symbol of specified file to current file. Output the new symbol id if \"symId\" is not NULL.\nThe \"symName\" can be inquired by cvxRootInqSymbol()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a new user symbol with a specific name?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgUserSymNew\ncount [in] number of entities that make up the user symbol\nidEnt [in] list of index of entities that make up the user symbol\nBasePnt [in] reference point (NULL to use the first critical point of the first entity)\nName [in] name of new user symbol to create\nidBlock [out] index of new user symbol (NULL to ignore)\n\nUse this function to save a group of entities to the active symbol library for later use. if BasePnt is NULL, the function will use the first critical point of the first entity to make up the user symbol as the reference point, see the function description of cvxEntPnt() for detail of the critical point.\nAll user symbol blocks can be inquired by cvxRootInqSymbol()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to save a group of entities as a user symbol for later use?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgUserSymNew\ncount [in] number of entities that make up the user symbol\nidEnt [in] list of index of entities that make up the user symbol\nBasePnt [in] reference point (NULL to use the first critical point of the first entity)\nName [in] name of new user symbol to create\nidBlock [out] index of new user symbol (NULL to ignore)\n\nUse this function to save a group of entities to the active symbol library for later use. if BasePnt is NULL, the function will use the first critical point of the first entity to make up the user symbol as the reference point, see the function description of cvxEntPnt() for detail of the critical point.\nAll user symbol blocks can be inquired by cvxRootInqSymbol()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the index of a new user symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgUserSymNew\ncount [in] number of entities that make up the user symbol\nidEnt [in] list of index of entities that make up the user symbol\nBasePnt [in] reference point (NULL to use the first critical point of the first entity)\nName [in] name of new user symbol to create\nidBlock [out] index of new user symbol (NULL to ignore)\n\nUse this function to save a group of entities to the active symbol library for later use. if BasePnt is NULL, the function will use the first critical point of the first entity to make up the user symbol as the reference point, see the function description of cvxEntPnt() for detail of the critical point.\nAll user symbol blocks can be inquired by cvxRootInqSymbol()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I use the first critical point of the first entity as the reference point for the new user symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgUserSymNew\ncount [in] number of entities that make up the user symbol\nidEnt [in] list of index of entities that make up the user symbol\nBasePnt [in] reference point (NULL to use the first critical point of the first entity)\nName [in] name of new user symbol to create\nidBlock [out] index of new user symbol (NULL to ignore)\n\nUse this function to save a group of entities to the active symbol library for later use. if BasePnt is NULL, the function will use the first critical point of the first entity to make up the user symbol as the reference point, see the function description of cvxEntPnt() for detail of the critical point.\nAll user symbol blocks can be inquired by cvxRootInqSymbol()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a drawing sheet intersection symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgIsectSym\ndata [in] intersection symbol input data\nidSym [out] id of drawing sheet intersection symbol feature (NULL to ignore)\n\nUse this function to create drawing sheet intersection symbol."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to generate a drawing sheet intersection symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgIsectSym\ndata [in] intersection symbol input data\nidSym [out] id of drawing sheet intersection symbol feature (NULL to ignore)\n\nUse this function to create drawing sheet intersection symbol."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to obtain the id of the drawing sheet intersection symbol feature?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgIsectSym\ndata [in] intersection symbol input data\nidSym [out] id of drawing sheet intersection symbol feature (NULL to ignore)\n\nUse this function to create drawing sheet intersection symbol."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the drawing sheet hole mark structure?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgHoleMarkInit\ntype [in] drawing sheet hole mark type\ndata [out] drawing sheet hole mark data\n\nInitialize the svxDwgHoleMark structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to empty everything inside the drawing sheet hole mark structure?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgHoleMarkInit\ntype [in] drawing sheet hole mark type\ndata [out] drawing sheet hole mark data\n\nInitialize the svxDwgHoleMark structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the drawing sheet hole mark data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgHoleMarkInit\ntype [in] drawing sheet hole mark type\ndata [out] drawing sheet hole mark data\n\nInitialize the svxDwgHoleMark structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to mark holes in a drawing sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgHoleMark\ndata [in] data of hole mark\n\nUse this function to mark holes in drawing sheet.\nnote:\nInterface cvxDwgHoleMarkInit() can initialize variables hole mark of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for marking hole marks?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgHoleMark\ndata [in] data of hole mark\n\nUse this function to mark holes in drawing sheet.\nnote:\nInterface cvxDwgHoleMarkInit() can initialize variables hole mark of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the input data required to mark a hole in a drawing sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgHoleMark\ndata [in] data of hole mark\n\nUse this function to mark holes in drawing sheet.\nnote:\nInterface cvxDwgHoleMarkInit() can initialize variables hole mark of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxDwgCrossHatch?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCrossHatchInit\ndata [out] hatch attributes(drawing)\n\nInitialize the parameters of the cvxDwgCrossHatch().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing cvxDwgCrossHatch?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCrossHatchInit\ndata [out] hatch attributes(drawing)\n\nInitialize the parameters of the cvxDwgCrossHatch().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get hatch attributes for drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCrossHatchInit\ndata [out] hatch attributes(drawing)\n\nInitialize the parameters of the cvxDwgCrossHatch().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a hatch pattern within a boundary?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCrossHatch\ncountEnts [in] count of \"idEnts\"\nidEnts [in] list of entity id\ncountPnts [in] count of \"insides\"\ninsides [in] list of point\nisSplit [in] 1 if split boundary ,else 0\nhatch [in] hatch attributes (NULL to use default)\nidEnt [out] id of hatch (NULL to ignore).idEnt=0 means that it was not created successfully.\n\nThis function creates a hatch pattern within a boundary.\nnote:\nInterface cvxDwgCrossHatchInit() initializes the svxHatchAttr structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize the hatch attributes structure?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCrossHatch\ncountEnts [in] count of \"idEnts\"\nidEnts [in] list of entity id\ncountPnts [in] count of \"insides\"\ninsides [in] list of point\nisSplit [in] 1 if split boundary ,else 0\nhatch [in] hatch attributes (NULL to use default)\nidEnt [out] id of hatch (NULL to ignore).idEnt=0 means that it was not created successfully.\n\nThis function creates a hatch pattern within a boundary.\nnote:\nInterface cvxDwgCrossHatchInit() initializes the svxHatchAttr structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to create a hatch pattern?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCrossHatch\ncountEnts [in] count of \"idEnts\"\nidEnts [in] list of entity id\ncountPnts [in] count of \"insides\"\ninsides [in] list of point\nisSplit [in] 1 if split boundary ,else 0\nhatch [in] hatch attributes (NULL to use default)\nidEnt [out] id of hatch (NULL to ignore).idEnt=0 means that it was not created successfully.\n\nThis function creates a hatch pattern within a boundary.\nnote:\nInterface cvxDwgCrossHatchInit() initializes the svxHatchAttr structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to move an entity within the active drawing from one point to another?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgEntMovePntToPnt\nidEnt [in] id of entity to move\nStart [in] start point\nEnd [in] end point\ntype [in] direction type\nangle [in] angle\nscale [in] scale\n\nMoves the specified entity within the active drawing from one point \"Start\" to another \"End\".\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to move an entity within the active drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgEntMovePntToPnt\nidEnt [in] id of entity to move\nStart [in] start point\nEnd [in] end point\ntype [in] direction type\nangle [in] angle\nscale [in] scale\n\nMoves the specified entity within the active drawing from one point \"Start\" to another \"End\".\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to specify the direction type, angle, and scale while moving an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgEntMovePntToPnt\nidEnt [in] id of entity to move\nStart [in] start point\nEnd [in] end point\ntype [in] direction type\nangle [in] angle\nscale [in] scale\n\nMoves the specified entity within the active drawing from one point \"Start\" to another \"End\".\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to move an entity in a specific direction?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgEntMoveAlongDirection\nidEnt [in] id of entity to move\nDirection [in] direction\nDistance [in] distance\nBasePoint [in] base point\nangle [in] angle\nscale [in] scale\n\nThe specified entity within the active drawing moves \"Distance\" distance in the direction of \"Direction\".\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to move an entity along a given direction?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgEntMoveAlongDirection\nidEnt [in] id of entity to move\nDirection [in] direction\nDistance [in] distance\nBasePoint [in] base point\nangle [in] angle\nscale [in] scale\n\nThe specified entity within the active drawing moves \"Distance\" distance in the direction of \"Direction\".\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the distance and direction for moving an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgEntMoveAlongDirection\nidEnt [in] id of entity to move\nDirection [in] direction\nDistance [in] distance\nBasePoint [in] base point\nangle [in] angle\nscale [in] scale\n\nThe specified entity within the active drawing moves \"Distance\" distance in the direction of \"Direction\".\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I move an entity based on a specific base point, angle, and scale?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgEntMoveAlongDirection\nidEnt [in] id of entity to move\nDirection [in] direction\nDistance [in] distance\nBasePoint [in] base point\nangle [in] angle\nscale [in] scale\n\nThe specified entity within the active drawing moves \"Distance\" distance in the direction of \"Direction\".\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of the drawing view layout?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewLayoutInit\ndata [out] drawing view layout data\n\nInitialize the parameters of the cvxDwgViewLayout().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything inside the drawing view layout?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewLayoutInit\ndata [out] drawing view layout data\n\nInitialize the parameters of the cvxDwgViewLayout().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize the drawing view layout data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewLayoutInit\ndata [out] drawing view layout data\n\nInitialize the parameters of the cvxDwgViewLayout().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a view layout?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewLayout\ndata [in] layout setting info\n\nInsert view layout. This function can create a 1 to 7 view layout of a 3D part. This interface is used in the engineering drawing environment.\nnote:\nInterface cvxDwgViewLayoutInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a 1 to 7 view layout of a 3D part?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewLayout\ndata [in] layout setting info\n\nInsert view layout. This function can create a 1 to 7 view layout of a 3D part. This interface is used in the engineering drawing environment.\nnote:\nInterface cvxDwgViewLayoutInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxDwgViewLayoutInit() to initialize variables of this function?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewLayout\ndata [in] layout setting info\n\nInsert view layout. This function can create a 1 to 7 view layout of a 3D part. This interface is used in the engineering drawing environment.\nnote:\nInterface cvxDwgViewLayoutInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of the drawing view standard?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewStandardInit\ndata [out] drawing view standard data\n\nInitialize the parameters of the cvxDwgViewStandard().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing drawing view standard data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewStandardInit\ndata [out] drawing view standard data\n\nInitialize the parameters of the cvxDwgViewStandard().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize drawing view standard data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewStandardInit\ndata [out] drawing view standard data\n\nInitialize the parameters of the cvxDwgViewStandard().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a standard view from a 3D part?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewStandard\ndata [in] standard setting info\nidView [out] id of standard view(NULL to ignore)\n\nInsert Standard View. Use this function to create a standard orthographic layout view from a 3D part. If the part has named views created using the View Manager, they can also be inserted as a standard view. This interface is used in the engineering drawing environment.\nnote:\nInterface cvxDwgViewStandardInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to create a standard orthographic layout view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewStandard\ndata [in] standard setting info\nidView [out] id of standard view(NULL to ignore)\n\nInsert Standard View. Use this function to create a standard orthographic layout view from a 3D part. If the part has named views created using the View Manager, they can also be inserted as a standard view. This interface is used in the engineering drawing environment.\nnote:\nInterface cvxDwgViewStandardInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I insert named views as a standard view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewStandard\ndata [in] standard setting info\nidView [out] id of standard view(NULL to ignore)\n\nInsert Standard View. Use this function to create a standard orthographic layout view from a 3D part. If the part has named views created using the View Manager, they can also be inserted as a standard view. This interface is used in the engineering drawing environment.\nnote:\nInterface cvxDwgViewStandardInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a projection view in the engineering drawing environment?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewProjection\nidBaseView [in] id of base view\nlocation [in] location of projection view\nProjection [in] 1 if 1st angle, 2 if 3rd angle\nDimType [in] 0 if projected, 1 if true\nViewAttr [in] view attribute(NULL to use default)\nidProjView [out] id of projection view (NULL to ignore)\n\nInsert projection view. This function can create a view projected from another existing 3D layout view. This interface is used in the engineering drawing environment.\nnote:\nThe value of \"ViewAttr\" can be obtained through cvxDwgViewAtGet(). The default value of \"ViewAttr\" can be obtained through \"cvxDwgViewAtGet(-1,ViewAttr)\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to create a view projected from an existing 3D layout view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewProjection\nidBaseView [in] id of base view\nlocation [in] location of projection view\nProjection [in] 1 if 1st angle, 2 if 3rd angle\nDimType [in] 0 if projected, 1 if true\nViewAttr [in] view attribute(NULL to use default)\nidProjView [out] id of projection view (NULL to ignore)\n\nInsert projection view. This function can create a view projected from another existing 3D layout view. This interface is used in the engineering drawing environment.\nnote:\nThe value of \"ViewAttr\" can be obtained through cvxDwgViewAtGet(). The default value of \"ViewAttr\" can be obtained through \"cvxDwgViewAtGet(-1,ViewAttr)\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the id of the projection view after inserting it?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewProjection\nidBaseView [in] id of base view\nlocation [in] location of projection view\nProjection [in] 1 if 1st angle, 2 if 3rd angle\nDimType [in] 0 if projected, 1 if true\nViewAttr [in] view attribute(NULL to use default)\nidProjView [out] id of projection view (NULL to ignore)\n\nInsert projection view. This function can create a view projected from another existing 3D layout view. This interface is used in the engineering drawing environment.\nnote:\nThe value of \"ViewAttr\" can be obtained through cvxDwgViewAtGet(). The default value of \"ViewAttr\" can be obtained through \"cvxDwgViewAtGet(-1,ViewAttr)\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to specify the location of the projection view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewProjection\nidBaseView [in] id of base view\nlocation [in] location of projection view\nProjection [in] 1 if 1st angle, 2 if 3rd angle\nDimType [in] 0 if projected, 1 if true\nViewAttr [in] view attribute(NULL to use default)\nidProjView [out] id of projection view (NULL to ignore)\n\nInsert projection view. This function can create a view projected from another existing 3D layout view. This interface is used in the engineering drawing environment.\nnote:\nThe value of \"ViewAttr\" can be obtained through cvxDwgViewAtGet(). The default value of \"ViewAttr\" can be obtained through \"cvxDwgViewAtGet(-1,ViewAttr)\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I determine if the projection view is 1st angle or 3rd angle?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewProjection\nidBaseView [in] id of base view\nlocation [in] location of projection view\nProjection [in] 1 if 1st angle, 2 if 3rd angle\nDimType [in] 0 if projected, 1 if true\nViewAttr [in] view attribute(NULL to use default)\nidProjView [out] id of projection view (NULL to ignore)\n\nInsert projection view. This function can create a view projected from another existing 3D layout view. This interface is used in the engineering drawing environment.\nnote:\nThe value of \"ViewAttr\" can be obtained through cvxDwgViewAtGet(). The default value of \"ViewAttr\" can be obtained through \"cvxDwgViewAtGet(-1,ViewAttr)\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a method to set the view attribute for the projection view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewProjection\nidBaseView [in] id of base view\nlocation [in] location of projection view\nProjection [in] 1 if 1st angle, 2 if 3rd angle\nDimType [in] 0 if projected, 1 if true\nViewAttr [in] view attribute(NULL to use default)\nidProjView [out] id of projection view (NULL to ignore)\n\nInsert projection view. This function can create a view projected from another existing 3D layout view. This interface is used in the engineering drawing environment.\nnote:\nThe value of \"ViewAttr\" can be obtained through cvxDwgViewAtGet(). The default value of \"ViewAttr\" can be obtained through \"cvxDwgViewAtGet(-1,ViewAttr)\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to obtain the default value of ViewAttr?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewProjection\nidBaseView [in] id of base view\nlocation [in] location of projection view\nProjection [in] 1 if 1st angle, 2 if 3rd angle\nDimType [in] 0 if projected, 1 if true\nViewAttr [in] view attribute(NULL to use default)\nidProjView [out] id of projection view (NULL to ignore)\n\nInsert projection view. This function can create a view projected from another existing 3D layout view. This interface is used in the engineering drawing environment.\nnote:\nThe value of \"ViewAttr\" can be obtained through cvxDwgViewAtGet(). The default value of \"ViewAttr\" can be obtained through \"cvxDwgViewAtGet(-1,ViewAttr)\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of the auxiliary view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewAuxiliaryInit\ndata [out] Auxiliary view data\n\nInitialize the parameters of the cvxDwgViewAuxiliary().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize the auxiliary view data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewAuxiliaryInit\ndata [out] Auxiliary view data\n\nInitialize the parameters of the cvxDwgViewAuxiliary().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to empty everything before initializing the auxiliary view data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewAuxiliaryInit\ndata [out] Auxiliary view data\n\nInitialize the parameters of the cvxDwgViewAuxiliary().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create an auxiliary view for a base view in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewAuxiliary\nauxViewData [in] auxiliary view data\nidView [out] id of the view created (input NULL to ignore)\n\nCreate an auxiliary view for base view in drawing.\nnote:\nInterface cvxDwgViewAuxiliaryInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for creating an auxiliary view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewAuxiliary\nauxViewData [in] auxiliary view data\nidView [out] id of the view created (input NULL to ignore)\n\nCreate an auxiliary view for base view in drawing.\nnote:\nInterface cvxDwgViewAuxiliaryInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the ID of the created auxiliary view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewAuxiliary\nauxViewData [in] auxiliary view data\nidView [out] id of the view created (input NULL to ignore)\n\nCreate an auxiliary view for base view in drawing.\nnote:\nInterface cvxDwgViewAuxiliaryInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of full section view data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewFullSectionInit\ndata [out] full section view data\n\nInitialize the parameters of the cvxDwgViewFullSection().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing full section view data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewFullSectionInit\ndata [out] full section view data\n\nInitialize the parameters of the cvxDwgViewFullSection().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to initialize the parameters of cvxDwgViewFullSection?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewFullSectionInit\ndata [out] full section view data\n\nInitialize the parameters of the cvxDwgViewFullSection().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a full section view for a base view in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewFullSection\nfulSecViewData [in] full section view data\nidView [out] id of the view created (input NULL to ignore)\n\nCreate a full section view for base view in drawing.\nnote:\nInterface cvxDwgViewFullSectionInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to ignore the id of the view created?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewFullSection\nfulSecViewData [in] full section view data\nidView [out] id of the view created (input NULL to ignore)\n\nCreate a full section view for base view in drawing.\nnote:\nInterface cvxDwgViewFullSectionInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can the variables of this function be initialized using cvxDwgViewFullSectionInit()?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewFullSection\nfulSecViewData [in] full section view data\nidView [out] id of the view created (input NULL to ignore)\n\nCreate a full section view for base view in drawing.\nnote:\nInterface cvxDwgViewFullSectionInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of aligned section view data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewAlignedSectionInit\ndata [out] aligned section view data\n\nInitialize the parameters of the cvxDwgViewAlignedSection().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize the parameters of cvxDwgViewAlignedSection?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewAlignedSectionInit\ndata [out] aligned section view data\n\nInitialize the parameters of the cvxDwgViewAlignedSection().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to empty everything before initializing the aligned section view data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewAlignedSectionInit\ndata [out] aligned section view data\n\nInitialize the parameters of the cvxDwgViewAlignedSection().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create an aligned section view for a base view in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewAlignedSection\nalignSecViewData [in] aligned section view data\nidView [out] id of the view created (input NULL to ignore)\n\nCreate a aligned section view for base view in drawing.\nnote:\nInterface cvxDwgViewAlignedSectionInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for creating an aligned section view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewAlignedSection\nalignSecViewData [in] aligned section view data\nidView [out] id of the view created (input NULL to ignore)\n\nCreate a aligned section view for base view in drawing.\nnote:\nInterface cvxDwgViewAlignedSectionInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the ID of the view created after creating an aligned section view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewAlignedSection\nalignSecViewData [in] aligned section view data\nidView [out] id of the view created (input NULL to ignore)\n\nCreate a aligned section view for base view in drawing.\nnote:\nInterface cvxDwgViewAlignedSectionInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of the cvxDwgViewBrokenSection() function?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewBrokenSectionInit\ndata [out] Drawing Broken Section input infos\n\nInitialize the parameters of the cvxDwgViewBrokenSection().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to initialize the Drawing Broken Section input infos?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewBrokenSectionInit\ndata [out] Drawing Broken Section input infos\n\nInitialize the parameters of the cvxDwgViewBrokenSection().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to empty everything before calling the cvxDwgViewBrokenSection() function?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewBrokenSectionInit\ndata [out] Drawing Broken Section input infos\n\nInitialize the parameters of the cvxDwgViewBrokenSection().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a broken section view of a part?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewBrokenSection\ndata [in] broken section data\nidView [out] id of section view (NULL to ignore)\n\nThis interface function is broken section. A broken section is a cut-away view of the interior of a part. It is a section view displayed inside a 2D boundary where an existing view of the part has been cut away.\nInterface cvxDwgViewBrokenSectionInit() can initialize variables of this function.\nnote:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for creating a broken section view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewBrokenSection\ndata [in] broken section data\nidView [out] id of section view (NULL to ignore)\n\nThis interface function is broken section. A broken section is a cut-away view of the interior of a part. It is a section view displayed inside a 2D boundary where an existing view of the part has been cut away.\nInterface cvxDwgViewBrokenSectionInit() can initialize variables of this function.\nnote:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the section view after creating a broken section?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewBrokenSection\ndata [in] broken section data\nidView [out] id of section view (NULL to ignore)\n\nThis interface function is broken section. A broken section is a cut-away view of the interior of a part. It is a section view displayed inside a 2D boundary where an existing view of the part has been cut away.\nInterface cvxDwgViewBrokenSectionInit() can initialize variables of this function.\nnote:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of the cvxDwgViewDetail() function?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewDetailInit\ndata [out] Drawing Detail input infos\n\nInitialize the parameters of the cvxDwgViewDetail().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to empty everything before calling the cvxDwgViewDetail() function?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewDetailInit\ndata [out] Drawing Detail input infos\n\nInitialize the parameters of the cvxDwgViewDetail().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any specific way to assign a value to the variable 'data' before calling the cvxDwgViewDetail() function?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewDetailInit\ndata [out] Drawing Detail input infos\n\nInitialize the parameters of the cvxDwgViewDetail().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a local detail view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewDetail\ndata [in] detail data\nidView [out] id of detail view (NULL to ignore)\n\nThis function creates a local detail view.\nnote:\nInterface cvxDwgViewDetailInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for creating a detail view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewDetail\ndata [in] detail data\nidView [out] id of detail view (NULL to ignore)\n\nThis function creates a local detail view.\nnote:\nInterface cvxDwgViewDetailInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of a detail view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewDetail\ndata [in] detail data\nidView [out] id of detail view (NULL to ignore)\n\nThis function creates a local detail view.\nnote:\nInterface cvxDwgViewDetailInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxDwgViewBrkLine?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewBrkLineInit\ndata [out] information we need when create break line\n\nInitialize the parameters of the cvxDwgViewBrkLine().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What information do we need when creating a break line?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewBrkLineInit\ndata [out] information we need when create break line\n\nInitialize the parameters of the cvxDwgViewBrkLine().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing the parameters of cvxDwgViewBrkLine?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewBrkLineInit\ndata [out] information we need when create break line\n\nInitialize the parameters of the cvxDwgViewBrkLine().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a break line?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewBrkLine\nbrkLineInfo [in] information needed when create break line\nbrkLnViewId [out] id of break line that will create (input NULL to ignore)\n\nCreate a break line.\nnote:\nInterface cvxDwgViewBrkLineInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for creating a break line?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewBrkLine\nbrkLineInfo [in] information needed when create break line\nbrkLnViewId [out] id of break line that will create (input NULL to ignore)\n\nCreate a break line.\nnote:\nInterface cvxDwgViewBrkLineInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the break line that will be created?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewBrkLine\nbrkLineInfo [in] information needed when create break line\nbrkLnViewId [out] id of break line that will create (input NULL to ignore)\n\nCreate a break line.\nnote:\nInterface cvxDwgViewBrkLineInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of BOM table data for a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableBomInit\ndata [out] BOM table data(drawing)\n\nInitialize the parameters of the cvxDwgTableBom().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function should be called to empty everything before initializing BOM table data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableBomInit\ndata [out] BOM table data(drawing)\n\nInitialize the parameters of the cvxDwgTableBom().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a specific method to initialize BOM table data for a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableBomInit\ndata [out] BOM table data(drawing)\n\nInitialize the parameters of the cvxDwgTableBom().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a BOM table using cvxDwgTableBom function?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableBom\npData [in] data of BOM\nidTbl [out] id of BOM table (NULL to ignore)\n\nThis function is used to create BOM table\nnote:\nInterface cvxDwgTableBomInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for cvxDwgTableBom function using cvxDwgTableBomInit interface?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableBom\npData [in] data of BOM\nidTbl [out] id of BOM table (NULL to ignore)\n\nThis function is used to create BOM table\nnote:\nInterface cvxDwgTableBomInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the BOM table using cvxDwgTableBom function?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableBom\npData [in] data of BOM\nidTbl [out] id of BOM table (NULL to ignore)\n\nThis function is used to create BOM table\nnote:\nInterface cvxDwgTableBomInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a table using data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableInsert\npData [in] data of table\n\nThis function is used to insert table"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to insert a table with specific data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableInsert\npData [in] data of table\n\nThis function is used to insert table"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the function to insert a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableInsert\npData [in] data of table\n\nThis function is used to insert table"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a user table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgUserTableCreate\nname [in] table name\niRow [in] number of rows\niCol [in] number of columns\npnt [in] the coordinate of the origin of table\norigin [in] indicate the insertion position(0-8)\nidTable [out] id of new table(NULL to ignore)\n\nCreate a user table. Output the table id if idTable is not NULL.\nVariable origin specifies where the table is inserted, valid values are as follows:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the insertion position of the table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgUserTableCreate\nname [in] table name\niRow [in] number of rows\niCol [in] number of columns\npnt [in] the coordinate of the origin of table\norigin [in] indicate the insertion position(0-8)\nidTable [out] id of new table(NULL to ignore)\n\nCreate a user table. Output the table id if idTable is not NULL.\nVariable origin specifies where the table is inserted, valid values are as follows:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the id of the newly created table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgUserTableCreate\nname [in] table name\niRow [in] number of rows\niCol [in] number of columns\npnt [in] the coordinate of the origin of table\norigin [in] indicate the insertion position(0-8)\nidTable [out] id of new table(NULL to ignore)\n\nCreate a user table. Output the table id if idTable is not NULL.\nVariable origin specifies where the table is inserted, valid values are as follows:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a user table using a template?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgUserTableCreateByTemplate\nname [in] table name\ntplPath [in] template file full path\npnt [in] the coordinate of the origin of table\norigin [in] indicate the insertion position(0-8)\nidTable [out] id of new table(NULL to ignore)\n\nCreate a user table through a template. Output the table id if idTable is not NULL.\nVariable origin specifies where the table is inserted, valid values are as follows:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the valid values for the insertion position of the table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgUserTableCreateByTemplate\nname [in] table name\ntplPath [in] template file full path\npnt [in] the coordinate of the origin of table\norigin [in] indicate the insertion position(0-8)\nidTable [out] id of new table(NULL to ignore)\n\nCreate a user table through a template. Output the table id if idTable is not NULL.\nVariable origin specifies where the table is inserted, valid values are as follows:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to ignore the output of the table id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgUserTableCreateByTemplate\nname [in] table name\ntplPath [in] template file full path\npnt [in] the coordinate of the origin of table\norigin [in] indicate the insertion position(0-8)\nidTable [out] id of new table(NULL to ignore)\n\nCreate a user table through a template. Output the table id if idTable is not NULL.\nVariable origin specifies where the table is inserted, valid values are as follows:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of the Rotate View function?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgRotateViewinit\ndata [out] Rotate View data\n\nInitialize the parameters of the cvxDwgRotateView().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize the Rotate View data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgRotateViewinit\ndata [out] Rotate View data\n\nInitialize the parameters of the cvxDwgRotateView().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to empty everything and initialize the Rotate View data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgRotateViewinit\ndata [out] Rotate View data\n\nInitialize the parameters of the cvxDwgRotateView().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to rotate a view using the given data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgRotateView\npData [in] data of Rotate View\n\nThis function is used to Rotate View.\nnote:\nInterface cvxDwgRotateViewInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for rotating a view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgRotateView\npData [in] data of Rotate View\n\nThis function is used to Rotate View.\nnote:\nInterface cvxDwgRotateViewInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to use cvxDwgRotateView to rotate a view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgRotateView\npData [in] data of Rotate View\n\nThis function is used to Rotate View.\nnote:\nInterface cvxDwgRotateViewInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to rotate a view with a specified angle?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRotate\nidView [in] id of view\nangle [in] degree angle\n\nRotate the view with specify angle."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to rotate a view by a certain degree angle?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRotate\nidView [in] id of view\nangle [in] degree angle\n\nRotate the view with specify angle."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I change the angle of a specific view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRotate\nidView [in] id of view\nangle [in] degree angle\n\nRotate the view with specify angle."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of the Region Set data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEcadRgnSetInit\ndata [out] Region set data\n\nInitialize the parameters of the cvxPartEcadRgnSet().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything and initialize the Region Set data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEcadRgnSetInit\ndata [out] Region set data\n\nInitialize the parameters of the cvxPartEcadRgnSet().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to initialize the cvxPartEcadRgnSet() parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEcadRgnSetInit\ndata [out] Region set data\n\nInitialize the parameters of the cvxPartEcadRgnSet().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the ECAD 'Region Set' command?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEcadRgnSet\npRgnSetData [in] region set data\nidFtr [out] id of feature(NULL to ignore)\n\nECAD \"Region Set\" command. The sketch must be cosmetic.\nnote:\nInterface cvxPartEcadRgnSetInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function of cvxPartEcadRgnSetInit() in relation to this command?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEcadRgnSet\npRgnSetData [in] region set data\nidFtr [out] id of feature(NULL to ignore)\n\nECAD \"Region Set\" command. The sketch must be cosmetic.\nnote:\nInterface cvxPartEcadRgnSetInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set region set data for the ECAD command?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEcadRgnSet\npRgnSetData [in] region set data\nidFtr [out] id of feature(NULL to ignore)\n\nECAD \"Region Set\" command. The sketch must be cosmetic.\nnote:\nInterface cvxPartEcadRgnSetInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the feature after using the 'Region Set' command?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEcadRgnSet\npRgnSetData [in] region set data\nidFtr [out] id of feature(NULL to ignore)\n\nECAD \"Region Set\" command. The sketch must be cosmetic.\nnote:\nInterface cvxPartEcadRgnSetInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to cut a sheet metal shape using a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEcadRgnCut\nidSketch [in] id sketch to cut the tab shape\nidFtr [out] id of feature(NULL to ignore)\n\nUse the input sketch to cut the sheet metal shape. It likes Extrude_Remove command and the extrude length is the thickness of the tab shape in current part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to cut a tab shape using a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEcadRgnCut\nidSketch [in] id sketch to cut the tab shape\nidFtr [out] id of feature(NULL to ignore)\n\nUse the input sketch to cut the sheet metal shape. It likes Extrude_Remove command and the extrude length is the thickness of the tab shape in current part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use a sketch to remove material from a sheet metal shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEcadRgnCut\nidSketch [in] id sketch to cut the tab shape\nidFtr [out] id of feature(NULL to ignore)\n\nUse the input sketch to cut the sheet metal shape. It likes Extrude_Remove command and the extrude length is the thickness of the tab shape in current part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartFilletBlend?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFilletBlendInit\ndata [out] freeForm filletBlend data\n\nInitialize the parameters of the cvxPartFilletBlend().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing cvxPartFilletBlend?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFilletBlendInit\ndata [out] freeForm filletBlend data\n\nInitialize the parameters of the cvxPartFilletBlend().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the freeForm filletBlend data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFilletBlendInit\ndata [out] freeForm filletBlend data\n\nInitialize the parameters of the cvxPartFilletBlend().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create an intelligent blend face using FilletBlend input data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFilletBlend\nFilletBlend [in] filletBlend input data\nidFilletBlend [out] id of FilletBlend feature (NULL to ignore)\n\nUse this function to create an intelligent blend face.\nnote:\nInterface cvxPartFilletBlendInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for creating a blend face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFilletBlend\nFilletBlend [in] filletBlend input data\nidFilletBlend [out] id of FilletBlend feature (NULL to ignore)\n\nUse this function to create an intelligent blend face.\nnote:\nInterface cvxPartFilletBlendInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the FilletBlend feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFilletBlend\nFilletBlend [in] filletBlend input data\nidFilletBlend [out] id of FilletBlend feature (NULL to ignore)\n\nUse this function to create an intelligent blend face.\nnote:\nInterface cvxPartFilletBlendInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartNSided()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartNSidedInit\ndata [out] template command N-sided data\n\nInitialize the parameters of the cvxPartNSided().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize N-sided data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartNSidedInit\ndata [out] template command N-sided data\n\nInitialize the parameters of the cvxPartNSided().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to empty everything before initializing N-sided data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartNSidedInit\ndata [out] template command N-sided data\n\nInitialize the parameters of the cvxPartNSided().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the cvxPartNSided function to create an N-sided entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartNSided\nNSidedData [in] input boundary\nidShape [out] id of new shape(NULL to ignore)\n\nThis API is to do the N-sided function for entities. The id of entity newly created is output by idShape.\nnote:\nInterface cvxPartNSidedInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for the cvxPartNSided function using cvxPartNSidedInit()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartNSided\nNSidedData [in] input boundary\nidShape [out] id of new shape(NULL to ignore)\n\nThis API is to do the N-sided function for entities. The id of entity newly created is output by idShape.\nnote:\nInterface cvxPartNSidedInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the output idShape used for in the cvxPartNSided function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartNSided\nNSidedData [in] input boundary\nidShape [out] id of new shape(NULL to ignore)\n\nThis API is to do the N-sided function for entities. The id of entity newly created is output by idShape.\nnote:\nInterface cvxPartNSidedInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartTrimmedPlane()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrimmedPlaneInit\ndata [out] template command Trimmed Plane data\n\nInitialize the parameters of the cvxPartTrimmedPlane().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing cvxPartTrimmedPlane()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrimmedPlaneInit\ndata [out] template command Trimmed Plane data\n\nInitialize the parameters of the cvxPartTrimmedPlane().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the template command Trimmed Plane data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrimmedPlaneInit\ndata [out] template command Trimmed Plane data\n\nInitialize the parameters of the cvxPartTrimmedPlane().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a planar face trimmed to a set of bounding curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrimmedPlane\ndata [in] input data\nnewShp [out] id of new shape(NULL to ignore)\n\nUse this command to create a planar face trimmed to a set of bounding curves. Required inputs include the boundary curves to trim to. Optional inputs include a datum plane or planar face to project to.\nThis function can output the new surface if data->sew is 0 and *newShp is not null.\nnote:\nInterface cvxPartTrimmedPlaneInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to project to a datum plane or planar face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrimmedPlane\ndata [in] input data\nnewShp [out] id of new shape(NULL to ignore)\n\nUse this command to create a planar face trimmed to a set of bounding curves. Required inputs include the boundary curves to trim to. Optional inputs include a datum plane or planar face to project to.\nThis function can output the new surface if data->sew is 0 and *newShp is not null.\nnote:\nInterface cvxPartTrimmedPlaneInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can you provide an example of using cvxPartTrimmedPlane function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrimmedPlane\ndata [in] input data\nnewShp [out] id of new shape(NULL to ignore)\n\nUse this command to create a planar face trimmed to a set of bounding curves. Required inputs include the boundary curves to trim to. Optional inputs include a datum plane or planar face to project to.\nThis function can output the new surface if data->sew is 0 and *newShp is not null.\nnote:\nInterface cvxPartTrimmedPlaneInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartRuled()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRuledInit\ndata [out] ruled data to create a new ruled face\n\nInitialize the parameters of the cvxPartRuled().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to create a new ruled face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRuledInit\ndata [out] ruled data to create a new ruled face\n\nInitialize the parameters of the cvxPartRuled().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to empty everything before initializing the parameters of cvxPartRuled()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRuledInit\ndata [out] ruled data to create a new ruled face\n\nInitialize the parameters of the cvxPartRuled().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a ruled face with linear cross-sections?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRuled\ndata [in] ruled data to create a new ruled face\nidFace [out] index of new face (NULL to ignore)\n\nUse the function to create a ruled face with linear cross-sections between two path curves.\nnote:\nInterface cvxPartRuledInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a new ruled face with path curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRuled\ndata [in] ruled data to create a new ruled face\nidFace [out] index of new face (NULL to ignore)\n\nUse the function to create a ruled face with linear cross-sections between two path curves.\nnote:\nInterface cvxPartRuledInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize variables for creating a ruled face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRuled\ndata [in] ruled data to create a new ruled face\nidFace [out] index of new face (NULL to ignore)\n\nUse the function to create a ruled face with linear cross-sections between two path curves.\nnote:\nInterface cvxPartRuledInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to initialize circular bi rail parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCircularBiRailInit\nmethod [in] circular bi rail method\ndata [out] circular bi rail data to create a new circular face\n\nInitialize the parameters of the cvxPartCircularBiRail().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a new circular face using circular bi rail data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCircularBiRailInit\nmethod [in] circular bi rail method\ndata [out] circular bi rail data to create a new circular face\n\nInitialize the parameters of the cvxPartCircularBiRail().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any function to empty everything before initializing circular bi rail parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCircularBiRailInit\nmethod [in] circular bi rail method\ndata [out] circular bi rail data to create a new circular face\n\nInitialize the parameters of the cvxPartCircularBiRail().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a circular face between two path curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCircularBiRail\ndata [in] circular bi rail data to create a new circular face\nidFace [out] id of new face (NULL to ignore)\n\nUse the function to create a face of circular cross-section between two sets of path curves. The radii of the cross-sections are determined by the creation method and are used to define a circle that intersects both boundary curves.\nnote:\nInterface cvxPartCircularBiRailInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to define a circular cross-section between boundary curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCircularBiRail\ndata [in] circular bi rail data to create a new circular face\nidFace [out] id of new face (NULL to ignore)\n\nUse the function to create a face of circular cross-section between two sets of path curves. The radii of the cross-sections are determined by the creation method and are used to define a circle that intersects both boundary curves.\nnote:\nInterface cvxPartCircularBiRailInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine the radii of the cross-sections for creating a circular face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCircularBiRail\ndata [in] circular bi rail data to create a new circular face\nidFace [out] id of new face (NULL to ignore)\n\nUse the function to create a face of circular cross-section between two sets of path curves. The radii of the cross-sections are determined by the creation method and are used to define a circle that intersects both boundary curves.\nnote:\nInterface cvxPartCircularBiRailInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartConicBiRail()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartConicBiRailInit\nmethod [in] conic bi rail method\ndata [out] conic bi rail data to create a new conic face\n\nInitialize the parameters of the cvxPartConicBiRail().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to create a new conic face using cvxPartConicBiRail()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartConicBiRailInit\nmethod [in] conic bi rail method\ndata [out] conic bi rail data to create a new conic face\n\nInitialize the parameters of the cvxPartConicBiRail().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing the conic bi rail data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartConicBiRailInit\nmethod [in] conic bi rail method\ndata [out] conic bi rail data to create a new conic face\n\nInitialize the parameters of the cvxPartConicBiRail().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a face with conic cross-sections between two path curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartConicBiRail\ndata [in] conic bi rail data to create a new conic face\nidFace [out] id of new face (NULL to ignore)\n\nUse the function to create a face with conic cross-sections between two path curves. The radii of the cross-sections are determined by the creation method. This radius defines a circle that intersects both boundary curves. Tangent lines to the circle at the intersection points, along with a conic ratio, define the conic cross-sections.\nnote:\nInterface cvxPartConicBiRailInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to determine the radii of the cross-sections for creating a new conic face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartConicBiRail\ndata [in] conic bi rail data to create a new conic face\nidFace [out] id of new face (NULL to ignore)\n\nUse the function to create a face with conic cross-sections between two path curves. The radii of the cross-sections are determined by the creation method. This radius defines a circle that intersects both boundary curves. Tangent lines to the circle at the intersection points, along with a conic ratio, define the conic cross-sections.\nnote:\nInterface cvxPartConicBiRailInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to define the conic cross-sections using tangent lines and conic ratio?"
            },
            {
                "role": "assistant",
                "content": "cvxPartConicBiRail\ndata [in] conic bi rail data to create a new conic face\nidFace [out] id of new face (NULL to ignore)\n\nUse the function to create a face with conic cross-sections between two path curves. The radii of the cross-sections are determined by the creation method. This radius defines a circle that intersects both boundary curves. Tangent lines to the circle at the intersection points, along with a conic ratio, define the conic cross-sections.\nnote:\nInterface cvxPartConicBiRailInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartFacesOffset()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacesOffsetInit\ndata [out] faces offset data\n\nInitialize the parameters of the cvxPartFacesOffset().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing the parameters of cvxPartFacesOffset()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacesOffsetInit\ndata [out] faces offset data\n\nInitialize the parameters of the cvxPartFacesOffset().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the faces offset data for a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacesOffsetInit\ndata [out] faces offset data\n\nInitialize the parameters of the cvxPartFacesOffset().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a new face offset from a specified distance?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacesOffset\ndata [in] face offset data\nidFtr [out] feature id (pass in NULL to ignore)\n\nUse this function to create a new face offset from a face at a specified distance. Multiple faces can be offset at the same time.\nnote:\nInterface cvxPartFacesOffsetInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to offset multiple faces at the same time?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacesOffset\ndata [in] face offset data\nidFtr [out] feature id (pass in NULL to ignore)\n\nUse this function to create a new face offset from a face at a specified distance. Multiple faces can be offset at the same time.\nnote:\nInterface cvxPartFacesOffsetInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize variables for creating a face offset?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacesOffset\ndata [in] face offset data\nidFtr [out] feature id (pass in NULL to ignore)\n\nUse this function to create a new face offset from a face at a specified distance. Multiple faces can be offset at the same time.\nnote:\nInterface cvxPartFacesOffsetInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartExtendFace()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtendFaceInit\ndata [out] template command Extend Face data\n\nInitialize the parameters of the cvxPartExtendFace().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the template command for Extend Face data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtendFaceInit\ndata [out] template command Extend Face data\n\nInitialize the parameters of the cvxPartExtendFace().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing the parameters of cvxPartExtendFace()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtendFaceInit\ndata [out] template command Extend Face data\n\nInitialize the parameters of the cvxPartExtendFace().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to extend a specified face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtendFace\ndata [in] extend face data\nnewFtr [out] index of new feature(NULL to ignore)\n\nExtend the specified face.\nnote:\nInterface cvxPartExtendFaceInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to extend a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtendFace\ndata [in] extend face data\nnewFtr [out] index of new feature(NULL to ignore)\n\nExtend the specified face.\nnote:\nInterface cvxPartExtendFaceInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize variables for extending a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtendFace\ndata [in] extend face data\nnewFtr [out] index of new feature(NULL to ignore)\n\nExtend the specified face.\nnote:\nInterface cvxPartExtendFaceInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of trim to faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrimToFacesInit\ndata [out] data of trim to faces\n\nInitialize the parameters of the cvxPartTrimToFaces().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing trim to faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrimToFacesInit\ndata [out] data of trim to faces\n\nInitialize the parameters of the cvxPartTrimToFaces().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the data of trim to faces after initialization?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrimToFacesInit\ndata [out] data of trim to faces\n\nInitialize the parameters of the cvxPartTrimToFaces().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to trim part of a face or shape using Trimming?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrimToFaces\ndata [in] trimtofaces_data definition\nidTrim [out] trim id (NULL to ignore )\n\nTrim away part of a face or shape where it intersects with Trimming.\nnote:\nInterface cvxPartTrimToFacesInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for the cvxPartTrimToFaces function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrimToFaces\ndata [in] trimtofaces_data definition\nidTrim [out] trim id (NULL to ignore )\n\nTrim away part of a face or shape where it intersects with Trimming.\nnote:\nInterface cvxPartTrimToFacesInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the trim id after trimming a face or shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrimToFaces\ndata [in] trimtofaces_data definition\nidTrim [out] trim id (NULL to ignore )\n\nTrim away part of a face or shape where it intersects with Trimming.\nnote:\nInterface cvxPartTrimToFacesInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to trim a face to a curve or set of curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrimToCrvs\ntrimData [in] trim to curves data\nidTrim [out] trim feature id (pass in NULL to ignore)\n\nUse this function to trim a face or shape to a curve or set of curves."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to trim a shape to a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrimToCrvs\ntrimData [in] trim to curves data\nidTrim [out] trim feature id (pass in NULL to ignore)\n\nUse this function to trim a face or shape to a curve or set of curves."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use trimData to trim to curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrimToCrvs\ntrimData [in] trim to curves data\nidTrim [out] trim feature id (pass in NULL to ignore)\n\nUse this function to trim a face or shape to a curve or set of curves."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the view direction of selected faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSetFaceDir\ncount [in] count of faces (0 to orient all faces)\nidFaces [in] list of face ids (NULL to orient all faces)\ndir [in] direction of faces (NULL to use the positive z-axis)\n\nUse the function to orient the view direction of selected faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to orient the faces using a specific direction?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSetFaceDir\ncount [in] count of faces (0 to orient all faces)\nidFaces [in] list of face ids (NULL to orient all faces)\ndir [in] direction of faces (NULL to use the positive z-axis)\n\nUse the function to orient the view direction of selected faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to orient all faces in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSetFaceDir\ncount [in] count of faces (0 to orient all faces)\nidFaces [in] list of face ids (NULL to orient all faces)\ndir [in] direction of faces (NULL to use the positive z-axis)\n\nUse the function to orient the view direction of selected faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to reverse the direction of natural normal of input faces?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceReverse\nnumFaces [in] number of faces in input list\nidFaces [in] pointer to array of integer face id's\n\nReverses the direction of the natural normal of the input faces by swapping the U and V parameter directions of each face's surface.\nEach face's normal direction also reverses to keep it consistently oriented with respect to the surface normal and ensure a closed shape's inside and outside remain unchanged.\nThis function also modifies each face's pre-edges to keep them properly located in the modified UV domain. This function ignores any face ID that is less than 1.\nsee:\ncvxFaceReverseDir()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to swap U and V parameter directions of each face's surface?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceReverse\nnumFaces [in] number of faces in input list\nidFaces [in] pointer to array of integer face id's\n\nReverses the direction of the natural normal of the input faces by swapping the U and V parameter directions of each face's surface.\nEach face's normal direction also reverses to keep it consistently oriented with respect to the surface normal and ensure a closed shape's inside and outside remain unchanged.\nThis function also modifies each face's pre-edges to keep them properly located in the modified UV domain. This function ignores any face ID that is less than 1.\nsee:\ncvxFaceReverseDir()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to ensure the inside and outside of a closed shape remain unchanged after reversing face direction?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceReverse\nnumFaces [in] number of faces in input list\nidFaces [in] pointer to array of integer face id's\n\nReverses the direction of the natural normal of the input faces by swapping the U and V parameter directions of each face's surface.\nEach face's normal direction also reverses to keep it consistently oriented with respect to the surface normal and ensure a closed shape's inside and outside remain unchanged.\nThis function also modifies each face's pre-edges to keep them properly located in the modified UV domain. This function ignores any face ID that is less than 1.\nsee:\ncvxFaceReverseDir()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to reverse the normal direction of a face?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceReverseDir\nnumFaces [in] number of faces in input list\nidFaces [in] pointer to array of integer face id's\n\nReverses the normal direction of each input face, without changing its surface or trim loops. If a face initially bounds a closed shape, this flips the inside and outside with respect to that shape.\nEach ID in the idFaces array may refer to a face or a shape. When an ID refers to a shape, this function reverses all of the shape's faces.\nsee:\ncvxFaceReverse()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to reverse the inside and outside of a closed shape?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceReverseDir\nnumFaces [in] number of faces in input list\nidFaces [in] pointer to array of integer face id's\n\nReverses the normal direction of each input face, without changing its surface or trim loops. If a face initially bounds a closed shape, this flips the inside and outside with respect to that shape.\nEach ID in the idFaces array may refer to a face or a shape. When an ID refers to a shape, this function reverses all of the shape's faces.\nsee:\ncvxFaceReverse()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to reverse all faces of a shape?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceReverseDir\nnumFaces [in] number of faces in input list\nidFaces [in] pointer to array of integer face id's\n\nReverses the normal direction of each input face, without changing its surface or trim loops. If a face initially bounds a closed shape, this flips the inside and outside with respect to that shape.\nEach ID in the idFaces array may refer to a face or a shape. When an ID refers to a shape, this function reverses all of the shape's faces.\nsee:\ncvxFaceReverse()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the number of iso-lines for specified faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartModifyIsolineNum\ncount [in] number of faces\nidFaces [in] list of face ids\nUisoline [in] number of iso-lines displayed in the U directions\nVisoline [in] number of iso-lines displayed in the V directions\n\nUse the function to modify the number of iso-lines of the specified faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the iso-line count for specific faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartModifyIsolineNum\ncount [in] number of faces\nidFaces [in] list of face ids\nUisoline [in] number of iso-lines displayed in the U directions\nVisoline [in] number of iso-lines displayed in the V directions\n\nUse the function to modify the number of iso-lines of the specified faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to adjust the U and V iso-line count for certain faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartModifyIsolineNum\ncount [in] number of faces\nidFaces [in] list of face ids\nUisoline [in] number of iso-lines displayed in the U directions\nVisoline [in] number of iso-lines displayed in the V directions\n\nUse the function to modify the number of iso-lines of the specified faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartExplode()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExplodeInit\ndata [out] data of explode command\n\nInitialize the parameters of the cvxPartExplode().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of cvxMemZero() inside the interface?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExplodeInit\ndata [out] data of explode command\n\nInitialize the parameters of the cvxPartExplode().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to empty everything before calling cvxPartExplode()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExplodeInit\ndata [out] data of explode command\n\nInitialize the parameters of the cvxPartExplode().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to explode faces from the active topology table?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExplode\nExplodeData [in] explode_data definition\nnumShape [out] number of resulting shapes (NULL to ignore)\nidShapes [out] list of id's of resulting shapes (NULL to ignore)\n\nExplode faces from the active topology table.\nnote:\nInterface cvxPartExplodeInit() can initialize variables of this function. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for the cvxPartExplode function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExplode\nExplodeData [in] explode_data definition\nnumShape [out] number of resulting shapes (NULL to ignore)\nidShapes [out] list of id's of resulting shapes (NULL to ignore)\n\nExplode faces from the active topology table.\nnote:\nInterface cvxPartExplodeInit() can initialize variables of this function. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list after using cvxPartExplode?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExplode\nExplodeData [in] explode_data definition\nnumShape [out] number of resulting shapes (NULL to ignore)\nidShapes [out] list of id's of resulting shapes (NULL to ignore)\n\nExplode faces from the active topology table.\nnote:\nInterface cvxPartExplodeInit() can initialize variables of this function. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartFacesetSew()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacesetSewInit\ndata [out] faces sew data\n\nInitialize the parameters of the cvxPartFacesetSew().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing cvxPartFacesetSew()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacesetSewInit\ndata [out] faces sew data\n\nInitialize the parameters of the cvxPartFacesetSew().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the faces sew data without assigning a value to the variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacesetSewInit\ndata [out] faces sew data\n\nInitialize the parameters of the cvxPartFacesetSew().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to sew the specified shapes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacesetSew\ncount [in] count of shapes\nshapes [in] id list of shapes\nparam [in] parameter value (NULL to use default)\nnewFtr [out] id of new feature(NULL to ignore)\n\nSew the specified shapes.\nnote:\nInterface cvxPartFacesetSewInit() can initialize variables of this function.\nsee:\ncvxPartSewForce() The difference between cvxPartFacesetSew and cvxPartSewForce is this function can input the specified shapes and set the svxSewData by themselves."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for sewing shapes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacesetSew\ncount [in] count of shapes\nshapes [in] id list of shapes\nparam [in] parameter value (NULL to use default)\nnewFtr [out] id of new feature(NULL to ignore)\n\nSew the specified shapes.\nnote:\nInterface cvxPartFacesetSewInit() can initialize variables of this function.\nsee:\ncvxPartSewForce() The difference between cvxPartFacesetSew and cvxPartSewForce is this function can input the specified shapes and set the svxSewData by themselves."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the difference between cvxPartFacesetSew and cvxPartSewForce?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacesetSew\ncount [in] count of shapes\nshapes [in] id list of shapes\nparam [in] parameter value (NULL to use default)\nnewFtr [out] id of new feature(NULL to ignore)\n\nSew the specified shapes.\nnote:\nInterface cvxPartFacesetSewInit() can initialize variables of this function.\nsee:\ncvxPartSewForce() The difference between cvxPartFacesetSew and cvxPartSewForce is this function can input the specified shapes and set the svxSewData by themselves."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I input specified shapes and set the svxSewData by themselves using this function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacesetSew\ncount [in] count of shapes\nshapes [in] id list of shapes\nparam [in] parameter value (NULL to use default)\nnewFtr [out] id of new feature(NULL to ignore)\n\nSew the specified shapes.\nnote:\nInterface cvxPartFacesetSewInit() can initialize variables of this function.\nsee:\ncvxPartSewForce() The difference between cvxPartFacesetSew and cvxPartSewForce is this function can input the specified shapes and set the svxSewData by themselves."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to match and sew free edges in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSewForce\nTol [in] 3D proximity tolerance (mm) (0.0 for default)\n\nMatches and sews free edges in the active part using the input proximity tolerance. If \"Tol\" is input as 0.0, the active part's default proximity tolerance is used. Unlike cvxPartSew(), this function attempts to \"force\" open edges to sew to adjacent edges that are \"close\" but not within tolerance.\nsee:\ncvxPartFacesetSew() The difference between cvxPartSewForce and cvxPartFacesetSew is this function doesn't need to input the shapes and set \"force object to sew into solid\" to 1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the difference between cvxPartSewForce and cvxPartFacesetSew?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSewForce\nTol [in] 3D proximity tolerance (mm) (0.0 for default)\n\nMatches and sews free edges in the active part using the input proximity tolerance. If \"Tol\" is input as 0.0, the active part's default proximity tolerance is used. Unlike cvxPartSew(), this function attempts to \"force\" open edges to sew to adjacent edges that are \"close\" but not within tolerance.\nsee:\ncvxPartFacesetSew() The difference between cvxPartSewForce and cvxPartFacesetSew is this function doesn't need to input the shapes and set \"force object to sew into solid\" to 1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the input proximity tolerance in cvxPartSewForce?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSewForce\nTol [in] 3D proximity tolerance (mm) (0.0 for default)\n\nMatches and sews free edges in the active part using the input proximity tolerance. If \"Tol\" is input as 0.0, the active part's default proximity tolerance is used. Unlike cvxPartSew(), this function attempts to \"force\" open edges to sew to adjacent edges that are \"close\" but not within tolerance.\nsee:\ncvxPartFacesetSew() The difference between cvxPartSewForce and cvxPartFacesetSew is this function doesn't need to input the shapes and set \"force object to sew into solid\" to 1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartEnlargeFace?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEnlargeFaceInit\ndata [out] enlarge face data\n\nInitialize the parameters of the cvxPartEnlargeFace().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize the enlarge face data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEnlargeFaceInit\ndata [out] enlarge face data\n\nInitialize the parameters of the cvxPartEnlargeFace().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing the enlarge face data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEnlargeFaceInit\ndata [out] enlarge face data\n\nInitialize the parameters of the cvxPartEnlargeFace().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to enlarge a face by extending each edge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEnlargeFace\ndata [in] enlarge face data\nidFace [out] id of new face (NULL to ignore)\n\nUse the function to remove all the loops from the selected face and enlarge the new face by extending each edge.\nnote:\nInterface cvxPartEnlargeFaceInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to remove all the loops from a selected face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEnlargeFace\ndata [in] enlarge face data\nidFace [out] id of new face (NULL to ignore)\n\nUse the function to remove all the loops from the selected face and enlarge the new face by extending each edge.\nnote:\nInterface cvxPartEnlargeFaceInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new face after enlarging?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEnlargeFace\ndata [in] enlarge face data\nidFace [out] id of new face (NULL to ignore)\n\nUse the function to remove all the loops from the selected face and enlarge the new face by extending each edge.\nnote:\nInterface cvxPartEnlargeFaceInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartExtendShape()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtendShapeInit\ndata [out] extend shape data\n\nInitialize the parameters of the cvxPartExtendShape().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing the extend shape data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtendShapeInit\ndata [out] extend shape data\n\nInitialize the parameters of the cvxPartExtendShape().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize the extend shape data without assigning a value to the variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtendShapeInit\ndata [out] extend shape data\n\nInitialize the parameters of the cvxPartExtendShape().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to extend the face edges of an open shape or solid shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtendShape\ndata [in] extend shape data\nidFtr [out] id of new feature (NULL to ignore)\n\nUse the function to extend the face edges of an open shape or solid shape.\nnote:\nInterface cvxPartExtendShapeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to extend the shape data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtendShape\ndata [in] extend shape data\nidFtr [out] id of new feature (NULL to ignore)\n\nUse the function to extend the face edges of an open shape or solid shape.\nnote:\nInterface cvxPartExtendShapeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of a new feature after extending a shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtendShape\ndata [in] extend shape data\nidFtr [out] id of new feature (NULL to ignore)\n\nUse the function to extend the face edges of an open shape or solid shape.\nnote:\nInterface cvxPartExtendShapeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSplitWithCrv()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSplitWithCrvInit\ndata [out] split faces with curves data\n\nInitialize the parameters of the cvxPartSplitWithCrv().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize the split faces with curves data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSplitWithCrvInit\ndata [out] split faces with curves data\n\nInitialize the parameters of the cvxPartSplitWithCrv().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to empty everything before calling cvxPartSplitWithCrv()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSplitWithCrvInit\ndata [out] split faces with curves data\n\nInitialize the parameters of the cvxPartSplitWithCrv().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to split a face at a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSplitWithCrv\ndata [in] split faces with curves data\nidFtr [out] id of new feature (NULL to ignore)\n\nUse the function to split a face or shape at a curve or set of curves. If the curves intersect each other, the spurs are reflected in the resulting faces. If you split one face, a shape will be the result. Splitting one shape will result in the same shape having additional faces.\nnote:\nInterface cvxPartSplitWithCrvInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to split a shape at a set of curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSplitWithCrv\ndata [in] split faces with curves data\nidFtr [out] id of new feature (NULL to ignore)\n\nUse the function to split a face or shape at a curve or set of curves. If the curves intersect each other, the spurs are reflected in the resulting faces. If you split one face, a shape will be the result. Splitting one shape will result in the same shape having additional faces.\nnote:\nInterface cvxPartSplitWithCrvInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to handle intersecting curves when splitting faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSplitWithCrv\ndata [in] split faces with curves data\nidFtr [out] id of new feature (NULL to ignore)\n\nUse the function to split a face or shape at a curve or set of curves. If the curves intersect each other, the spurs are reflected in the resulting faces. If you split one face, a shape will be the result. Splitting one shape will result in the same shape having additional faces.\nnote:\nInterface cvxPartSplitWithCrvInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create and initialize a data container for a specific command?"
            },
            {
                "role": "assistant",
                "content": "cvxDataInit\nTemplate [in] command template name\nidData [out] id of data container\n\nCreates and initializes a data container for the specified command. The calling procedure is responsible for deleting the container and its contents using cvxDataFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize a data container for a command template?"
            },
            {
                "role": "assistant",
                "content": "cvxDataInit\nTemplate [in] command template name\nidData [out] id of data container\n\nCreates and initializes a data container for the specified command. The calling procedure is responsible for deleting the container and its contents using cvxDataFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the data container for a specified command?"
            },
            {
                "role": "assistant",
                "content": "cvxDataInit\nTemplate [in] command template name\nidData [out] id of data container\n\nCreates and initializes a data container for the specified command. The calling procedure is responsible for deleting the container and its contents using cvxDataFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set all bytes of a data structure to zero?"
            },
            {
                "role": "assistant",
                "content": "cvxDataZero\nData [inout] pointer to data structure\n\nSet all bytes of the input \"Data\" structure to zero."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to zero out a data structure?"
            },
            {
                "role": "assistant",
                "content": "cvxDataZero\nData [inout] pointer to data structure\n\nSet all bytes of the input \"Data\" structure to zero."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to reset a data structure to all zeros?"
            },
            {
                "role": "assistant",
                "content": "cvxDataZero\nData [inout] pointer to data structure\n\nSet all bytes of the input \"Data\" structure to zero."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign data to a specific field in a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSet\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nData [in] data item\n\nAssigns the specified item of data to the specified field of the specified data container. If \"idField\" is defined as a list in the command template used to initialize \"idData\", the new item of data is appended to items already associated with the field. If the field is not defined as a list, any existing item is replaced.\nnote:\nFor set list widget, it could be set idEntity to input the command VDATA that could be created by cvxDataInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to append new data to a field in a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSet\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nData [in] data item\n\nAssigns the specified item of data to the specified field of the specified data container. If \"idField\" is defined as a list in the command template used to initialize \"idData\", the new item of data is appended to items already associated with the field. If the field is not defined as a list, any existing item is replaced.\nnote:\nFor set list widget, it could be set idEntity to input the command VDATA that could be created by cvxDataInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I replace existing data in a field of a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSet\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nData [in] data item\n\nAssigns the specified item of data to the specified field of the specified data container. If \"idField\" is defined as a list in the command template used to initialize \"idData\", the new item of data is appended to items already associated with the field. If the field is not defined as a list, any existing item is replaced.\nnote:\nFor set list widget, it could be set idEntity to input the command VDATA that could be created by cvxDataInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the color index by input RGB value?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetColor\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nColor [in] rgb color\n\nIf the corresponding color widget's type is index color, find the color index by input \"Color\" rgb value. \n\n If the rgb value is not one of index color, it will return 1, otherwise set the index into specified VDATA field. \n\n If type is true color, encodes the input RGB color values as an integer stored in VDATA field. \n\n Use cvxDataGetColor() to retrieve RGB color from the field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the index into specified VDATA field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetColor\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nColor [in] rgb color\n\nIf the corresponding color widget's type is index color, find the color index by input \"Color\" rgb value. \n\n If the rgb value is not one of index color, it will return 1, otherwise set the index into specified VDATA field. \n\n If type is true color, encodes the input RGB color values as an integer stored in VDATA field. \n\n Use cvxDataGetColor() to retrieve RGB color from the field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to encode the input RGB color values as an integer in VDATA field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetColor\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nColor [in] rgb color\n\nIf the corresponding color widget's type is index color, find the color index by input \"Color\" rgb value. \n\n If the rgb value is not one of index color, it will return 1, otherwise set the index into specified VDATA field. \n\n If type is true color, encodes the input RGB color values as an integer stored in VDATA field. \n\n Use cvxDataGetColor() to retrieve RGB color from the field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to append an entity to a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPath\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nEnt [in] entity pick path\n\nAppend the specified entity to the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the entity pick path for a data field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPath\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nEnt [in] entity pick path\n\nAppend the specified entity to the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add an entity to a specific field in a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPath\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nEnt [in] entity pick path\n\nAppend the specified entity to the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to promote a point-on-entity pick to its parent?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPromote\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nPromote [in] 1 to promote entity pick to parent, else 0\n\nIf \"Promote\" is input as a non-zero value, the point-on-entity pick stored in the specified input field is flagged to tell ZW3D to promote the pick to the parent of the entity instead of the entity itself.\nIf \"Promote\" is input as zero, the point-on-entity pick is flagged to tell ZW3D not to promote the pick to its parent.\nA common case is the promotion of a curve pick to its parent sketch or curve list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to flag ZW3D to not promote a point-on-entity pick to its parent?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPromote\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nPromote [in] 1 to promote entity pick to parent, else 0\n\nIf \"Promote\" is input as a non-zero value, the point-on-entity pick stored in the specified input field is flagged to tell ZW3D to promote the pick to the parent of the entity instead of the entity itself.\nIf \"Promote\" is input as zero, the point-on-entity pick is flagged to tell ZW3D not to promote the pick to its parent.\nA common case is the promotion of a curve pick to its parent sketch or curve list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I promote a curve pick to its parent sketch or curve list?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPromote\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nPromote [in] 1 to promote entity pick to parent, else 0\n\nIf \"Promote\" is input as a non-zero value, the point-on-entity pick stored in the specified input field is flagged to tell ZW3D to promote the pick to the parent of the entity instead of the entity itself.\nIf \"Promote\" is input as zero, the point-on-entity pick is flagged to tell ZW3D not to promote the pick to its parent.\nA common case is the promotion of a curve pick to its parent sketch or curve list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to log a point on curve pick to a specified field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntOnCrv\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nidCrv [in] id of curve in active root object\nPnt [in] point on or near the curve or key point of curve (NULL to use the start point of the curve )\n\nLogs a \"point on curve\" pick to the specified field of the specified data container. Projects the specified point (Pnt) onto the specified curve. The point should lie on or near the curve."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to project a point onto a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntOnCrv\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nidCrv [in] id of curve in active root object\nPnt [in] point on or near the curve or key point of curve (NULL to use the start point of the curve )\n\nLogs a \"point on curve\" pick to the specified field of the specified data container. Projects the specified point (Pnt) onto the specified curve. The point should lie on or near the curve."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify a point on or near a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntOnCrv\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nidCrv [in] id of curve in active root object\nPnt [in] point on or near the curve or key point of curve (NULL to use the start point of the curve )\n\nLogs a \"point on curve\" pick to the specified field of the specified data container. Projects the specified point (Pnt) onto the specified curve. The point should lie on or near the curve."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to log a point on a face to a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntOnFace\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nidComp [in] id of component in active part (0 to ignore)\nidFace [in] id of face in active part\n\nLogs a \"point on face\" pick to the specified field of the specified data container. Uses a point on the specified face at the midpoint of the face's bounding box in UV parameter space."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to pick a point on a face and log it to a data field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntOnFace\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nidComp [in] id of component in active part (0 to ignore)\nidFace [in] id of face in active part\n\nLogs a \"point on face\" pick to the specified field of the specified data container. Uses a point on the specified face at the midpoint of the face's bounding box in UV parameter space."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use UV parameter space to specify a point on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntOnFace\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nidComp [in] id of component in active part (0 to ignore)\nidFace [in] id of face in active part\n\nLogs a \"point on face\" pick to the specified field of the specified data container. Uses a point on the specified face at the midpoint of the face's bounding box in UV parameter space."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to log a point on a face to a specific data container field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntOnFace2\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nidFace [in] id of face in active part\nPnt [in] point on or near the face\n\nLogs a \"point on face\" pick to the specified field of the specified data container. Projects the specified point (Pnt) onto the face. The point should lie on or very near to the face in a location that can be projected onto the face along a face normal."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to project a point onto a face?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntOnFace2\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nidFace [in] id of face in active part\nPnt [in] point on or near the face\n\nLogs a \"point on face\" pick to the specified field of the specified data container. Projects the specified point (Pnt) onto the face. The point should lie on or very near to the face in a location that can be projected onto the face along a face normal."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to pick a point on or near a face and log it to a data container field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntOnFace2\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nidFace [in] id of face in active part\nPnt [in] point on or near the face\n\nLogs a \"point on face\" pick to the specified field of the specified data container. Projects the specified point (Pnt) onto the face. The point should lie on or very near to the face in a location that can be projected onto the face along a face normal."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a point to a specific data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntByPath\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nentPath [in] the entity pick path\npnt [in] point on the entity\n\nAdd the specified point (pnt) as the Nth element (N = idField) of the specified data object (VDATA).\nIf the Nth element is already defined (and it is a list), the point is appended to a list of points referenced by the Nth element.\nIf the NTh element is defined (and it is not a list), the point is overwritten.\nnote:\nThe id of path must start with -2 if you use \"CdCnsCoin\" command for a secondary development."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify a point as the Nth element of a data field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntByPath\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nentPath [in] the entity pick path\npnt [in] point on the entity\n\nAdd the specified point (pnt) as the Nth element (N = idField) of the specified data object (VDATA).\nIf the Nth element is already defined (and it is a list), the point is appended to a list of points referenced by the Nth element.\nIf the NTh element is defined (and it is not a list), the point is overwritten.\nnote:\nThe id of path must start with -2 if you use \"CdCnsCoin\" command for a secondary development."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to append a point to a list of points in a data field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntByPath\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nentPath [in] the entity pick path\npnt [in] point on the entity\n\nAdd the specified point (pnt) as the Nth element (N = idField) of the specified data object (VDATA).\nIf the Nth element is already defined (and it is a list), the point is appended to a list of points referenced by the Nth element.\nIf the NTh element is defined (and it is not a list), the point is overwritten.\nnote:\nThe id of path must start with -2 if you use \"CdCnsCoin\" command for a secondary development."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a point on a curve as an element of a data object?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntOnCrvPath\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\ncritPnt [in] whether to map point to critical point of curve\ncrvPath [in] pick path of curve\npnt [in] point on the curve\n\nAdd the specified point on curve as the Nth element (N = idField) of the specified data object (VDATA).\nIf the Nth element is already defined (and it is a list), the point is appended to a list of points referenced by the Nth element.\nIf the NTh element is defined (and it is not a list), the point is overwritten."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to map a point to the critical point of a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntOnCrvPath\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\ncritPnt [in] whether to map point to critical point of curve\ncrvPath [in] pick path of curve\npnt [in] point on the curve\n\nAdd the specified point on curve as the Nth element (N = idField) of the specified data object (VDATA).\nIf the Nth element is already defined (and it is a list), the point is appended to a list of points referenced by the Nth element.\nIf the NTh element is defined (and it is not a list), the point is overwritten."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to overwrite a point if the Nth element is already defined?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntOnCrvPath\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\ncritPnt [in] whether to map point to critical point of curve\ncrvPath [in] pick path of curve\npnt [in] point on the curve\n\nAdd the specified point on curve as the Nth element (N = idField) of the specified data object (VDATA).\nIf the Nth element is already defined (and it is a list), the point is appended to a list of points referenced by the Nth element.\nIf the NTh element is defined (and it is not a list), the point is overwritten."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to log a point on an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntOnEnt\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\npntData [in] point on entity data\n\nLog the point/direction on the entity or point/direction to the specified field.\nIf you want to log the critical point to the field, you should set useCritPnt to 1 and set one type to critTyp.\nThe point can be on the curve or the surface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to log a direction on an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntOnEnt\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\npntData [in] point on entity data\n\nLog the point/direction on the entity or point/direction to the specified field.\nIf you want to log the critical point to the field, you should set useCritPnt to 1 and set one type to critTyp.\nThe point can be on the curve or the surface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to log a critical point to a field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntOnEnt\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\npntData [in] point on entity data\n\nLog the point/direction on the entity or point/direction to the specified field.\nIf you want to log the critical point to the field, you should set useCritPnt to 1 and set one type to critTyp.\nThe point can be on the curve or the surface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to log a point on a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntOnEntPath\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\npntData [in] point on entity data\n\nLog the point on the entity or point to the specified field. The point can be on the curve or the surface, datum plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to log a point on a surface?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntOnEntPath\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\npntData [in] point on entity data\n\nLog the point on the entity or point to the specified field. The point can be on the curve or the surface, datum plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to log a point on a datum plane?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntOnEntPath\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\npntData [in] point on entity data\n\nLog the point on the entity or point to the specified field. The point can be on the curve or the surface, datum plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to log a point to a specified field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntOnEntPath\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\npntData [in] point on entity data\n\nLog the point on the entity or point to the specified field. The point can be on the curve or the surface, datum plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to log the direction of a point on an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetDirOnEntPath\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\ndirData [in] direction data\n\nLog the direction of point on the entity or direction to the specified field. The point can be on the curve or the surface, datum plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to log the direction to a specified field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetDirOnEntPath\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\ndirData [in] direction data\n\nLog the direction of point on the entity or direction to the specified field. The point can be on the curve or the surface, datum plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the direction data of a point on a curve or surface?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetDirOnEntPath\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\ndirData [in] direction data\n\nLog the direction of point on the entity or direction to the specified field. The point can be on the curve or the surface, datum plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to log a pick to a specified field of a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetMatrix\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nmat [in] entity matrix\n\nLogs a \"mat\" pick to the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set a matrix to a data field of a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetMatrix\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nmat [in] entity matrix\n\nLogs a \"mat\" pick to the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxDataSetMatrix to update a data field with a matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetMatrix\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nmat [in] entity matrix\n\nLogs a \"mat\" pick to the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the VDATA associated with a specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxDataToFeature\nidData [in] id of data container (i.e. VDATA)\nidFeature [in] id of feature in active part (0 for active feature operation)\nExcludeRegen [in] 1 to disable the action of this function during regen, else 0\n\nWhen a feature is logged to the history, a copy of its driving VDATA is converted to a persistent state and recorded with the feature.\nAfter that, any modification you make to the original VDATA is not reflected into the VDATA recorded in the history.\nThis function is used to update the VDATA associated with the specified feature (idFeature) with the contents of the input VDATA (idData).\nIf \"idFeature < 1\", the VDATA of the feature created by the active feature operation (CustomOp) is updated.\nIf \"ExcludeRegen != 0\", this function does nothing if it is called during history regeneration.\nBefore the contents of \"iData\" are assigned to the specified feature, an attempt is made to make all entity picks/references in the \"iData\" persistent.\nThis requires finding the specified entities in the active part in order to lookup their persistent labels. If the entities cannot be found in the current part state, this function will fail."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if the function is called during history regeneration?"
            },
            {
                "role": "assistant",
                "content": "cvxDataToFeature\nidData [in] id of data container (i.e. VDATA)\nidFeature [in] id of feature in active part (0 for active feature operation)\nExcludeRegen [in] 1 to disable the action of this function during regen, else 0\n\nWhen a feature is logged to the history, a copy of its driving VDATA is converted to a persistent state and recorded with the feature.\nAfter that, any modification you make to the original VDATA is not reflected into the VDATA recorded in the history.\nThis function is used to update the VDATA associated with the specified feature (idFeature) with the contents of the input VDATA (idData).\nIf \"idFeature < 1\", the VDATA of the feature created by the active feature operation (CustomOp) is updated.\nIf \"ExcludeRegen != 0\", this function does nothing if it is called during history regeneration.\nBefore the contents of \"iData\" are assigned to the specified feature, an attempt is made to make all entity picks/references in the \"iData\" persistent.\nThis requires finding the specified entities in the active part in order to lookup their persistent labels. If the entities cannot be found in the current part state, this function will fail."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the VDATA of the feature created by the active feature operation?"
            },
            {
                "role": "assistant",
                "content": "cvxDataToFeature\nidData [in] id of data container (i.e. VDATA)\nidFeature [in] id of feature in active part (0 for active feature operation)\nExcludeRegen [in] 1 to disable the action of this function during regen, else 0\n\nWhen a feature is logged to the history, a copy of its driving VDATA is converted to a persistent state and recorded with the feature.\nAfter that, any modification you make to the original VDATA is not reflected into the VDATA recorded in the history.\nThis function is used to update the VDATA associated with the specified feature (idFeature) with the contents of the input VDATA (idData).\nIf \"idFeature < 1\", the VDATA of the feature created by the active feature operation (CustomOp) is updated.\nIf \"ExcludeRegen != 0\", this function does nothing if it is called during history regeneration.\nBefore the contents of \"iData\" are assigned to the specified feature, an attempt is made to make all entity picks/references in the \"iData\" persistent.\nThis requires finding the specified entities in the active part in order to lookup their persistent labels. If the entities cannot be found in the current part state, this function will fail."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to make all entity picks/references in the input VDATA persistent before assigning its contents to the specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxDataToFeature\nidData [in] id of data container (i.e. VDATA)\nidFeature [in] id of feature in active part (0 for active feature operation)\nExcludeRegen [in] 1 to disable the action of this function during regen, else 0\n\nWhen a feature is logged to the history, a copy of its driving VDATA is converted to a persistent state and recorded with the feature.\nAfter that, any modification you make to the original VDATA is not reflected into the VDATA recorded in the history.\nThis function is used to update the VDATA associated with the specified feature (idFeature) with the contents of the input VDATA (idData).\nIf \"idFeature < 1\", the VDATA of the feature created by the active feature operation (CustomOp) is updated.\nIf \"ExcludeRegen != 0\", this function does nothing if it is called during history regeneration.\nBefore the contents of \"iData\" are assigned to the specified feature, an attempt is made to make all entity picks/references in the \"iData\" persistent.\nThis requires finding the specified entities in the active part in order to lookup their persistent labels. If the entities cannot be found in the current part state, this function will fail."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the first item of data associated with a specified field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGet\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nData [out] first data item associated with \"idField\"\n\nGets the first item of data associated with the specified field of the specified data container.\nWhen the data come from a numeric input field in an option form, any expression entered by the user will be evaluated to determine a value for the number; the numeric value will be output in \"Data->Num\" and the expression will be output in \"Data->Text\".\nWhen the data come from a text input field, the raw text is output in \"Data->Text\" without replacing expressions. If you wish to support variable reference expressions such as \"[$VAR]\" where VAR is the name of a variable in the active target, the output string from this function can be given to the cvxPartVarSubstitute() function to replace the \"[$VAR]\" expressions with the values of the variables. For example:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to evaluate user-entered expressions for numeric input fields?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGet\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nData [out] first data item associated with \"idField\"\n\nGets the first item of data associated with the specified field of the specified data container.\nWhen the data come from a numeric input field in an option form, any expression entered by the user will be evaluated to determine a value for the number; the numeric value will be output in \"Data->Num\" and the expression will be output in \"Data->Text\".\nWhen the data come from a text input field, the raw text is output in \"Data->Text\" without replacing expressions. If you wish to support variable reference expressions such as \"[$VAR]\" where VAR is the name of a variable in the active target, the output string from this function can be given to the cvxPartVarSubstitute() function to replace the \"[$VAR]\" expressions with the values of the variables. For example:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the raw text from a text input field without replacing expressions?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGet\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nData [out] first data item associated with \"idField\"\n\nGets the first item of data associated with the specified field of the specified data container.\nWhen the data come from a numeric input field in an option form, any expression entered by the user will be evaluated to determine a value for the number; the numeric value will be output in \"Data->Num\" and the expression will be output in \"Data->Text\".\nWhen the data come from a text input field, the raw text is output in \"Data->Text\" without replacing expressions. If you wish to support variable reference expressions such as \"[$VAR]\" where VAR is the name of a variable in the active target, the output string from this function can be given to the cvxPartVarSubstitute() function to replace the \"[$VAR]\" expressions with the values of the variables. For example:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get RGB color values from a specified VDATA field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetColor\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nColor [out] rgb color\n\nGets the RGB color values in the specified VDATA field as an integer or one index value. Use cvxDataSetColor() to encode RGB color as an integer or one index value into VDATA field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve RGB color values from VDATA?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetColor\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nColor [out] rgb color\n\nGets the RGB color values in the specified VDATA field as an integer or one index value. Use cvxDataSetColor() to encode RGB color as an integer or one index value into VDATA field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain RGB color values from a data container using cvxDataGetColor()?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetColor\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nColor [out] rgb color\n\nGets the RGB color values in the specified VDATA field as an integer or one index value. Use cvxDataSetColor() to encode RGB color as an integer or one index value into VDATA field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the entity id associated with a specific field of a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetEnt\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nidEnt [out] id of entity associated with field (0 if undefined)\nidParent [out] id of entity parent (0 if undefined; NULL to ignore)\n\nGets the entity id associated with the specified field of the specified data container. Input NULL for \"idParent\" if you are not interested in getting parent information."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the entity id of a data field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetEnt\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nidEnt [out] id of entity associated with field (0 if undefined)\nidParent [out] id of entity parent (0 if undefined; NULL to ignore)\n\nGets the entity id associated with the specified field of the specified data container. Input NULL for \"idParent\" if you are not interested in getting parent information."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I get the parent entity id of a specific data field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetEnt\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nidEnt [out] id of entity associated with field (0 if undefined)\nidParent [out] id of entity parent (0 if undefined; NULL to ignore)\n\nGets the entity id associated with the specified field of the specified data container. Input NULL for \"idParent\" if you are not interested in getting parent information."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of entity id's associated with a data field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetEnts\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nCount [out] data item count\nidEnts [out] list of entity id's associated with field\n\nGets the list of entity id's associated with the specified field of the specified data container. The list referenced by \"**idEnts\" is allocated by this function and must be deallocated by the calling procedure. A NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the entity id's associated with a specific data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetEnts\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nCount [out] data item count\nidEnts [out] list of entity id's associated with field\n\nGets the list of entity id's associated with the specified field of the specified data container. The list referenced by \"**idEnts\" is allocated by this function and must be deallocated by the calling procedure. A NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the count of data items associated with a specific data field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetEnts\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nCount [out] data item count\nidEnts [out] list of entity id's associated with field\n\nGets the list of entity id's associated with the specified field of the specified data container. The list referenced by \"**idEnts\" is allocated by this function and must be deallocated by the calling procedure. A NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of data items associated with a specific field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetList\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nCount [out] data item count\nData [out] list of data items associated with \"idField\"\n\nGets the list of data items associated with the specified field of the specified data container. The list referenced by \"**Data\" is allocated by this function and must be deallocated by the calling procedure. A NULL pointer is output if no data is found.\nnote:\nFor set list widget, idEntity to output the VDATA list associated with \"idField\""
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the count of data items associated with a field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetList\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nCount [out] data item count\nData [out] list of data items associated with \"idField\"\n\nGets the list of data items associated with the specified field of the specified data container. The list referenced by \"**Data\" is allocated by this function and must be deallocated by the calling procedure. A NULL pointer is output if no data is found.\nnote:\nFor set list widget, idEntity to output the VDATA list associated with \"idField\""
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I obtain the data items associated with a specific field using the data container ID?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetList\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nCount [out] data item count\nData [out] list of data items associated with \"idField\"\n\nGets the list of data items associated with the specified field of the specified data container. The list referenced by \"**Data\" is allocated by this function and must be deallocated by the calling procedure. A NULL pointer is output if no data is found.\nnote:\nFor set list widget, idEntity to output the VDATA list associated with \"idField\""
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve a double precision number from a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetNum\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nNumber [out] double precision number associated with \"idField\"\n\nGets the double precision number associated with the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the number associated with a specific field in a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetNum\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nNumber [out] double precision number associated with \"idField\"\n\nGets the double precision number associated with the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I access the double precision number linked to a field in a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetNum\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nNumber [out] double precision number associated with \"idField\"\n\nGets the double precision number associated with the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the integer option number associated with a specified field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetOpt\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\n\nReturns the integer option number associated with the specified field.\nreturn:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the integer option number for a specific data field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetOpt\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\n\nReturns the integer option number associated with the specified field.\nreturn:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the integer option number for a particular field in a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetOpt\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\n\nReturns the integer option number associated with the specified field.\nreturn:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the entity pick-path associated with a specific data field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPath\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nFirstEnt [inout] 1 for first entity; 0-subsequent entities\nEnt [out] entity pick path\n\nGet the entity pick-path associated with \"idField\" of \"idData\".\nThis function does not activate the pick-path.\nIf \"*FirstEnt=1\", the first pick is retrieved, \"*FirstEnt\" is set to zero and static variables inside this function are set up to enable retrieval of the next pick when this function is called again with \"*FirstEnt=0\". If a pick is successfully retrieved, this function returns 0. If no pick was retrieved, it returns -1. If there was a fatal error, it returns 1.\nIf \"FirstEnt=NULL\", the first entity is retrieved without setting things up to get a \"next\" entity.\nThis function should not be called recursively, but no checking is done to insure it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the first entity pick-path associated with a data field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPath\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nFirstEnt [inout] 1 for first entity; 0-subsequent entities\nEnt [out] entity pick path\n\nGet the entity pick-path associated with \"idField\" of \"idData\".\nThis function does not activate the pick-path.\nIf \"*FirstEnt=1\", the first pick is retrieved, \"*FirstEnt\" is set to zero and static variables inside this function are set up to enable retrieval of the next pick when this function is called again with \"*FirstEnt=0\". If a pick is successfully retrieved, this function returns 0. If no pick was retrieved, it returns -1. If there was a fatal error, it returns 1.\nIf \"FirstEnt=NULL\", the first entity is retrieved without setting things up to get a \"next\" entity.\nThis function should not be called recursively, but no checking is done to insure it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve subsequent entity pick-paths associated with a data field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPath\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nFirstEnt [inout] 1 for first entity; 0-subsequent entities\nEnt [out] entity pick path\n\nGet the entity pick-path associated with \"idField\" of \"idData\".\nThis function does not activate the pick-path.\nIf \"*FirstEnt=1\", the first pick is retrieved, \"*FirstEnt\" is set to zero and static variables inside this function are set up to enable retrieval of the next pick when this function is called again with \"*FirstEnt=0\". If a pick is successfully retrieved, this function returns 0. If no pick was retrieved, it returns -1. If there was a fatal error, it returns 1.\nIf \"FirstEnt=NULL\", the first entity is retrieved without setting things up to get a \"next\" entity.\nThis function should not be called recursively, but no checking is done to insure it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if a pick-path was successfully retrieved for a specific data field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPath\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nFirstEnt [inout] 1 for first entity; 0-subsequent entities\nEnt [out] entity pick path\n\nGet the entity pick-path associated with \"idField\" of \"idData\".\nThis function does not activate the pick-path.\nIf \"*FirstEnt=1\", the first pick is retrieved, \"*FirstEnt\" is set to zero and static variables inside this function are set up to enable retrieval of the next pick when this function is called again with \"*FirstEnt=0\". If a pick is successfully retrieved, this function returns 0. If no pick was retrieved, it returns -1. If there was a fatal error, it returns 1.\nIf \"FirstEnt=NULL\", the first entity is retrieved without setting things up to get a \"next\" entity.\nThis function should not be called recursively, but no checking is done to insure it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the entity pick-paths associated with a specific data field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPaths\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\ncount [out] count of paths\npaths [out] list of entity pick path\n\nGet the entity pick-paths associated with \"idField\" of \"idData\". \"**paths\" is allocated by this function and must be deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the count of pick-paths for a particular data field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPaths\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\ncount [out] count of paths\npaths [out] list of entity pick path\n\nGet the entity pick-paths associated with \"idField\" of \"idData\". \"**paths\" is allocated by this function and must be deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can you provide a list of entity pick-paths for a given data field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPaths\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\ncount [out] count of paths\npaths [out] list of entity pick path\n\nGet the entity pick-paths associated with \"idField\" of \"idData\". \"**paths\" is allocated by this function and must be deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get point coordinates associated with a data field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPnt\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nPnt [out] point associated with field\n\nGets the point coordinates associated with the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the point associated with a specific field in a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPnt\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nPnt [out] point associated with field\n\nGets the point coordinates associated with the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the point coordinates related to a particular field in a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPnt\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nPnt [out] point associated with field\n\nGets the point coordinates associated with the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of point coordinates associated with a specific data field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPnts\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nCount [out] data item count\nPnts [out] list of points associated with field\n\nGets the list of point coordinates associated with the specified field of the specified data container. The list referenced by \"**Pnts\" is allocated by this function and must be deallocated by the calling procedure. A NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the count of data items associated with a specific field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPnts\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nCount [out] data item count\nPnts [out] list of points associated with field\n\nGets the list of point coordinates associated with the specified field of the specified data container. The list referenced by \"**Pnts\" is allocated by this function and must be deallocated by the calling procedure. A NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the list of points associated with a particular field in a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPnts\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nCount [out] data item count\nPnts [out] list of points associated with field\n\nGets the list of point coordinates associated with the specified field of the specified data container. The list referenced by \"**Pnts\" is allocated by this function and must be deallocated by the calling procedure. A NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the point coordinates associated with a field in a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPntOnEnt\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\npnt [out] point associated with field\npath [out] path of point on entity(NULL to ignore)\n\nGets the point coordinates and path of point on entity associated with the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the path of a point on an entity associated with a specific field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPntOnEnt\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\npnt [out] point associated with field\npath [out] path of point on entity(NULL to ignore)\n\nGets the point coordinates and path of point on entity associated with the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the point on entity by specifying the data container and field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPntOnEnt\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\npnt [out] point associated with field\npath [out] path of point on entity(NULL to ignore)\n\nGets the point coordinates and path of point on entity associated with the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of point coordinates for a specific data field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPntsOnEnts\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\ncount [out] data item count\npnts [out] list of points associated with field\npaths [out] list of paths associated with points(NULL to ignore)\n\nGets the list of point coordinates and list of paths associated with the specified field of the specified data container. The list referenced by \"**paths\" and \"**pnts\" are allocated by this function and must be deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the paths associated with the points?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPntsOnEnts\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\ncount [out] data item count\npnts [out] list of points associated with field\npaths [out] list of paths associated with points(NULL to ignore)\n\nGets the list of point coordinates and list of paths associated with the specified field of the specified data container. The list referenced by \"**paths\" and \"**pnts\" are allocated by this function and must be deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the count of data items for a specific field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPntsOnEnts\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\ncount [out] data item count\npnts [out] list of points associated with field\npaths [out] list of paths associated with points(NULL to ignore)\n\nGets the list of point coordinates and list of paths associated with the specified field of the specified data container. The list referenced by \"**paths\" and \"**pnts\" are allocated by this function and must be deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a pick should be promoted to its parent entity?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPromote\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nPromote [out] 1 to promote entity to parent, else 0\n\nOutputs \"Promote=1\", if the pick associated with the point-on-entity stored in the specified input field should be promoted to pick the parent of the entity instead of the entity itself. If not, \"Promote=0\" is output.\nA common case is the promotion of a curve pick to its parent sketch or curve list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to promote a curve pick to its parent sketch or curve list?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPromote\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nPromote [out] 1 to promote entity to parent, else 0\n\nOutputs \"Promote=1\", if the pick associated with the point-on-entity stored in the specified input field should be promoted to pick the parent of the entity instead of the entity itself. If not, \"Promote=0\" is output.\nA common case is the promotion of a curve pick to its parent sketch or curve list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to determine if a pick should be promoted to its parent?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPromote\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nPromote [out] 1 to promote entity to parent, else 0\n\nOutputs \"Promote=1\", if the pick associated with the point-on-entity stored in the specified input field should be promoted to pick the parent of the entity instead of the entity itself. If not, \"Promote=0\" is output.\nA common case is the promotion of a curve pick to its parent sketch or curve list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the null-terminated ascii text string associated with a specific field of a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetText\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nNumBytes [in] number of bytes of memory referenced by \"Text\"\nText [out] null-terminated ascii string\n\nGets the null-terminated ascii text string associated with the specified field of the specified data container.\nIf necessary, the string copied to the memory referenced by \"Text\" is truncated based on the value of \"NumBytes\".\nThe calling procedure is responsible for allocating and deallocating the memory referenced by \"Text\".\nnote:\nThis function outputs the raw text contained in the specified field. \n\n Expressions embedded in the text to reference ZW3D variables are not automatically replaced by the variable values. \n\n If you wish to support variable references of the form \"[$VAR]\" where VAR is the name of a variable in the active target, the output string from this function can be given to the cvxPartVarSubstitute() or cvxPartVarSubstituteResize() function to replace the \"[$VAR]\" expressions with the values of the variables."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the raw text contained in a specified field of a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetText\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nNumBytes [in] number of bytes of memory referenced by \"Text\"\nText [out] null-terminated ascii string\n\nGets the null-terminated ascii text string associated with the specified field of the specified data container.\nIf necessary, the string copied to the memory referenced by \"Text\" is truncated based on the value of \"NumBytes\".\nThe calling procedure is responsible for allocating and deallocating the memory referenced by \"Text\".\nnote:\nThis function outputs the raw text contained in the specified field. \n\n Expressions embedded in the text to reference ZW3D variables are not automatically replaced by the variable values. \n\n If you wish to support variable references of the form \"[$VAR]\" where VAR is the name of a variable in the active target, the output string from this function can be given to the cvxPartVarSubstitute() or cvxPartVarSubstituteResize() function to replace the \"[$VAR]\" expressions with the values of the variables."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the ascii string associated with a particular field of a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetText\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nNumBytes [in] number of bytes of memory referenced by \"Text\"\nText [out] null-terminated ascii string\n\nGets the null-terminated ascii text string associated with the specified field of the specified data container.\nIf necessary, the string copied to the memory referenced by \"Text\" is truncated based on the value of \"NumBytes\".\nThe calling procedure is responsible for allocating and deallocating the memory referenced by \"Text\".\nnote:\nThis function outputs the raw text contained in the specified field. \n\n Expressions embedded in the text to reference ZW3D variables are not automatically replaced by the variable values. \n\n If you wish to support variable references of the form \"[$VAR]\" where VAR is the name of a variable in the active target, the output string from this function can be given to the cvxPartVarSubstitute() or cvxPartVarSubstituteResize() function to replace the \"[$VAR]\" expressions with the values of the variables."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the transformation matrix of a specific data field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetMatrix\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nMatrix [out] transformation matrix\n\nGet the transformation matrix associated with the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the transformation matrix of a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetMatrix\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nMatrix [out] transformation matrix\n\nGet the transformation matrix associated with the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the transformation matrix associated with a particular field in a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetMatrix\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nMatrix [out] transformation matrix\n\nGet the transformation matrix associated with the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of data items associated with a specific field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetItemList\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nCount [out] data item count\nidItems [out] list of data item indices associated with field\n\nGet a list of data item indices associated with the specified field of the specified data container.\nThe list referenced by \"**idItems\" is allocated by this function and must be deallocated by the calling procedure. A NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the list of data item indices for a particular field in a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetItemList\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nCount [out] data item count\nidItems [out] list of data item indices associated with field\n\nGet a list of data item indices associated with the specified field of the specified data container.\nThe list referenced by \"**idItems\" is allocated by this function and must be deallocated by the calling procedure. A NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the data item indices associated with a specific field in a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetItemList\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nCount [out] data item count\nidItems [out] list of data item indices associated with field\n\nGet a list of data item indices associated with the specified field of the specified data container.\nThe list referenced by \"**idItems\" is allocated by this function and must be deallocated by the calling procedure. A NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve data associated with a specified data item?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetItemData\nidItem [in] index of data item\nData [out] data of associated with specified data item\n\nGet data of associated with specified data item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the data of a specific data item?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetItemData\nidItem [in] index of data item\nData [out] data of associated with specified data item\n\nGet data of associated with specified data item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I access the data associated with a particular data item?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetItemData\nidItem [in] index of data item\nData [out] data of associated with specified data item\n\nGet data of associated with specified data item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get all field data associated with a specified data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetAll\nidData [in] id of data container (i.e. VDATA)\nnumFld [out] number of fields in which valid data exists\nfldData [out] list of field data\n\nGets data for all field in which valid data exists associated with the specified data container.\nIf using cvxPartInqFtrData() to get idData prior to calling this function, set cvxPartInqFtrData()'s iNoEval input argument to 0 to ensure idData will contain evaluated data.\nThe calling procedure is responsible for deallocating the memory assigned by this function to the \"fldData\" structure using cvxFldDataFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the number of fields with valid data in a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetAll\nidData [in] id of data container (i.e. VDATA)\nnumFld [out] number of fields in which valid data exists\nfldData [out] list of field data\n\nGets data for all field in which valid data exists associated with the specified data container.\nIf using cvxPartInqFtrData() to get idData prior to calling this function, set cvxPartInqFtrData()'s iNoEval input argument to 0 to ensure idData will contain evaluated data.\nThe calling procedure is responsible for deallocating the memory assigned by this function to the \"fldData\" structure using cvxFldDataFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the memory assigned to the field data structure after getting the data?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetAll\nidData [in] id of data container (i.e. VDATA)\nnumFld [out] number of fields in which valid data exists\nfldData [out] list of field data\n\nGets data for all field in which valid data exists associated with the specified data container.\nIf using cvxPartInqFtrData() to get idData prior to calling this function, set cvxPartInqFtrData()'s iNoEval input argument to 0 to ensure idData will contain evaluated data.\nThe calling procedure is responsible for deallocating the memory assigned by this function to the \"fldData\" structure using cvxFldDataFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free memory associated with field data structure?"
            },
            {
                "role": "assistant",
                "content": "cvxFldDataFree\nCount [in] number of field data\nfldData [in] list of field data\n\nFrees memory associated with the specified field data structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to release memory of field data?"
            },
            {
                "role": "assistant",
                "content": "cvxFldDataFree\nCount [in] number of field data\nfldData [in] list of field data\n\nFrees memory associated with the specified field data structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate memory of field data?"
            },
            {
                "role": "assistant",
                "content": "cvxFldDataFree\nCount [in] number of field data\nfldData [in] list of field data\n\nFrees memory associated with the specified field data structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete data associated with a specific field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataClear\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\n\nDeletes data associated with the specified field (idField) of the specified data container (idData)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to clear data from a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataClear\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\n\nDeletes data associated with the specified field (idField) of the specified data container (idData)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove data from a specified field in a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataClear\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\n\nDeletes data associated with the specified field (idField) of the specified data container (idData)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete data associated with a specific field in a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataDel\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\n\nDelete the data associated with the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove data from a data field in a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataDel\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\n\nDelete the data associated with the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to delete data from a specified field in a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataDel\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\n\nDelete the data associated with the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a specific data item associated with a field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataDelItem\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\niEnt [in] entity to delete\n\nDelete specified input data item associated with the specified field (data_id) of the specified VDATA object (idx_data) which is assumed to reside in PRJ_BIN."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove an entity from a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataDelItem\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\niEnt [in] entity to delete\n\nDelete specified input data item associated with the specified field (data_id) of the specified VDATA object (idx_data) which is assumed to reside in PRJ_BIN."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete an item from a VDATA object?"
            },
            {
                "role": "assistant",
                "content": "cvxDataDelItem\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\niEnt [in] entity to delete\n\nDelete specified input data item associated with the specified field (data_id) of the specified VDATA object (idx_data) which is assumed to reside in PRJ_BIN."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete data associated with a specific field in a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataDelUnHi\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\n\nDelete the data associated with the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove data from a data container based on the field ID?"
            },
            {
                "role": "assistant",
                "content": "cvxDataDelUnHi\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\n\nDelete the data associated with the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to delete data linked to a particular field within a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataDelUnHi\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\n\nDelete the data associated with the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a data container in CAD software?"
            },
            {
                "role": "assistant",
                "content": "cvxDataFree\nidData [in] id of data container (i.e. VDATA)\n\nDeletes a data container created by cvxDataInit(), freeing the memory associated with it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to free the memory associated with a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataFree\nidData [in] id of data container (i.e. VDATA)\n\nDeletes a data container created by cvxDataInit(), freeing the memory associated with it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to free the memory of a data container created by cvxDataInit()?"
            },
            {
                "role": "assistant",
                "content": "cvxDataFree\nidData [in] id of data container (i.e. VDATA)\n\nDeletes a data container created by cvxDataInit(), freeing the memory associated with it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove a data item from a specified field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGrpRem\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nidItem [in] index of data item\n\nRemove the specified data item from specified field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to remove a data item from a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGrpRem\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nidItem [in] index of data item\n\nRemove the specified data item from specified field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the data item to be removed from a field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGrpRem\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nidItem [in] index of data item\n\nRemove the specified data item from specified field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of the data container associated with the active form?"
            },
            {
                "role": "assistant",
                "content": "cvxDataInqActive\nidData [out] id of data container\n\nGet the index of the data container associated with the active form. If no form is activated, idData is set to -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the id of the data container for the active form?"
            },
            {
                "role": "assistant",
                "content": "cvxDataInqActive\nidData [out] id of data container\n\nGet the index of the data container associated with the active form. If no form is activated, idData is set to -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to retrieve the id of the data container for the active form?"
            },
            {
                "role": "assistant",
                "content": "cvxDataInqActive\nidData [out] id of data container\n\nGet the index of the data container associated with the active form. If no form is activated, idData is set to -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of the data container associated with the parent of an active form?"
            },
            {
                "role": "assistant",
                "content": "cvxDataInqParent\nidData [out] id of data container\n\nGet the index of the data container associated with the parent of an active form. if no form is activated or active form has no parent form, idData is set to -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if the active form has a parent form?"
            },
            {
                "role": "assistant",
                "content": "cvxDataInqParent\nidData [out] id of data container\n\nGet the index of the data container associated with the parent of an active form. if no form is activated or active form has no parent form, idData is set to -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the id of the data container if no form is activated?"
            },
            {
                "role": "assistant",
                "content": "cvxDataInqParent\nidData [out] id of data container\n\nGet the index of the data container associated with the parent of an active form. if no form is activated or active form has no parent form, idData is set to -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the form name from a VDATA container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataName\nidData [in] id of data container (i.e. VDATA)\n\nGets form name by VDATA.\nreturn:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the form name from a VDATA container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataName\nidData [in] id of data container (i.e. VDATA)\n\nGets form name by VDATA.\nreturn:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the form name from a VDATA container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataName\nidData [in] id of data container (i.e. VDATA)\n\nGets form name by VDATA.\nreturn:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to show Aux Frame by input init values?"
            },
            {
                "role": "assistant",
                "content": "cvxAuxFrameShow\nidData [in] id of data container\nentField [in] id of entity field, to store selected entities\nmatField [in] id of matrix field, to store matrix data for aux frame\n\nShow or hide Aux Frame by the input init values. Aux frame is displayed when idData equals to the id of data container. Aux frame is hidden when idData equals to -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to hide Aux Frame by input init values?"
            },
            {
                "role": "assistant",
                "content": "cvxAuxFrameShow\nidData [in] id of data container\nentField [in] id of entity field, to store selected entities\nmatField [in] id of matrix field, to store matrix data for aux frame\n\nShow or hide Aux Frame by the input init values. Aux frame is displayed when idData equals to the id of data container. Aux frame is hidden when idData equals to -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to store selected entities using entity field?"
            },
            {
                "role": "assistant",
                "content": "cvxAuxFrameShow\nidData [in] id of data container\nentField [in] id of entity field, to store selected entities\nmatField [in] id of matrix field, to store matrix data for aux frame\n\nShow or hide Aux Frame by the input init values. Aux frame is displayed when idData equals to the id of data container. Aux frame is hidden when idData equals to -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to store matrix data for aux frame using matrix field?"
            },
            {
                "role": "assistant",
                "content": "cvxAuxFrameShow\nidData [in] id of data container\nentField [in] id of entity field, to store selected entities\nmatField [in] id of matrix field, to store matrix data for aux frame\n\nShow or hide Aux Frame by the input init values. Aux frame is displayed when idData equals to the id of data container. Aux frame is hidden when idData equals to -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the origin position of an auxiliary frame?"
            },
            {
                "role": "assistant",
                "content": "cvxAuxFrameSetOrigin\nOrigin [in] origin of aux frame\n\nSet origin position of Aux Frame."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the origin of an auxiliary frame?"
            },
            {
                "role": "assistant",
                "content": "cvxAuxFrameSetOrigin\nOrigin [in] origin of aux frame\n\nSet origin position of Aux Frame."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the origin of an auxiliary frame?"
            },
            {
                "role": "assistant",
                "content": "cvxAuxFrameSetOrigin\nOrigin [in] origin of aux frame\n\nSet origin position of Aux Frame."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the direction of an auxiliary frame?"
            },
            {
                "role": "assistant",
                "content": "cvxAuxFrameSetAxisVec\nAxisType [in] axis type\nAxisDir [in] direction\n\nSet direction of Aux Frame."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to specify the axis type for an auxiliary frame?"
            },
            {
                "role": "assistant",
                "content": "cvxAuxFrameSetAxisVec\nAxisType [in] axis type\nAxisDir [in] direction\n\nSet direction of Aux Frame."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I set the direction for a specific axis type in an auxiliary frame?"
            },
            {
                "role": "assistant",
                "content": "cvxAuxFrameSetAxisVec\nAxisType [in] axis type\nAxisDir [in] direction\n\nSet direction of Aux Frame."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the buddy field of an auxiliary frame?"
            },
            {
                "role": "assistant",
                "content": "cvxAuxFrameSetDirXYZOrgBuddy\nidData [in] VDATA\nidXFld [in] x field\nidYFld [in] y field\nidZFld [in] z field\nidOrgFld [in] origin field\n\nSet buddy field of Aux Frame. the function must be called after cvxAuxFrameShow function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to set the buddy field of an auxiliary frame?"
            },
            {
                "role": "assistant",
                "content": "cvxAuxFrameSetDirXYZOrgBuddy\nidData [in] VDATA\nidXFld [in] x field\nidYFld [in] y field\nidZFld [in] z field\nidOrgFld [in] origin field\n\nSet buddy field of Aux Frame. the function must be called after cvxAuxFrameShow function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should the function for setting the buddy field of an auxiliary frame be called?"
            },
            {
                "role": "assistant",
                "content": "cvxAuxFrameSetDirXYZOrgBuddy\nidData [in] VDATA\nidXFld [in] x field\nidYFld [in] y field\nidZFld [in] z field\nidOrgFld [in] origin field\n\nSet buddy field of Aux Frame. the function must be called after cvxAuxFrameShow function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to show a specific element in the AuxFrame?"
            },
            {
                "role": "assistant",
                "content": "cvxMoveSetAuxFrameElem\niElem [in] Set which element to show in AuxFrame\n\nShow element of AuxFrame. Set 0 to show all(except QuadrantArea). Otherwise add below for \"iElem\":"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to display all elements in the AuxFrame except QuadrantArea?"
            },
            {
                "role": "assistant",
                "content": "cvxMoveSetAuxFrameElem\niElem [in] Set which element to show in AuxFrame\n\nShow element of AuxFrame. Set 0 to show all(except QuadrantArea). Otherwise add below for \"iElem\":"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to set which element to show in the AuxFrame?"
            },
            {
                "role": "assistant",
                "content": "cvxMoveSetAuxFrameElem\niElem [in] Set which element to show in AuxFrame\n\nShow element of AuxFrame. Set 0 to show all(except QuadrantArea). Otherwise add below for \"iElem\":"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to pass idData to an evaluation function?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdEval\nName [in] name of evaluation function\nidData [in] id of command data container\n\nPasses \"idData\" to the evaluation function identified by \"Name\". It is assumed the function has been registered with ZW3D (see cvxCmdFunc()). The function should be of type \"int function(int idData, int *idOutput)\". Undo-redo transaction logging is managed by this command.\nUse cvxDataInit() and cvxDataSet() to set up \"idData\". Unlike cvxCmdExec(), \"idData\" is not deleted by this function. The calling procedure is responsible for cleaning up \"idData\" using cvxDataFree().\nWhen an echo has been initiated with cvxEchoStart(), this function will call the echo_obj function associated with idData and add the objects to the echo instead of adding them to the database.\nWhen in echo mode (cvxEchoStart() called)"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to manage undo-redo transaction logging with this command?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdEval\nName [in] name of evaluation function\nidData [in] id of command data container\n\nPasses \"idData\" to the evaluation function identified by \"Name\". It is assumed the function has been registered with ZW3D (see cvxCmdFunc()). The function should be of type \"int function(int idData, int *idOutput)\". Undo-redo transaction logging is managed by this command.\nUse cvxDataInit() and cvxDataSet() to set up \"idData\". Unlike cvxCmdExec(), \"idData\" is not deleted by this function. The calling procedure is responsible for cleaning up \"idData\" using cvxDataFree().\nWhen an echo has been initiated with cvxEchoStart(), this function will call the echo_obj function associated with idData and add the objects to the echo instead of adding them to the database.\nWhen in echo mode (cvxEchoStart() called)"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set up idData using cvxDataInit() and cvxDataSet()?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdEval\nName [in] name of evaluation function\nidData [in] id of command data container\n\nPasses \"idData\" to the evaluation function identified by \"Name\". It is assumed the function has been registered with ZW3D (see cvxCmdFunc()). The function should be of type \"int function(int idData, int *idOutput)\". Undo-redo transaction logging is managed by this command.\nUse cvxDataInit() and cvxDataSet() to set up \"idData\". Unlike cvxCmdExec(), \"idData\" is not deleted by this function. The calling procedure is responsible for cleaning up \"idData\" using cvxDataFree().\nWhen an echo has been initiated with cvxEchoStart(), this function will call the echo_obj function associated with idData and add the objects to the echo instead of adding them to the database.\nWhen in echo mode (cvxEchoStart() called)"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens when an echo has been initiated with cvxEchoStart()?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdEval\nName [in] name of evaluation function\nidData [in] id of command data container\n\nPasses \"idData\" to the evaluation function identified by \"Name\". It is assumed the function has been registered with ZW3D (see cvxCmdFunc()). The function should be of type \"int function(int idData, int *idOutput)\". Undo-redo transaction logging is managed by this command.\nUse cvxDataInit() and cvxDataSet() to set up \"idData\". Unlike cvxCmdExec(), \"idData\" is not deleted by this function. The calling procedure is responsible for cleaning up \"idData\" using cvxDataFree().\nWhen an echo has been initiated with cvxEchoStart(), this function will call the echo_obj function associated with idData and add the objects to the echo instead of adding them to the database.\nWhen in echo mode (cvxEchoStart() called)"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to execute a command defined by idData?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdExec\nidData [in] id of command data container\n\nExecutes the command defined by \"idData\". Use cvxDataInit() and cvxDataSet() to set up \"idData\". \"idData\" is always deleted by this function, even if it fails.\nWhen an echo has been initiated with cvxEchoStart(), this function will call the echo_obj function associated with the command and add the objects to the echo instead of adding them to the database.\nAutomatic creation of feature-sets is disabled while this function is executing.\nWhen in echo mode (cvxEchoStart() called)"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set up idData for command execution?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdExec\nidData [in] id of command data container\n\nExecutes the command defined by \"idData\". Use cvxDataInit() and cvxDataSet() to set up \"idData\". \"idData\" is always deleted by this function, even if it fails.\nWhen an echo has been initiated with cvxEchoStart(), this function will call the echo_obj function associated with the command and add the objects to the echo instead of adding them to the database.\nAutomatic creation of feature-sets is disabled while this function is executing.\nWhen in echo mode (cvxEchoStart() called)"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initiate echo and add objects to the echo instead of adding them to the database?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdExec\nidData [in] id of command data container\n\nExecutes the command defined by \"idData\". Use cvxDataInit() and cvxDataSet() to set up \"idData\". \"idData\" is always deleted by this function, even if it fails.\nWhen an echo has been initiated with cvxEchoStart(), this function will call the echo_obj function associated with the command and add the objects to the echo instead of adding them to the database.\nAutomatic creation of feature-sets is disabled while this function is executing.\nWhen in echo mode (cvxEchoStart() called)"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to execute a command without deleting the VDATA object?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdExec2\nidData [in] id of command data container\n\nSame as cvxCmdExec(), except that the VDATA object was not deleted when the command outputs its input."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to execute a command without deleting the VDATA object?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdExec2\nidData [in] id of command data container\n\nSame as cvxCmdExec(), except that the VDATA object was not deleted when the command outputs its input."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the difference between cvxCmdExec2 and cvxCmdExec?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdExec2\nidData [in] id of command data container\n\nSame as cvxCmdExec(), except that the VDATA object was not deleted when the command outputs its input."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to execute a command with output data object?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdExecWithOut\nidData [in] id of command data container\nidOut [out] id of output data object (NULL to ignore)\n\nSame as cvxCmdExec2(), except that the function output the index of output data object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the index of the output data object?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdExecWithOut\nidData [in] id of command data container\nidOut [out] id of output data object (NULL to ignore)\n\nSame as cvxCmdExec2(), except that the function output the index of output data object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxCmdExecWithOut to obtain the id of the output data object?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdExecWithOut\nidData [in] id of command data container\nidOut [out] id of output data object (NULL to ignore)\n\nSame as cvxCmdExec2(), except that the function output the index of output data object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use a specified template to gather input data?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdInput\nName [in] command template name\nidDataIn [in] optional data container id (0 if undefined)\nidDataOut [out] output data container id (0 if undefined)\n\nUses the specified template to gather input data. Waits in this function until the data has been collected. Then outputs the id of the collected data via \"idxDataOut\".\nAssigns the input data to a new data object if \"idDataIn < 1\". Otherwise, uses new input data to modify the data object defined by \"idDataIn\". It is assumed that \"idDataIn\" was created by cvxDataInit().\nIf \"idDataOut\" is output as 0, \"idDataIn\" is automatically deleted. This means the user tried to execute another command while this function was waiting for input."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to wait for input data to be collected?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdInput\nName [in] command template name\nidDataIn [in] optional data container id (0 if undefined)\nidDataOut [out] output data container id (0 if undefined)\n\nUses the specified template to gather input data. Waits in this function until the data has been collected. Then outputs the id of the collected data via \"idxDataOut\".\nAssigns the input data to a new data object if \"idDataIn < 1\". Otherwise, uses new input data to modify the data object defined by \"idDataIn\". It is assumed that \"idDataIn\" was created by cvxDataInit().\nIf \"idDataOut\" is output as 0, \"idDataIn\" is automatically deleted. This means the user tried to execute another command while this function was waiting for input."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign input data to a new data object?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdInput\nName [in] command template name\nidDataIn [in] optional data container id (0 if undefined)\nidDataOut [out] output data container id (0 if undefined)\n\nUses the specified template to gather input data. Waits in this function until the data has been collected. Then outputs the id of the collected data via \"idxDataOut\".\nAssigns the input data to a new data object if \"idDataIn < 1\". Otherwise, uses new input data to modify the data object defined by \"idDataIn\". It is assumed that \"idDataIn\" was created by cvxDataInit().\nIf \"idDataOut\" is output as 0, \"idDataIn\" is automatically deleted. This means the user tried to execute another command while this function was waiting for input."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify data object using new input data?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdInput\nName [in] command template name\nidDataIn [in] optional data container id (0 if undefined)\nidDataOut [out] output data container id (0 if undefined)\n\nUses the specified template to gather input data. Waits in this function until the data has been collected. Then outputs the id of the collected data via \"idxDataOut\".\nAssigns the input data to a new data object if \"idDataIn < 1\". Otherwise, uses new input data to modify the data object defined by \"idDataIn\". It is assumed that \"idDataIn\" was created by cvxDataInit().\nIf \"idDataOut\" is output as 0, \"idDataIn\" is automatically deleted. This means the user tried to execute another command while this function was waiting for input."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to delete input data automatically if another command is executed while waiting for input?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdInput\nName [in] command template name\nidDataIn [in] optional data container id (0 if undefined)\nidDataOut [out] output data container id (0 if undefined)\n\nUses the specified template to gather input data. Waits in this function until the data has been collected. Then outputs the id of the collected data via \"idxDataOut\".\nAssigns the input data to a new data object if \"idDataIn < 1\". Otherwise, uses new input data to modify the data object defined by \"idDataIn\". It is assumed that \"idDataIn\" was created by cvxDataInit().\nIf \"idDataOut\" is output as 0, \"idDataIn\" is automatically deleted. This means the user tried to execute another command while this function was waiting for input."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to execute a specified command in interactive input mode?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdInteract\nName [in] command template name\n\nExecutes the specified command in interactive input mode (i.e. those commands that would preceded by an exclamation mark when executed from the command line). The user is prompted for the command's inputs, then the command is executed."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to prompt the user for command inputs and then execute the command?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdInteract\nName [in] command template name\n\nExecutes the specified command in interactive input mode (i.e. those commands that would preceded by an exclamation mark when executed from the command line). The user is prompted for the command's inputs, then the command is executed."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can you provide a method to run a command in interactive mode with user input?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdInteract\nName [in] command template name\n\nExecutes the specified command in interactive input mode (i.e. those commands that would preceded by an exclamation mark when executed from the command line). The user is prompted for the command's inputs, then the command is executed."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name of the active command input form?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdInqActive\nName [out] name of active command input form\n\nOutputs the name of the active command input form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the name of the active command input form?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdInqActive\nName [out] name of active command input form\n\nOutputs the name of the active command input form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to obtain the name of the active command input form?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdInqActive\nName [out] name of active command input form\n\nOutputs the name of the active command input form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to log undo-redo markers for the active template-driven command?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdMarker\nOkay [in] undo to this marker on \"Okay\" (or input NULL)\nCancel [in] undo to this marker on \"Cancel\" (or input NULL)\n\nLog undo-redo markers for the active template-driven command.\nIf \"Okay\" defines a valid marker, ZW3D will automatically undo to the marker when input for the active command is accepted by the user.\nThis undo will happen BEFORE the evaluation function associated with the command is executed.\nIf the user cancels the active command while input is being gathered, ZW3D will automatically undo to the \"Cancel\" marker, if it is defined.\nInput a blank string or NULL if a marker is not defined for either the \"Okay\" or \"Cancel\" case.\nUndo-redo markers (see cvxUndoRedoMarker()) may be used with this function to manage automatic deletion of entities created during the user input gathering phase of a template-based command."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to automatically undo to a marker when input for the active command is accepted?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdMarker\nOkay [in] undo to this marker on \"Okay\" (or input NULL)\nCancel [in] undo to this marker on \"Cancel\" (or input NULL)\n\nLog undo-redo markers for the active template-driven command.\nIf \"Okay\" defines a valid marker, ZW3D will automatically undo to the marker when input for the active command is accepted by the user.\nThis undo will happen BEFORE the evaluation function associated with the command is executed.\nIf the user cancels the active command while input is being gathered, ZW3D will automatically undo to the \"Cancel\" marker, if it is defined.\nInput a blank string or NULL if a marker is not defined for either the \"Okay\" or \"Cancel\" case.\nUndo-redo markers (see cvxUndoRedoMarker()) may be used with this function to manage automatic deletion of entities created during the user input gathering phase of a template-based command."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to manage automatic deletion of entities created during the user input gathering phase of a template-based command?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdMarker\nOkay [in] undo to this marker on \"Okay\" (or input NULL)\nCancel [in] undo to this marker on \"Cancel\" (or input NULL)\n\nLog undo-redo markers for the active template-driven command.\nIf \"Okay\" defines a valid marker, ZW3D will automatically undo to the marker when input for the active command is accepted by the user.\nThis undo will happen BEFORE the evaluation function associated with the command is executed.\nIf the user cancels the active command while input is being gathered, ZW3D will automatically undo to the \"Cancel\" marker, if it is defined.\nInput a blank string or NULL if a marker is not defined for either the \"Okay\" or \"Cancel\" case.\nUndo-redo markers (see cvxUndoRedoMarker()) may be used with this function to manage automatic deletion of entities created during the user input gathering phase of a template-based command."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the state of a specific command?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdStateGet\nCmdName [in] command name\nState [out] state of the command\n\nGet the state of the command."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check the state of a command?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdStateGet\nCmdName [in] command name\nState [out] state of the command\n\nGet the state of the command."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the state of a command by its name?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdStateGet\nCmdName [in] command name\nState [out] state of the command\n\nGet the state of the command."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the state of a command?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdStateSet\nCmdName [in] command name\nState [in] state of the command\n\nSet the state of the command."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to change the state of a specific command?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdStateSet\nCmdName [in] command name\nState [in] state of the command\n\nSet the state of the command."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the state of a command?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdStateSet\nCmdName [in] command name\nState [in] state of the command\n\nSet the state of the command."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to load, compile and register command templates from a specified file?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdTemplate\nFile [in] file that contains command template(s)\n\nLoads, compiles and registers the command template(s) defined in the specified file.\nIf \"File\" does not define a full path to the template file, ZW3D searches for the file in the runtime directory, the directories defined in \"vxpaths\", and the installation directories.\nWhen ZW3D session management is enabled, dynamically-loaded templates are deleted when a session is cleared. \n\n So that ZW3D can automatically reload the templates on-demand, register the directory that contains your template files using cvxPathAdd(). \n\n Each template file should have the same name (minus the .t extension) as the command defined inside of it. For example, if \"TEMPLATE=MyCommand\", the container file should be named \"MyCommand.t\".\nA command template defines the input data required by a command and the name of the function the data is passed to for command execution. \n\n The template also has information that tells the ZW3D Input Manager how to interactively prompt the user for the inputs required by the command. \n\n These input fields may have callback functions associated with them. \n\n All functions and variables referenced by a command template must be registered with cvxCmdFunc(), cvxCmdCallback() or cvxCmdVariable(). \n\n See the \"Virtual Forms\" online help topic for more information about the definition of command templates.\nWhen a command template is used to define an \"Options\" form (i.e. opt_form), fields of the \"opt_form\" may be managed using some cvxFieldXXX() and cvxItemXXX() functions. \n\n This is done by inputting \"OptForm\" for the \"Form\" argument of the form management functions.\nAnother way to dynamically define a template is to write it to a file in the ZW3D \"temp\" directory (see cvxPathTemp()) and then use this function to load/compile it. \n\n When a session is cleared, ZW3D reloads command templates from the \"temp\" directory on-demand \n\n Template files in the \"temp\" directory are automatically deleted when ZW3D exits.\nIf developer wants to unload the DLL plug in file dynamically. It is a MUST to run cvxCmdTemplateUnload() in the exit function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to manage fields of an 'Options' form using cvxFieldXXX() and cvxItemXXX() functions?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdTemplate\nFile [in] file that contains command template(s)\n\nLoads, compiles and registers the command template(s) defined in the specified file.\nIf \"File\" does not define a full path to the template file, ZW3D searches for the file in the runtime directory, the directories defined in \"vxpaths\", and the installation directories.\nWhen ZW3D session management is enabled, dynamically-loaded templates are deleted when a session is cleared. \n\n So that ZW3D can automatically reload the templates on-demand, register the directory that contains your template files using cvxPathAdd(). \n\n Each template file should have the same name (minus the .t extension) as the command defined inside of it. For example, if \"TEMPLATE=MyCommand\", the container file should be named \"MyCommand.t\".\nA command template defines the input data required by a command and the name of the function the data is passed to for command execution. \n\n The template also has information that tells the ZW3D Input Manager how to interactively prompt the user for the inputs required by the command. \n\n These input fields may have callback functions associated with them. \n\n All functions and variables referenced by a command template must be registered with cvxCmdFunc(), cvxCmdCallback() or cvxCmdVariable(). \n\n See the \"Virtual Forms\" online help topic for more information about the definition of command templates.\nWhen a command template is used to define an \"Options\" form (i.e. opt_form), fields of the \"opt_form\" may be managed using some cvxFieldXXX() and cvxItemXXX() functions. \n\n This is done by inputting \"OptForm\" for the \"Form\" argument of the form management functions.\nAnother way to dynamically define a template is to write it to a file in the ZW3D \"temp\" directory (see cvxPathTemp()) and then use this function to load/compile it. \n\n When a session is cleared, ZW3D reloads command templates from the \"temp\" directory on-demand \n\n Template files in the \"temp\" directory are automatically deleted when ZW3D exits.\nIf developer wants to unload the DLL plug in file dynamically. It is a MUST to run cvxCmdTemplateUnload() in the exit function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to dynamically define a template by writing it to a file in the ZW3D 'temp' directory?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdTemplate\nFile [in] file that contains command template(s)\n\nLoads, compiles and registers the command template(s) defined in the specified file.\nIf \"File\" does not define a full path to the template file, ZW3D searches for the file in the runtime directory, the directories defined in \"vxpaths\", and the installation directories.\nWhen ZW3D session management is enabled, dynamically-loaded templates are deleted when a session is cleared. \n\n So that ZW3D can automatically reload the templates on-demand, register the directory that contains your template files using cvxPathAdd(). \n\n Each template file should have the same name (minus the .t extension) as the command defined inside of it. For example, if \"TEMPLATE=MyCommand\", the container file should be named \"MyCommand.t\".\nA command template defines the input data required by a command and the name of the function the data is passed to for command execution. \n\n The template also has information that tells the ZW3D Input Manager how to interactively prompt the user for the inputs required by the command. \n\n These input fields may have callback functions associated with them. \n\n All functions and variables referenced by a command template must be registered with cvxCmdFunc(), cvxCmdCallback() or cvxCmdVariable(). \n\n See the \"Virtual Forms\" online help topic for more information about the definition of command templates.\nWhen a command template is used to define an \"Options\" form (i.e. opt_form), fields of the \"opt_form\" may be managed using some cvxFieldXXX() and cvxItemXXX() functions. \n\n This is done by inputting \"OptForm\" for the \"Form\" argument of the form management functions.\nAnother way to dynamically define a template is to write it to a file in the ZW3D \"temp\" directory (see cvxPathTemp()) and then use this function to load/compile it. \n\n When a session is cleared, ZW3D reloads command templates from the \"temp\" directory on-demand \n\n Template files in the \"temp\" directory are automatically deleted when ZW3D exits.\nIf developer wants to unload the DLL plug in file dynamically. It is a MUST to run cvxCmdTemplateUnload() in the exit function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to unload command template(s) defined in a specified file?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdTemplateUnload\nFile [in] file that contains command template(s)\n\nUnload the command template(s) defined in the specified file and registered via cvxCmdTemplate() or cvxFormTemplate() if developer wants to unload the DLL plug in file dynamically. The input file path must be the same as the one used in cvxCmdTemplate()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to dynamically unload the DLL plug in file?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdTemplateUnload\nFile [in] file that contains command template(s)\n\nUnload the command template(s) defined in the specified file and registered via cvxCmdTemplate() or cvxFormTemplate() if developer wants to unload the DLL plug in file dynamically. The input file path must be the same as the one used in cvxCmdTemplate()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to unload command template(s) registered via cvxCmdTemplate() or cvxFormTemplate()?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdTemplateUnload\nFile [in] file that contains command template(s)\n\nUnload the command template(s) defined in the specified file and registered via cvxCmdTemplate() or cvxFormTemplate() if developer wants to unload the DLL plug in file dynamically. The input file path must be the same as the one used in cvxCmdTemplate()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the active wireframe color for dynamic echo?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoColorGet\nColor [out] active wireframe color for dynamic echo\n\nGets the active wireframe color of the dynamic echo."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the active wireframe color for dynamic echo?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoColorGet\nColor [out] active wireframe color for dynamic echo\n\nGets the active wireframe color of the dynamic echo."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function can be used to obtain the active wireframe color for dynamic echo?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoColorGet\nColor [out] active wireframe color for dynamic echo\n\nGets the active wireframe color of the dynamic echo."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the active color for dynamic echo?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoColorSet\nColor [in] active color for dynamic echo\n\nSets the active color (wireframe and shaded) for dynamic echo."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the active color for dynamic echo?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoColorSet\nColor [in] active color for dynamic echo\n\nSets the active color (wireframe and shaded) for dynamic echo."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the color for dynamic echo?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoColorSet\nColor [in] active color for dynamic echo\n\nSets the active color (wireframe and shaded) for dynamic echo."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set display attributes echo?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoColorAtSet\nat [in] display attributes\n\nSet display attributes echo."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set echo color at specific display attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoColorAtSet\nat [in] display attributes\n\nSet display attributes echo."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the echo color at a specific set of display attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoColorAtSet\nat [in] display attributes\n\nSet display attributes echo."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve display attributes stored at echo?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoColorAtGet\nat [out] display attributes\n\nReturn display attributes stored at echo."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the display attributes at echo?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoColorAtGet\nat [out] display attributes\n\nReturn display attributes stored at echo."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I access the display attributes stored at echo?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoColorAtGet\nat [out] display attributes\n\nReturn display attributes stored at echo."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should cvxEchoCustomStart() be called?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoCustomStart\n\ncvxEchoCustomStart() should only be called at the beginning of the \"echo_obj\" function associated with the currently executing command template. \n\n It should ALWAYS be paired with a call to cvxEchoCustomEnd() at the end of the \"echo_obj\" function.\nCalling this function at the beginning of an \"echo_obj\" function sets up the environment so that you can use other API functions to edit the target object inside the \"echo_obj\" function. \n\n Those edits will persist until the next time the \"echo_obj\" function is called, at which time the edits will automatically be undone prior to the next round of edits to the target object.\nThe function prototype for a custom echo function looks like the following:\nvoid MyCustomEcho(int idData, void *echo)\nThe \"idData\" passed to MyCustomEcho() is the id of the same container of command input data that is passed to the evaluation function associated with the currently executing command template.\nThe \"void *echo\" argument is currently not used but should be included in the echo function's argument list as shown.\nRegister a pointer to the custom echo function as follows:\ncvxCmdFunc(\"MyCustomEcho\",(void*)MyCustomEcho,0.0);\nThe custom echo function is registered in the custom command template as follows:\n<property name=\"echo_obj\">MyCustomEcho</property>\nThis function should not be used in conjunction with cvxEchoStart()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of cvxEchoCustomStart() function?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoCustomStart\n\ncvxEchoCustomStart() should only be called at the beginning of the \"echo_obj\" function associated with the currently executing command template. \n\n It should ALWAYS be paired with a call to cvxEchoCustomEnd() at the end of the \"echo_obj\" function.\nCalling this function at the beginning of an \"echo_obj\" function sets up the environment so that you can use other API functions to edit the target object inside the \"echo_obj\" function. \n\n Those edits will persist until the next time the \"echo_obj\" function is called, at which time the edits will automatically be undone prior to the next round of edits to the target object.\nThe function prototype for a custom echo function looks like the following:\nvoid MyCustomEcho(int idData, void *echo)\nThe \"idData\" passed to MyCustomEcho() is the id of the same container of command input data that is passed to the evaluation function associated with the currently executing command template.\nThe \"void *echo\" argument is currently not used but should be included in the echo function's argument list as shown.\nRegister a pointer to the custom echo function as follows:\ncvxCmdFunc(\"MyCustomEcho\",(void*)MyCustomEcho,0.0);\nThe custom echo function is registered in the custom command template as follows:\n<property name=\"echo_obj\">MyCustomEcho</property>\nThis function should not be used in conjunction with cvxEchoStart()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set up the environment to edit the target object inside the 'echo_obj' function?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoCustomStart\n\ncvxEchoCustomStart() should only be called at the beginning of the \"echo_obj\" function associated with the currently executing command template. \n\n It should ALWAYS be paired with a call to cvxEchoCustomEnd() at the end of the \"echo_obj\" function.\nCalling this function at the beginning of an \"echo_obj\" function sets up the environment so that you can use other API functions to edit the target object inside the \"echo_obj\" function. \n\n Those edits will persist until the next time the \"echo_obj\" function is called, at which time the edits will automatically be undone prior to the next round of edits to the target object.\nThe function prototype for a custom echo function looks like the following:\nvoid MyCustomEcho(int idData, void *echo)\nThe \"idData\" passed to MyCustomEcho() is the id of the same container of command input data that is passed to the evaluation function associated with the currently executing command template.\nThe \"void *echo\" argument is currently not used but should be included in the echo function's argument list as shown.\nRegister a pointer to the custom echo function as follows:\ncvxCmdFunc(\"MyCustomEcho\",(void*)MyCustomEcho,0.0);\nThe custom echo function is registered in the custom command template as follows:\n<property name=\"echo_obj\">MyCustomEcho</property>\nThis function should not be used in conjunction with cvxEchoStart()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should cvxEchoCustomEnd be called?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoCustomEnd\n\ncvxEchoEnd MUST be called at the end of the function that called cvxEchoCustomStart. Failure to do so could leave aspects of the GUI disabled (including error display) and could also mess up undo-redo."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if cvxEchoCustomEnd is not called at the end of the function?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoCustomEnd\n\ncvxEchoEnd MUST be called at the end of the function that called cvxEchoCustomStart. Failure to do so could leave aspects of the GUI disabled (including error display) and could also mess up undo-redo."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Why is it important to call cvxEchoCustomEnd at the end of the function?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoCustomEnd\n\ncvxEchoEnd MUST be called at the end of the function that called cvxEchoCustomStart. Failure to do so could leave aspects of the GUI disabled (including error display) and could also mess up undo-redo."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to draw the echo data of the active form?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoDraw\n\nDraw the echo data of the active form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to visualize the echo data of the active form?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoDraw\n\nDraw the echo data of the active form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display the echo data of the active form?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoDraw\n\nDraw the echo data of the active form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to start sending entities to the echo instead of the database?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoStart\n\nInstructs the API to start sending entities to the echo rather than to the database. The function should always be paired with a call to cvxEchoEnd().\ncvxEchoStart() should only be called from within the \"echo_obj\" function associated with the currently executing command template."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should cvxEchoStart() be called?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoStart\n\nInstructs the API to start sending entities to the echo rather than to the database. The function should always be paired with a call to cvxEchoEnd().\ncvxEchoStart() should only be called from within the \"echo_obj\" function associated with the currently executing command template."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to switch entity output to the echo?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoStart\n\nInstructs the API to start sending entities to the echo rather than to the database. The function should always be paired with a call to cvxEchoEnd().\ncvxEchoStart() should only be called from within the \"echo_obj\" function associated with the currently executing command template."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to stop sending entities to the echo?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoEnd\n\nInstructs the API to stop sending entities to the echo and start sending them to the database again.\ncvxEchoEnd() MUST be called at the end of the echo that called cvxEchoStart(). Failure to do so will cause most API functions to quit working."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should cvxEchoEnd() be called?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoEnd\n\nInstructs the API to stop sending entities to the echo and start sending them to the database again.\ncvxEchoEnd() MUST be called at the end of the echo that called cvxEchoStart(). Failure to do so will cause most API functions to quit working."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if cvxEchoEnd() is not called at the end of the echo?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoEnd\n\nInstructs the API to stop sending entities to the echo and start sending them to the database again.\ncvxEchoEnd() MUST be called at the end of the echo that called cvxEchoStart(). Failure to do so will cause most API functions to quit working."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to disable checking for certain escapes during echo function execution?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoEscDisable\n\nDisable checking for certain escapes that ZW3D may issue while an echo function is executing. This function does not disable checking for escapes issued by the user.\nEach call to this function must be paired with a call to cvxEchoEscRestore().\nUse of this function is discouraged. It is intended for special situations in which a long-running echo function would otherwise trigger an automatic escape. \n\n Usually such escapes should be allowed to occur to keep the user interface responsive during echo. An appropriate use of this function, for example, would be to disable escape checking to make an expensive calculation once in an echo function, after which the echo function might cache the results and restore escape checking so future calls to the echo function can execute quickly and respond normally to ZW3D's built-in automatic escapes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should I use cvxEchoEscDisable function?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoEscDisable\n\nDisable checking for certain escapes that ZW3D may issue while an echo function is executing. This function does not disable checking for escapes issued by the user.\nEach call to this function must be paired with a call to cvxEchoEscRestore().\nUse of this function is discouraged. It is intended for special situations in which a long-running echo function would otherwise trigger an automatic escape. \n\n Usually such escapes should be allowed to occur to keep the user interface responsive during echo. An appropriate use of this function, for example, would be to disable escape checking to make an expensive calculation once in an echo function, after which the echo function might cache the results and restore escape checking so future calls to the echo function can execute quickly and respond normally to ZW3D's built-in automatic escapes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of cvxEchoEscDisable function?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoEscDisable\n\nDisable checking for certain escapes that ZW3D may issue while an echo function is executing. This function does not disable checking for escapes issued by the user.\nEach call to this function must be paired with a call to cvxEchoEscRestore().\nUse of this function is discouraged. It is intended for special situations in which a long-running echo function would otherwise trigger an automatic escape. \n\n Usually such escapes should be allowed to occur to keep the user interface responsive during echo. An appropriate use of this function, for example, would be to disable escape checking to make an expensive calculation once in an echo function, after which the echo function might cache the results and restore escape checking so future calls to the echo function can execute quickly and respond normally to ZW3D's built-in automatic escapes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to pair cvxEchoEscDisable with cvxEchoEscRestore function?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoEscDisable\n\nDisable checking for certain escapes that ZW3D may issue while an echo function is executing. This function does not disable checking for escapes issued by the user.\nEach call to this function must be paired with a call to cvxEchoEscRestore().\nUse of this function is discouraged. It is intended for special situations in which a long-running echo function would otherwise trigger an automatic escape. \n\n Usually such escapes should be allowed to occur to keep the user interface responsive during echo. An appropriate use of this function, for example, would be to disable escape checking to make an expensive calculation once in an echo function, after which the echo function might cache the results and restore escape checking so future calls to the echo function can execute quickly and respond normally to ZW3D's built-in automatic escapes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to restore escape checking previously disabled?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoEscRestore\n\nRestore escape checking previously disabled by a call to cvxEchoEscDisable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to restore escape checking?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoEscRestore\n\nRestore escape checking previously disabled by a call to cvxEchoEscDisable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to enable escape checking after it was disabled?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoEscRestore\n\nRestore escape checking previously disabled by a call to cvxEchoEscDisable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name of the custom function associated with a template?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFnCust\nName [in] template name\nNumBytes [in] no. bytes of function name\nFnName [out] name of custom function\n\nGets the name of the custom function associated with the specified template."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the custom function name for a specific template?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFnCust\nName [in] template name\nNumBytes [in] no. bytes of function name\nFnName [out] name of custom function\n\nGets the name of the custom function associated with the specified template."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the name of the custom function linked to a template?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFnCust\nName [in] template name\nNumBytes [in] no. bytes of function name\nFnName [out] name of custom function\n\nGets the name of the custom function associated with the specified template."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name of the echo function associated with a specified template?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFnEcho\nName [in] template name\nNumBytes [in] no. bytes of function name\nFnName [out] name of echo function\n\nGets the name of the \"echo\" function associated with the specified template."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the echo function name for a specific template?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFnEcho\nName [in] template name\nNumBytes [in] no. bytes of function name\nFnName [out] name of echo function\n\nGets the name of the \"echo\" function associated with the specified template."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to obtain the name of the echo function for a given template?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFnEcho\nName [in] template name\nNumBytes [in] no. bytes of function name\nFnName [out] name of echo function\n\nGets the name of the \"echo\" function associated with the specified template."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the initialization function name for a specified template?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFnInit\nName [in] template name\nNumBytes [in] no. bytes of function name\nFnName [out] name of initialization function\n\nGets the name of the \"init\" function associated with the specified template."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the name of the initialization function for a template?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFnInit\nName [in] template name\nNumBytes [in] no. bytes of function name\nFnName [out] name of initialization function\n\nGets the name of the \"init\" function associated with the specified template."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the name of the initialization function associated with a specific template?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFnInit\nName [in] template name\nNumBytes [in] no. bytes of function name\nFnName [out] name of initialization function\n\nGets the name of the \"init\" function associated with the specified template."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the termination function name of a specified template?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFnTerm\nName [in] template name\nNumBytes [in] no. bytes of function name\nFnName [out] name of termination function\n\nGets the name of the \"term\" function associated with the specified template."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the termination function name for a specific template?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFnTerm\nName [in] template name\nNumBytes [in] no. bytes of function name\nFnName [out] name of termination function\n\nGets the name of the \"term\" function associated with the specified template."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the name of the termination function associated with a template?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFnTerm\nName [in] template name\nNumBytes [in] no. bytes of function name\nFnName [out] name of termination function\n\nGets the name of the \"term\" function associated with the specified template."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a linear dimension between two specified entities in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddLineDim\nidEnt1 [in] id of the first entity\nidEnt2 [in] id of the second entity\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI linear dimension between the specified two entities in part. Supported entities include two points, a point and a line,two parallel lines, two parallel faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a linear dimension between two entities?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddLineDim\nidEnt1 [in] id of the first entity\nidEnt2 [in] id of the second entity\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI linear dimension between the specified two entities in part. Supported entities include two points, a point and a line,two parallel lines, two parallel faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the insertion plane for creating a linear dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddLineDim\nidEnt1 [in] id of the first entity\nidEnt2 [in] id of the second entity\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI linear dimension between the specified two entities in part. Supported entities include two points, a point and a line,two parallel lines, two parallel faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a symmetric annotation based on two points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddSymmetryDim\niEntId [in] id of the entity\niCenterLineId [in] id of the entity Center Line\nTextPnt [in] point coordinate of text placement point\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a symmetric annotation based on entity and a center line. Supported entities include two points, a point and a line,two parallel lines, two parallel faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a symmetric annotation based on a point and a line?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddSymmetryDim\niEntId [in] id of the entity\niCenterLineId [in] id of the entity Center Line\nTextPnt [in] point coordinate of text placement point\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a symmetric annotation based on entity and a center line. Supported entities include two points, a point and a line,two parallel lines, two parallel faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a symmetric annotation based on two parallel faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddSymmetryDim\niEntId [in] id of the entity\niCenterLineId [in] id of the entity Center Line\nTextPnt [in] point coordinate of text placement point\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a symmetric annotation based on entity and a center line. Supported entities include two points, a point and a line,two parallel lines, two parallel faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the insertion plane for symmetric annotation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddSymmetryDim\niEntId [in] id of the entity\niCenterLineId [in] id of the entity Center Line\nTextPnt [in] point coordinate of text placement point\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a symmetric annotation based on entity and a center line. Supported entities include two points, a point and a line,two parallel lines, two parallel faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is it possible to create a symmetric annotation based on two parallel lines?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddSymmetryDim\niEntId [in] id of the entity\niCenterLineId [in] id of the entity Center Line\nTextPnt [in] point coordinate of text placement point\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a symmetric annotation based on entity and a center line. Supported entities include two points, a point and a line,two parallel lines, two parallel faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a PMI angle dimension between two specified entities in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddAngleDim\nidEnt1 [in] id of the first entity\nidEnt2 [in] id of the second entity\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI angle dimension between the specified two entities in part. Supported entities include two points, a point and a line,two parallel lines, two parallel faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add an angle dimension between two entities in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddAngleDim\nidEnt1 [in] id of the first entity\nidEnt2 [in] id of the second entity\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI angle dimension between the specified two entities in part. Supported entities include two points, a point and a line,two parallel lines, two parallel faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the entities for creating an angle dimension in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddAngleDim\nidEnt1 [in] id of the first entity\nidEnt2 [in] id of the second entity\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI angle dimension between the specified two entities in part. Supported entities include two points, a point and a line,two parallel lines, two parallel faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a radial or diametric dimension for a circle?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddRadDim\nidEnt [in] id of the first entity\nradType [in] radial or diametric dim type, please refer to evxRadDimType\ntext [in] input user text (NULL to ignore)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI radius dimension between the specified entity in part. Supported entities include circle or face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a radial dimension to a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddRadDim\nidEnt [in] id of the first entity\nradType [in] radial or diametric dim type, please refer to evxRadDimType\ntext [in] input user text (NULL to ignore)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI radius dimension between the specified entity in part. Supported entities include circle or face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the text and its placement point for the radial dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddRadDim\nidEnt [in] id of the first entity\nradType [in] radial or diametric dim type, please refer to evxRadDimType\ntext [in] input user text (NULL to ignore)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI radius dimension between the specified entity in part. Supported entities include circle or face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a PMI chamfer dimension between two specified entities in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddChamferDim\nidEnt1 [in] id of the first entity\nidEnt2 [in] id of the second entity\nTextPos [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI chamfer dimension between the specified two entities in part. Supported entities include two points, a point and a line,two parallel lines, two parallel faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a chamfer dimension between two entities?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddChamferDim\nidEnt1 [in] id of the first entity\nidEnt2 [in] id of the second entity\nTextPos [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI chamfer dimension between the specified two entities in part. Supported entities include two points, a point and a line,two parallel lines, two parallel faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the insertion plane for the chamfer dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddChamferDim\nidEnt1 [in] id of the first entity\nidEnt2 [in] id of the second entity\nTextPos [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI chamfer dimension between the specified two entities in part. Supported entities include two points, a point and a line,two parallel lines, two parallel faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I ignore the text placement point while creating a chamfer dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddChamferDim\nidEnt1 [in] id of the first entity\nidEnt2 [in] id of the second entity\nTextPos [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI chamfer dimension between the specified two entities in part. Supported entities include two points, a point and a line,two parallel lines, two parallel faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a PMI arc dimension between specified entities in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddArcDim\nidEnt [in] id of the first entity\ntext [in] input user text (NULL to ignore)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI arc dimension between the specified entity in part. Supported entities include circle or face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to add an arc dimension using the entity ID?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddArcDim\nidEnt [in] id of the first entity\ntext [in] input user text (NULL to ignore)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI arc dimension between the specified entity in part. Supported entities include circle or face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the insertion plane for the arc dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddArcDim\nidEnt [in] id of the first entity\ntext [in] input user text (NULL to ignore)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI arc dimension between the specified entity in part. Supported entities include circle or face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I input user text for the arc dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddArcDim\nidEnt [in] id of the first entity\ntext [in] input user text (NULL to ignore)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI arc dimension between the specified entity in part. Supported entities include circle or face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the ID of the created dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddArcDim\nidEnt [in] id of the first entity\ntext [in] input user text (NULL to ignore)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI arc dimension between the specified entity in part. Supported entities include circle or face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a PMI coordinate dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddCoorDim\nLeaderPnt [in] point coordinate of leader point, if idParent is a point, LeaderPnt set to NULL\nidParent [in] id of the parent entity of the leader point, if no parent entity, idParent is equal to 0\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidDatum [in] Specifies a datum plane to define a local coordinate frame. 0 to use default datum\nidPlane [in] id of insertion plane (datum or planar face), 0 to use current view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI coordinate dimension to specifies leader point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify a leader point for PMI coordinate dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddCoorDim\nLeaderPnt [in] point coordinate of leader point, if idParent is a point, LeaderPnt set to NULL\nidParent [in] id of the parent entity of the leader point, if no parent entity, idParent is equal to 0\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidDatum [in] Specifies a datum plane to define a local coordinate frame. 0 to use default datum\nidPlane [in] id of insertion plane (datum or planar face), 0 to use current view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI coordinate dimension to specifies leader point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to define a local coordinate frame for PMI coordinate dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddCoorDim\nLeaderPnt [in] point coordinate of leader point, if idParent is a point, LeaderPnt set to NULL\nidParent [in] id of the parent entity of the leader point, if no parent entity, idParent is equal to 0\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidDatum [in] Specifies a datum plane to define a local coordinate frame. 0 to use default datum\nidPlane [in] id of insertion plane (datum or planar face), 0 to use current view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI coordinate dimension to specifies leader point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the insertion plane for PMI coordinate dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddCoorDim\nLeaderPnt [in] point coordinate of leader point, if idParent is a point, LeaderPnt set to NULL\nidParent [in] id of the parent entity of the leader point, if no parent entity, idParent is equal to 0\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidDatum [in] Specifies a datum plane to define a local coordinate frame. 0 to use default datum\nidPlane [in] id of insertion plane (datum or planar face), 0 to use current view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI coordinate dimension to specifies leader point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a PMI label dimension for a specified entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddLabelDim\nidEnt [in] id of the entity where the leader point is located (0 to ignore)\nleadPnt [in] leader point (NULL to use default point on entity or ignore)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\ntext [in] datum label name\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI label dimension for the specified entity which includes edge, curve, face or datum plane. If leadPnt doesn't on entity, it will be projected into the entity. If leadPnt is null, it will be set to a point on entity. Set idEnt to -1 when there is no entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to set the leader point for a PMI label dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddLabelDim\nidEnt [in] id of the entity where the leader point is located (0 to ignore)\nleadPnt [in] leader point (NULL to use default point on entity or ignore)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\ntext [in] datum label name\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI label dimension for the specified entity which includes edge, curve, face or datum plane. If leadPnt doesn't on entity, it will be projected into the entity. If leadPnt is null, it will be set to a point on entity. Set idEnt to -1 when there is no entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the text placement point for a PMI label dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddLabelDim\nidEnt [in] id of the entity where the leader point is located (0 to ignore)\nleadPnt [in] leader point (NULL to use default point on entity or ignore)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\ntext [in] datum label name\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI label dimension for the specified entity which includes edge, curve, face or datum plane. If leadPnt doesn't on entity, it will be projected into the entity. If leadPnt is null, it will be set to a point on entity. Set idEnt to -1 when there is no entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set the insertion plane for a PMI label dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddLabelDim\nidEnt [in] id of the entity where the leader point is located (0 to ignore)\nleadPnt [in] leader point (NULL to use default point on entity or ignore)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\ntext [in] datum label name\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI label dimension for the specified entity which includes edge, curve, face or datum plane. If leadPnt doesn't on entity, it will be projected into the entity. If leadPnt is null, it will be set to a point on entity. Set idEnt to -1 when there is no entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the created dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddLabelDim\nidEnt [in] id of the entity where the leader point is located (0 to ignore)\nleadPnt [in] leader point (NULL to use default point on entity or ignore)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\ntext [in] datum label name\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI label dimension for the specified entity which includes edge, curve, face or datum plane. If leadPnt doesn't on entity, it will be projected into the entity. If leadPnt is null, it will be set to a point on entity. Set idEnt to -1 when there is no entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a PMI datum feature dimension for a specified entity in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddDatumDim\nidEnt [in] id of the first entity\nleadPnt [in] point coordinate of text placement point (NULL to use critical point)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\ntext [in] datum label name\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI datum feature dimension for the specified entity in part. Supported entities include edge and face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the supported entities for creating a PMI datum feature dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddDatumDim\nidEnt [in] id of the first entity\nleadPnt [in] point coordinate of text placement point (NULL to use critical point)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\ntext [in] datum label name\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI datum feature dimension for the specified entity in part. Supported entities include edge and face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there an option to use the default view plane for creating a PMI datum feature dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddDatumDim\nidEnt [in] id of the first entity\nleadPnt [in] point coordinate of text placement point (NULL to use critical point)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\ntext [in] datum label name\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI datum feature dimension for the specified entity in part. Supported entities include edge and face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a PMI datum target dimension for a specified entity in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddDatumTargetDim\nidEnt [in] id of the first entity\nradRype [in] type of DatumT dimension\ndiameter [in] diameter\nwidth [in] width\nheight [in] height\nleadPnt [in] point coordinate of text placement point (NULL to use critical point)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\ntext [in] datum label name\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI datum target dimension for the specified entity in part. Supported entities include edge and face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the supported entities for creating a PMI datum target dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddDatumTargetDim\nidEnt [in] id of the first entity\nradRype [in] type of DatumT dimension\ndiameter [in] diameter\nwidth [in] width\nheight [in] height\nleadPnt [in] point coordinate of text placement point (NULL to use critical point)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\ntext [in] datum label name\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI datum target dimension for the specified entity in part. Supported entities include edge and face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the type of DatumT dimension and its parameters for creation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddDatumTargetDim\nidEnt [in] id of the first entity\nradRype [in] type of DatumT dimension\ndiameter [in] diameter\nwidth [in] width\nheight [in] height\nleadPnt [in] point coordinate of text placement point (NULL to use critical point)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\ntext [in] datum label name\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI datum target dimension for the specified entity in part. Supported entities include edge and face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a PMI datum feature dimension for a specific entity in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddFcsDim\nidEnt [in] id of the first entity\nleadPnt [in] point coordinate of text placement point (NULL to use critical point)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\ntext [in] datum label name\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI datum feature dimension for the specified entity in part. Supported entities include edge and face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the supported entities for creating a PMI datum feature dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddFcsDim\nidEnt [in] id of the first entity\nleadPnt [in] point coordinate of text placement point (NULL to use critical point)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\ntext [in] datum label name\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI datum feature dimension for the specified entity in part. Supported entities include edge and face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is it possible to use the default view plane for creating a PMI datum feature dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddFcsDim\nidEnt [in] id of the first entity\nleadPnt [in] point coordinate of text placement point (NULL to use critical point)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\ntext [in] datum label name\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI datum feature dimension for the specified entity in part. Supported entities include edge and face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the text label for the dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddFcsDim\nidEnt [in] id of the first entity\nleadPnt [in] point coordinate of text placement point (NULL to use critical point)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\ntext [in] datum label name\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI datum feature dimension for the specified entity in part. Supported entities include edge and face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can the text placement point be automatically calculated when creating a PMI datum feature dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddFcsDim\nidEnt [in] id of the first entity\nleadPnt [in] point coordinate of text placement point (NULL to use critical point)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\ntext [in] datum label name\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI datum feature dimension for the specified entity in part. Supported entities include edge and face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a PMI surface finish dimension for a specified entity in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddSymSrfDim\nidEnt [in] id of the first entity\nleadPnt [in] point coordinate of text placement point (NULL to use critical point)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\ntextGrp [in] Roughness PMI text define\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI surface finish dimension for the specified entity in part. Supported entities include edge and face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the supported entities for creating a PMI surface finish dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddSymSrfDim\nidEnt [in] id of the first entity\nleadPnt [in] point coordinate of text placement point (NULL to use critical point)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\ntextGrp [in] Roughness PMI text define\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI surface finish dimension for the specified entity in part. Supported entities include edge and face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the text placement point for the PMI surface finish dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddSymSrfDim\nidEnt [in] id of the first entity\nleadPnt [in] point coordinate of text placement point (NULL to use critical point)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\ntextGrp [in] Roughness PMI text define\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI surface finish dimension for the specified entity in part. Supported entities include edge and face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to ignore the text placement point and use automatic calculation for the PMI surface finish dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddSymSrfDim\nidEnt [in] id of the first entity\nleadPnt [in] point coordinate of text placement point (NULL to use critical point)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\ntextGrp [in] Roughness PMI text define\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI surface finish dimension for the specified entity in part. Supported entities include edge and face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a PMI center line dimension for a specified entity in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddCenLinDim\nidEnt [in] id of the first entity\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI center line dimension of the specified entity in part. Supported entity is face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a center line dimension to a specific entity in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddCenLinDim\nidEnt [in] id of the first entity\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI center line dimension of the specified entity in part. Supported entity is face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the insertion plane for creating a center line dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddCenLinDim\nidEnt [in] id of the first entity\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI center line dimension of the specified entity in part. Supported entity is face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a center mark dimension for an arc in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddCenMarkDim\nidEnt [in] id of the first entity\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI center mark dimension of the specified entity in part. Supported entity is arc, circle, face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to add a center mark dimension for a circle in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddCenMarkDim\nidEnt [in] id of the first entity\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI center mark dimension of the specified entity in part. Supported entity is arc, circle, face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the insertion plane for creating a center mark dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddCenMarkDim\nidEnt [in] id of the first entity\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI center mark dimension of the specified entity in part. Supported entity is arc, circle, face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add PMI text annotation in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddPMIText\nTextPnt [in] point coordinate of text placement point\ntext [in] datum label name\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI text annotation in part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to create a PMI text annotation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddPMIText\nTextPnt [in] point coordinate of text placement point\ntext [in] datum label name\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI text annotation in part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to specify the insertion plane for PMI text annotation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddPMIText\nTextPnt [in] point coordinate of text placement point\ntext [in] datum label name\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI text annotation in part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the dimension created after adding PMI text annotation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddPMIText\nTextPnt [in] point coordinate of text placement point\ntext [in] datum label name\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI text annotation in part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a balloon annotation in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddBalloon\nTextPnt [in] point coordinate of text placement point\ntext [in] balloon string\nfImage [in] image flag: 1-image, 0-text\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI balloon annotation in part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to create a PMI balloon annotation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddBalloon\nTextPnt [in] point coordinate of text placement point\ntext [in] balloon string\nfImage [in] image flag: 1-image, 0-text\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI balloon annotation in part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there an option to use an image instead of text in the balloon annotation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddBalloon\nTextPnt [in] point coordinate of text placement point\ntext [in] balloon string\nfImage [in] image flag: 1-image, 0-text\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI balloon annotation in part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of the cvxPartBox()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBoxInit\ndata [out] box data\n\nInitialize the parameters of the cvxPartBox().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize box data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBoxInit\ndata [out] box data\n\nInitialize the parameters of the cvxPartBox().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to empty everything before initializing box data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBoxInit\ndata [out] box data\n\nInitialize the parameters of the cvxPartBox().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a box shape in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBox\nBox [in] box definition\nidShape [out] id of new shape\n\nCreates a box shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Box->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\".\nnote:\nInterface cvxPartBoxInit() can initialize variables of this function. \n\n This command doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to add a box shape to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBox\nBox [in] box definition\nidShape [out] id of new shape\n\nCreates a box shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Box->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\".\nnote:\nInterface cvxPartBoxInit() can initialize variables of this function. \n\n This command doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for creating a box shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBox\nBox [in] box definition\nidShape [out] id of new shape\n\nCreates a box shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Box->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\".\nnote:\nInterface cvxPartBoxInit() can initialize variables of this function. \n\n This command doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartCyl()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCylInit\ndata [out] cylinder data\n\nInitialize the parameters of the cvxPartCyl().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing the cylinder data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCylInit\ndata [out] cylinder data\n\nInitialize the parameters of the cvxPartCyl().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the cylinder data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCylInit\ndata [out] cylinder data\n\nInitialize the parameters of the cvxPartCyl().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a cylinder shape in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCyl\nCyl [in] cylinder definition\nidShape [out] id of new shape(NULL to ignore)\n\nCreates a cylinder shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Cyl->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\".\nnote:\nInterface cvxPartCylInit() can initialize variables of this function. \n\n This command doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a cylinder shape using a specific combination method?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCyl\nCyl [in] cylinder definition\nidShape [out] id of new shape(NULL to ignore)\n\nCreates a cylinder shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Cyl->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\".\nnote:\nInterface cvxPartCylInit() can initialize variables of this function. \n\n This command doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new shape created by adding a cylinder?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCyl\nCyl [in] cylinder definition\nidShape [out] id of new shape(NULL to ignore)\n\nCreates a cylinder shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Cyl->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\".\nnote:\nInterface cvxPartCylInit() can initialize variables of this function. \n\n This command doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartCone?"
            },
            {
                "role": "assistant",
                "content": "cvxPartConeInit\ndata [out] cone data\n\nInitialize the parameters of the cvxPartCone().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing cvxPartCone?"
            },
            {
                "role": "assistant",
                "content": "cvxPartConeInit\ndata [out] cone data\n\nInitialize the parameters of the cvxPartCone().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get cone data using cvxPartConeInit?"
            },
            {
                "role": "assistant",
                "content": "cvxPartConeInit\ndata [out] cone data\n\nInitialize the parameters of the cvxPartCone().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a cone shape in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCone\nCone [in] cone definition\nidShape [out] id of new shape (NULL to ignore)\n\nCreates a cone shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Cone->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\".\nnote:\nInterface cvxPartConeInit() can initialize variables of this function. \n\n This command doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a cone shape using a specific combination method?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCone\nCone [in] cone definition\nidShape [out] id of new shape (NULL to ignore)\n\nCreates a cone shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Cone->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\".\nnote:\nInterface cvxPartConeInit() can initialize variables of this function. \n\n This command doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new shape created by adding a cone?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCone\nCone [in] cone definition\nidShape [out] id of new shape (NULL to ignore)\n\nCreates a cone shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Cone->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\".\nnote:\nInterface cvxPartConeInit() can initialize variables of this function. \n\n This command doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSphere?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSphereInit\ndata [out] sphere data\n\nInitialize the parameters of the cvxPartSphere().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize sphere data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSphereInit\ndata [out] sphere data\n\nInitialize the parameters of the cvxPartSphere().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to empty everything before initializing sphere data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSphereInit\ndata [out] sphere data\n\nInitialize the parameters of the cvxPartSphere().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a sphere shape in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSphere\nSphere [in] sphere definition\nidShape [out] id of new shape (NULL to ignore)\n\nCreates a sphere shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Sphere->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\".\nnote:\nInterface cvxPartSphereInit() can initialize variables of this function. \n\n This command doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a sphere shape to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSphere\nSphere [in] sphere definition\nidShape [out] id of new shape (NULL to ignore)\n\nCreates a sphere shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Sphere->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\".\nnote:\nInterface cvxPartSphereInit() can initialize variables of this function. \n\n This command doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new shape created by adding a sphere?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSphere\nSphere [in] sphere definition\nidShape [out] id of new shape (NULL to ignore)\n\nCreates a sphere shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Sphere->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\".\nnote:\nInterface cvxPartSphereInit() can initialize variables of this function. \n\n This command doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartEllipsoid?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEllipsoidInit\ndata [out] ellipsoid data\n\nInitialize the parameters of the cvxPartEllipsoid().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing ellipsoid data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEllipsoidInit\ndata [out] ellipsoid data\n\nInitialize the parameters of the cvxPartEllipsoid().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to get ellipsoid data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEllipsoidInit\ndata [out] ellipsoid data\n\nInitialize the parameters of the cvxPartEllipsoid().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create an ellipsoid shape in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEllipsoid\nEllso [in] ellipsoid definition\nidShape [out] id of new shape (NULL to ignore)\n\nCreates a ellipsoid shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Ellso->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\".\nnote:\nInterface cvxPartEllipsoidInit() can initialize variables of this function. \n\n This command doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to add an ellipsoid shape using a specific combination method?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEllipsoid\nEllso [in] ellipsoid definition\nidShape [out] id of new shape (NULL to ignore)\n\nCreates a ellipsoid shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Ellso->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\".\nnote:\nInterface cvxPartEllipsoidInit() can initialize variables of this function. \n\n This command doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the newly created ellipsoid shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEllipsoid\nEllso [in] ellipsoid definition\nidShape [out] id of new shape (NULL to ignore)\n\nCreates a ellipsoid shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Ellso->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\".\nnote:\nInterface cvxPartEllipsoidInit() can initialize variables of this function. \n\n This command doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartExtrude?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtrudeInit\ndata [out] extruded shape data\n\nInitialize the parameters of the cvxPartExtrude().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing the extruded shape data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtrudeInit\ndata [out] extruded shape data\n\nInitialize the parameters of the cvxPartExtrude().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize the extruded shape data without assigning a value to the variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtrudeInit\ndata [out] extruded shape data\n\nInitialize the parameters of the cvxPartExtrude().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create an extruded shape in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtrude\nExt [in] extrusion input data\nidShape [out] id of new shape (NULL to ignore)\n\nCreates an extruded shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Ext->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\". If multiple shapes could be created, use cvxEntNewList() to get their id's.\nnote:\nInterface cvxPartExtrudeInit() can initialize variables of this function. \n\n cvxPartExtrude doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to add an extruded shape using a specific combination method?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtrude\nExt [in] extrusion input data\nidShape [out] id of new shape (NULL to ignore)\n\nCreates an extruded shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Ext->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\". If multiple shapes could be created, use cvxEntNewList() to get their id's.\nnote:\nInterface cvxPartExtrudeInit() can initialize variables of this function. \n\n cvxPartExtrude doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new shape created by the extrusion?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtrude\nExt [in] extrusion input data\nidShape [out] id of new shape (NULL to ignore)\n\nCreates an extruded shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Ext->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\". If multiple shapes could be created, use cvxEntNewList() to get their id's.\nnote:\nInterface cvxPartExtrudeInit() can initialize variables of this function. \n\n cvxPartExtrude doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I create multiple shapes using cvxPartExtrude?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtrude\nExt [in] extrusion input data\nidShape [out] id of new shape (NULL to ignore)\n\nCreates an extruded shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Ext->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\". If multiple shapes could be created, use cvxEntNewList() to get their id's.\nnote:\nInterface cvxPartExtrudeInit() can initialize variables of this function. \n\n cvxPartExtrude doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of revolved shape data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRevolveInit\ndata [out] revolved shape data\n\nInitialize the parameters of the cvxPartRevolve().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function is used to initialize the revolve shape data parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRevolveInit\ndata [out] revolved shape data\n\nInitialize the parameters of the cvxPartRevolve().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to empty everything before initializing the revolve shape data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRevolveInit\ndata [out] revolved shape data\n\nInitialize the parameters of the cvxPartRevolve().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a revolved shape in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRevolve\nRev [in] input data\nidShape [out] id of new shape\n\nCreates a revolved shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Ext->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\". If multiple shapes could be created, use cvxEntNewList() to get their id's.\nnote:\nInterface cvxPartRevolveInit() can initialize variables of this function. \n\n cvxPartRevolve doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a revolved shape using a specific combination method?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRevolve\nRev [in] input data\nidShape [out] id of new shape\n\nCreates a revolved shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Ext->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\". If multiple shapes could be created, use cvxEntNewList() to get their id's.\nnote:\nInterface cvxPartRevolveInit() can initialize variables of this function. \n\n cvxPartRevolve doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new shape created by revolve operation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRevolve\nRev [in] input data\nidShape [out] id of new shape\n\nCreates a revolved shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Ext->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\". If multiple shapes could be created, use cvxEntNewList() to get their id's.\nnote:\nInterface cvxPartRevolveInit() can initialize variables of this function. \n\n cvxPartRevolve doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSweep?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSweepInit\ndata [out] swept shape data\n\nInitialize the parameters of the cvxPartSweep().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing the parameters of cvxPartSweep?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSweepInit\ndata [out] swept shape data\n\nInitialize the parameters of the cvxPartSweep().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the swept shape data without assigning a value to the variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSweepInit\ndata [out] swept shape data\n\nInitialize the parameters of the cvxPartSweep().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a swept shape and add it to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSweep\nSwp [in] sweep input data\nOptions [in] data pointer reserved for future use (input NULL)\nidShape [out] id of new shape (NULL to ignore)\n\nCreates a swept shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Ext->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\". If multiple shapes could be created, use cvxEntNewList() to get their id's.\nnote:\nInterface cvxPartSweepInit() can initialize variables of this function. \n\n cvxPartSweep doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the id of the new shape created by cvxPartSweep?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSweep\nSwp [in] sweep input data\nOptions [in] data pointer reserved for future use (input NULL)\nidShape [out] id of new shape (NULL to ignore)\n\nCreates a swept shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Ext->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\". If multiple shapes could be created, use cvxEntNewList() to get their id's.\nnote:\nInterface cvxPartSweepInit() can initialize variables of this function. \n\n cvxPartSweep doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to handle multiple shapes created by cvxPartSweep?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSweep\nSwp [in] sweep input data\nOptions [in] data pointer reserved for future use (input NULL)\nidShape [out] id of new shape (NULL to ignore)\n\nCreates a swept shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Ext->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\". If multiple shapes could be created, use cvxEntNewList() to get their id's.\nnote:\nInterface cvxPartSweepInit() can initialize variables of this function. \n\n cvxPartSweep doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of spiral sweep shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSpiralSweepInit\ndata [out] spiral sweep shape data\n\nInitialize the parameters of the cvxPartSpiralSweep().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize the spiral sweep shape data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSpiralSweepInit\ndata [out] spiral sweep shape data\n\nInitialize the parameters of the cvxPartSpiralSweep().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to empty everything before initializing the spiral sweep shape data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSpiralSweepInit\ndata [out] spiral sweep shape data\n\nInitialize the parameters of the cvxPartSpiralSweep().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a spiral sweep shape in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSpiralSweep\nSpiralSwp [in] sweep input data\nidShape [out] id of new shape (NULL to ignore)\n\nCreates a spiral sweep shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Ext->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\". If multiple shapes could be created, use cvxEntNewList() to get their id's.\nnote:\nInterface cvxPartSpiralSweepInit() can initialize variables of this function. \n\n cvxPartSpiralSweep doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the id of the new shape created by the spiral sweep?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSpiralSweep\nSpiralSwp [in] sweep input data\nidShape [out] id of new shape (NULL to ignore)\n\nCreates a spiral sweep shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Ext->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\". If multiple shapes could be created, use cvxEntNewList() to get their id's.\nnote:\nInterface cvxPartSpiralSweepInit() can initialize variables of this function. \n\n cvxPartSpiralSweep doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to handle multiple shapes created by the spiral sweep?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSpiralSweep\nSpiralSwp [in] sweep input data\nidShape [out] id of new shape (NULL to ignore)\n\nCreates a spiral sweep shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Ext->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\". If multiple shapes could be created, use cvxEntNewList() to get their id's.\nnote:\nInterface cvxPartSpiralSweepInit() can initialize variables of this function. \n\n cvxPartSpiralSweep doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartLoft?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLoftInit\ndata [out] template command loft data\n\nInitialize the parameters of the cvxPartLoft().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the template command loft data for cvxPartLoft?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLoftInit\ndata [out] template command loft data\n\nInitialize the parameters of the cvxPartLoft().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing cvxPartLoft parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLoftInit\ndata [out] template command loft data\n\nInitialize the parameters of the cvxPartLoft().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a loft feature using cvxPartLoft?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLoft\nLoft [in] loft input data\nidShape [out] id of new shape (NULL to ignore)\n\nUse this function to create a loft feature.\nnote:\nInterface cvxPartLoftInit() can initialize variables of this function. \n\n cvxPartLoft doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for cvxPartLoft?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLoft\nLoft [in] loft input data\nidShape [out] id of new shape (NULL to ignore)\n\nUse this function to create a loft feature.\nnote:\nInterface cvxPartLoftInit() can initialize variables of this function. \n\n cvxPartLoft doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the id of the new shape after using cvxPartLoft?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLoft\nLoft [in] loft input data\nidShape [out] id of new shape (NULL to ignore)\n\nUse this function to create a loft feature.\nnote:\nInterface cvxPartLoftInit() can initialize variables of this function. \n\n cvxPartLoft doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Does cvxPartLoft support multi-base shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLoft\nLoft [in] loft input data\nidShape [out] id of new shape (NULL to ignore)\n\nUse this function to create a loft feature.\nnote:\nInterface cvxPartLoftInit() can initialize variables of this function. \n\n cvxPartLoft doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add fillets to specified edges?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFillet\nCount [in] number of edges to fillet\nEdges [in] pointer to list of edge id's\nRadius [in] fillet radius\n\nAdds fillets to the specified edges.\nUse cvxPartPartialResults() to disable/enable the prompt to calculate/display partial results for failed fillets."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to disable/enable prompt for partial results of failed fillets?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFillet\nCount [in] number of edges to fillet\nEdges [in] pointer to list of edge id's\nRadius [in] fillet radius\n\nAdds fillets to the specified edges.\nUse cvxPartPartialResults() to disable/enable the prompt to calculate/display partial results for failed fillets."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to specify the fillet radius?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFillet\nCount [in] number of edges to fillet\nEdges [in] pointer to list of edge id's\nRadius [in] fillet radius\n\nAdds fillets to the specified edges.\nUse cvxPartPartialResults() to disable/enable the prompt to calculate/display partial results for failed fillets."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the number of edges to fillet?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFillet\nCount [in] number of edges to fillet\nEdges [in] pointer to list of edge id's\nRadius [in] fillet radius\n\nAdds fillets to the specified edges.\nUse cvxPartPartialResults() to disable/enable the prompt to calculate/display partial results for failed fillets."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartFilletAll()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFilletAllInit\ndata [out] chamfer data\n\nInitialize the parameters of the cvxPartFilletAll().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing the parameters of cvxPartFilletAll()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFilletAllInit\ndata [out] chamfer data\n\nInitialize the parameters of the cvxPartFilletAll().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get chamfer data after initializing the parameters of cvxPartFilletAll()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFilletAllInit\ndata [out] chamfer data\n\nInitialize the parameters of the cvxPartFilletAll().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create symmetric and asymmetric fillets?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFilletAll\nFillet [in] fillet data\nidFillet [out] index of new fillet feature (NULL to ignore)\n\nUse the function to create symmetric and asymmetric fillets.\nnote:\nInterface cvxPartFilletAllInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for creating fillets?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFilletAll\nFillet [in] fillet data\nidFillet [out] index of new fillet feature (NULL to ignore)\n\nUse the function to create symmetric and asymmetric fillets.\nnote:\nInterface cvxPartFilletAllInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of a new fillet feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFilletAll\nFillet [in] fillet data\nidFillet [out] index of new fillet feature (NULL to ignore)\n\nUse the function to create symmetric and asymmetric fillets.\nnote:\nInterface cvxPartFilletAllInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of face fillet?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceFilletInit\ndata [out] face fillet data\n\nInitialize the parameters of the cvxPartFaceFillet().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing face fillet data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceFilletInit\ndata [out] face fillet data\n\nInitialize the parameters of the cvxPartFaceFillet().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize face fillet data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceFilletInit\ndata [out] face fillet data\n\nInitialize the parameters of the cvxPartFaceFillet().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a fillet using input faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceFillet\ndata [in] face fillet data\nidFillet [out] index of new fillet feature (NULL to ignore)\n\nCreate fillet by the input faces and other variables.\nnote:\nInterface cvxPartFaceFilletInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for creating a fillet?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceFillet\ndata [in] face fillet data\nidFillet [out] index of new fillet feature (NULL to ignore)\n\nCreate fillet by the input faces and other variables.\nnote:\nInterface cvxPartFaceFilletInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of a new fillet feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceFillet\ndata [in] face fillet data\nidFillet [out] index of new fillet feature (NULL to ignore)\n\nCreate fillet by the input faces and other variables.\nnote:\nInterface cvxPartFaceFilletInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add chamfers to specified edges?"
            },
            {
                "role": "assistant",
                "content": "cvxPartChamConst\nCount [in] number of edges to chamfer\nEdges [in] pointer to list of edge id's\nSetback [in] setback (mm)\n\nAdds chamfers to the specified edges."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set setback for chamfers?"
            },
            {
                "role": "assistant",
                "content": "cvxPartChamConst\nCount [in] number of edges to chamfer\nEdges [in] pointer to list of edge id's\nSetback [in] setback (mm)\n\nAdds chamfers to the specified edges."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the number of edges to chamfer?"
            },
            {
                "role": "assistant",
                "content": "cvxPartChamConst\nCount [in] number of edges to chamfer\nEdges [in] pointer to list of edge id's\nSetback [in] setback (mm)\n\nAdds chamfers to the specified edges."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add chamfers to specified edges?"
            },
            {
                "role": "assistant",
                "content": "cvxPartChamAng\nCount [in] number of edges to chamfer\nEdges [in] pointer to list of edge id's\nidFace [in] id of face on first side of chamfer\nSetback [in] setback (mm) on first side of chamfer\nAngle [in] angle of chamfer (deg)\n\nAdds chamfers to the specified edges."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the parameter to specify the number of edges to chamfer?"
            },
            {
                "role": "assistant",
                "content": "cvxPartChamAng\nCount [in] number of edges to chamfer\nEdges [in] pointer to list of edge id's\nidFace [in] id of face on first side of chamfer\nSetback [in] setback (mm) on first side of chamfer\nAngle [in] angle of chamfer (deg)\n\nAdds chamfers to the specified edges."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the angle of chamfer in degrees?"
            },
            {
                "role": "assistant",
                "content": "cvxPartChamAng\nCount [in] number of edges to chamfer\nEdges [in] pointer to list of edge id's\nidFace [in] id of face on first side of chamfer\nSetback [in] setback (mm) on first side of chamfer\nAngle [in] angle of chamfer (deg)\n\nAdds chamfers to the specified edges."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add chamfers to specified edges?"
            },
            {
                "role": "assistant",
                "content": "cvxPartChamAsym\nCount [in] number of edges to chamfer\nEdges [in] pointer to list of edge id's\nidFace [in] id of face on first side of chamfer\nSetback1 [in] setback (mm) on first side of chamfer\nSetback2 [in] setback (mm) on second side of chamfer\n\nAdds chamfers to the specified edges."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to add chamfers to edges?"
            },
            {
                "role": "assistant",
                "content": "cvxPartChamAsym\nCount [in] number of edges to chamfer\nEdges [in] pointer to list of edge id's\nidFace [in] id of face on first side of chamfer\nSetback1 [in] setback (mm) on first side of chamfer\nSetback2 [in] setback (mm) on second side of chamfer\n\nAdds chamfers to the specified edges."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to specify setbacks for chamfers on both sides?"
            },
            {
                "role": "assistant",
                "content": "cvxPartChamAsym\nCount [in] number of edges to chamfer\nEdges [in] pointer to list of edge id's\nidFace [in] id of face on first side of chamfer\nSetback1 [in] setback (mm) on first side of chamfer\nSetback2 [in] setback (mm) on second side of chamfer\n\nAdds chamfers to the specified edges."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the set-list data for chamfer or fillet command?"
            },
            {
                "role": "assistant",
                "content": "cvxChamFlltSetDataInit\ndata [out] set-list data for chamfer or fillet command\n\nInitialize the svxChamFlltSetData structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing the set-list data?"
            },
            {
                "role": "assistant",
                "content": "cvxChamFlltSetDataInit\ndata [out] set-list data for chamfer or fillet command\n\nInitialize the svxChamFlltSetData structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to set data for chamfer or fillet command?"
            },
            {
                "role": "assistant",
                "content": "cvxChamFlltSetDataInit\ndata [out] set-list data for chamfer or fillet command\n\nInitialize the svxChamFlltSetData structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartChamferAll()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartChamferAllInit\ndata [out] chamfer data\n\nInitialize the parameters of the cvxPartChamferAll().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing chamfer data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartChamferAllInit\ndata [out] chamfer data\n\nInitialize the parameters of the cvxPartChamferAll().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get chamfer data without assigning a value to the variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartChamferAllInit\ndata [out] chamfer data\n\nInitialize the parameters of the cvxPartChamferAll().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create symmetric and asymmetric chamfers?"
            },
            {
                "role": "assistant",
                "content": "cvxPartChamferAll\nChamfer [in] chamfer data\nidChamfer [out] index of new chamfer feature (NULL to ignore)\n\nUse the function to create symmetric and asymmetric chamfers.\nnote:\nInterface cvxPartChamferAllInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for creating chamfers?"
            },
            {
                "role": "assistant",
                "content": "cvxPartChamferAll\nChamfer [in] chamfer data\nidChamfer [out] index of new chamfer feature (NULL to ignore)\n\nUse the function to create symmetric and asymmetric chamfers.\nnote:\nInterface cvxPartChamferAllInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of a new chamfer feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartChamferAll\nChamfer [in] chamfer data\nidChamfer [out] index of new chamfer feature (NULL to ignore)\n\nUse the function to create symmetric and asymmetric chamfers.\nnote:\nInterface cvxPartChamferAllInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartDraft()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDraftInit\nmethod [in] draft method\ndata [out] template command Draft data\n\nInitialize the parameters of the cvxPartDraft().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to initialize the parameters of cvxPartDraft()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDraftInit\nmethod [in] draft method\ndata [out] template command Draft data\n\nInitialize the parameters of the cvxPartDraft().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing the parameters of cvxPartDraft()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDraftInit\nmethod [in] draft method\ndata [out] template command Draft data\n\nInitialize the parameters of the cvxPartDraft().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add draft to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDraft\nDraft [in] Draft Data\nidDraft [out] id of feature operation that created Draft (NULL to ignore)\n\nAdds the specified draft(s) to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idDraft\" if the output is not required.\nnote:\nInterface cvxPartDraftInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to output the id of the feature operation that created the draft?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDraft\nDraft [in] Draft Data\nidDraft [out] id of feature operation that created Draft (NULL to ignore)\n\nAdds the specified draft(s) to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idDraft\" if the output is not required.\nnote:\nInterface cvxPartDraftInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function can be used to initialize variables for cvxPartDraft?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDraft\nDraft [in] Draft Data\nidDraft [out] id of feature operation that created Draft (NULL to ignore)\n\nAdds the specified draft(s) to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idDraft\" if the output is not required.\nnote:\nInterface cvxPartDraftInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartHole?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHoleInit\nHoleOpt [in] hole method\ntype [in] hole shape type(see description)\ndata [out] hole data\n\nInitialize the parameters of the cvxPartHole().\nHoleOpt = VX_CLEARANCE_HOLE,type use evxClearHoleType; else type use evxHoleType.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the available options for hole method in cvxPartHoleInit?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHoleInit\nHoleOpt [in] hole method\ntype [in] hole shape type(see description)\ndata [out] hole data\n\nInitialize the parameters of the cvxPartHole().\nHoleOpt = VX_CLEARANCE_HOLE,type use evxClearHoleType; else type use evxHoleType.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the hole data after initializing parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHoleInit\nHoleOpt [in] hole method\ntype [in] hole shape type(see description)\ndata [out] hole data\n\nInitialize the parameters of the cvxPartHole().\nHoleOpt = VX_CLEARANCE_HOLE,type use evxClearHoleType; else type use evxHoleType.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a hole to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHole\nData [in] hole data\nidOp [out] id of feature operation that created hole\n\nAdds the specified hole(s) to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idOp\" if the output is not required.\nnote:\nInterface cvxPartHoleInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to output the id of the feature operation that created the hole?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHole\nData [in] hole data\nidOp [out] id of feature operation that created hole\n\nAdds the specified hole(s) to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idOp\" if the output is not required.\nnote:\nInterface cvxPartHoleInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to initialize variables for adding a hole to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHole\nData [in] hole data\nidOp [out] id of feature operation that created hole\n\nAdds the specified hole(s) to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idOp\" if the output is not required.\nnote:\nInterface cvxPartHoleInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize hole data using the specified face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartModifyHoleInit\nidFace [in] id face of the specified hole\ndata [out] hole data to initialize\n\nUse the first input face to initialize the parameters of the cvxPartModifyHole(). It will get the hole data of the input face to initialize the data.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the hole data of a specific face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartModifyHoleInit\nidFace [in] id face of the specified hole\ndata [out] hole data to initialize\n\nUse the first input face to initialize the parameters of the cvxPartModifyHole(). It will get the hole data of the input face to initialize the data.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize hole data using the face ID?"
            },
            {
                "role": "assistant",
                "content": "cvxPartModifyHoleInit\nidFace [in] id face of the specified hole\ndata [out] hole data to initialize\n\nUse the first input face to initialize the parameters of the cvxPartModifyHole(). It will get the hole data of the input face to initialize the data.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the hole data of a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartModifyHole\ncntFace [in] count of the face to modify\npFace [in] face list\ndata [in] hole data\nidFtr [out] index of the new feature(NULL to ignore)\n\nModify the hole data of the input hole faces.\nnote:\nInterface cvxPartModifyHoleInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for modifying hole data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartModifyHole\ncntFace [in] count of the face to modify\npFace [in] face list\ndata [in] hole data\nidFtr [out] index of the new feature(NULL to ignore)\n\nModify the hole data of the input hole faces.\nnote:\nInterface cvxPartModifyHoleInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of the new feature after modifying the hole data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartModifyHole\ncntFace [in] count of the face to modify\npFace [in] face list\ndata [in] hole data\nidFtr [out] index of the new feature(NULL to ignore)\n\nModify the hole data of the input hole faces.\nnote:\nInterface cvxPartModifyHoleInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartFlagHoles?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFlagHolesInit\ndata [out] flag hole data\n\nInitialize the parameters of the cvxPartFlagHoles().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to empty everything before calling cvxPartFlagHoles?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFlagHolesInit\ndata [out] flag hole data\n\nInitialize the parameters of the cvxPartFlagHoles().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize flag hole data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFlagHolesInit\ndata [out] flag hole data\n\nInitialize the parameters of the cvxPartFlagHoles().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign hole attributes using the Flag Hole command?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFlagHoles\ndata [in] flag hole data\nidFtr [out] feature id (pass in NULL to ignore)\n\nUse the Flag Hole command to assign hole attributes so drawing sheets will recognize these features as holes.\nnote:\nInterface cvxPartFlagHolesInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to ignore feature id when using the Flag Hole command?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFlagHoles\ndata [in] flag hole data\nidFtr [out] feature id (pass in NULL to ignore)\n\nUse the Flag Hole command to assign hole attributes so drawing sheets will recognize these features as holes.\nnote:\nInterface cvxPartFlagHolesInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can variables be initialized for the Flag Hole command using cvxPartFlagHolesInit()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFlagHoles\ndata [in] flag hole data\nidFtr [out] feature id (pass in NULL to ignore)\n\nUse the Flag Hole command to assign hole attributes so drawing sheets will recognize these features as holes.\nnote:\nInterface cvxPartFlagHolesInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartRib()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRibInit\ndata [out] template command rib data\n\nInitialize the parameters of the cvxPartRib().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing cvxPartRib()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRibInit\ndata [out] template command rib data\n\nInitialize the parameters of the cvxPartRib().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the template command rib data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRibInit\ndata [out] template command rib data\n\nInitialize the parameters of the cvxPartRib().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a rib feature using an open profile sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRib\nRib [in] rib input data\nidRib [out] id of rib feature (NULL to ignore)\n\nUse this function to create a rib feature using an open profile sketch, curve, edge or curve list. The required inputs include the profile, rib thickness, draft angle, boundary faces and the draft plane. The boundary faces can limit or expand the extent of the rib feature.\nnote:\nInterface cvxPartRibInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the required inputs to create a rib feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRib\nRib [in] rib input data\nidRib [out] id of rib feature (NULL to ignore)\n\nUse this function to create a rib feature using an open profile sketch, curve, edge or curve list. The required inputs include the profile, rib thickness, draft angle, boundary faces and the draft plane. The boundary faces can limit or expand the extent of the rib feature.\nnote:\nInterface cvxPartRibInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to limit or expand the extent of the rib feature using boundary faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRib\nRib [in] rib input data\nidRib [out] id of rib feature (NULL to ignore)\n\nUse this function to create a rib feature using an open profile sketch, curve, edge or curve list. The required inputs include the profile, rib thickness, draft angle, boundary faces and the draft plane. The boundary faces can limit or expand the extent of the rib feature.\nnote:\nInterface cvxPartRibInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartFlagExtThread()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFlagExtThreadInit\ndata [out] flag ext thread data\n\nInitialize the parameters of the cvxPartFlagExtThread().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing the parameters of cvxPartFlagExtThread()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFlagExtThreadInit\ndata [out] flag ext thread data\n\nInitialize the parameters of the cvxPartFlagExtThread().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the flag ext thread data after initializing the parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFlagExtThreadInit\ndata [out] flag ext thread data\n\nInitialize the parameters of the cvxPartFlagExtThread().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign hole attributes using Flag Ext Thread command?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFlagExtThread\ndata [in] flag ext thread data\nidFtr [out] feature id (pass in NULL to ignore)\n\nUse the Flag Ext Thread command to assign hole attributes so drawing sheets will recognize these features as holes.but only visible in 3D.\nnote:\nInterface cvxPartFlagExtThreadInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to make drawing sheets recognize features as holes using Flag Ext Thread?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFlagExtThread\ndata [in] flag ext thread data\nidFtr [out] feature id (pass in NULL to ignore)\n\nUse the Flag Ext Thread command to assign hole attributes so drawing sheets will recognize these features as holes.but only visible in 3D.\nnote:\nInterface cvxPartFlagExtThreadInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to ignore feature id while using Flag Ext Thread command?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFlagExtThread\ndata [in] flag ext thread data\nidFtr [out] feature id (pass in NULL to ignore)\n\nUse the Flag Ext Thread command to assign hole attributes so drawing sheets will recognize these features as holes.but only visible in 3D.\nnote:\nInterface cvxPartFlagExtThreadInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartThreadAt()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartThreadAtInit\ndata [out] thread definition data\n\nInitialize the parameters of the cvxPartThreadAt().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to initialize the thread definition data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartThreadAtInit\ndata [out] thread definition data\n\nInitialize the parameters of the cvxPartThreadAt().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to empty everything before initializing the thread definition data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartThreadAtInit\ndata [out] thread definition data\n\nInitialize the parameters of the cvxPartThreadAt().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add thread attribute data to a specified face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartThreadAt\nidFace [in] face id\nPnt [in] point on or near face identifying thread location\nThread [in] thread definition\n\nAdds thread attribute data (Thread) to the specified face (idFace) of the active part. The thread is placed on the end of the face nearest the input reference point (Pnt). A cosmetic representation of the thread displayed. Actual geometry representing the thread is not created.\nInterface cvxPartThreadAtInit() can initialize variables of this function.\nnote:\ncvxPartFlagExtThread() interface has the same function as this interface. Users can use the cvxPartFlagExtThread() interface to set more parameters."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to place a thread on a specific point on or near a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartThreadAt\nidFace [in] face id\nPnt [in] point on or near face identifying thread location\nThread [in] thread definition\n\nAdds thread attribute data (Thread) to the specified face (idFace) of the active part. The thread is placed on the end of the face nearest the input reference point (Pnt). A cosmetic representation of the thread displayed. Actual geometry representing the thread is not created.\nInterface cvxPartThreadAtInit() can initialize variables of this function.\nnote:\ncvxPartFlagExtThread() interface has the same function as this interface. Users can use the cvxPartFlagExtThread() interface to set more parameters."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I create a cosmetic representation of a thread on a face without creating actual geometry?"
            },
            {
                "role": "assistant",
                "content": "cvxPartThreadAt\nidFace [in] face id\nPnt [in] point on or near face identifying thread location\nThread [in] thread definition\n\nAdds thread attribute data (Thread) to the specified face (idFace) of the active part. The thread is placed on the end of the face nearest the input reference point (Pnt). A cosmetic representation of the thread displayed. Actual geometry representing the thread is not created.\nInterface cvxPartThreadAtInit() can initialize variables of this function.\nnote:\ncvxPartFlagExtThread() interface has the same function as this interface. Users can use the cvxPartFlagExtThread() interface to set more parameters."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartLip()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLipInit\ndata [out] template command lib data\n\nInitialize the parameters of the cvxPartLip().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing the parameters of cvxPartLip()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLipInit\ndata [out] template command lib data\n\nInitialize the parameters of the cvxPartLip().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the template command lib data after initializing the parameters of cvxPartLip()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLipInit\ndata [out] template command lib data\n\nInitialize the parameters of the cvxPartLip().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a constant lip feature along selected edges?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLip\nLip [in] lip input data\nidLip [out] id of lip feature (NULL to ignore)\n\nUse this function to create a constant lip feature along selected edges based on two offset distances. The required inputs include the face edges to feature and the 1st and 2nd offsets.\nnote:\nInterface cvxPartLipInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the required inputs for creating a lip feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLip\nLip [in] lip input data\nidLip [out] id of lip feature (NULL to ignore)\n\nUse this function to create a constant lip feature along selected edges based on two offset distances. The required inputs include the face edges to feature and the 1st and 2nd offsets.\nnote:\nInterface cvxPartLipInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for creating a lip feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLip\nLip [in] lip input data\nidLip [out] id of lip feature (NULL to ignore)\n\nUse this function to create a constant lip feature along selected edges based on two offset distances. The required inputs include the face edges to feature and the 1st and 2nd offsets.\nnote:\nInterface cvxPartLipInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartStock?"
            },
            {
                "role": "assistant",
                "content": "cvxPartStockInit\ndata [out] template command stock data\n\nInitialize the parameters of the cvxPartStock().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the template command stock data for cvxPartStock?"
            },
            {
                "role": "assistant",
                "content": "cvxPartStockInit\ndata [out] template command stock data\n\nInitialize the parameters of the cvxPartStock().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything inside cvxPartStock?"
            },
            {
                "role": "assistant",
                "content": "cvxPartStockInit\ndata [out] template command stock data\n\nInitialize the parameters of the cvxPartStock().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create an extruded stock feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartStock\nStock [in] stock input data\nidShape [out] id of stock shape (NULL to ignore)\n\nUse this function to create an extruded stock feature that completely encloses faces, shapes or blocks.\nnote:\nInterface cvxPartStockInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to enclose faces, shapes or blocks with stock feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartStock\nStock [in] stock input data\nidShape [out] id of stock shape (NULL to ignore)\n\nUse this function to create an extruded stock feature that completely encloses faces, shapes or blocks.\nnote:\nInterface cvxPartStockInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of stock shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartStock\nStock [in] stock input data\nidShape [out] id of stock shape (NULL to ignore)\n\nUse this function to create an extruded stock feature that completely encloses faces, shapes or blocks.\nnote:\nInterface cvxPartStockInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to offset a face with a specified distance?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceOffset\nidFace [in] face id\nDis [in] offset distance\nKeep [in] 1 to keep \"Original surface\"; 0 to delete it\n\nOffset a face with distance \"Dis\". Original surface will be deleted if \"Keep=0\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to delete the original surface after offsetting a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceOffset\nidFace [in] face id\nDis [in] offset distance\nKeep [in] 1 to keep \"Original surface\"; 0 to delete it\n\nOffset a face with distance \"Dis\". Original surface will be deleted if \"Keep=0\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What parameter is used to specify the distance for offsetting a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceOffset\nidFace [in] face id\nDis [in] offset distance\nKeep [in] 1 to keep \"Original surface\"; 0 to delete it\n\nOffset a face with distance \"Dis\". Original surface will be deleted if \"Keep=0\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartShapeFaceOffset()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShapeFaceOffsetInit\ndata [out] shape face offset data\n\nInitialize the parameters of the cvxPartShapeFaceOffset().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing the parameters of cvxPartShapeFaceOffset()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShapeFaceOffsetInit\ndata [out] shape face offset data\n\nInitialize the parameters of the cvxPartShapeFaceOffset().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the shape face offset data without assigning a value to the variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShapeFaceOffsetInit\ndata [out] shape face offset data\n\nInitialize the parameters of the cvxPartShapeFaceOffset().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to offset faces of a shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShapeFaceOffset\nOffset [in] face offset input data\nidOffset [out] id of offset feature (NULL to ignore)\n\nUse this function to offset one or more faces of a shape.\nnote:\nInterface cvxPartShapeFaceOffsetInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to offset multiple faces of a shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShapeFaceOffset\nOffset [in] face offset input data\nidOffset [out] id of offset feature (NULL to ignore)\n\nUse this function to offset one or more faces of a shape.\nnote:\nInterface cvxPartShapeFaceOffsetInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the offset feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShapeFaceOffset\nOffset [in] face offset input data\nidOffset [out] id of offset feature (NULL to ignore)\n\nUse this function to offset one or more faces of a shape.\nnote:\nInterface cvxPartShapeFaceOffsetInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartShell()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShellInit\ndata [out] template command Shell input data\n\nInitialize the parameters of the cvxPartShell().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing the parameters of cvxPartShell()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShellInit\ndata [out] template command Shell input data\n\nInitialize the parameters of the cvxPartShell().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the template command Shell input data for cvxPartShell()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShellInit\ndata [out] template command Shell input data\n\nInitialize the parameters of the cvxPartShell().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a shell to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShell\nShell [in] Shell data\nidShell [out] id of feature operation that created Shell (NULL to ignore)\n\nAdds the specified shell(s) to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idShell\" if the output is not required.\nnote:\nInterface cvxPartShellInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to output the id of the history operation that created the shell?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShell\nShell [in] Shell data\nidShell [out] id of feature operation that created Shell (NULL to ignore)\n\nAdds the specified shell(s) to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idShell\" if the output is not required.\nnote:\nInterface cvxPartShellInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function can be used to initialize variables for adding a shell to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShell\nShell [in] Shell data\nidShell [out] id of feature operation that created Shell (NULL to ignore)\n\nAdds the specified shell(s) to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idShell\" if the output is not required.\nnote:\nInterface cvxPartShellInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartThicken?"
            },
            {
                "role": "assistant",
                "content": "cvxPartThickenInit\ndata [out] template command thicken data\n\nInitialize the parameters of the cvxPartThicken().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the template command thicken data for cvxPartThicken?"
            },
            {
                "role": "assistant",
                "content": "cvxPartThickenInit\ndata [out] template command thicken data\n\nInitialize the parameters of the cvxPartThicken().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing cvxPartThicken?"
            },
            {
                "role": "assistant",
                "content": "cvxPartThickenInit\ndata [out] template command thicken data\n\nInitialize the parameters of the cvxPartThicken().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a thicken feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartThicken\nThicken [in] thicken input data\nidShape [out] id of thicken shape (NULL to ignore)\n\nUse this function to create a thicken feature.\nnote:\nInterface cvxPartThickenInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for thicken feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartThicken\nThicken [in] thicken input data\nidShape [out] id of thicken shape (NULL to ignore)\n\nUse this function to create a thicken feature.\nnote:\nInterface cvxPartThickenInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of thicken shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartThicken\nThicken [in] thicken input data\nidShape [out] id of thicken shape (NULL to ignore)\n\nUse this function to create a thicken feature.\nnote:\nInterface cvxPartThickenInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to combine shapes with a base shape using boolean operation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBool\nType [in] boolean combination method\nidBase [in] id of base shape\nCount [in] no. of shapes to combine with \"idBase\"\nShapes [in] list of id's of shapes to combine with \"idBase\"\nKeep [in] 1 to keep \"Shapes\"; 0 to delete them\n\nCombines one or more shapes with a base shape using a boolean operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to perform boolean combination of shapes with a base shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBool\nType [in] boolean combination method\nidBase [in] id of base shape\nCount [in] no. of shapes to combine with \"idBase\"\nShapes [in] list of id's of shapes to combine with \"idBase\"\nKeep [in] 1 to keep \"Shapes\"; 0 to delete them\n\nCombines one or more shapes with a base shape using a boolean operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to keep or delete shapes after boolean combination with a base shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBool\nType [in] boolean combination method\nidBase [in] id of base shape\nCount [in] no. of shapes to combine with \"idBase\"\nShapes [in] list of id's of shapes to combine with \"idBase\"\nKeep [in] 1 to keep \"Shapes\"; 0 to delete them\n\nCombines one or more shapes with a base shape using a boolean operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to combine base shapes with operator shapes using boolean method?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBool2\nType [in] boolean combination method\nBaseCount [in] number of base shapes\nBaseList [in] list of base shape id's\nOpCount [in] number of operator shapes\nOpList [in] list of operator shape id's\nResultCount [out] number of resulting shapes (NULL to ignore)\nResultList [out] list of id's of resulting shapes (NULL to ignore)\n\nCombines one or more operator shapes with one or more base shapes using the specified boolean combination method. The resulting shape(s) are output via \"ResultList\".\nThe memory referenced by \"ResultList\" is allocated by this function. The calling procedure is responsible to free the memory referenced by \"ResultList\" (cvxMemFree((void**)ResultList)).\nIf you do not need the list of output shapes, input NULL for \"ResultCount\" and \"ResultList\" and no list of results will be output by this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to combine shapes using boolean method?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBool2\nType [in] boolean combination method\nBaseCount [in] number of base shapes\nBaseList [in] list of base shape id's\nOpCount [in] number of operator shapes\nOpList [in] list of operator shape id's\nResultCount [out] number of resulting shapes (NULL to ignore)\nResultList [out] list of id's of resulting shapes (NULL to ignore)\n\nCombines one or more operator shapes with one or more base shapes using the specified boolean combination method. The resulting shape(s) are output via \"ResultList\".\nThe memory referenced by \"ResultList\" is allocated by this function. The calling procedure is responsible to free the memory referenced by \"ResultList\" (cvxMemFree((void**)ResultList)).\nIf you do not need the list of output shapes, input NULL for \"ResultCount\" and \"ResultList\" and no list of results will be output by this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the resulting shapes after combining base and operator shapes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBool2\nType [in] boolean combination method\nBaseCount [in] number of base shapes\nBaseList [in] list of base shape id's\nOpCount [in] number of operator shapes\nOpList [in] list of operator shape id's\nResultCount [out] number of resulting shapes (NULL to ignore)\nResultList [out] list of id's of resulting shapes (NULL to ignore)\n\nCombines one or more operator shapes with one or more base shapes using the specified boolean combination method. The resulting shape(s) are output via \"ResultList\".\nThe memory referenced by \"ResultList\" is allocated by this function. The calling procedure is responsible to free the memory referenced by \"ResultList\" (cvxMemFree((void**)ResultList)).\nIf you do not need the list of output shapes, input NULL for \"ResultCount\" and \"ResultList\" and no list of results will be output by this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to combine base shapes with operator shapes using boolean method?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBool3\nType [in] boolean combination method\nBaseCount [in] number of base shapes\nBaseList [in] list of base shape id's\nOpCount [in] number of operator shapes\nOpList [in] list of operator shape id's\nFaceCount [in] number of bounding faces (0 if undefined)\nFaceList [in] list of bounding faces (NULL if undefined)\nResultCount [out] number of resulting shapes (NULL to ignore)\nResultList [out] list of id's of resulting shapes (NULL to ignore)\n\nCombines one or more operator shapes with one or more base shapes using the specified boolean combination method. If bounding faces are defined (FaceCount and FaceList), an attempt is made to limit the resulting shapes to the regions between the bounding faces.\nThe resulting shape(s) are output via \"ResultList\". The memory referenced by \"ResultList\" is allocated by this function.\nThe calling procedure is responsible to free the memory referenced by \"ResultList\" (cvxMemFree((void**)ResultList)).\nIf you do not need the list of output shapes, input NULL for \"ResultCount\" and \"ResultList\" and no list of results will be output by this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to limit resulting shapes to regions between bounding faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBool3\nType [in] boolean combination method\nBaseCount [in] number of base shapes\nBaseList [in] list of base shape id's\nOpCount [in] number of operator shapes\nOpList [in] list of operator shape id's\nFaceCount [in] number of bounding faces (0 if undefined)\nFaceList [in] list of bounding faces (NULL if undefined)\nResultCount [out] number of resulting shapes (NULL to ignore)\nResultList [out] list of id's of resulting shapes (NULL to ignore)\n\nCombines one or more operator shapes with one or more base shapes using the specified boolean combination method. If bounding faces are defined (FaceCount and FaceList), an attempt is made to limit the resulting shapes to the regions between the bounding faces.\nThe resulting shape(s) are output via \"ResultList\". The memory referenced by \"ResultList\" is allocated by this function.\nThe calling procedure is responsible to free the memory referenced by \"ResultList\" (cvxMemFree((void**)ResultList)).\nIf you do not need the list of output shapes, input NULL for \"ResultCount\" and \"ResultList\" and no list of results will be output by this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to ignore the list of resulting shapes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBool3\nType [in] boolean combination method\nBaseCount [in] number of base shapes\nBaseList [in] list of base shape id's\nOpCount [in] number of operator shapes\nOpList [in] list of operator shape id's\nFaceCount [in] number of bounding faces (0 if undefined)\nFaceList [in] list of bounding faces (NULL if undefined)\nResultCount [out] number of resulting shapes (NULL to ignore)\nResultList [out] list of id's of resulting shapes (NULL to ignore)\n\nCombines one or more operator shapes with one or more base shapes using the specified boolean combination method. If bounding faces are defined (FaceCount and FaceList), an attempt is made to limit the resulting shapes to the regions between the bounding faces.\nThe resulting shape(s) are output via \"ResultList\". The memory referenced by \"ResultList\" is allocated by this function.\nThe calling procedure is responsible to free the memory referenced by \"ResultList\" (cvxMemFree((void**)ResultList)).\nIf you do not need the list of output shapes, input NULL for \"ResultCount\" and \"ResultList\" and no list of results will be output by this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free the memory referenced by ResultList?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBool3\nType [in] boolean combination method\nBaseCount [in] number of base shapes\nBaseList [in] list of base shape id's\nOpCount [in] number of operator shapes\nOpList [in] list of operator shape id's\nFaceCount [in] number of bounding faces (0 if undefined)\nFaceList [in] list of bounding faces (NULL if undefined)\nResultCount [out] number of resulting shapes (NULL to ignore)\nResultList [out] list of id's of resulting shapes (NULL to ignore)\n\nCombines one or more operator shapes with one or more base shapes using the specified boolean combination method. If bounding faces are defined (FaceCount and FaceList), an attempt is made to limit the resulting shapes to the regions between the bounding faces.\nThe resulting shape(s) are output via \"ResultList\". The memory referenced by \"ResultList\" is allocated by this function.\nThe calling procedure is responsible to free the memory referenced by \"ResultList\" (cvxMemFree((void**)ResultList)).\nIf you do not need the list of output shapes, input NULL for \"ResultCount\" and \"ResultList\" and no list of results will be output by this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to define bounding faces for boolean combination?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBool3\nType [in] boolean combination method\nBaseCount [in] number of base shapes\nBaseList [in] list of base shape id's\nOpCount [in] number of operator shapes\nOpList [in] list of operator shape id's\nFaceCount [in] number of bounding faces (0 if undefined)\nFaceList [in] list of bounding faces (NULL if undefined)\nResultCount [out] number of resulting shapes (NULL to ignore)\nResultList [out] list of id's of resulting shapes (NULL to ignore)\n\nCombines one or more operator shapes with one or more base shapes using the specified boolean combination method. If bounding faces are defined (FaceCount and FaceList), an attempt is made to limit the resulting shapes to the regions between the bounding faces.\nThe resulting shape(s) are output via \"ResultList\". The memory referenced by \"ResultList\" is allocated by this function.\nThe calling procedure is responsible to free the memory referenced by \"ResultList\" (cvxMemFree((void**)ResultList)).\nIf you do not need the list of output shapes, input NULL for \"ResultCount\" and \"ResultList\" and no list of results will be output by this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartDivide()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDivideInit\ndata [out] template command divide data\n\nInitialize the parameters of the cvxPartDivide().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the template command divide data for cvxPartDivide()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDivideInit\ndata [out] template command divide data\n\nInitialize the parameters of the cvxPartDivide().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing cvxPartDivide()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDivideInit\ndata [out] template command divide data\n\nInitialize the parameters of the cvxPartDivide().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to divide a solid or open shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDivide\nDivide [in] divide input data\nnumShape [out] number of resulting shapes (NULL to ignore)\nidShapes [out] list of id's of resulting shapes (NULL to ignore)\n\nUse this function to divide a solid or open shape where it intersects with faces, shapes, or datum planes. \n\n The result will be two distinct solids or shapes. \n\n This function can also divide an open shape or result in one or more open shapes.\nnote:\nInterface cvxPartDivideInit() can initialize variables of this function. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of resulting shapes after division?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDivide\nDivide [in] divide input data\nnumShape [out] number of resulting shapes (NULL to ignore)\nidShapes [out] list of id's of resulting shapes (NULL to ignore)\n\nUse this function to divide a solid or open shape where it intersects with faces, shapes, or datum planes. \n\n The result will be two distinct solids or shapes. \n\n This function can also divide an open shape or result in one or more open shapes.\nnote:\nInterface cvxPartDivideInit() can initialize variables of this function. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the list of id's of resulting shapes after division?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDivide\nDivide [in] divide input data\nnumShape [out] number of resulting shapes (NULL to ignore)\nidShapes [out] list of id's of resulting shapes (NULL to ignore)\n\nUse this function to divide a solid or open shape where it intersects with faces, shapes, or datum planes. \n\n The result will be two distinct solids or shapes. \n\n This function can also divide an open shape or result in one or more open shapes.\nnote:\nInterface cvxPartDivideInit() can initialize variables of this function. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartTrim()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrimInit\ndata [out] template command Trim data\n\nInitialize the parameters of the cvxPartTrim().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing cvxPartTrim()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrimInit\ndata [out] template command Trim data\n\nInitialize the parameters of the cvxPartTrim().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the template command Trim data for cvxPartTrim()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrimInit\ndata [out] template command Trim data\n\nInitialize the parameters of the cvxPartTrim().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to trim a shape using input trimming data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrim\nTrim [in] trim input data\nnumShape [out] number of resulting shapes (NULL to ignore)\nidShapes [out] list of id's of resulting shapes (NULL to ignore)\n\nTrim a shape by the input trimming data. The trimming face/faceset should extend outside the boundaries of the base face/faceset.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nnote:\nInterface cvxPartTrimInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the number of resulting shapes after trimming?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrim\nTrim [in] trim input data\nnumShape [out] number of resulting shapes (NULL to ignore)\nidShapes [out] list of id's of resulting shapes (NULL to ignore)\n\nTrim a shape by the input trimming data. The trimming face/faceset should extend outside the boundaries of the base face/faceset.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nnote:\nInterface cvxPartTrimInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of id's of resulting shapes after trimming?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrim\nTrim [in] trim input data\nnumShape [out] number of resulting shapes (NULL to ignore)\nidShapes [out] list of id's of resulting shapes (NULL to ignore)\n\nTrim a shape by the input trimming data. The trimming face/faceset should extend outside the boundaries of the base face/faceset.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nnote:\nInterface cvxPartTrimInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to simplify a part by removing specified faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSimplify\nnumEnts [in] number of face or feature to remove and gap edges to fill\nidEnts [in] list of id's of face or feature to remove and gap edges to fill\nidSimplify [out] id of simplify feature (NULL to ignore)\n\nUse this function to simplify a part by removing specified faces. The function will attempt to extend and reconnect faces to close the resulting gaps in the part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to fill gap edges in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSimplify\nnumEnts [in] number of face or feature to remove and gap edges to fill\nidEnts [in] list of id's of face or feature to remove and gap edges to fill\nidSimplify [out] id of simplify feature (NULL to ignore)\n\nUse this function to simplify a part by removing specified faces. The function will attempt to extend and reconnect faces to close the resulting gaps in the part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to reconnect faces to close resulting gaps in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSimplify\nnumEnts [in] number of face or feature to remove and gap edges to fill\nidEnts [in] list of id's of face or feature to remove and gap edges to fill\nidSimplify [out] id of simplify feature (NULL to ignore)\n\nUse this function to simplify a part by removing specified faces. The function will attempt to extend and reconnect faces to close the resulting gaps in the part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartReplace()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartReplaceInit\ndata [out] shape replace data\n\nInitialize the parameters of the cvxPartReplace().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing cvxPartReplace()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartReplaceInit\ndata [out] shape replace data\n\nInitialize the parameters of the cvxPartReplace().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the shape replace data for cvxPartReplace()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartReplaceInit\ndata [out] shape replace data\n\nInitialize the parameters of the cvxPartReplace().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxPartReplace to replace faces of a shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartReplace\nReplace [in] replace input data\nidReplace [out] id of replace feature (NULL to ignore)\n\nUse this function to replace one or more faces of a shape.\nnote:\nInterface cvxPartReplaceInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to replace multiple faces using cvxPartReplace?"
            },
            {
                "role": "assistant",
                "content": "cvxPartReplace\nReplace [in] replace input data\nidReplace [out] id of replace feature (NULL to ignore)\n\nUse this function to replace one or more faces of a shape.\nnote:\nInterface cvxPartReplaceInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize variables for cvxPartReplace using cvxPartReplaceInit?"
            },
            {
                "role": "assistant",
                "content": "cvxPartReplace\nReplace [in] replace input data\nidReplace [out] id of replace feature (NULL to ignore)\n\nUse this function to replace one or more faces of a shape.\nnote:\nInterface cvxPartReplaceInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartInlay?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInlayInit\ndata [out] template command inlay data\n\nInitialize the parameters of the cvxPartInlay().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of cvxMemZero inside the interface?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInlayInit\ndata [out] template command inlay data\n\nInitialize the parameters of the cvxPartInlay().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing cvxPartInlay?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInlayInit\ndata [out] template command inlay data\n\nInitialize the parameters of the cvxPartInlay().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to embed closed loops of curves into a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInlay\nInlay [in] inlay input data\nidInlay [out] id of inlay feature (NULL to ignore)\n\nThe function is used to embed a set of closed loops of curves, as it would be generated by an outline text font, into a face and then offset the new interior faces created by the desired distance, giving a raised or sunken text effect. it will create new faces, edges, vertices, etc., allowing for sharp transitions from the raised surfaces to the base surface.\nnote:\nInterface cvxPartInlayInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a raised or sunken text effect on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInlay\nInlay [in] inlay input data\nidInlay [out] id of inlay feature (NULL to ignore)\n\nThe function is used to embed a set of closed loops of curves, as it would be generated by an outline text font, into a face and then offset the new interior faces created by the desired distance, giving a raised or sunken text effect. it will create new faces, edges, vertices, etc., allowing for sharp transitions from the raised surfaces to the base surface.\nnote:\nInterface cvxPartInlayInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to offset the new interior faces created by a desired distance?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInlay\nInlay [in] inlay input data\nidInlay [out] id of inlay feature (NULL to ignore)\n\nThe function is used to embed a set of closed loops of curves, as it would be generated by an outline text font, into a face and then offset the new interior faces created by the desired distance, giving a raised or sunken text effect. it will create new faces, edges, vertices, etc., allowing for sharp transitions from the raised surfaces to the base surface.\nnote:\nInterface cvxPartInlayInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the part resolve self intersection data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSelfXInit\ndata [out] part resolve self intersection data\n\nInitialize the svxPartSelfX structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything inside the part resolve self intersection data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSelfXInit\ndata [out] part resolve self intersection data\n\nInitialize the svxPartSelfX structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize the svxPartSelfX structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSelfXInit\ndata [out] part resolve self intersection data\n\nInitialize the svxPartSelfX structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxPartSelfX to remove self intersections and inverted regions on selected faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSelfX\ndata [in] part resolve self intersection data\nidShape [out] id of shape feature (NULL to ignore)\n\nThe corresponding function of this interface is Shape->Resolve SelfX.\nUse this function to remove self intersections and inverted regions (including inverted inner loop cases) on selected faces as well as can be done.\nFaces that intersect other faces in the shape will be split and the unnecessary faces will be removed. The shape will not be split.\nnote:\nInterface cvxPartSelfXInit() can initialize variables resolve self intersection of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to ignore the id of shape feature when using cvxPartSelfX?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSelfX\ndata [in] part resolve self intersection data\nidShape [out] id of shape feature (NULL to ignore)\n\nThe corresponding function of this interface is Shape->Resolve SelfX.\nUse this function to remove self intersections and inverted regions (including inverted inner loop cases) on selected faces as well as can be done.\nFaces that intersect other faces in the shape will be split and the unnecessary faces will be removed. The shape will not be split.\nnote:\nInterface cvxPartSelfXInit() can initialize variables resolve self intersection of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can cvxPartSelfX split faces that intersect other faces in the shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSelfX\ndata [in] part resolve self intersection data\nidShape [out] id of shape feature (NULL to ignore)\n\nThe corresponding function of this interface is Shape->Resolve SelfX.\nUse this function to remove self intersections and inverted regions (including inverted inner loop cases) on selected faces as well as can be done.\nFaces that intersect other faces in the shape will be split and the unnecessary faces will be removed. The shape will not be split.\nnote:\nInterface cvxPartSelfXInit() can initialize variables resolve self intersection of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the part punch data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPunchInit\ndata [out] part punch data\n\nInitialize the svxPunch structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything inside the svxPunch structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPunchInit\ndata [out] part punch data\n\nInitialize the svxPunch structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize the svxPunch structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPunchInit\ndata [out] part punch data\n\nInitialize the svxPunch structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to perform a punch operation between two shapes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPunch\ndata [in] \nidPunch [out] \n\nUse this function to perform a punch operation between two shapes.\nnote:\nInterface cvxPartPunchInit() can initialize variables resolve self intersection of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to resolve self intersection before using cvxPartPunch?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPunch\ndata [in] \nidPunch [out] \n\nUse this function to perform a punch operation between two shapes.\nnote:\nInterface cvxPartPunchInit() can initialize variables resolve self intersection of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the punched shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPunch\ndata [in] \nidPunch [out] \n\nUse this function to perform a punch operation between two shapes.\nnote:\nInterface cvxPartPunchInit() can initialize variables resolve self intersection of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartTwist?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTwistInit\ndata [out] shape twist data\n\nInitialize the parameters of the cvxPartTwist().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing cvxPartTwist?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTwistInit\ndata [out] shape twist data\n\nInitialize the parameters of the cvxPartTwist().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the shape twist data after initializing cvxPartTwist?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTwistInit\ndata [out] shape twist data\n\nInitialize the parameters of the cvxPartTwist().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to twist shapes along a specified axis?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTwist\nTwist [in] twist input data\nidTwist [out] id of Twist feature (NULL to ignore)\n\nUse this function to twist shapes along specified axis.\nnote:\nInterface cvxPartTwistInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for twisting shapes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTwist\nTwist [in] twist input data\nidTwist [out] id of Twist feature (NULL to ignore)\n\nUse this function to twist shapes along specified axis.\nnote:\nInterface cvxPartTwistInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the twist feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTwist\nTwist [in] twist input data\nidTwist [out] id of Twist feature (NULL to ignore)\n\nUse this function to twist shapes along specified axis.\nnote:\nInterface cvxPartTwistInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartTaper?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTaperInit\ndata [out] shape taper data\n\nInitialize the parameters of the cvxPartTaper().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing cvxPartTaper?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTaperInit\ndata [out] shape taper data\n\nInitialize the parameters of the cvxPartTaper().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the shape taper data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTaperInit\ndata [out] shape taper data\n\nInitialize the parameters of the cvxPartTaper().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxPartTaper to make a shape smaller in a specified side?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTaper\nTaper [in] taper input data\nidTaper [out] id of taper feature (NULL to ignore)\n\nUse this function to taper shape and make it smaller in specified side.\nnote:\nInterface cvxPartTaperInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for cvxPartTaper?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTaper\nTaper [in] taper input data\nidTaper [out] id of taper feature (NULL to ignore)\n\nUse this function to taper shape and make it smaller in specified side.\nnote:\nInterface cvxPartTaperInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the taper feature using cvxPartTaper?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTaper\nTaper [in] taper input data\nidTaper [out] id of taper feature (NULL to ignore)\n\nUse this function to taper shape and make it smaller in specified side.\nnote:\nInterface cvxPartTaperInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartStretch()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartStretchInit\ndata [out] shape stretch data\n\nInitialize the parameters of the cvxPartStretch().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing the shape stretch data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartStretchInit\ndata [out] shape stretch data\n\nInitialize the parameters of the cvxPartStretch().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the shape stretch data without assigning a value to the variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartStretchInit\ndata [out] shape stretch data\n\nInitialize the parameters of the cvxPartStretch().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to stretch a shape along X, Y, and Z directions in a specified range?"
            },
            {
                "role": "assistant",
                "content": "cvxPartStretch\nStretch [in] stretch input data\nidStretch [out] id of Stretch feature (NULL to ignore)\n\nUse this function to stretch shape along X, Y and Z direction in specified range.\nnote:\nInterface cvxPartStretchInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for stretching a shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartStretch\nStretch [in] stretch input data\nidStretch [out] id of Stretch feature (NULL to ignore)\n\nUse this function to stretch shape along X, Y and Z direction in specified range.\nnote:\nInterface cvxPartStretchInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the stretch feature after stretching a shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartStretch\nStretch [in] stretch input data\nidStretch [out] id of Stretch feature (NULL to ignore)\n\nUse this function to stretch shape along X, Y and Z direction in specified range.\nnote:\nInterface cvxPartStretchInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of shape morph to curve data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMorphToCrvInit\ndata [out] shape morph to curve data\n\nInitialize the parameters of the cvxPartMorphToCrv().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to initialize the cvxPartMorphToCrv?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMorphToCrvInit\ndata [out] shape morph to curve data\n\nInitialize the parameters of the cvxPartMorphToCrv().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to empty everything before calling cvxPartMorphToCrv?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMorphToCrvInit\ndata [out] shape morph to curve data\n\nInitialize the parameters of the cvxPartMorphToCrv().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxPartMorphToCrv function to transform shapes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMorphToCrv\nMorphToCrv [in] morph to curve input data\nidMorphToCrv [out] id of morph to curve feature (NULL to ignore)\n\nUse this function to transforms (morphs) shapes by warping face geometry.\nnote:\nInterface cvxPartMorphToCrvInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any way to warp face geometry using cvxPartMorphToCrv?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMorphToCrv\nMorphToCrv [in] morph to curve input data\nidMorphToCrv [out] id of morph to curve feature (NULL to ignore)\n\nUse this function to transforms (morphs) shapes by warping face geometry.\nnote:\nInterface cvxPartMorphToCrvInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of morph to curve feature using cvxPartMorphToCrv?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMorphToCrv\nMorphToCrv [in] morph to curve input data\nidMorphToCrv [out] id of morph to curve feature (NULL to ignore)\n\nUse this function to transforms (morphs) shapes by warping face geometry.\nnote:\nInterface cvxPartMorphToCrvInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the pattern data structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPtnDataInit\ntype [in] pattern type\ndata [out] pattern data\n\nInitialize the svxPtnData structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to empty everything inside the pattern data structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPtnDataInit\ntype [in] pattern type\ndata [out] pattern data\n\nInitialize the svxPtnData structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize the pattern type?"
            },
            {
                "role": "assistant",
                "content": "cvxPtnDataInit\ntype [in] pattern type\ndata [out] pattern data\n\nInitialize the svxPtnData structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to pattern entities using different methods?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPatternGeom\nCount [in] number of entities for pattern\nidEnts [in] list of id's of entities (supported entities include: shape,face,curve,point,sketch,datum plane,datum axis,datum CSYS)\nPattern [in] pattern input data\nidPattern [out] id of pattern feature (NULL to ignore)\n\nUse this function to pattern any combination of shapes, faces, curves, points, text, sketches, datum planes and patterns of patterns. eight different methods of patterning are available, each method requires different types of input.\nnote:\nInterface cvxPtnDataInit() can initialize variables(Pattern.inpData) of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to pattern shapes, faces, curves, points, sketches, datum planes, and patterns of patterns?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPatternGeom\nCount [in] number of entities for pattern\nidEnts [in] list of id's of entities (supported entities include: shape,face,curve,point,sketch,datum plane,datum axis,datum CSYS)\nPattern [in] pattern input data\nidPattern [out] id of pattern feature (NULL to ignore)\n\nUse this function to pattern any combination of shapes, faces, curves, points, text, sketches, datum planes and patterns of patterns. eight different methods of patterning are available, each method requires different types of input.\nnote:\nInterface cvxPtnDataInit() can initialize variables(Pattern.inpData) of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the different types of input required for the eight different patterning methods?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPatternGeom\nCount [in] number of entities for pattern\nidEnts [in] list of id's of entities (supported entities include: shape,face,curve,point,sketch,datum plane,datum axis,datum CSYS)\nPattern [in] pattern input data\nidPattern [out] id of pattern feature (NULL to ignore)\n\nUse this function to pattern any combination of shapes, faces, curves, points, text, sketches, datum planes and patterns of patterns. eight different methods of patterning are available, each method requires different types of input.\nnote:\nInterface cvxPtnDataInit() can initialize variables(Pattern.inpData) of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxPtnVarTbl structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPtnVarTblInit\nfirstNum [in] first direction patterned number\nsecondNum [in] second direction patterned number\ndimName [in] the name of the dimension to be modified\nptnVarTbl [out] table pattern data\n\nInitialize the svxPtnVarTbl structure.\npCell of ptnVarTbl will be initialized to the postion of the pattern instance, the position defined like this (such as: first direction x number is 3 and second direction y number is 2, B is the base feature): \n-----------\ny\n^ * O O      if the '*' should be modified, pCell[i] = 1;\n| B & O      if the '&' should be modified, pCell[i] = 10000;\n|-------> x\n\nnormally pCell[i] = x*10000+y; and B(0,0) can't be modified.\n\npVal of ptnVarTbl will be initialized to the value of the dimension.\nnote:\nDo not assign a value to variable \"ptnVarTbl\" before calling this function. The cvxMemZero() is called inside the interface to empty everything. \n\n The calling procedure MUST deallocate the output list pCell and pVal with cvxMemFree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the position of the pattern instance in the svxPtnVarTbl structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPtnVarTblInit\nfirstNum [in] first direction patterned number\nsecondNum [in] second direction patterned number\ndimName [in] the name of the dimension to be modified\nptnVarTbl [out] table pattern data\n\nInitialize the svxPtnVarTbl structure.\npCell of ptnVarTbl will be initialized to the postion of the pattern instance, the position defined like this (such as: first direction x number is 3 and second direction y number is 2, B is the base feature): \n-----------\ny\n^ * O O      if the '*' should be modified, pCell[i] = 1;\n| B & O      if the '&' should be modified, pCell[i] = 10000;\n|-------> x\n\nnormally pCell[i] = x*10000+y; and B(0,0) can't be modified.\n\npVal of ptnVarTbl will be initialized to the value of the dimension.\nnote:\nDo not assign a value to variable \"ptnVarTbl\" before calling this function. The cvxMemZero() is called inside the interface to empty everything. \n\n The calling procedure MUST deallocate the output list pCell and pVal with cvxMemFree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the value of the dimension in the svxPtnVarTbl structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPtnVarTblInit\nfirstNum [in] first direction patterned number\nsecondNum [in] second direction patterned number\ndimName [in] the name of the dimension to be modified\nptnVarTbl [out] table pattern data\n\nInitialize the svxPtnVarTbl structure.\npCell of ptnVarTbl will be initialized to the postion of the pattern instance, the position defined like this (such as: first direction x number is 3 and second direction y number is 2, B is the base feature): \n-----------\ny\n^ * O O      if the '*' should be modified, pCell[i] = 1;\n| B & O      if the '&' should be modified, pCell[i] = 10000;\n|-------> x\n\nnormally pCell[i] = x*10000+y; and B(0,0) can't be modified.\n\npVal of ptnVarTbl will be initialized to the value of the dimension.\nnote:\nDo not assign a value to variable \"ptnVarTbl\" before calling this function. The cvxMemZero() is called inside the interface to empty everything. \n\n The calling procedure MUST deallocate the output list pCell and pVal with cvxMemFree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to pattern a combination of features?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPatternFtr\nCount [in] number of entities for pattern\nidFtrs [in] list of id's of features\nPattern [in] pattern input data\nidPattern [out] id of pattern feature (NULL to ignore)\n\nUse this function to pattern any combination of features. eight different methods of patterning are available, each method requires different types of input.\nnote:\nInterface cvxPtnDataInit() can initialize variables(Pattern.inpData) of this function. \n\n Interface cvxPtnVarTblInit() can initialize table variables(svxPtnVarTbl), cvxPtnDataInit() should be called before this Interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the different methods available for patterning?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPatternFtr\nCount [in] number of entities for pattern\nidFtrs [in] list of id's of features\nPattern [in] pattern input data\nidPattern [out] id of pattern feature (NULL to ignore)\n\nUse this function to pattern any combination of features. eight different methods of patterning are available, each method requires different types of input.\nnote:\nInterface cvxPtnDataInit() can initialize variables(Pattern.inpData) of this function. \n\n Interface cvxPtnVarTblInit() can initialize table variables(svxPtnVarTbl), cvxPtnDataInit() should be called before this Interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize variables for pattern input data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPatternFtr\nCount [in] number of entities for pattern\nidFtrs [in] list of id's of features\nPattern [in] pattern input data\nidPattern [out] id of pattern feature (NULL to ignore)\n\nUse this function to pattern any combination of features. eight different methods of patterning are available, each method requires different types of input.\nnote:\nInterface cvxPtnDataInit() can initialize variables(Pattern.inpData) of this function. \n\n Interface cvxPtnVarTblInit() can initialize table variables(svxPtnVarTbl), cvxPtnDataInit() should be called before this Interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize table variables for pattern input data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPatternFtr\nCount [in] number of entities for pattern\nidFtrs [in] list of id's of features\nPattern [in] pattern input data\nidPattern [out] id of pattern feature (NULL to ignore)\n\nUse this function to pattern any combination of features. eight different methods of patterning are available, each method requires different types of input.\nnote:\nInterface cvxPtnDataInit() can initialize variables(Pattern.inpData) of this function. \n\n Interface cvxPtnVarTblInit() can initialize table variables(svxPtnVarTbl), cvxPtnDataInit() should be called before this Interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartMirrorGeom()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMirrorGeominit\ndata [out] mirror geometry data\n\nInitialize the parameters of the cvxPartMirrorGeom().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing the mirror geometry data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMirrorGeominit\ndata [out] mirror geometry data\n\nInitialize the parameters of the cvxPartMirrorGeom().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the mirror geometry data without assigning a value to the variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMirrorGeominit\ndata [out] mirror geometry data\n\nInitialize the parameters of the cvxPartMirrorGeom().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to mirror geometry input data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMirrorGeom\nMirror [in] mirror geometry input data\nNumNewEnts [out] number of new entities (NULL to ignore)\nidNewEnts [out] list of id's of new entities (NULL to ignore)\n\nUse this function to mirror any combination of shapes, components, curves, points, sketches and datum planes.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nnote:\nInterface cvxPartMirrorGeomInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to mirror shapes, components, curves, points, sketches, and datum planes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMirrorGeom\nMirror [in] mirror geometry input data\nNumNewEnts [out] number of new entities (NULL to ignore)\nidNewEnts [out] list of id's of new entities (NULL to ignore)\n\nUse this function to mirror any combination of shapes, components, curves, points, sketches and datum planes.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nnote:\nInterface cvxPartMirrorGeomInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of new entities after mirroring?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMirrorGeom\nMirror [in] mirror geometry input data\nNumNewEnts [out] number of new entities (NULL to ignore)\nidNewEnts [out] list of id's of new entities (NULL to ignore)\n\nUse this function to mirror any combination of shapes, components, curves, points, sketches and datum planes.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nnote:\nInterface cvxPartMirrorGeomInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of id's of new entities after mirroring?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMirrorGeom\nMirror [in] mirror geometry input data\nNumNewEnts [out] number of new entities (NULL to ignore)\nidNewEnts [out] list of id's of new entities (NULL to ignore)\n\nUse this function to mirror any combination of shapes, components, curves, points, sketches and datum planes.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nnote:\nInterface cvxPartMirrorGeomInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of mirror feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMirrorFtrInit\ndata [out] mirror feature data\n\nInitialize the parameters of the cvxPartMirrorFtr().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing mirror feature data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMirrorFtrInit\ndata [out] mirror feature data\n\nInitialize the parameters of the cvxPartMirrorFtr().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get mirror feature data without assigning a value to the variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMirrorFtrInit\ndata [out] mirror feature data\n\nInitialize the parameters of the cvxPartMirrorFtr().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the cvxPartMirrorFtr function to mirror features?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMirrorFtr\nMirror [in] mirror feature input data\nidFtr [out] id of mirror feature (NULL to ignore)\n\nUse this function to mirror features.\nnote:\nInterface cvxPartMirrorFtrInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for the cvxPartMirrorFtr function using cvxPartMirrorFtrInit()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMirrorFtr\nMirror [in] mirror feature input data\nidFtr [out] id of mirror feature (NULL to ignore)\n\nUse this function to mirror features.\nnote:\nInterface cvxPartMirrorFtrInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the id of the mirrored feature using cvxPartMirrorFtr?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMirrorFtr\nMirror [in] mirror feature input data\nidFtr [out] id of mirror feature (NULL to ignore)\n\nUse this function to mirror features.\nnote:\nInterface cvxPartMirrorFtrInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to move a geometry entity within the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMovePntToPnt\nidEntity [in] id of geometry entity to move\nStart [in] start point and direction\nEnd [in] end point and direction\n\nMoves the specified geometry within the active part from one point \"Start->Pnt\" to another \"End->Pnt\". \n\n It also changes the orientation of the part based on \"Start->Dir\" and \"End->Dir\". \n\n If the directions are same, the orientation of the geometry is not changed"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the orientation of the part based on start and end points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMovePntToPnt\nidEntity [in] id of geometry entity to move\nStart [in] start point and direction\nEnd [in] end point and direction\n\nMoves the specified geometry within the active part from one point \"Start->Pnt\" to another \"End->Pnt\". \n\n It also changes the orientation of the part based on \"Start->Dir\" and \"End->Dir\". \n\n If the directions are same, the orientation of the geometry is not changed"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the start and end points for moving a geometry entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMovePntToPnt\nidEntity [in] id of geometry entity to move\nStart [in] start point and direction\nEnd [in] end point and direction\n\nMoves the specified geometry within the active part from one point \"Start->Pnt\" to another \"End->Pnt\". \n\n It also changes the orientation of the part based on \"Start->Dir\" and \"End->Dir\". \n\n If the directions are same, the orientation of the geometry is not changed"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to move a geometry entity within the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMoveTransform\nidEntity [in] id of geometry entity to move\nMat [in] transformation matrix\n\nApplies the specified general transformation to a geometry entity, moving the entity within the active part.\nIf \"Mat\" includes scaling, the scale factors are ignored."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to apply a general transformation to a geometry entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMoveTransform\nidEntity [in] id of geometry entity to move\nMat [in] transformation matrix\n\nApplies the specified general transformation to a geometry entity, moving the entity within the active part.\nIf \"Mat\" includes scaling, the scale factors are ignored."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I use a transformation matrix to move a geometry entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMoveTransform\nidEntity [in] id of geometry entity to move\nMat [in] transformation matrix\n\nApplies the specified general transformation to a geometry entity, moving the entity within the active part.\nIf \"Mat\" includes scaling, the scale factors are ignored."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to apply general transformation to a list of geometry entities?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMoveTransformList\nCount [in] number of entities to transform\nEntities [in] list of geometry entity ids\nMat [in] transformation matrix\n\nApplies the specified general transformation to a list of geometry entities, moving the entities within the active part.\n\"Entities\" may be NULL only if \"Count\" is 0.\nIf \"Mat\" includes scaling, the scale factors are ignored.\nIt is not an error if \"Count\" is 0."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to move multiple geometry entities within the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMoveTransformList\nCount [in] number of entities to transform\nEntities [in] list of geometry entity ids\nMat [in] transformation matrix\n\nApplies the specified general transformation to a list of geometry entities, moving the entities within the active part.\n\"Entities\" may be NULL only if \"Count\" is 0.\nIf \"Mat\" includes scaling, the scale factors are ignored.\nIt is not an error if \"Count\" is 0."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use transformation matrix to move geometry entities?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMoveTransformList\nCount [in] number of entities to transform\nEntities [in] list of geometry entity ids\nMat [in] transformation matrix\n\nApplies the specified general transformation to a list of geometry entities, moving the entities within the active part.\n\"Entities\" may be NULL only if \"Count\" is 0.\nIf \"Mat\" includes scaling, the scale factors are ignored.\nIt is not an error if \"Count\" is 0."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a move to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMove\nMove [in] Move data\nidMove [out] Move feature id (NULL to ignore)\n\nAdds the specified Move(s) to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idMove\" if the output is not required."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to output the id of the corresponding history operation after adding a move?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMove\nMove [in] Move data\nidMove [out] Move feature id (NULL to ignore)\n\nAdds the specified Move(s) to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idMove\" if the output is not required."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the parameter to pass for adding a move without requiring the id of the corresponding history operation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMove\nMove [in] Move data\nidMove [out] Move feature id (NULL to ignore)\n\nAdds the specified Move(s) to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idMove\" if the output is not required."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to copy a geometry entity within the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCopyDirDis\nidEntity [in] id of geometry entity to copy\nDir [in] direction\nDis [in] distance\nidCopy [out] id of copied entity (NULL to ignore)\n\nCopies the specified geometry within the active part along specified direction \"Dir\" with distance \"Dis\". If \"idCopy\" is not NULL, the id of the new copy is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to copy geometry along a specified direction?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCopyDirDis\nidEntity [in] id of geometry entity to copy\nDir [in] direction\nDis [in] distance\nidCopy [out] id of copied entity (NULL to ignore)\n\nCopies the specified geometry within the active part along specified direction \"Dir\" with distance \"Dis\". If \"idCopy\" is not NULL, the id of the new copy is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the distance for copying a geometry entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCopyDirDis\nidEntity [in] id of geometry entity to copy\nDir [in] direction\nDis [in] distance\nidCopy [out] id of copied entity (NULL to ignore)\n\nCopies the specified geometry within the active part along specified direction \"Dir\" with distance \"Dis\". If \"idCopy\" is not NULL, the id of the new copy is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to copy a geometry entity within the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCopyPntToPnt\nidEntity [in] id of geometry entity to copy\nStart [in] start point and direction\nEnd [in] end point and direction\nidCopy [out] id of copied entity (NULL to ignore)\n\nCopies the specified geometry within the active part from one point \"Start->Pnt\" to another \"End->Pnt\". It also changes the orientation of the part based on \"Start->Dir\" and \"End->Dir\". If the directions are same, the orientation of the geometry is not changed"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the orientation of a part based on start and end points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCopyPntToPnt\nidEntity [in] id of geometry entity to copy\nStart [in] start point and direction\nEnd [in] end point and direction\nidCopy [out] id of copied entity (NULL to ignore)\n\nCopies the specified geometry within the active part from one point \"Start->Pnt\" to another \"End->Pnt\". It also changes the orientation of the part based on \"Start->Dir\" and \"End->Dir\". If the directions are same, the orientation of the geometry is not changed"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to copy geometry from one point to another?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCopyPntToPnt\nidEntity [in] id of geometry entity to copy\nStart [in] start point and direction\nEnd [in] end point and direction\nidCopy [out] id of copied entity (NULL to ignore)\n\nCopies the specified geometry within the active part from one point \"Start->Pnt\" to another \"End->Pnt\". It also changes the orientation of the part based on \"Start->Dir\" and \"End->Dir\". If the directions are same, the orientation of the geometry is not changed"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to copy a geometry entity within the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCopyTransform\nidEntity [in] id of geometry entity to copy\nMat [in] transformation matrix\nidCopy [out] id of new entity (NULL to ignore)\n\nCopies the specified geometry entity and applies the specified general transformation to the copy, moving the copy within the active part. If \"idCopy\" is not NULL, the id of the new copy is output.\nIf \"Mat\" includes scaling, the scale factors are ignored."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to apply a general transformation to a copied geometry entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCopyTransform\nidEntity [in] id of geometry entity to copy\nMat [in] transformation matrix\nidCopy [out] id of new entity (NULL to ignore)\n\nCopies the specified geometry entity and applies the specified general transformation to the copy, moving the copy within the active part. If \"idCopy\" is not NULL, the id of the new copy is output.\nIf \"Mat\" includes scaling, the scale factors are ignored."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new copied entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCopyTransform\nidEntity [in] id of geometry entity to copy\nMat [in] transformation matrix\nidCopy [out] id of new entity (NULL to ignore)\n\nCopies the specified geometry entity and applies the specified general transformation to the copy, moving the copy within the active part. If \"idCopy\" is not NULL, the id of the new copy is output.\nIf \"Mat\" includes scaling, the scale factors are ignored."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to copy and transform a list of geometry entities?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCopyTransformList\nCount [in] number of entities to transform\nEntities [in] list of geometry entity ids\nMat [in] transformation matrix\nEntCnt [out] number of new entities (NULL to ignore)\nidList [out] id of new entities (NULL to ignore)\n\nCopies the specified geometry entities and applies the specified general transformation to the copy, moving the copy within the active part.The calling procedure MUST deallocate the output list with cvxMemFree().\nIf \"Mat\" includes scaling, the scale factors are ignored."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to apply general transformation to geometry entities?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCopyTransformList\nCount [in] number of entities to transform\nEntities [in] list of geometry entity ids\nMat [in] transformation matrix\nEntCnt [out] number of new entities (NULL to ignore)\nidList [out] id of new entities (NULL to ignore)\n\nCopies the specified geometry entities and applies the specified general transformation to the copy, moving the copy within the active part.The calling procedure MUST deallocate the output list with cvxMemFree().\nIf \"Mat\" includes scaling, the scale factors are ignored."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list after copying and transforming geometry entities?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCopyTransformList\nCount [in] number of entities to transform\nEntities [in] list of geometry entity ids\nMat [in] transformation matrix\nEntCnt [out] number of new entities (NULL to ignore)\nidList [out] id of new entities (NULL to ignore)\n\nCopies the specified geometry entities and applies the specified general transformation to the copy, moving the copy within the active part.The calling procedure MUST deallocate the output list with cvxMemFree().\nIf \"Mat\" includes scaling, the scale factors are ignored."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartCopy()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCopyInit\ndata [out] template command Copy data\n\nInitialize the parameters of the cvxPartCopy().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the template command Copy data for cvxPartCopy()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCopyInit\ndata [out] template command Copy data\n\nInitialize the parameters of the cvxPartCopy().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing cvxPartCopy()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCopyInit\ndata [out] template command Copy data\n\nInitialize the parameters of the cvxPartCopy().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a specified Copy to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCopy\nCopy [in] Copy data\nidCopy [out] Copy feature id (NULL to ignore)\n\nAdds the specified Copy(s) to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idCopy\" if the output is not required.\nnote:\nInterface cvxPartCopyInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for cvxPartCopy?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCopy\nCopy [in] Copy data\nidCopy [out] Copy feature id (NULL to ignore)\n\nAdds the specified Copy(s) to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idCopy\" if the output is not required.\nnote:\nInterface cvxPartCopyInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the corresponding history operation after adding a Copy to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCopy\nCopy [in] Copy data\nidCopy [out] Copy feature id (NULL to ignore)\n\nAdds the specified Copy(s) to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idCopy\" if the output is not required.\nnote:\nInterface cvxPartCopyInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to scale entities in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartScale\nCount [in] number of entities\nidEnts [in] list of entity id's\nX_scale [in] X scale factor\nY_scale [in] Y scale factor\nZ_scale [in] Z scale factor\nidDatum [in] optional datum plane entity (input 0 to ignore)\n\nScales the specified entities in the active part by the input scale factors relative to the X, Y, Z axes and origin of the active part.\nIf \"idDatum > 0\", the entities(idEnts) are scaled relative to the origin and the X, Y, Z axes of the reference plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to scale entities?"
            },
            {
                "role": "assistant",
                "content": "cvxPartScale\nCount [in] number of entities\nidEnts [in] list of entity id's\nX_scale [in] X scale factor\nY_scale [in] Y scale factor\nZ_scale [in] Z scale factor\nidDatum [in] optional datum plane entity (input 0 to ignore)\n\nScales the specified entities in the active part by the input scale factors relative to the X, Y, Z axes and origin of the active part.\nIf \"idDatum > 0\", the entities(idEnts) are scaled relative to the origin and the X, Y, Z axes of the reference plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to scale entities relative to a reference plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPartScale\nCount [in] number of entities\nidEnts [in] list of entity id's\nX_scale [in] X scale factor\nY_scale [in] Y scale factor\nZ_scale [in] Z scale factor\nidDatum [in] optional datum plane entity (input 0 to ignore)\n\nScales the specified entities in the active part by the input scale factors relative to the X, Y, Z axes and origin of the active part.\nIf \"idDatum > 0\", the entities(idEnts) are scaled relative to the origin and the X, Y, Z axes of the reference plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is it possible to scale entities with different factors along X, Y, and Z axes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartScale\nCount [in] number of entities\nidEnts [in] list of entity id's\nX_scale [in] X scale factor\nY_scale [in] Y scale factor\nZ_scale [in] Z scale factor\nidDatum [in] optional datum plane entity (input 0 to ignore)\n\nScales the specified entities in the active part by the input scale factors relative to the X, Y, Z axes and origin of the active part.\nIf \"idDatum > 0\", the entities(idEnts) are scaled relative to the origin and the X, Y, Z axes of the reference plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to scale entities in the active part by input scale factors?"
            },
            {
                "role": "assistant",
                "content": "cvxPartScale2\nCount [in] number of entities\nidEnts [in] list of entity id's\nX_scale [in] X scale factor\nY_scale [in] Y scale factor\nZ_scale [in] Z scale factor\nidDatum [in] optional datum plane entity (input 0 to ignore)\nCentPnt [in] optional center point entity (input NULL to ignore)\n\nScales the specified entities in the active part by the input scale factors relative to the X, Y, Z axes and origin of the active part.\nIf \"idDatum > 0\", the entities(idEnts) are scaled relative to the origin and the X, Y, Z axes of the reference plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to scale entities relative to the X, Y, Z axes and origin of the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartScale2\nCount [in] number of entities\nidEnts [in] list of entity id's\nX_scale [in] X scale factor\nY_scale [in] Y scale factor\nZ_scale [in] Z scale factor\nidDatum [in] optional datum plane entity (input 0 to ignore)\nCentPnt [in] optional center point entity (input NULL to ignore)\n\nScales the specified entities in the active part by the input scale factors relative to the X, Y, Z axes and origin of the active part.\nIf \"idDatum > 0\", the entities(idEnts) are scaled relative to the origin and the X, Y, Z axes of the reference plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to scale entities relative to a reference plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPartScale2\nCount [in] number of entities\nidEnts [in] list of entity id's\nX_scale [in] X scale factor\nY_scale [in] Y scale factor\nZ_scale [in] Z scale factor\nidDatum [in] optional datum plane entity (input 0 to ignore)\nCentPnt [in] optional center point entity (input NULL to ignore)\n\nScales the specified entities in the active part by the input scale factors relative to the X, Y, Z axes and origin of the active part.\nIf \"idDatum > 0\", the entities(idEnts) are scaled relative to the origin and the X, Y, Z axes of the reference plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of Smd Extrude Tab?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdExtrudeTabInit\ndata [out] template command Smd Extrude Tab data\n\nInitialize the parameters of the cvxPartSmdExtrudeTab().\nDefault values are used when some parameters are set to NULL. When users want to know what the default value is, they can use the interface cvxPartSmdAtGet() to get it.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the default values for Smd Extrude Tab?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdExtrudeTabInit\ndata [out] template command Smd Extrude Tab data\n\nInitialize the parameters of the cvxPartSmdExtrudeTab().\nDefault values are used when some parameters are set to NULL. When users want to know what the default value is, they can use the interface cvxPartSmdAtGet() to get it.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if I assign a value to the variable before calling the function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdExtrudeTabInit\ndata [out] template command Smd Extrude Tab data\n\nInitialize the parameters of the cvxPartSmdExtrudeTab().\nDefault values are used when some parameters are set to NULL. When users want to know what the default value is, they can use the interface cvxPartSmdAtGet() to get it.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a sheet metal flange feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdExtrudeTab\ndata [in] Smd Extrude Tab data\nidExtTab [out] id of tab (NULL to ignore)\n\nUse this function to create sheet metal flange feature, can create tab feature. Extrude a close profile to be a base tab.\nnote:\nInterface cvxPartSmdExtrudeTabInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a tab feature in sheet metal?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdExtrudeTab\ndata [in] Smd Extrude Tab data\nidExtTab [out] id of tab (NULL to ignore)\n\nUse this function to create sheet metal flange feature, can create tab feature. Extrude a close profile to be a base tab.\nnote:\nInterface cvxPartSmdExtrudeTabInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to extrude a closed profile to create a base tab?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdExtrudeTab\ndata [in] Smd Extrude Tab data\nidExtTab [out] id of tab (NULL to ignore)\n\nUse this function to create sheet metal flange feature, can create tab feature. Extrude a close profile to be a base tab.\nnote:\nInterface cvxPartSmdExtrudeTabInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of SMD extrude flange?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdExtrudeFlangeinit\ndata [out] template command Smd Extrude Flange data\n\nInitialize the parameters of the cvxPartSmdExtrudeFlange().\nDefault values are used when some parameters are set to NULL. When users want to know what the default value is, they can use the interface cvxPartSmdAtGet() to get it.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the default values for SMD extrude flange?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdExtrudeFlangeinit\ndata [out] template command Smd Extrude Flange data\n\nInitialize the parameters of the cvxPartSmdExtrudeFlange().\nDefault values are used when some parameters are set to NULL. When users want to know what the default value is, they can use the interface cvxPartSmdAtGet() to get it.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if a value is not assigned to the variable before calling the function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdExtrudeFlangeinit\ndata [out] template command Smd Extrude Flange data\n\nInitialize the parameters of the cvxPartSmdExtrudeFlange().\nDefault values are used when some parameters are set to NULL. When users want to know what the default value is, they can use the interface cvxPartSmdAtGet() to get it.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a sheet metal flange feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdExtrudeFlange\ndata [in] smd extrude flange data\nidExtFlange [out] id of smd extrude flange (NULL to ignore)\n\nUse this function to create sheet metal flange feature, can create flange feature. Extrude a close or open profile to be a flange, it will offset the thick and add the bend.\nnote:\nInterface cvxPartSmdExtrudeFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to extrude a close or open profile to create a flange?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdExtrudeFlange\ndata [in] smd extrude flange data\nidExtFlange [out] id of smd extrude flange (NULL to ignore)\n\nUse this function to create sheet metal flange feature, can create flange feature. Extrude a close or open profile to be a flange, it will offset the thick and add the bend.\nnote:\nInterface cvxPartSmdExtrudeFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a bend to a flange feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdExtrudeFlange\ndata [in] smd extrude flange data\nidExtFlange [out] id of smd extrude flange (NULL to ignore)\n\nUse this function to create sheet metal flange feature, can create flange feature. Extrude a close or open profile to be a flange, it will offset the thick and add the bend.\nnote:\nInterface cvxPartSmdExtrudeFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the relief parameter of SMD data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdReliefDataInit\ndata [out] Smd Relief data\n\nInitialize the relief parameter of svxSmdFullFlangeData/svxSmdFlangeProfData/ svxSmdPartialFlangeData/svxSmdHemFlangeData/svxSmdFlangeData.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing SMD relief data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdReliefDataInit\ndata [out] Smd Relief data\n\nInitialize the relief parameter of svxSmdFullFlangeData/svxSmdFlangeProfData/ svxSmdPartialFlangeData/svxSmdHemFlangeData/svxSmdFlangeData.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the SMD relief data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdReliefDataInit\ndata [out] Smd Relief data\n\nInitialize the relief parameter of svxSmdFullFlangeData/svxSmdFlangeProfData/ svxSmdPartialFlangeData/svxSmdHemFlangeData/svxSmdFlangeData.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSmdFullFlange?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFullFlangeInit\ndata [out] template command Smd Full Flange data\n\nInitialize the parameters of the cvxPartSmdFullFlange().\nDefault values are used when some parameters are set to NULL. When users want to know what the default value is, they can use the interface cvxPartSmdAtGet() to get it.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the default value used in cvxPartSmdFullFlange?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFullFlangeInit\ndata [out] template command Smd Full Flange data\n\nInitialize the parameters of the cvxPartSmdFullFlange().\nDefault values are used when some parameters are set to NULL. When users want to know what the default value is, they can use the interface cvxPartSmdAtGet() to get it.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the template command Smd Full Flange data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFullFlangeInit\ndata [out] template command Smd Full Flange data\n\nInitialize the parameters of the cvxPartSmdFullFlange().\nDefault values are used when some parameters are set to NULL. When users want to know what the default value is, they can use the interface cvxPartSmdAtGet() to get it.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add full face flanges to multi-edges of a sheet metal part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFullFlange\ndata [in] Smd Full Flange data\nidFull [out] id of full flange ,NULL to ignore\n\nUse this function to add full face flanges to the multi-edges of a sheet metal part.\nnote:\nInterface cvxPartSmdFullFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for adding full face flanges?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFullFlange\ndata [in] Smd Full Flange data\nidFull [out] id of full flange ,NULL to ignore\n\nUse this function to add full face flanges to the multi-edges of a sheet metal part.\nnote:\nInterface cvxPartSmdFullFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of full flange after adding it to the sheet metal part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFullFlange\ndata [in] Smd Full Flange data\nidFull [out] id of full flange ,NULL to ignore\n\nUse this function to add full face flanges to the multi-edges of a sheet metal part.\nnote:\nInterface cvxPartSmdFullFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the matrix of a profile for adding a flange?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdProfFlangeProfMatInit\nidEdge [in] id of edge to add flange with profile\nangle [in] the bend angle\nskMat [out] the matrix of the profile\n\nInitialize the matrix of the idProfile of svxSmdFlangeProfData.\nnote:\nCall this interface first to get the matrix of the input profile if you will create a profile for adding a flange. You need use the output matrix as the profile's matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to get the matrix of the input profile for creating a flange?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdProfFlangeProfMatInit\nidEdge [in] id of edge to add flange with profile\nangle [in] the bend angle\nskMat [out] the matrix of the profile\n\nInitialize the matrix of the idProfile of svxSmdFlangeProfData.\nnote:\nCall this interface first to get the matrix of the input profile if you will create a profile for adding a flange. You need use the output matrix as the profile's matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to obtain the matrix of the profile for adding a flange?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdProfFlangeProfMatInit\nidEdge [in] id of edge to add flange with profile\nangle [in] the bend angle\nskMat [out] the matrix of the profile\n\nInitialize the matrix of the idProfile of svxSmdFlangeProfData.\nnote:\nCall this interface first to get the matrix of the input profile if you will create a profile for adding a flange. You need use the output matrix as the profile's matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of Smd Flange with Profile data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdProfFlangeInit\ndata [out] template command Smd Flange with Profile data\n\nInitialize the parameters of the cvxPartSmdProfFlange().\nDefault values are used when some parameters are set to NULL. When users want to know what the default value is, they can use the interface cvxPartSmdAtGet() to get it.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the default values for the parameters of Smd Flange with Profile?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdProfFlangeInit\ndata [out] template command Smd Flange with Profile data\n\nInitialize the parameters of the cvxPartSmdProfFlange().\nDefault values are used when some parameters are set to NULL. When users want to know what the default value is, they can use the interface cvxPartSmdAtGet() to get it.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if a value is assigned to the variable before calling the initialization function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdProfFlangeInit\ndata [out] template command Smd Flange with Profile data\n\nInitialize the parameters of the cvxPartSmdProfFlange().\nDefault values are used when some parameters are set to NULL. When users want to know what the default value is, they can use the interface cvxPartSmdAtGet() to get it.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a sheet metal profile flange?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdProfFlange\ndata [in] Smd Flange with profile data\nidFlange [out] id of Flange with profile ,NULL to ignore\n\nUse this function to create a sheet metal profile flange. This function is similar to cvxPartSmdFullFlange(), but the shape of the bend and flanges is controlled by the profile.\nInterface cvxPartSmdProfFlangeInit() can initialize variables of this function.\nnote:\nYou must call cvxPartSmdProfFlangeProfMatInit() to get the profile's matrix if you will create a profile for adding a flange."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to control the shape of bend and flanges using a profile?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdProfFlange\ndata [in] Smd Flange with profile data\nidFlange [out] id of Flange with profile ,NULL to ignore\n\nUse this function to create a sheet metal profile flange. This function is similar to cvxPartSmdFullFlange(), but the shape of the bend and flanges is controlled by the profile.\nInterface cvxPartSmdProfFlangeInit() can initialize variables of this function.\nnote:\nYou must call cvxPartSmdProfFlangeProfMatInit() to get the profile's matrix if you will create a profile for adding a flange."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to initialize variables for creating a sheet metal profile flange?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdProfFlange\ndata [in] Smd Flange with profile data\nidFlange [out] id of Flange with profile ,NULL to ignore\n\nUse this function to create a sheet metal profile flange. This function is similar to cvxPartSmdFullFlange(), but the shape of the bend and flanges is controlled by the profile.\nInterface cvxPartSmdProfFlangeInit() can initialize variables of this function.\nnote:\nYou must call cvxPartSmdProfFlangeProfMatInit() to get the profile's matrix if you will create a profile for adding a flange."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the profile's matrix for adding a flange?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdProfFlange\ndata [in] Smd Flange with profile data\nidFlange [out] id of Flange with profile ,NULL to ignore\n\nUse this function to create a sheet metal profile flange. This function is similar to cvxPartSmdFullFlange(), but the shape of the bend and flanges is controlled by the profile.\nInterface cvxPartSmdProfFlangeInit() can initialize variables of this function.\nnote:\nYou must call cvxPartSmdProfFlangeProfMatInit() to get the profile's matrix if you will create a profile for adding a flange."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of Smd Partial Flange?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdPartialFlangeInit\ndata [out] template command Smd Partial Flange data\n\nInitialize the parameters of the cvxPartSmdPartialFlange().\nDefault values are used when some parameters are set to NULL. When users want to know what the default value is, they can use the interface cvxPartSmdAtGet() to get it.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the default value for Smd Partial Flange data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdPartialFlangeInit\ndata [out] template command Smd Partial Flange data\n\nInitialize the parameters of the cvxPartSmdPartialFlange().\nDefault values are used when some parameters are set to NULL. When users want to know what the default value is, they can use the interface cvxPartSmdAtGet() to get it.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the default value using cvxPartSmdAtGet()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdPartialFlangeInit\ndata [out] template command Smd Partial Flange data\n\nInitialize the parameters of the cvxPartSmdPartialFlange().\nDefault values are used when some parameters are set to NULL. When users want to know what the default value is, they can use the interface cvxPartSmdAtGet() to get it.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a partial flange to the edge of a sheet metal part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdPartialFlange\ndata [in] Smd Partial Flange data\nidPartial [out] id of Partial Flange, NULL to ignore\n\nUse this function to add a partial flange to the edge of a sheet metal part.\nnote:\nInterface cvxPartSmdPartialFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for adding a partial flange?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdPartialFlange\ndata [in] Smd Partial Flange data\nidPartial [out] id of Partial Flange, NULL to ignore\n\nUse this function to add a partial flange to the edge of a sheet metal part.\nnote:\nInterface cvxPartSmdPartialFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the partial flange?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdPartialFlange\ndata [in] Smd Partial Flange data\nidPartial [out] id of Partial Flange, NULL to ignore\n\nUse this function to add a partial flange to the edge of a sheet metal part.\nnote:\nInterface cvxPartSmdPartialFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSmdHemFlange()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdHemFlangeInit\nhemType [in] 0 is Full hem, 1 is Partial hem.\ndata [out] template command Smd Hem Flange data\n\nInitialize the parameters of the cvxPartSmdHemFlange().\nDefault values are used when some parameters are set to NULL. When users want to know what the default value is, they can use the interface cvxPartSmdAtGet() to get it.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the default values used in cvxPartSmdHemFlange()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdHemFlangeInit\nhemType [in] 0 is Full hem, 1 is Partial hem.\ndata [out] template command Smd Hem Flange data\n\nInitialize the parameters of the cvxPartSmdHemFlange().\nDefault values are used when some parameters are set to NULL. When users want to know what the default value is, they can use the interface cvxPartSmdAtGet() to get it.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the template command Smd Hem Flange data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdHemFlangeInit\nhemType [in] 0 is Full hem, 1 is Partial hem.\ndata [out] template command Smd Hem Flange data\n\nInitialize the parameters of the cvxPartSmdHemFlange().\nDefault values are used when some parameters are set to NULL. When users want to know what the default value is, they can use the interface cvxPartSmdAtGet() to get it.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a curly shape on the edges of a sheet metal model?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdHemFlange\ndata [in] Smd Hem Flange data\nidHem [out] id of hem flange , NULL to ignore\n\nUse this function to add various curly shape on edges of the sheet metal model, the thickness are same as the sheet metal model.\nnote:\nInterface cvxPartSmdHemFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for adding curly shapes on sheet metal model edges?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdHemFlange\ndata [in] Smd Hem Flange data\nidHem [out] id of hem flange , NULL to ignore\n\nUse this function to add various curly shape on edges of the sheet metal model, the thickness are same as the sheet metal model.\nnote:\nInterface cvxPartSmdHemFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the ID of the hem flange after adding a curly shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdHemFlange\ndata [in] Smd Hem Flange data\nidHem [out] id of hem flange , NULL to ignore\n\nUse this function to add various curly shape on edges of the sheet metal model, the thickness are same as the sheet metal model.\nnote:\nInterface cvxPartSmdHemFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSmdLftFlange()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdLftFlangeInit\nmethod [in] smd lofted flange method\ndata [out] smd jog data\n\nInitialize the parameters of the cvxPartSmdLftFlange().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method parameter used for in cvxPartSmdLftFlangeInit?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdLftFlangeInit\nmethod [in] smd lofted flange method\ndata [out] smd jog data\n\nInitialize the parameters of the cvxPartSmdLftFlange().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the smd jog data after initializing cvxPartSmdLftFlange?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdLftFlangeInit\nmethod [in] smd lofted flange method\ndata [out] smd jog data\n\nInitialize the parameters of the cvxPartSmdLftFlange().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a lofted flange using smd lofted flange data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdLftFlange\ndata [in] smd lofted flange data\nidLft [out] feature id(NULL to ignore)\n\nUse this function to create lofted flange. It supports Fold/Unfold Sheet Metal Parts.\nnote:\nInterface cvxPartSmdLftFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to support Fold/Unfold Sheet Metal Parts for creating lofted flange?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdLftFlange\ndata [in] smd lofted flange data\nidLft [out] feature id(NULL to ignore)\n\nUse this function to create lofted flange. It supports Fold/Unfold Sheet Metal Parts.\nnote:\nInterface cvxPartSmdLftFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize variables for creating lofted flange using cvxPartSmdLftFlangeInit()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdLftFlange\ndata [in] smd lofted flange data\nidLft [out] feature id(NULL to ignore)\n\nUse this function to create lofted flange. It supports Fold/Unfold Sheet Metal Parts.\nnote:\nInterface cvxPartSmdLftFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSmdSweptFlange?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdSweptFlangeInit\ncorType [in] smd relief type\ndata [out] smd Swept flange data\n\nInitialize the parameters of the cvxPartSmdSweptFlange().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the smd relief type for cvxPartSmdSweptFlangeInit?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdSweptFlangeInit\ncorType [in] smd relief type\ndata [out] smd Swept flange data\n\nInitialize the parameters of the cvxPartSmdSweptFlange().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything inside cvxPartSmdSweptFlange?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdSweptFlangeInit\ncorType [in] smd relief type\ndata [out] smd Swept flange data\n\nInitialize the parameters of the cvxPartSmdSweptFlange().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a swept flange using a profile sketch and existing sheet metal edges?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdSweptFlange\ndata [in] smd swept flange data\nidSwept [out] feature id(NULL to ignore)\n\nSwept Flange is similar to Sweep, you need a profile and path to create the flange. To create a swept flange, you need an open profile sketch as the profile, and a series of existing sheet metal edges as the path.\nnote:\nInterface cvxPartSmdSweptFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for creating a swept flange?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdSweptFlange\ndata [in] smd swept flange data\nidSwept [out] feature id(NULL to ignore)\n\nSwept Flange is similar to Sweep, you need a profile and path to create the flange. To create a swept flange, you need an open profile sketch as the profile, and a series of existing sheet metal edges as the path.\nnote:\nInterface cvxPartSmdSweptFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the feature id after creating a swept flange?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdSweptFlange\ndata [in] smd swept flange data\nidSwept [out] feature id(NULL to ignore)\n\nSwept Flange is similar to Sweep, you need a profile and path to create the flange. To create a swept flange, you need an open profile sketch as the profile, and a series of existing sheet metal edges as the path.\nnote:\nInterface cvxPartSmdSweptFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSmdFoldByLine()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFoldByLineInit\ndata [out] smd Fold by Line data\n\nInitialize the parameters of the cvxPartSmdFoldByLine().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing cvxPartSmdFoldByLine()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFoldByLineInit\ndata [out] smd Fold by Line data\n\nInitialize the parameters of the cvxPartSmdFoldByLine().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize the smd Fold by Line data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFoldByLineInit\ndata [out] smd Fold by Line data\n\nInitialize the parameters of the cvxPartSmdFoldByLine().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create bends along a line using the SMD Fold by Line function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFoldByLine\ndata [in] smd Fold by Line data\nidFbl [out] feature id(NULL to ignore)\n\nUse this function to create bends along a line. This line can be a three-dimensional or two-dimensional line.\nnote:\nInterface cvxPartSmdFoldByLineInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can the line for bending be both three-dimensional and two-dimensional?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFoldByLine\ndata [in] smd Fold by Line data\nidFbl [out] feature id(NULL to ignore)\n\nUse this function to create bends along a line. This line can be a three-dimensional or two-dimensional line.\nnote:\nInterface cvxPartSmdFoldByLineInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for the SMD Fold by Line function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFoldByLine\ndata [in] smd Fold by Line data\nidFbl [out] feature id(NULL to ignore)\n\nUse this function to create bends along a line. This line can be a three-dimensional or two-dimensional line.\nnote:\nInterface cvxPartSmdFoldByLineInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSmdJog?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdJogInit\ndata [out] smd jog data\n\nInitialize the parameters of the cvxPartSmdJog().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to empty everything before calling cvxPartSmdJog?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdJogInit\ndata [out] smd jog data\n\nInitialize the parameters of the cvxPartSmdJog().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize smd jog data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdJogInit\ndata [out] smd jog data\n\nInitialize the parameters of the cvxPartSmdJog().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create bends and flanges along a line?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdJog\ndata [in] smd jog data\nidJog [out] feature id of jog(NULL to ignore)\n\nUse this command to create two bends and two flange along a line, and lifting material between the to bends which are described in the notes below.\nnote:\nInterface cvxPartSmdJogInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to lift material between bends?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdJog\ndata [in] smd jog data\nidJog [out] feature id of jog(NULL to ignore)\n\nUse this command to create two bends and two flange along a line, and lifting material between the to bends which are described in the notes below.\nnote:\nInterface cvxPartSmdJogInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for creating bends and flanges?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdJog\ndata [in] smd jog data\nidJog [out] feature id of jog(NULL to ignore)\n\nUse this command to create two bends and two flange along a line, and lifting material between the to bends which are described in the notes below.\nnote:\nInterface cvxPartSmdJogInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSmdExtendFlange()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdExtendFlangeInit\ntype [in] extend flange type\ndata [out] smd extend flange data\n\nInitialize the parameters of the cvxPartSmdExtendFlange().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of the cvxMemZero() function inside the interface?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdExtendFlangeInit\ntype [in] extend flange type\ndata [out] smd extend flange data\n\nInitialize the parameters of the cvxPartSmdExtendFlange().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a specific type parameter required for initializing cvxPartSmdExtendFlange()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdExtendFlangeInit\ntype [in] extend flange type\ndata [out] smd extend flange data\n\nInitialize the parameters of the cvxPartSmdExtendFlange().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to stretch an existing tab or flange from its picked edges?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdExtendFlange\ndata [in] smd extend flange data\nidFtr [out] feature id(NULL to ignore)\n\nUse function to stretch an existing tab or flange from its picked edges. It would be helpful if users don't want to redefine the flange or an Extrusion tab feature to change the size for replay efficiency, or you want to work on an imported/converted sheet metal part that doesn't have any redefine-able features.\nnote:\nInterface cvxPartSmdExtendFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the size of an existing tab or flange?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdExtendFlange\ndata [in] smd extend flange data\nidFtr [out] feature id(NULL to ignore)\n\nUse function to stretch an existing tab or flange from its picked edges. It would be helpful if users don't want to redefine the flange or an Extrusion tab feature to change the size for replay efficiency, or you want to work on an imported/converted sheet metal part that doesn't have any redefine-able features.\nnote:\nInterface cvxPartSmdExtendFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to work on an imported/converted sheet metal part without redefining features?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdExtendFlange\ndata [in] smd extend flange data\nidFtr [out] feature id(NULL to ignore)\n\nUse function to stretch an existing tab or flange from its picked edges. It would be helpful if users don't want to redefine the flange or an Extrusion tab feature to change the size for replay efficiency, or you want to work on an imported/converted sheet metal part that doesn't have any redefine-able features.\nnote:\nInterface cvxPartSmdExtendFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSmdFlange?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlangeInit\ndata [out] template command Smd Flange data\n\nInitialize the parameters of the cvxPartSmdFlange().\ncvxPartSmdAtGet();\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of cvxPartSmdFlangeInit function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlangeInit\ndata [out] template command Smd Flange data\n\nInitialize the parameters of the cvxPartSmdFlange().\ncvxPartSmdAtGet();\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the template command Smd Flange data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlangeInit\ndata [out] template command Smd Flange data\n\nInitialize the parameters of the cvxPartSmdFlange().\ncvxPartSmdAtGet();\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add face flanges to the multi-edges of a sheet metal part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlange\ndata [in] Smd Flange data\nidFlange [out] id of flange ,NULL to ignore\n\nUse this function to add face flanges to the multi-edges of a sheet metal part.\nnote:\nInterface cvxPartSmdFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for adding face flanges to a sheet metal part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlange\ndata [in] Smd Flange data\nidFlange [out] id of flange ,NULL to ignore\n\nUse this function to add face flanges to the multi-edges of a sheet metal part.\nnote:\nInterface cvxPartSmdFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the flange after adding it to the sheet metal part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlange\ndata [in] Smd Flange data\nidFlange [out] id of flange ,NULL to ignore\n\nUse this function to add face flanges to the multi-edges of a sheet metal part.\nnote:\nInterface cvxPartSmdFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the taper types available for the bend taper definition?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdBendTaperDefDataInit\ntaperType [in] 0 is linear,Use an angle value or a distance value to taper the bend. 1 is tangent,Use a distance value to taper the bend. The edge of the bend is tangent to the web. default:0\ndata [out] smd bend taper definition side data\n\nInitialize the parameters of the cvxPartSmdBendTaper().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSmdBendTaper()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdBendTaperDefDataInit\ntaperType [in] 0 is linear,Use an angle value or a distance value to taper the bend. 1 is tangent,Use a distance value to taper the bend. The edge of the bend is tangent to the web. default:0\ndata [out] smd bend taper definition side data\n\nInitialize the parameters of the cvxPartSmdBendTaper().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of using cvxMemZero() inside the interface?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdBendTaperDefDataInit\ntaperType [in] 0 is linear,Use an angle value or a distance value to taper the bend. 1 is tangent,Use a distance value to taper the bend. The edge of the bend is tangent to the web. default:0\ndata [out] smd bend taper definition side data\n\nInitialize the parameters of the cvxPartSmdBendTaper().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSmdBendTaper()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdBendTaperInit\nmethod [in] Specify the side you want to taper\ndata [out] smd bend taper data\n\nInitialize the parameters of the cvxPartSmdBendTaper().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything. \n\n Structure svxSmdBendTaperDefData can be initialized through interface cvxPartSmdBendTaperDefDataInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to specify the side for tapering?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdBendTaperInit\nmethod [in] Specify the side you want to taper\ndata [out] smd bend taper data\n\nInitialize the parameters of the cvxPartSmdBendTaper().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything. \n\n Structure svxSmdBendTaperDefData can be initialized through interface cvxPartSmdBendTaperDefDataInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize svxSmdBendTaperDefData through the interface?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdBendTaperInit\nmethod [in] Specify the side you want to taper\ndata [out] smd bend taper data\n\nInitialize the parameters of the cvxPartSmdBendTaper().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything. \n\n Structure svxSmdBendTaperDefData can be initialized through interface cvxPartSmdBendTaperDefDataInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to miter the flange to change its profile and avoid interference with other flanges?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdBendTaper\ndata [in] smd bend taper data\nidFtr [out] feature id(NULL to ignore)\n\nUse this command to miter the flange to change its profile and avoid the interference with other flanges, or make some gap, especially on the imported sheet metal which has no flange features. The system will specify the stationary face automatically, but you do have modify permission for designing the shape.\nnote:\nInterface cvxPartSmdBendTaperInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to make a gap in the imported sheet metal with no flange features?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdBendTaper\ndata [in] smd bend taper data\nidFtr [out] feature id(NULL to ignore)\n\nUse this command to miter the flange to change its profile and avoid the interference with other flanges, or make some gap, especially on the imported sheet metal which has no flange features. The system will specify the stationary face automatically, but you do have modify permission for designing the shape.\nnote:\nInterface cvxPartSmdBendTaperInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I modify the shape of the stationary face automatically specified by the system?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdBendTaper\ndata [in] smd bend taper data\nidFtr [out] feature id(NULL to ignore)\n\nUse this command to miter the flange to change its profile and avoid the interference with other flanges, or make some gap, especially on the imported sheet metal which has no flange features. The system will specify the stationary face automatically, but you do have modify permission for designing the shape.\nnote:\nInterface cvxPartSmdBendTaperInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSmdNormalCut?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdNormalCutinit\ndata [out] template command Smd Normal Cut data\n\nInitialize the parameters of the cvxPartSmdNormalCut().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the template command for Smd Normal Cut data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdNormalCutinit\ndata [out] template command Smd Normal Cut data\n\nInitialize the parameters of the cvxPartSmdNormalCut().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing the parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdNormalCutinit\ndata [out] template command Smd Normal Cut data\n\nInitialize the parameters of the cvxPartSmdNormalCut().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a Normal Cut at shapes using Profile P?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdNormalCut\npData [in] NormalCut data\nnumShape [out] number of resulting shapes (NULL to ignore)\nidShapes [out] list of id's of resulting shapes (NULL to ignore)\n\nUse this function to create Normal Cut at shapes by Profile P. Pass in NULL for \"idShapes\" and \"numShape\" if the output is not require, or it will return the new shapes.\nnote:\nInterface cvxPartSmdNormalCutInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for the Normal Cut function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdNormalCut\npData [in] NormalCut data\nnumShape [out] number of resulting shapes (NULL to ignore)\nidShapes [out] list of id's of resulting shapes (NULL to ignore)\n\nUse this function to create Normal Cut at shapes by Profile P. Pass in NULL for \"idShapes\" and \"numShape\" if the output is not require, or it will return the new shapes.\nnote:\nInterface cvxPartSmdNormalCutInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of resulting shapes after Normal Cut?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdNormalCut\npData [in] NormalCut data\nnumShape [out] number of resulting shapes (NULL to ignore)\nidShapes [out] list of id's of resulting shapes (NULL to ignore)\n\nUse this function to create Normal Cut at shapes by Profile P. Pass in NULL for \"idShapes\" and \"numShape\" if the output is not require, or it will return the new shapes.\nnote:\nInterface cvxPartSmdNormalCutInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of id's of resulting shapes after Normal Cut?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdNormalCut\npData [in] NormalCut data\nnumShape [out] number of resulting shapes (NULL to ignore)\nidShapes [out] list of id's of resulting shapes (NULL to ignore)\n\nUse this function to create Normal Cut at shapes by Profile P. Pass in NULL for \"idShapes\" and \"numShape\" if the output is not require, or it will return the new shapes.\nnote:\nInterface cvxPartSmdNormalCutInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSmdCloseCorner()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdCloseCornerInit\ntype [in] method, 0-close by edge, 1- close by bend(face)\ndata [out] template command Smd Close Corner data\n\nInitialize the parameters of the cvxPartSmdCloseCorner().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the different methods available for initializing cvxPartSmdCloseCorner()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdCloseCornerInit\ntype [in] method, 0-close by edge, 1- close by bend(face)\ndata [out] template command Smd Close Corner data\n\nInitialize the parameters of the cvxPartSmdCloseCorner().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a specific way to empty everything before calling cvxPartSmdCloseCorner()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdCloseCornerInit\ntype [in] method, 0-close by edge, 1- close by bend(face)\ndata [out] template command Smd Close Corner data\n\nInitialize the parameters of the cvxPartSmdCloseCorner().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a close corner feature to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdCloseCorner\nCornerData [in] close corner data\nidSmdCorner [out] index of close corner (NULL to ignore)\n\nAdds the specified close corner feature to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idSmdCorner\" if the output is not required.\nnote:\nInterface cvxPartSmdCloseCornerInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to output the id of the corresponding history operation for the close corner feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdCloseCorner\nCornerData [in] close corner data\nidSmdCorner [out] index of close corner (NULL to ignore)\n\nAdds the specified close corner feature to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idSmdCorner\" if the output is not required.\nnote:\nInterface cvxPartSmdCloseCornerInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to initialize variables for adding a close corner feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdCloseCorner\nCornerData [in] close corner data\nidSmdCorner [out] index of close corner (NULL to ignore)\n\nAdds the specified close corner feature to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idSmdCorner\" if the output is not required.\nnote:\nInterface cvxPartSmdCloseCornerInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSmdDimple?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdDimpleInit\ndata [out] dimple data\n\nInitialize the parameters of the cvxPartSmdDimple().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing dimple data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdDimpleInit\ndata [out] dimple data\n\nInitialize the parameters of the cvxPartSmdDimple().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize dimple data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdDimpleInit\ndata [out] dimple data\n\nInitialize the parameters of the cvxPartSmdDimple().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a raised dimple feature in a sheet metal part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdDimple\nDimple [in] dimple input data\nidDimple [out] id of dimple feature (NULL to ignore)\n\nUse this function to create a raised dimple feature in a sheet metal part. The dimple(s) can be placed on any flat face including flanges and will be extended in the direction of the face.\nnote:\nInterface cvxPartSmdDimpleInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to place dimples on any flat face including flanges?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdDimple\nDimple [in] dimple input data\nidDimple [out] id of dimple feature (NULL to ignore)\n\nUse this function to create a raised dimple feature in a sheet metal part. The dimple(s) can be placed on any flat face including flanges and will be extended in the direction of the face.\nnote:\nInterface cvxPartSmdDimpleInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to extend the dimple in the direction of the face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdDimple\nDimple [in] dimple input data\nidDimple [out] id of dimple feature (NULL to ignore)\n\nUse this function to create a raised dimple feature in a sheet metal part. The dimple(s) can be placed on any flat face including flanges and will be extended in the direction of the face.\nnote:\nInterface cvxPartSmdDimpleInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSmdLouver?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdLouverInit\ndata [out] template command Smd Louver data\n\nInitialize the parameters of the cvxPartSmdLouver().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the template command for Smd Louver data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdLouverInit\ndata [out] template command Smd Louver data\n\nInitialize the parameters of the cvxPartSmdLouver().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing the parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdLouverInit\ndata [out] template command Smd Louver data\n\nInitialize the parameters of the cvxPartSmdLouver().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a louver feature to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdLouver\nLouverData [in] louver data\nidSmdLouver [out] index of louver (NULL to ignore)\n\nAdds the specified louver feature to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idSmdLouver\" if the output is not required.\nnote:\nInterface cvxPartSmdLouverInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for adding a louver feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdLouver\nLouverData [in] louver data\nidSmdLouver [out] index of louver (NULL to ignore)\n\nAdds the specified louver feature to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idSmdLouver\" if the output is not required.\nnote:\nInterface cvxPartSmdLouverInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the corresponding history operation after adding a louver feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdLouver\nLouverData [in] louver data\nidSmdLouver [out] index of louver (NULL to ignore)\n\nAdds the specified louver feature to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idSmdLouver\" if the output is not required.\nnote:\nInterface cvxPartSmdLouverInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSmdPunch?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdPunchInit\ndata [out] template command Smd Punch data\n\nInitialize the parameters of the cvxPartSmdPunch().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the template command for Smd Punch data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdPunchInit\ndata [out] template command Smd Punch data\n\nInitialize the parameters of the cvxPartSmdPunch().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing the parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdPunchInit\ndata [out] template command Smd Punch data\n\nInitialize the parameters of the cvxPartSmdPunch().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to perform punching forming on sheet metal?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdPunch\npData [in] Punch data\nidShape [out] id's of resulting shape (NULL to ignore)\n\nUse this function to act on the sheet metal, which can be completed punching forming. Pass in NULL for \"idShape\" if the output is not require, or it will return the new shape.\nnote:\nInterface cvxPartSmdPunchInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to act on sheet metal for punching forming?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdPunch\npData [in] Punch data\nidShape [out] id's of resulting shape (NULL to ignore)\n\nUse this function to act on the sheet metal, which can be completed punching forming. Pass in NULL for \"idShape\" if the output is not require, or it will return the new shape.\nnote:\nInterface cvxPartSmdPunchInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the resulting shape after punching forming?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdPunch\npData [in] Punch data\nidShape [out] id's of resulting shape (NULL to ignore)\n\nUse this function to act on the sheet metal, which can be completed punching forming. Pass in NULL for \"idShape\" if the output is not require, or it will return the new shape.\nnote:\nInterface cvxPartSmdPunchInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add specified fold to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFold\nFold [in] Smdfold data\nidSmdFold [out] Smdfold id\n\nAdds the specified fold(s) to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idSmdFold\" if the output is not required."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to output the id of corresponding history operation for the added fold?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFold\nFold [in] Smdfold data\nidSmdFold [out] Smdfold id\n\nAdds the specified fold(s) to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idSmdFold\" if the output is not required."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What parameter should be passed to add a fold to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFold\nFold [in] Smdfold data\nidSmdFold [out] Smdfold id\n\nAdds the specified fold(s) to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idSmdFold\" if the output is not required."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add specified unfold to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdUnfold\nUnfold [in] SmdUnfold data\nidSmdUnfold [out] SmdUnfold id\n\nAdds the specified unfold(s) to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idSmdUnfold\" if the output is not required."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to output the id of the corresponding history operation for the added unfold?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdUnfold\nUnfold [in] SmdUnfold data\nidSmdUnfold [out] SmdUnfold id\n\nAdds the specified unfold(s) to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idSmdUnfold\" if the output is not required."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the parameter to pass for adding unfold to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdUnfold\nUnfold [in] SmdUnfold data\nidSmdUnfold [out] SmdUnfold id\n\nAdds the specified unfold(s) to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idSmdUnfold\" if the output is not required."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlattenInit\ndata [out] smd flatten data\n\nInitialize the parameters of the cvxPartSmdFlatten().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlattenInit\ndata [out] smd flatten data\n\nInitialize the parameters of the cvxPartSmdFlatten().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlattenInit\ndata [out] smd flatten data\n\nInitialize the parameters of the cvxPartSmdFlatten().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to generate flat entity and flat pattern using smd flatten data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlatten\ndata [in] smd flatten data\nidFtr [out] feature id(NULL to ignore)\n\nUse this command to generate flat entity and flat pattern. User can create multiple flatten commands in one file, which generate two sub-nodes of flat entity and flat pattern. Flat pattern applies to drawing sheet.\nIf there had crated flat patten in sheet metal module, when making drawing sheet, user can project flat pattern by \"Standard\".\nnote:\nInterface cvxPartSmdExtendFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create multiple flatten commands in one file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlatten\ndata [in] smd flatten data\nidFtr [out] feature id(NULL to ignore)\n\nUse this command to generate flat entity and flat pattern. User can create multiple flatten commands in one file, which generate two sub-nodes of flat entity and flat pattern. Flat pattern applies to drawing sheet.\nIf there had crated flat patten in sheet metal module, when making drawing sheet, user can project flat pattern by \"Standard\".\nnote:\nInterface cvxPartSmdExtendFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to apply flat pattern to a drawing sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlatten\ndata [in] smd flatten data\nidFtr [out] feature id(NULL to ignore)\n\nUse this command to generate flat entity and flat pattern. User can create multiple flatten commands in one file, which generate two sub-nodes of flat entity and flat pattern. Flat pattern applies to drawing sheet.\nIf there had crated flat patten in sheet metal module, when making drawing sheet, user can project flat pattern by \"Standard\".\nnote:\nInterface cvxPartSmdExtendFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSmdLnUnfold()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdLnUnfoldInit\ndata [out] smd linear unfold data\n\nInitialize the parameters of the cvxPartSmdLnUnfold().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing the parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdLnUnfoldInit\ndata [out] smd linear unfold data\n\nInitialize the parameters of the cvxPartSmdLnUnfold().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the smd linear unfold data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdLnUnfoldInit\ndata [out] smd linear unfold data\n\nInitialize the parameters of the cvxPartSmdLnUnfold().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to unfold or change the bend angle using cvxPartSmdLnUnfold?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdLnUnfold\ndata [in] smd linear unfold data\nidFtr [out] feature id(NULL to ignore)\n\nUse this command to unfold or change the bend angle. The bend is limited to cylindrical face or modified cylindrical face.\nnote:\nInterface cvxPartSmdLnUnfoldInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to limit the bend to a cylindrical face or modified cylindrical face using cvxPartSmdLnUnfold?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdLnUnfold\ndata [in] smd linear unfold data\nidFtr [out] feature id(NULL to ignore)\n\nUse this command to unfold or change the bend angle. The bend is limited to cylindrical face or modified cylindrical face.\nnote:\nInterface cvxPartSmdLnUnfoldInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can cvxPartSmdLnUnfold be used to get the feature id?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdLnUnfold\ndata [in] smd linear unfold data\nidFtr [out] feature id(NULL to ignore)\n\nUse this command to unfold or change the bend angle. The bend is limited to cylindrical face or modified cylindrical face.\nnote:\nInterface cvxPartSmdLnUnfoldInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSmdChangeBend()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdChangeBendInit\ntype [in] change bend type\ndata [out] smd change bend data\n\nInitialize the parameters of the cvxPartSmdChangeBend().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to change bend type?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdChangeBendInit\ntype [in] change bend type\ndata [out] smd change bend data\n\nInitialize the parameters of the cvxPartSmdChangeBend().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to empty everything before calling the function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdChangeBendInit\ntype [in] change bend type\ndata [out] smd change bend data\n\nInitialize the parameters of the cvxPartSmdChangeBend().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the bending radius of a bend?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdChangeBend\ndata [in] smd change bend data\nidFtr [out] feature id(NULL to ignore)\n\nUse this function to modify the bending radius of the bend.\nnote:\nInterface cvxPartSmdChangeBendInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the bending radius of a bend?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdChangeBend\ndata [in] smd change bend data\nidFtr [out] feature id(NULL to ignore)\n\nUse this function to modify the bending radius of the bend.\nnote:\nInterface cvxPartSmdChangeBendInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize variables for modifying the bending radius of a bend?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdChangeBend\ndata [in] smd change bend data\nidFtr [out] feature id(NULL to ignore)\n\nUse this function to modify the bending radius of the bend.\nnote:\nInterface cvxPartSmdChangeBendInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSmdRip()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdRipInit\ndata [out] smd rip data\n\nInitialize the parameters of the cvxPartSmdRip().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing cvxPartSmdRip()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdRipInit\ndata [out] smd rip data\n\nInitialize the parameters of the cvxPartSmdRip().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the smd rip data after initialization?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdRipInit\ndata [out] smd rip data\n\nInitialize the parameters of the cvxPartSmdRip().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a rip in a sheet metal part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdRip\ndata [in] smd rip data\nidFtr [out] feature id(NULL to ignore)\n\nCreate a rip in a sheet metal part.\nnote:\nInterface cvxPartSmdRipInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for creating a rip in a sheet metal part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdRip\ndata [in] smd rip data\nidFtr [out] feature id(NULL to ignore)\n\nCreate a rip in a sheet metal part.\nnote:\nInterface cvxPartSmdRipInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the feature id after creating a rip in a sheet metal part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdRip\ndata [in] smd rip data\nidFtr [out] feature id(NULL to ignore)\n\nCreate a rip in a sheet metal part.\nnote:\nInterface cvxPartSmdRipInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdMarkBendInit\ndata [out] smd mark bend data\n\nInitialize the parameters of the cvxPartSmdMarkBend().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdMarkBendInit\ndata [out] smd mark bend data\n\nInitialize the parameters of the cvxPartSmdMarkBend().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdMarkBendInit\ndata [out] smd mark bend data\n\nInitialize the parameters of the cvxPartSmdMarkBend().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to mark bend faces in a sheet metal part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdMarkBend\ndata [in] smd mark bend data\nidFtr [out] feature id(NULL to ignore)\n\nA key characteristic of sheet metal parts are its bend faces. The Sheet Metal Tooltab contains commands to fold and unfold a sheet metal part. In order to perform these commands any bend radii (other than those created during the Create Full and Partial Sheet Metal Flange commands) need to be marked.\nnote:\nInterface cvxPartSmdMarkBendInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for marking bend faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdMarkBend\ndata [in] smd mark bend data\nidFtr [out] feature id(NULL to ignore)\n\nA key characteristic of sheet metal parts are its bend faces. The Sheet Metal Tooltab contains commands to fold and unfold a sheet metal part. In order to perform these commands any bend radii (other than those created during the Create Full and Partial Sheet Metal Flange commands) need to be marked.\nnote:\nInterface cvxPartSmdMarkBendInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the feature id after marking bend faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdMarkBend\ndata [in] smd mark bend data\nidFtr [out] feature id(NULL to ignore)\n\nA key characteristic of sheet metal parts are its bend faces. The Sheet Metal Tooltab contains commands to fold and unfold a sheet metal part. In order to perform these commands any bend radii (other than those created during the Create Full and Partial Sheet Metal Flange commands) need to be marked.\nnote:\nInterface cvxPartSmdMarkBendInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the structure for sketch nesting profile data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkNestingProfileDataInit\ndata [out] profile data of sketch nesting.\n\nInitialize the structure svxSkNestingProfileData.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything inside the profile data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkNestingProfileDataInit\ndata [out] profile data of sketch nesting.\n\nInitialize the structure svxSkNestingProfileData.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize the sketch nesting profile data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkNestingProfileDataInit\ndata [out] profile data of sketch nesting.\n\nInitialize the structure svxSkNestingProfileData.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the structure for sketch nesting blank data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkNestingBlankDataInit\ndata [out] blank data of sketch nesting.\n\nInitialize the structure svxSkNestingBlankData.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything and initialize the sketch nesting blank data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkNestingBlankDataInit\ndata [out] blank data of sketch nesting.\n\nInitialize the structure svxSkNestingBlankData.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the blank data for sketch nesting?"
            },
            {
                "role": "assistant",
                "content": "cvxSkNestingBlankDataInit\ndata [out] blank data of sketch nesting.\n\nInitialize the structure svxSkNestingBlankData.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxSkNesting?"
            },
            {
                "role": "assistant",
                "content": "cvxSkNestingInit\ndata [out] nesting data of sketch.\n\nInitialize the parameters of the cvxSkNesting().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to initialize nesting data of sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkNestingInit\ndata [out] nesting data of sketch.\n\nInitialize the parameters of the cvxSkNesting().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to empty everything before initializing nesting data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkNestingInit\ndata [out] nesting data of sketch.\n\nInitialize the parameters of the cvxSkNesting().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate nesting using sketch data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkNesting\ndata [in] nesting data of sketch\n\nNesting can directly pick any loop enclosed geometries as Nesting Profiles and Blank to calculate nesting, the result include a sketch block and a report file in HTML format.\nUsers can use cvxSkNestingProfileDataInit() and cvxSkNestingBlankDataInit() to initialize the structures svxSkNestingProfileData and svxSkNestingBlankData respectively.\nThen use cvxSkNestingInit() to initialize the structure svxSkNestingData.This interface will not allocate space for the points in the structure, so the users need toassign values to the sub structure pointers in the structure.\nnote:\nNesting command needs a specified dongle key inserted into user's PC to activate before starting."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize nesting profile data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkNesting\ndata [in] nesting data of sketch\n\nNesting can directly pick any loop enclosed geometries as Nesting Profiles and Blank to calculate nesting, the result include a sketch block and a report file in HTML format.\nUsers can use cvxSkNestingProfileDataInit() and cvxSkNestingBlankDataInit() to initialize the structures svxSkNestingProfileData and svxSkNestingBlankData respectively.\nThen use cvxSkNestingInit() to initialize the structure svxSkNestingData.This interface will not allocate space for the points in the structure, so the users need toassign values to the sub structure pointers in the structure.\nnote:\nNesting command needs a specified dongle key inserted into user's PC to activate before starting."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize nesting data for sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkNesting\ndata [in] nesting data of sketch\n\nNesting can directly pick any loop enclosed geometries as Nesting Profiles and Blank to calculate nesting, the result include a sketch block and a report file in HTML format.\nUsers can use cvxSkNestingProfileDataInit() and cvxSkNestingBlankDataInit() to initialize the structures svxSkNestingProfileData and svxSkNestingBlankData respectively.\nThen use cvxSkNestingInit() to initialize the structure svxSkNestingData.This interface will not allocate space for the points in the structure, so the users need toassign values to the sub structure pointers in the structure.\nnote:\nNesting command needs a specified dongle key inserted into user's PC to activate before starting."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to assign values to sub structure pointers for nesting?"
            },
            {
                "role": "assistant",
                "content": "cvxSkNesting\ndata [in] nesting data of sketch\n\nNesting can directly pick any loop enclosed geometries as Nesting Profiles and Blank to calculate nesting, the result include a sketch block and a report file in HTML format.\nUsers can use cvxSkNestingProfileDataInit() and cvxSkNestingBlankDataInit() to initialize the structures svxSkNestingProfileData and svxSkNestingBlankData respectively.\nThen use cvxSkNestingInit() to initialize the structure svxSkNestingData.This interface will not allocate space for the points in the structure, so the users need toassign values to the sub structure pointers in the structure.\nnote:\nNesting command needs a specified dongle key inserted into user's PC to activate before starting."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the requirement to activate nesting command?"
            },
            {
                "role": "assistant",
                "content": "cvxSkNesting\ndata [in] nesting data of sketch\n\nNesting can directly pick any loop enclosed geometries as Nesting Profiles and Blank to calculate nesting, the result include a sketch block and a report file in HTML format.\nUsers can use cvxSkNestingProfileDataInit() and cvxSkNestingBlankDataInit() to initialize the structures svxSkNestingProfileData and svxSkNestingBlankData respectively.\nThen use cvxSkNestingInit() to initialize the structure svxSkNestingData.This interface will not allocate space for the points in the structure, so the users need toassign values to the sub structure pointers in the structure.\nnote:\nNesting command needs a specified dongle key inserted into user's PC to activate before starting."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 2D line to the active sketch or sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxSkLine2pt\nStart [in] start point\nEnd [in] end point\nidEnt [out] id of new 2D line entity(NULL to ignore)\n\nAdds a 2D line to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new line entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a line with specific start and end points?"
            },
            {
                "role": "assistant",
                "content": "cvxSkLine2pt\nStart [in] start point\nEnd [in] end point\nidEnt [out] id of new 2D line entity(NULL to ignore)\n\nAdds a 2D line to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new line entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the id of the newly added 2D line entity?"
            },
            {
                "role": "assistant",
                "content": "cvxSkLine2pt\nStart [in] start point\nEnd [in] end point\nidEnt [out] id of new 2D line entity(NULL to ignore)\n\nAdds a 2D line to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new line entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a polyline with a list of 2D points?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAddPolyline\ncntPnt [in] count of 2D points\npnts [in] list of 2D points\naddCns [in] 1-add constraint, else 0\n\nCreate the polyline with the input points."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add constraints while creating a polyline?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAddPolyline\ncntPnt [in] count of 2D points\npnts [in] list of 2D points\naddCns [in] 1-add constraint, else 0\n\nCreate the polyline with the input points."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the parameter to specify the count of 2D points when creating a polyline?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAddPolyline\ncntPnt [in] count of 2D points\npnts [in] list of 2D points\naddCns [in] 1-add constraint, else 0\n\nCreate the polyline with the input points."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 2D Axis to the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAxis\nAxis [in] Axis data\nidAxis [out] id of new 2D Axis entity (NULL to ignore)\n\nAdds a 2D Axis to the active sketch. If \"idAxis\" is not NULL, the id of the new entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to create a 2D Axis in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAxis\nAxis [in] Axis data\nidAxis [out] id of new 2D Axis entity (NULL to ignore)\n\nAdds a 2D Axis to the active sketch. If \"idAxis\" is not NULL, the id of the new entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to output the id of the new 2D Axis entity?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAxis\nAxis [in] Axis data\nidAxis [out] id of new 2D Axis entity (NULL to ignore)\n\nAdds a 2D Axis to the active sketch. If \"idAxis\" is not NULL, the id of the new entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 2D circle to the active sketch or sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCir3pt\nP1 [in] first point on circle\nP2 [in] second point on circle\nP3 [in] third point on circle\nidEnt [out] id of new 2D circle entity(NULL to ignore)\n\nAdds a 2D circle to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new circle entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a circle using three points?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCir3pt\nP1 [in] first point on circle\nP2 [in] second point on circle\nP3 [in] third point on circle\nidEnt [out] id of new 2D circle entity(NULL to ignore)\n\nAdds a 2D circle to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new circle entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new circle entity after adding it to the sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCir3pt\nP1 [in] first point on circle\nP2 [in] second point on circle\nP3 [in] third point on circle\nidEnt [out] id of new 2D circle entity(NULL to ignore)\n\nAdds a 2D circle to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new circle entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 2D circle to the active sketch or sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCirRad\nCenter [in] center point (mm)\nRadius [in] radius (mm)\nidEnt [out] id of new 2D circle entity(NULL to ignore)\n\nAdds a 2D circle to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a circle with a specific radius?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCirRad\nCenter [in] center point (mm)\nRadius [in] radius (mm)\nidEnt [out] id of new 2D circle entity(NULL to ignore)\n\nAdds a 2D circle to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the newly added 2D circle entity?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCirRad\nCenter [in] center point (mm)\nRadius [in] radius (mm)\nidEnt [out] id of new 2D circle entity(NULL to ignore)\n\nAdds a 2D circle to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 2D arc to the active sketch or sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxSkArc3pt\nStart [in] start point\nEnd [in] end point\nMid [in] mid (i.e. through) point\nidEnt [out] id of new 2D arc entity(NULL to ignore)\n\nAdds a 2D arc to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new arc entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a 2D arc using start, end, and mid points?"
            },
            {
                "role": "assistant",
                "content": "cvxSkArc3pt\nStart [in] start point\nEnd [in] end point\nMid [in] mid (i.e. through) point\nidEnt [out] id of new 2D arc entity(NULL to ignore)\n\nAdds a 2D arc to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new arc entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the id of the new 2D arc entity after adding it to the sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkArc3pt\nStart [in] start point\nEnd [in] end point\nMid [in] mid (i.e. through) point\nidEnt [out] id of new 2D arc entity(NULL to ignore)\n\nAdds a 2D arc to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new arc entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 2D circle to the active sketch or sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxSkArcRad\nCenter [in] center point (mm)\nRadius [in] radius (mm)\nStart [in] start angle (deg - CCW from X axis)\nEnd [in] end angle (deg - CCW from X axis)\nidEnt [out] id of new 2D circle entity(NULL to ignore)\n\nAdds a 2D circle to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the center point and radius of the circle?"
            },
            {
                "role": "assistant",
                "content": "cvxSkArcRad\nCenter [in] center point (mm)\nRadius [in] radius (mm)\nStart [in] start angle (deg - CCW from X axis)\nEnd [in] end angle (deg - CCW from X axis)\nidEnt [out] id of new 2D circle entity(NULL to ignore)\n\nAdds a 2D circle to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to define the start and end angles of the circle?"
            },
            {
                "role": "assistant",
                "content": "cvxSkArcRad\nCenter [in] center point (mm)\nRadius [in] radius (mm)\nStart [in] start angle (deg - CCW from X axis)\nEnd [in] end angle (deg - CCW from X axis)\nidEnt [out] id of new 2D circle entity(NULL to ignore)\n\nAdds a 2D circle to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the id of the newly added circle entity?"
            },
            {
                "role": "assistant",
                "content": "cvxSkArcRad\nCenter [in] center point (mm)\nRadius [in] radius (mm)\nStart [in] start angle (deg - CCW from X axis)\nEnd [in] end angle (deg - CCW from X axis)\nidEnt [out] id of new 2D circle entity(NULL to ignore)\n\nAdds a 2D circle to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxSkEllipse?"
            },
            {
                "role": "assistant",
                "content": "cvxSkEllipseInit\ndata [out] ellipse data\n\nInitialize the parameters of the cvxSkEllipse().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing cvxSkEllipse?"
            },
            {
                "role": "assistant",
                "content": "cvxSkEllipseInit\ndata [out] ellipse data\n\nInitialize the parameters of the cvxSkEllipse().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize ellipse data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkEllipseInit\ndata [out] ellipse data\n\nInitialize the parameters of the cvxSkEllipse().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 2D ellipse to the active sketch or sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxSkEllipse\nellipse [in] ellipse data\nidEnt [out] id of new 2D ellipse entity (NULL to ignore)\n\nAdds a 2D ellipse to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new entity is output.\nnote:\nInterface cvxSkEllipseInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for adding a 2D ellipse?"
            },
            {
                "role": "assistant",
                "content": "cvxSkEllipse\nellipse [in] ellipse data\nidEnt [out] id of new 2D ellipse entity (NULL to ignore)\n\nAdds a 2D ellipse to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new entity is output.\nnote:\nInterface cvxSkEllipseInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new 2D ellipse entity?"
            },
            {
                "role": "assistant",
                "content": "cvxSkEllipse\nellipse [in] ellipse data\nidEnt [out] id of new 2D ellipse entity (NULL to ignore)\n\nAdds a 2D ellipse to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new entity is output.\nnote:\nInterface cvxSkEllipseInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 2D point entity to the active sketch or drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxSkPnt\nPoint [in] point coordinate\nidEnt [out] id of new 2D point entity (NULL to ignore)\n\nAdds a 2D point entity to the active sketch or drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a 2D point entity in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkPnt\nPoint [in] point coordinate\nidEnt [out] id of new 2D point entity (NULL to ignore)\n\nAdds a 2D point entity to the active sketch or drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new 2D point entity in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkPnt\nPoint [in] point coordinate\nidEnt [out] id of new 2D point entity (NULL to ignore)\n\nAdds a 2D point entity to the active sketch or drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create points along a curve with equal spacing?"
            },
            {
                "role": "assistant",
                "content": "cvxSkPntsOnCrv\nidCrv [in] id of curve entity in active object\nPnt [in] reference point that specifies which end of the curve to start from; \n\n this input is only necessary if \"Dist\" is defined (i.e. non-zero); \n\n if this argument is NULL, the geometric start point of the curve will be used if needed.\nNum [in] the number of points to create along the curve; if \"Dist\" is zero, then the specified number of points will be created along the curve with equal spacing between them; \n\n if \"Dist\" is \"non-zero\", then \"Num\" points will be created along the curve with \"Dist\" as the spacing between each point; in this case, \"Pnt\" should be input and an extension option should be defined in case the specified number of points at the specified distance exceeds the length of the curve; \n\n if \"Num\" is input as zero, then \"Dist\" must be specified; in this case, points are created the specified distance apart, beginning at the end of the curve closest to \"Pnt\" and ending at/before the other end of the curve.\nDist [in] the distance (mm) between points (see description of \"Num\" argument)\nOpt [in] extension option is \"Dist\" is non-zero\nCount [out] if this argument is not NULL, output the number of points created\nidEnts [out] if \"Count\" is not NULL, and this argument is not NULL, a list of the database id's of the point entities created by this function is output. \n\n Memory for the list is allocated by this function. The calling procedure is responsible to free the memory.\n\nCreates point entities spaced on and along a curve based on the specified input parameters."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create points along a curve with specified distance between them?"
            },
            {
                "role": "assistant",
                "content": "cvxSkPntsOnCrv\nidCrv [in] id of curve entity in active object\nPnt [in] reference point that specifies which end of the curve to start from; \n\n this input is only necessary if \"Dist\" is defined (i.e. non-zero); \n\n if this argument is NULL, the geometric start point of the curve will be used if needed.\nNum [in] the number of points to create along the curve; if \"Dist\" is zero, then the specified number of points will be created along the curve with equal spacing between them; \n\n if \"Dist\" is \"non-zero\", then \"Num\" points will be created along the curve with \"Dist\" as the spacing between each point; in this case, \"Pnt\" should be input and an extension option should be defined in case the specified number of points at the specified distance exceeds the length of the curve; \n\n if \"Num\" is input as zero, then \"Dist\" must be specified; in this case, points are created the specified distance apart, beginning at the end of the curve closest to \"Pnt\" and ending at/before the other end of the curve.\nDist [in] the distance (mm) between points (see description of \"Num\" argument)\nOpt [in] extension option is \"Dist\" is non-zero\nCount [out] if this argument is not NULL, output the number of points created\nidEnts [out] if \"Count\" is not NULL, and this argument is not NULL, a list of the database id's of the point entities created by this function is output. \n\n Memory for the list is allocated by this function. The calling procedure is responsible to free the memory.\n\nCreates point entities spaced on and along a curve based on the specified input parameters."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there an option to specify the extension when creating points along a curve with specified distance?"
            },
            {
                "role": "assistant",
                "content": "cvxSkPntsOnCrv\nidCrv [in] id of curve entity in active object\nPnt [in] reference point that specifies which end of the curve to start from; \n\n this input is only necessary if \"Dist\" is defined (i.e. non-zero); \n\n if this argument is NULL, the geometric start point of the curve will be used if needed.\nNum [in] the number of points to create along the curve; if \"Dist\" is zero, then the specified number of points will be created along the curve with equal spacing between them; \n\n if \"Dist\" is \"non-zero\", then \"Num\" points will be created along the curve with \"Dist\" as the spacing between each point; in this case, \"Pnt\" should be input and an extension option should be defined in case the specified number of points at the specified distance exceeds the length of the curve; \n\n if \"Num\" is input as zero, then \"Dist\" must be specified; in this case, points are created the specified distance apart, beginning at the end of the curve closest to \"Pnt\" and ending at/before the other end of the curve.\nDist [in] the distance (mm) between points (see description of \"Num\" argument)\nOpt [in] extension option is \"Dist\" is non-zero\nCount [out] if this argument is not NULL, output the number of points created\nidEnts [out] if \"Count\" is not NULL, and this argument is not NULL, a list of the database id's of the point entities created by this function is output. \n\n Memory for the list is allocated by this function. The calling procedure is responsible to free the memory.\n\nCreates point entities spaced on and along a curve based on the specified input parameters."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxSkReadyText?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReadyTextInit\nmethod [in] ready text method\ndata [out] data of ready sketch text\n\nInitialize the parameters of the cvxSkReadyText().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to initialize ready sketch text?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReadyTextInit\nmethod [in] ready text method\ndata [out] data of ready sketch text\n\nInitialize the parameters of the cvxSkReadyText().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the data of ready sketch text?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReadyTextInit\nmethod [in] ready text method\ndata [out] data of ready sketch text\n\nInitialize the parameters of the cvxSkReadyText().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a ready sketch text to the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReadyText\nRdText [in] data of ready sketch text\nidRdText [out] index of the ready sketch text (NULL to ignore)\n\nAdds a ready sketch text to the active sketch.\nPass in NULL for \"idRdText\" if the output is not required.\nnote:\nInterface cvxSkReadyTextInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for the cvxSkReadyText function?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReadyText\nRdText [in] data of ready sketch text\nidRdText [out] index of the ready sketch text (NULL to ignore)\n\nAdds a ready sketch text to the active sketch.\nPass in NULL for \"idRdText\" if the output is not required.\nnote:\nInterface cvxSkReadyTextInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to get the index of the ready sketch text?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReadyText\nRdText [in] data of ready sketch text\nidRdText [out] index of the ready sketch text (NULL to ignore)\n\nAdds a ready sketch text to the active sketch.\nPass in NULL for \"idRdText\" if the output is not required.\nnote:\nInterface cvxSkReadyTextInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a new text with given data?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTextNew\nString [in] string of text\nType [in] type of input points\nPnt [in] position of text\nidEnt [out] text id (NULL to ignore)\n\nCreates a new text with the given data. The target bin is sheet or sketch. \n\n The Type include: \n\n 1-At point text, one point, \n\n 2-Aligned text, two points, \n\n 3-Box text, two points"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the different types of input points for creating text?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTextNew\nString [in] string of text\nType [in] type of input points\nPnt [in] position of text\nidEnt [out] text id (NULL to ignore)\n\nCreates a new text with the given data. The target bin is sheet or sketch. \n\n The Type include: \n\n 1-At point text, one point, \n\n 2-Aligned text, two points, \n\n 3-Box text, two points"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the position of the text?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTextNew\nString [in] string of text\nType [in] type of input points\nPnt [in] position of text\nidEnt [out] text id (NULL to ignore)\n\nCreates a new text with the given data. The target bin is sheet or sketch. \n\n The Type include: \n\n 1-At point text, one point, \n\n 2-Aligned text, two points, \n\n 3-Box text, two points"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to get the text id after creating a new text?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTextNew\nString [in] string of text\nType [in] type of input points\nPnt [in] position of text\nidEnt [out] text id (NULL to ignore)\n\nCreates a new text with the given data. The target bin is sheet or sketch. \n\n The Type include: \n\n 1-At point text, one point, \n\n 2-Aligned text, two points, \n\n 3-Box text, two points"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxSkNgons structure?"
            },
            {
                "role": "assistant",
                "content": "cvxSkNgonsInit\ntype [in] sketch polygon type\ndata [out] sketch polygon data\n\nInitialize the svxSkNgons structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize sketch polygon data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkNgonsInit\ntype [in] sketch polygon type\ndata [out] sketch polygon data\n\nInitialize the svxSkNgons structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize sketch polygon type?"
            },
            {
                "role": "assistant",
                "content": "cvxSkNgonsInit\ntype [in] sketch polygon type\ndata [out] sketch polygon data\n\nInitialize the svxSkNgons structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a polygon using cvxSkNgons function?"
            },
            {
                "role": "assistant",
                "content": "cvxSkNgons\nSpl [in] sketch polygon input data\ncnt [out] count of idEnts(can be NULL)\nidEnts [out] list of new entity id.(can be NULL)\n\nUse this function to create a polygon by the input svxSkNgons data.\nnote:\nInterface cvxSkNgonsInit() can initialize variables data of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables data for cvxSkNgons function?"
            },
            {
                "role": "assistant",
                "content": "cvxSkNgons\nSpl [in] sketch polygon input data\ncnt [out] count of idEnts(can be NULL)\nidEnts [out] list of new entity id.(can be NULL)\n\nUse this function to create a polygon by the input svxSkNgons data.\nnote:\nInterface cvxSkNgonsInit() can initialize variables data of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of entity ids after creating a polygon?"
            },
            {
                "role": "assistant",
                "content": "cvxSkNgons\nSpl [in] sketch polygon input data\ncnt [out] count of idEnts(can be NULL)\nidEnts [out] list of new entity id.(can be NULL)\n\nUse this function to create a polygon by the input svxSkNgons data.\nnote:\nInterface cvxSkNgonsInit() can initialize variables data of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxSkCrvInt()?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCrvIntInit\ndata [out] 2D interpolated curve data\n\nInitialize the parameters of the cvxSkCrvInt().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of cvxMemZero() inside the interface?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCrvIntInit\ndata [out] 2D interpolated curve data\n\nInitialize the parameters of the cvxSkCrvInt().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any specific way to assign a value to the variable 'data' before calling this function?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCrvIntInit\ndata [out] 2D interpolated curve data\n\nInitialize the parameters of the cvxSkCrvInt().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 2D interpolated curve through input points?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCrvInt\nCrv [in] input data interpolated curve\nidEnt [out] id of new 2D interpolated curve entity(NULL to ignore)\n\nAdds a 2D curve interpolated through through the input points with the specified degree to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new curve entity is output.\nThe StartScale and EndScale of svxCrvIntData can be initialized through interface cvxSkCrvIntScaleInit() by the interpolated points, or use the default value by cvxSkCrvIntInit(), or set them by yourselves.\nnote:\nStructure svxCrvIntData can be initialized through interface svxCrvIntDataInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize the StartScale and EndScale of svxCrvIntData for the interpolated points?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCrvInt\nCrv [in] input data interpolated curve\nidEnt [out] id of new 2D interpolated curve entity(NULL to ignore)\n\nAdds a 2D curve interpolated through through the input points with the specified degree to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new curve entity is output.\nThe StartScale and EndScale of svxCrvIntData can be initialized through interface cvxSkCrvIntScaleInit() by the interpolated points, or use the default value by cvxSkCrvIntInit(), or set them by yourselves.\nnote:\nStructure svxCrvIntData can be initialized through interface svxCrvIntDataInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I set the StartScale and EndScale of svxCrvIntData by myself?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCrvInt\nCrv [in] input data interpolated curve\nidEnt [out] id of new 2D interpolated curve entity(NULL to ignore)\n\nAdds a 2D curve interpolated through through the input points with the specified degree to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new curve entity is output.\nThe StartScale and EndScale of svxCrvIntData can be initialized through interface cvxSkCrvIntScaleInit() by the interpolated points, or use the default value by cvxSkCrvIntInit(), or set them by yourselves.\nnote:\nStructure svxCrvIntData can be initialized through interface svxCrvIntDataInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new 2D interpolated curve entity?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCrvInt\nCrv [in] input data interpolated curve\nidEnt [out] id of new 2D interpolated curve entity(NULL to ignore)\n\nAdds a 2D curve interpolated through through the input points with the specified degree to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new curve entity is output.\nThe StartScale and EndScale of svxCrvIntData can be initialized through interface cvxSkCrvIntScaleInit() by the interpolated points, or use the default value by cvxSkCrvIntInit(), or set them by yourselves.\nnote:\nStructure svxCrvIntData can be initialized through interface svxCrvIntDataInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxSkSpline?"
            },
            {
                "role": "assistant",
                "content": "cvxSkSplineInit\ndata [out] Spline data\ncount [in] count of points\n\nInitialize the parameters of the cvxSkSpline(). If count > 0, this function allocates memory to data->Pnts based on the value of count and initializes the data->Pnts structure. Otherwise data->Pnts will be initialized to NULL.\ncvxSplinePntInit() can initialize struct svxSplinePnt (data->Pnts).\nIf the user needs to clear \"data\" and count > 0, the cvxMemFree() interface needs to be called to free \"data->Pnts\" memory.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to allocate memory to data->Pnts based on the value of count?"
            },
            {
                "role": "assistant",
                "content": "cvxSkSplineInit\ndata [out] Spline data\ncount [in] count of points\n\nInitialize the parameters of the cvxSkSpline(). If count > 0, this function allocates memory to data->Pnts based on the value of count and initializes the data->Pnts structure. Otherwise data->Pnts will be initialized to NULL.\ncvxSplinePntInit() can initialize struct svxSplinePnt (data->Pnts).\nIf the user needs to clear \"data\" and count > 0, the cvxMemFree() interface needs to be called to free \"data->Pnts\" memory.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize struct svxSplinePnt using cvxSplinePntInit?"
            },
            {
                "role": "assistant",
                "content": "cvxSkSplineInit\ndata [out] Spline data\ncount [in] count of points\n\nInitialize the parameters of the cvxSkSpline(). If count > 0, this function allocates memory to data->Pnts based on the value of count and initializes the data->Pnts structure. Otherwise data->Pnts will be initialized to NULL.\ncvxSplinePntInit() can initialize struct svxSplinePnt (data->Pnts).\nIf the user needs to clear \"data\" and count > 0, the cvxMemFree() interface needs to be called to free \"data->Pnts\" memory.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should the cvxMemFree() interface be called to free data->Pnts memory?"
            },
            {
                "role": "assistant",
                "content": "cvxSkSplineInit\ndata [out] Spline data\ncount [in] count of points\n\nInitialize the parameters of the cvxSkSpline(). If count > 0, this function allocates memory to data->Pnts based on the value of count and initializes the data->Pnts structure. Otherwise data->Pnts will be initialized to NULL.\ncvxSplinePntInit() can initialize struct svxSplinePnt (data->Pnts).\nIf the user needs to clear \"data\" and count > 0, the cvxMemFree() interface needs to be called to free \"data->Pnts\" memory.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if count is greater than 0 and data is assigned a value before calling this function?"
            },
            {
                "role": "assistant",
                "content": "cvxSkSplineInit\ndata [out] Spline data\ncount [in] count of points\n\nInitialize the parameters of the cvxSkSpline(). If count > 0, this function allocates memory to data->Pnts based on the value of count and initializes the data->Pnts structure. Otherwise data->Pnts will be initialized to NULL.\ncvxSplinePntInit() can initialize struct svxSplinePnt (data->Pnts).\nIf the user needs to clear \"data\" and count > 0, the cvxMemFree() interface needs to be called to free \"data->Pnts\" memory.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 2D spline curve to the active sketch or sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxSkSpline\nPntData [in] spline data\nidEnt [out] id of new 2D spline entity (NULL to ignore)\n\nAdds a 2D curve interpolated through through the input points/control points with the specified data to the active sketch or sheet.\nIf \"idEnt\" is not NULL, the id of the new curve entity is output.\nnote:\nStructure svxSplineData can be initialized through interface cvxSkSplineInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to interpolate a curve through input points/control points?"
            },
            {
                "role": "assistant",
                "content": "cvxSkSpline\nPntData [in] spline data\nidEnt [out] id of new 2D spline entity (NULL to ignore)\n\nAdds a 2D curve interpolated through through the input points/control points with the specified data to the active sketch or sheet.\nIf \"idEnt\" is not NULL, the id of the new curve entity is output.\nnote:\nStructure svxSplineData can be initialized through interface cvxSkSplineInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxSplineData structure through the interface cvxSkSplineInit()?"
            },
            {
                "role": "assistant",
                "content": "cvxSkSpline\nPntData [in] spline data\nidEnt [out] id of new 2D spline entity (NULL to ignore)\n\nAdds a 2D curve interpolated through through the input points/control points with the specified data to the active sketch or sheet.\nIf \"idEnt\" is not NULL, the id of the new curve entity is output.\nnote:\nStructure svxSplineData can be initialized through interface cvxSkSplineInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 3 Point Conic to the active sketch or Drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxSkConic3pt\nData [in] 3 Point Conic data\nidEnt [out] id of new curve\n\nAdd a 3 Point Conic to the active sketch or Drawing.\nIf \"idEnt\" is not NULL, the id of the new curve entity is output.\nnote:\nStructure svxConic3ptData can be initialized through interface cvxSkConic3ptInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize the svxConic3ptData through interface cvxSkConic3ptInit()?"
            },
            {
                "role": "assistant",
                "content": "cvxSkConic3pt\nData [in] 3 Point Conic data\nidEnt [out] id of new curve\n\nAdd a 3 Point Conic to the active sketch or Drawing.\nIf \"idEnt\" is not NULL, the id of the new curve entity is output.\nnote:\nStructure svxConic3ptData can be initialized through interface cvxSkConic3ptInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new curve entity after adding a 3 Point Conic?"
            },
            {
                "role": "assistant",
                "content": "cvxSkConic3pt\nData [in] 3 Point Conic data\nidEnt [out] id of new curve\n\nAdd a 3 Point Conic to the active sketch or Drawing.\nIf \"idEnt\" is not NULL, the id of the new curve entity is output.\nnote:\nStructure svxConic3ptData can be initialized through interface cvxSkConic3ptInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxSkConic3pt()?"
            },
            {
                "role": "assistant",
                "content": "cvxSkConic3ptInit\nData [out] 3 Point Conic data\n\nInitialize the parameters of the cvxSkConic3pt().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing the 3 Point Conic data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkConic3ptInit\nData [out] 3 Point Conic data\n\nInitialize the parameters of the cvxSkConic3pt().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to initialize the 3 Point Conic data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkConic3ptInit\nData [out] 3 Point Conic data\n\nInitialize the parameters of the cvxSkConic3pt().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the start tangent scale factor by interpolated points?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCrvIntScaleInit\nnPnt [in] number of the points\npPnts [in] points list\nstartScale [out] start tangent scale factor(NULL to ignore)\nendScale [out] end tangent scale factor(NULL to ignore)\n\nInitialize the parameters StartScale and EndScale of svxCrvIntData by the interpolated points."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the end tangent scale factor by interpolated points?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCrvIntScaleInit\nnPnt [in] number of the points\npPnts [in] points list\nstartScale [out] start tangent scale factor(NULL to ignore)\nendScale [out] end tangent scale factor(NULL to ignore)\n\nInitialize the parameters StartScale and EndScale of svxCrvIntData by the interpolated points."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize parameters for svxCrvIntData using interpolated points?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCrvIntScaleInit\nnPnt [in] number of the points\npPnts [in] points list\nstartScale [out] start tangent scale factor(NULL to ignore)\nendScale [out] end tangent scale factor(NULL to ignore)\n\nInitialize the parameters StartScale and EndScale of svxCrvIntData by the interpolated points."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of fillet in sheeting or sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkFilletInit\ndata [out] information of fillet in sheeting or sketch\n\nInitialize the parameters of the cvxSkFillet().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing fillet parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxSkFilletInit\ndata [out] information of fillet in sheeting or sketch\n\nInitialize the parameters of the cvxSkFillet().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to get information of fillet in sheeting or sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkFilletInit\ndata [out] information of fillet in sheeting or sketch\n\nInitialize the parameters of the cvxSkFillet().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a fillet in sheeting or sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkFillet\nfilletData [in] information of fillet in sheeting\nidFillet [out] id of fillet that created (input NULL to ignore)\n\nCreate a fillet in sheeting or sketch. filletInfo must be initialized before used.\nnote:\nInterface cvxSkFilletInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for creating a fillet?"
            },
            {
                "role": "assistant",
                "content": "cvxSkFillet\nfilletData [in] information of fillet in sheeting\nidFillet [out] id of fillet that created (input NULL to ignore)\n\nCreate a fillet in sheeting or sketch. filletInfo must be initialized before used.\nnote:\nInterface cvxSkFilletInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the created fillet?"
            },
            {
                "role": "assistant",
                "content": "cvxSkFillet\nfilletData [in] information of fillet in sheeting\nidFillet [out] id of fillet that created (input NULL to ignore)\n\nCreate a fillet in sheeting or sketch. filletInfo must be initialized before used.\nnote:\nInterface cvxSkFilletInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxSkChamfer?"
            },
            {
                "role": "assistant",
                "content": "cvxSkChamferInit\ndata [out] information of chamfer in sheeting or sketch\n\nInitialize the parameters of the cvxSkChamfer().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing cvxSkChamfer?"
            },
            {
                "role": "assistant",
                "content": "cvxSkChamferInit\ndata [out] information of chamfer in sheeting or sketch\n\nInitialize the parameters of the cvxSkChamfer().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get information of chamfer in sheeting or sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkChamferInit\ndata [out] information of chamfer in sheeting or sketch\n\nInitialize the parameters of the cvxSkChamfer().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a chamfer in sheeting or sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkChamfer\nchmData [in] information of chamfer in sheeting\nidChamfer [out] id of chamfer that created (input NULL to ignore)\n\nCreate a chamfer in sheeting or sketch. chmInfo must be initialized before used.\nnote:\nInterface cvxSkChamferInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for creating a chamfer?"
            },
            {
                "role": "assistant",
                "content": "cvxSkChamfer\nchmData [in] information of chamfer in sheeting\nidChamfer [out] id of chamfer that created (input NULL to ignore)\n\nCreate a chamfer in sheeting or sketch. chmInfo must be initialized before used.\nnote:\nInterface cvxSkChamferInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the ID of the created chamfer?"
            },
            {
                "role": "assistant",
                "content": "cvxSkChamfer\nchmData [in] information of chamfer in sheeting\nidChamfer [out] id of chamfer that created (input NULL to ignore)\n\nCreate a chamfer in sheeting or sketch. chmInfo must be initialized before used.\nnote:\nInterface cvxSkChamferInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use power trim to trim a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkPowerTrim\npwTrim [in] power trim input data\n\nUse this function to trim the sketch bewteen start point and end point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the input data required for power trim?"
            },
            {
                "role": "assistant",
                "content": "cvxSkPowerTrim\npwTrim [in] power trim input data\n\nUse this function to trim the sketch bewteen start point and end point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to trim a sketch between specific start and end points?"
            },
            {
                "role": "assistant",
                "content": "cvxSkPowerTrim\npwTrim [in] power trim input data\n\nUse this function to trim the sketch bewteen start point and end point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to trim a sketch using a specific point?"
            },
            {
                "role": "assistant",
                "content": "cvxSkOneTouchTrim\npnt [in] one touch trim input point\n\nUse this function to trim the sketch include the specific point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to trim a sketch with a specific point?"
            },
            {
                "role": "assistant",
                "content": "cvxSkOneTouchTrim\npnt [in] one touch trim input point\n\nUse this function to trim the sketch include the specific point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the one touch trim function to trim a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkOneTouchTrim\npnt [in] one touch trim input point\n\nUse this function to trim the sketch include the specific point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxSkTrimExt structure?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimExtInit\ntrimExt [out] trim/extend input data\n\nInitialize the svxSkTrimExt structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize trim/extend input data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimExtInit\ntrimExt [out] trim/extend input data\n\nInitialize the svxSkTrimExt structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to start using the trim/extend input data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimExtInit\ntrimExt [out] trim/extend input data\n\nInitialize the svxSkTrimExt structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to trim a sketch using input data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimExt\ntrimExt [in] trim/extend input data\n\nUse this function to trim or extend the sketch by the input svxTrimExt data.\nnote:\nInterface cvxSkTrimExtInit() can initialize variables Pattern of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to extend a sketch with input data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimExt\ntrimExt [in] trim/extend input data\n\nUse this function to trim or extend the sketch by the input svxTrimExt data.\nnote:\nInterface cvxSkTrimExtInit() can initialize variables Pattern of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can you provide an example of using cvxSkTrimExtInit() to initialize variables for cvxSkTrimExt function?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimExt\ntrimExt [in] trim/extend input data\n\nUse this function to trim or extend the sketch by the input svxTrimExt data.\nnote:\nInterface cvxSkTrimExtInit() can initialize variables Pattern of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxSkTrimSplit structure?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimSplitInit\ntrimSpl [out] trim/split input data\n\nInitialize the svxSkTrimSplit structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize trim/split input data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimSplitInit\ntrimSpl [out] trim/split input data\n\nInitialize the svxSkTrimSplit structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to start using the svxSkTrimSplit structure?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimSplitInit\ntrimSpl [out] trim/split input data\n\nInitialize the svxSkTrimSplit structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to trim a sketch using input data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimSplitCrv\ntrimSpl [in] trim/split input data\n\nUse this function to trim or split the sketch by the input svxSkTrimSplit data.\nnote:\nInterface cvxSkTrimSplitInit() can initialize variables Pattern of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to split a sketch using input data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimSplitCrv\ntrimSpl [in] trim/split input data\n\nUse this function to trim or split the sketch by the input svxSkTrimSplit data.\nnote:\nInterface cvxSkTrimSplitInit() can initialize variables Pattern of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for trimming or splitting a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimSplitCrv\ntrimSpl [in] trim/split input data\n\nUse this function to trim or split the sketch by the input svxSkTrimSplit data.\nnote:\nInterface cvxSkTrimSplitInit() can initialize variables Pattern of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to trim a sketch at a specific point?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimSplitPnt\ntrimSpl [in] trim/split at point input data\n\nUse this function to trim or split the sketch at point by the input svxSkTrimSplitPnt data."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to split a sketch at a given point?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimSplitPnt\ntrimSpl [in] trim/split at point input data\n\nUse this function to trim or split the sketch at point by the input svxSkTrimSplitPnt data."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the function to trim or split a sketch at a specified point?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimSplitPnt\ntrimSpl [in] trim/split at point input data\n\nUse this function to trim or split the sketch at point by the input svxSkTrimSplitPnt data."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxSkTrimSplitCor structure?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimSplitCorInit\ntrimSpl [out] trim/split input data\n\nInitialize the svxSkTrimSplitCor structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize trim/split input data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimSplitCorInit\ntrimSpl [out] trim/split input data\n\nInitialize the svxSkTrimSplitCor structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to start using the trim/split input data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimSplitCorInit\ntrimSpl [out] trim/split input data\n\nInitialize the svxSkTrimSplitCor structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to trim a sketch to a corner?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimSplitCor\ntrimSpl [in] trim/split input data\n\nUse this function to trim or split the sketch to corner by the input svxSkTrimSplitCor data.\nnote:\nInterface cvxSkTrimSplitCorInit() can initialize variables Pattern of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to split a sketch to a corner?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimSplitCor\ntrimSpl [in] trim/split input data\n\nUse this function to trim or split the sketch to corner by the input svxSkTrimSplitCor data.\nnote:\nInterface cvxSkTrimSplitCorInit() can initialize variables Pattern of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for trimming or splitting a sketch to a corner?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimSplitCor\ntrimSpl [in] trim/split input data\n\nUse this function to trim or split the sketch to corner by the input svxSkTrimSplitCor data.\nnote:\nInterface cvxSkTrimSplitCorInit() can initialize variables Pattern of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete bowties of specific curves?"
            },
            {
                "role": "assistant",
                "content": "cvxSkDelBowties\nnumCrv [in] the number of curves\nidCrv [in] the list id of curves\n\nUse this function to delete the bowties of specific curves."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to remove bowties from curves?"
            },
            {
                "role": "assistant",
                "content": "cvxSkDelBowties\nnumCrv [in] the number of curves\nidCrv [in] the list id of curves\n\nUse this function to delete the bowties of specific curves."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxSkDelBowties to delete bowties of curves?"
            },
            {
                "role": "assistant",
                "content": "cvxSkDelBowties\nnumCrv [in] the number of curves\nidCrv [in] the list id of curves\n\nUse this function to delete the bowties of specific curves."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxSkSplitIsect structure?"
            },
            {
                "role": "assistant",
                "content": "cvxSkSplitIsectInit\nSpl [out] split at intersections input data\n\nInitialize the svxSkSplitIsect structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize split at intersections input data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkSplitIsectInit\nSpl [out] split at intersections input data\n\nInitialize the svxSkSplitIsect structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to start working with svxSkSplitIsect structure?"
            },
            {
                "role": "assistant",
                "content": "cvxSkSplitIsectInit\nSpl [out] split at intersections input data\n\nInitialize the svxSkSplitIsect structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to split a sketch at intersections?"
            },
            {
                "role": "assistant",
                "content": "cvxSkSplitIsect\nSpl [in] split at intersections input data\n\nUse this function to split the sketch at intersections by the input svxSkSplitIsect data.\nnote:\nInterface cvxSkSplitIsectInit() can initialize variables Pattern of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to split a sketch at intersections?"
            },
            {
                "role": "assistant",
                "content": "cvxSkSplitIsect\nSpl [in] split at intersections input data\n\nUse this function to split the sketch at intersections by the input svxSkSplitIsect data.\nnote:\nInterface cvxSkSplitIsectInit() can initialize variables Pattern of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxSkSplitIsect function to split a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkSplitIsect\nSpl [in] split at intersections input data\n\nUse this function to split the sketch at intersections by the input svxSkSplitIsect data.\nnote:\nInterface cvxSkSplitIsectInit() can initialize variables Pattern of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to automatically add constraints and dimensions to the current sketch geometry?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAutoCons\nBasePnt [in] base point (NULL to use the default sketch origin)\nCount [in] number of entities to add constraints and dimensions (0 for all entities)\nidEnts [in] list of entities to add constraints and dimensions (NULL for all entities)\n\nUse the function to analyze the current sketch geometry and add constraints and dimensions automatically."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to analyze the sketch geometry and add constraints and dimensions automatically?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAutoCons\nBasePnt [in] base point (NULL to use the default sketch origin)\nCount [in] number of entities to add constraints and dimensions (0 for all entities)\nidEnts [in] list of entities to add constraints and dimensions (NULL for all entities)\n\nUse the function to analyze the current sketch geometry and add constraints and dimensions automatically."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the function to add constraints and dimensions to the sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAutoCons\nBasePnt [in] base point (NULL to use the default sketch origin)\nCount [in] number of entities to add constraints and dimensions (0 for all entities)\nidEnts [in] list of entities to add constraints and dimensions (NULL for all entities)\n\nUse the function to analyze the current sketch geometry and add constraints and dimensions automatically."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a fix constraint with specified data and type?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAddGeomCons\ntype [in] constraint type\nsubType [in] constraint type, only fix constraint, entity symmetrical constraint and point to midpoint constraint need to set the variable (evxGeomConsSubType): 0: both the X and Y coordinates are constrained, used to VX_SK_CONS_FIX 1: only the X coordinate is constrained, used to VX_SK_CONS_FIX 2: only the Y coordinate is constrained, used to VX_SK_CONS_FIX 3: point to arc midpoint constraint, used only VX_SK_CONS_MID 4: mark as points symmetry, used only VX_SK_CONS_SYM,\nnGeoms [in] number of constraint geometries\ngeoms [in] array of constraint geometries data\nCount [out] number of constraints generated (NULL to ignore)\nidCons [out] id of constraints generated (NULL to ignore)\n\nAdd the specified geometry constraint with specified data and the type. the number of geometry required varies from constraint type, please specify the number and data of constraint geometry based on the specific constraint being created.\nThe number and order of geometry required for each constraint type is as follows: \n\n VX_SK_CONS_FIX: one point or entity; \n\n VX_SK_CONS_ALI_Y: one reference point and one alignment point; \n\n VX_SK_CONS_ALI_X: one reference point and one alignment point; \n\n VX_SK_CONS_MID: two endpoints and one midpoint; \n\n VX_SK_CONS_ON_CRV: one curve and one alignment point; \n\n VX_SK_CONS_ISECT: two curves and one alignment point; \n\n VX_SK_CONS_COIN: two points; \n\n VX_SK_CONS_HOR: one line; \n\n VX_SK_CONS_VER: one line; \n\n VX_SK_CONS_SYM: one symmetrical axis and two symmetrical points or entities; \n\n VX_SK_CONS_PERP: one line and one curve; \n\n VX_SK_CONS_PARA: two lines; \n\n VX_SK_CONS_COLINLN: two lines; \n\n VX_SK_CONS_TANG: one line and one curve; \n\n VX_SK_CONS_EQL_LEN: two lines; \n\n VX_SK_CONS_EQL_CURVATURE: two curves; \n\n VX_SK_CONS_EQL_RAD: two arcs or circles; \n\n VX_SK_CONS_CONC: one arc or circle and one alignment point;\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the procedure to add a symmetry constraint with specified data and type?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAddGeomCons\ntype [in] constraint type\nsubType [in] constraint type, only fix constraint, entity symmetrical constraint and point to midpoint constraint need to set the variable (evxGeomConsSubType): 0: both the X and Y coordinates are constrained, used to VX_SK_CONS_FIX 1: only the X coordinate is constrained, used to VX_SK_CONS_FIX 2: only the Y coordinate is constrained, used to VX_SK_CONS_FIX 3: point to arc midpoint constraint, used only VX_SK_CONS_MID 4: mark as points symmetry, used only VX_SK_CONS_SYM,\nnGeoms [in] number of constraint geometries\ngeoms [in] array of constraint geometries data\nCount [out] number of constraints generated (NULL to ignore)\nidCons [out] id of constraints generated (NULL to ignore)\n\nAdd the specified geometry constraint with specified data and the type. the number of geometry required varies from constraint type, please specify the number and data of constraint geometry based on the specific constraint being created.\nThe number and order of geometry required for each constraint type is as follows: \n\n VX_SK_CONS_FIX: one point or entity; \n\n VX_SK_CONS_ALI_Y: one reference point and one alignment point; \n\n VX_SK_CONS_ALI_X: one reference point and one alignment point; \n\n VX_SK_CONS_MID: two endpoints and one midpoint; \n\n VX_SK_CONS_ON_CRV: one curve and one alignment point; \n\n VX_SK_CONS_ISECT: two curves and one alignment point; \n\n VX_SK_CONS_COIN: two points; \n\n VX_SK_CONS_HOR: one line; \n\n VX_SK_CONS_VER: one line; \n\n VX_SK_CONS_SYM: one symmetrical axis and two symmetrical points or entities; \n\n VX_SK_CONS_PERP: one line and one curve; \n\n VX_SK_CONS_PARA: two lines; \n\n VX_SK_CONS_COLINLN: two lines; \n\n VX_SK_CONS_TANG: one line and one curve; \n\n VX_SK_CONS_EQL_LEN: two lines; \n\n VX_SK_CONS_EQL_CURVATURE: two curves; \n\n VX_SK_CONS_EQL_RAD: two arcs or circles; \n\n VX_SK_CONS_CONC: one arc or circle and one alignment point;\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a constraint for two curves and one alignment point?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAddGeomCons\ntype [in] constraint type\nsubType [in] constraint type, only fix constraint, entity symmetrical constraint and point to midpoint constraint need to set the variable (evxGeomConsSubType): 0: both the X and Y coordinates are constrained, used to VX_SK_CONS_FIX 1: only the X coordinate is constrained, used to VX_SK_CONS_FIX 2: only the Y coordinate is constrained, used to VX_SK_CONS_FIX 3: point to arc midpoint constraint, used only VX_SK_CONS_MID 4: mark as points symmetry, used only VX_SK_CONS_SYM,\nnGeoms [in] number of constraint geometries\ngeoms [in] array of constraint geometries data\nCount [out] number of constraints generated (NULL to ignore)\nidCons [out] id of constraints generated (NULL to ignore)\n\nAdd the specified geometry constraint with specified data and the type. the number of geometry required varies from constraint type, please specify the number and data of constraint geometry based on the specific constraint being created.\nThe number and order of geometry required for each constraint type is as follows: \n\n VX_SK_CONS_FIX: one point or entity; \n\n VX_SK_CONS_ALI_Y: one reference point and one alignment point; \n\n VX_SK_CONS_ALI_X: one reference point and one alignment point; \n\n VX_SK_CONS_MID: two endpoints and one midpoint; \n\n VX_SK_CONS_ON_CRV: one curve and one alignment point; \n\n VX_SK_CONS_ISECT: two curves and one alignment point; \n\n VX_SK_CONS_COIN: two points; \n\n VX_SK_CONS_HOR: one line; \n\n VX_SK_CONS_VER: one line; \n\n VX_SK_CONS_SYM: one symmetrical axis and two symmetrical points or entities; \n\n VX_SK_CONS_PERP: one line and one curve; \n\n VX_SK_CONS_PARA: two lines; \n\n VX_SK_CONS_COLINLN: two lines; \n\n VX_SK_CONS_TANG: one line and one curve; \n\n VX_SK_CONS_EQL_LEN: two lines; \n\n VX_SK_CONS_EQL_CURVATURE: two curves; \n\n VX_SK_CONS_EQL_RAD: two arcs or circles; \n\n VX_SK_CONS_CONC: one arc or circle and one alignment point;\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can you explain how to add a constraint for two arcs or circles with specified data and type?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAddGeomCons\ntype [in] constraint type\nsubType [in] constraint type, only fix constraint, entity symmetrical constraint and point to midpoint constraint need to set the variable (evxGeomConsSubType): 0: both the X and Y coordinates are constrained, used to VX_SK_CONS_FIX 1: only the X coordinate is constrained, used to VX_SK_CONS_FIX 2: only the Y coordinate is constrained, used to VX_SK_CONS_FIX 3: point to arc midpoint constraint, used only VX_SK_CONS_MID 4: mark as points symmetry, used only VX_SK_CONS_SYM,\nnGeoms [in] number of constraint geometries\ngeoms [in] array of constraint geometries data\nCount [out] number of constraints generated (NULL to ignore)\nidCons [out] id of constraints generated (NULL to ignore)\n\nAdd the specified geometry constraint with specified data and the type. the number of geometry required varies from constraint type, please specify the number and data of constraint geometry based on the specific constraint being created.\nThe number and order of geometry required for each constraint type is as follows: \n\n VX_SK_CONS_FIX: one point or entity; \n\n VX_SK_CONS_ALI_Y: one reference point and one alignment point; \n\n VX_SK_CONS_ALI_X: one reference point and one alignment point; \n\n VX_SK_CONS_MID: two endpoints and one midpoint; \n\n VX_SK_CONS_ON_CRV: one curve and one alignment point; \n\n VX_SK_CONS_ISECT: two curves and one alignment point; \n\n VX_SK_CONS_COIN: two points; \n\n VX_SK_CONS_HOR: one line; \n\n VX_SK_CONS_VER: one line; \n\n VX_SK_CONS_SYM: one symmetrical axis and two symmetrical points or entities; \n\n VX_SK_CONS_PERP: one line and one curve; \n\n VX_SK_CONS_PARA: two lines; \n\n VX_SK_CONS_COLINLN: two lines; \n\n VX_SK_CONS_TANG: one line and one curve; \n\n VX_SK_CONS_EQL_LEN: two lines; \n\n VX_SK_CONS_EQL_CURVATURE: two curves; \n\n VX_SK_CONS_EQL_RAD: two arcs or circles; \n\n VX_SK_CONS_CONC: one arc or circle and one alignment point;\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create coincident constraints for a specific sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAutoAddCoinCons\nidSketch [in] index of sketch (-1 to use the active sketch)\n\nCreate coincident constraints for the specified sketch/current active sketch. This function just add the constraints, not solve the constraints."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add coincident constraints for the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAutoAddCoinCons\nidSketch [in] index of sketch (-1 to use the active sketch)\n\nCreate coincident constraints for the specified sketch/current active sketch. This function just add the constraints, not solve the constraints."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add coincident constraints without solving them?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAutoAddCoinCons\nidSketch [in] index of sketch (-1 to use the active sketch)\n\nCreate coincident constraints for the specified sketch/current active sketch. This function just add the constraints, not solve the constraints."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create coincident constraints for a specific sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAutoAddCoinConsSkipRefGeom\nidSketch [in] index of sketch (-1 to use the active sketch)\nskipFlag [in] 1-skip the reference geometries, else 0\nsolveFlag [in] 1-solve the constraints after adding them, else 0\n\nCreate coincident constraints for the specified sketch/current active sketch.\nThe difference between this function and cvxSkAutoAddCoinCons() is that this function can skip the reference geometries and solve the constraints."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to skip reference geometries while creating coincident constraints?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAutoAddCoinConsSkipRefGeom\nidSketch [in] index of sketch (-1 to use the active sketch)\nskipFlag [in] 1-skip the reference geometries, else 0\nsolveFlag [in] 1-solve the constraints after adding them, else 0\n\nCreate coincident constraints for the specified sketch/current active sketch.\nThe difference between this function and cvxSkAutoAddCoinCons() is that this function can skip the reference geometries and solve the constraints."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to solve the constraints after adding them?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAutoAddCoinConsSkipRefGeom\nidSketch [in] index of sketch (-1 to use the active sketch)\nskipFlag [in] 1-skip the reference geometries, else 0\nsolveFlag [in] 1-solve the constraints after adding them, else 0\n\nCreate coincident constraints for the specified sketch/current active sketch.\nThe difference between this function and cvxSkAutoAddCoinCons() is that this function can skip the reference geometries and solve the constraints."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a constraint dimension with specified data and type?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAddConsDim\ntype [in] type of constraint dimension\npData [in] data of constraint dimension\n\nAdd the specified constraint dimension with specified data and the type.\nThe \"pData\" defined by current command. If the \"type\" is VX_SK_CONSDIM_LINEAR or VX_SK_CONSDIM_LINEAR_OFFSET, all the data of \"pData\" should be defined.\nIf the \"type\" is VX_SK_CONSDIM_ANGULAR, the data of \"pData\" should be defined by the type of svxConsDim.\nIf the \"type\" is VX_SK_CONSDIM_RADIAL, the second point and second entity don't need to be defined.\nIf the \"type\" is VX_SK_CONSDIM_ARC_LENGTH, the second point, second entity and the type of svxConsDim don't need to be defined.\nThe function does not yet support the creation of type VX_SK_CONSDIM_SYMMETRY and type VX_SK_CONSDIM_PERIMETER dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to add a linear constraint dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAddConsDim\ntype [in] type of constraint dimension\npData [in] data of constraint dimension\n\nAdd the specified constraint dimension with specified data and the type.\nThe \"pData\" defined by current command. If the \"type\" is VX_SK_CONSDIM_LINEAR or VX_SK_CONSDIM_LINEAR_OFFSET, all the data of \"pData\" should be defined.\nIf the \"type\" is VX_SK_CONSDIM_ANGULAR, the data of \"pData\" should be defined by the type of svxConsDim.\nIf the \"type\" is VX_SK_CONSDIM_RADIAL, the second point and second entity don't need to be defined.\nIf the \"type\" is VX_SK_CONSDIM_ARC_LENGTH, the second point, second entity and the type of svxConsDim don't need to be defined.\nThe function does not yet support the creation of type VX_SK_CONSDIM_SYMMETRY and type VX_SK_CONSDIM_PERIMETER dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add an angular constraint dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAddConsDim\ntype [in] type of constraint dimension\npData [in] data of constraint dimension\n\nAdd the specified constraint dimension with specified data and the type.\nThe \"pData\" defined by current command. If the \"type\" is VX_SK_CONSDIM_LINEAR or VX_SK_CONSDIM_LINEAR_OFFSET, all the data of \"pData\" should be defined.\nIf the \"type\" is VX_SK_CONSDIM_ANGULAR, the data of \"pData\" should be defined by the type of svxConsDim.\nIf the \"type\" is VX_SK_CONSDIM_RADIAL, the second point and second entity don't need to be defined.\nIf the \"type\" is VX_SK_CONSDIM_ARC_LENGTH, the second point, second entity and the type of svxConsDim don't need to be defined.\nThe function does not yet support the creation of type VX_SK_CONSDIM_SYMMETRY and type VX_SK_CONSDIM_PERIMETER dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is it possible to add a radial constraint dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAddConsDim\ntype [in] type of constraint dimension\npData [in] data of constraint dimension\n\nAdd the specified constraint dimension with specified data and the type.\nThe \"pData\" defined by current command. If the \"type\" is VX_SK_CONSDIM_LINEAR or VX_SK_CONSDIM_LINEAR_OFFSET, all the data of \"pData\" should be defined.\nIf the \"type\" is VX_SK_CONSDIM_ANGULAR, the data of \"pData\" should be defined by the type of svxConsDim.\nIf the \"type\" is VX_SK_CONSDIM_RADIAL, the second point and second entity don't need to be defined.\nIf the \"type\" is VX_SK_CONSDIM_ARC_LENGTH, the second point, second entity and the type of svxConsDim don't need to be defined.\nThe function does not yet support the creation of type VX_SK_CONSDIM_SYMMETRY and type VX_SK_CONSDIM_PERIMETER dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add an arc length constraint dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAddConsDim\ntype [in] type of constraint dimension\npData [in] data of constraint dimension\n\nAdd the specified constraint dimension with specified data and the type.\nThe \"pData\" defined by current command. If the \"type\" is VX_SK_CONSDIM_LINEAR or VX_SK_CONSDIM_LINEAR_OFFSET, all the data of \"pData\" should be defined.\nIf the \"type\" is VX_SK_CONSDIM_ANGULAR, the data of \"pData\" should be defined by the type of svxConsDim.\nIf the \"type\" is VX_SK_CONSDIM_RADIAL, the second point and second entity don't need to be defined.\nIf the \"type\" is VX_SK_CONSDIM_ARC_LENGTH, the second point, second entity and the type of svxConsDim don't need to be defined.\nThe function does not yet support the creation of type VX_SK_CONSDIM_SYMMETRY and type VX_SK_CONSDIM_PERIMETER dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create 2D perimeter dimensions at the sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAddPerimeterDim\ndata [in] perimeter dimension data\nidDim [out] id of dimension\n\nUse this function to create 2D perimeter dimensions at the sketch."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add perimeter dimensions at the sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAddPerimeterDim\ndata [in] perimeter dimension data\nidDim [out] id of dimension\n\nUse this function to create 2D perimeter dimensions at the sketch."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of a dimension after adding it to the sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAddPerimeterDim\ndata [in] perimeter dimension data\nidDim [out] id of dimension\n\nUse this function to create 2D perimeter dimensions at the sketch."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxSkReference?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReferenceInit\ndata [in] reference geometry input data\n\nUse this function to initialize the parameters of the cvxSkReference().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing cvxSkReference?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReferenceInit\ndata [in] reference geometry input data\n\nUse this function to initialize the parameters of the cvxSkReference().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any function to set reference geometry input data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReferenceInit\ndata [in] reference geometry input data\n\nUse this function to initialize the parameters of the cvxSkReference().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to project a curve to the sketch plane?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReference\ndata [in] reference geometry input data\ncount [out] number of reference geometries (NULL to ignore)\nidRefEnts [out] list of reference geometry id's (NULL to ignore)\n\nUse this function to project a curve, face, point or datum located in the active part/component to the sketch plane.\nThe calling procedure MUST deallocate the output list with cvxMemFree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to project a face to the sketch plane?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReference\ndata [in] reference geometry input data\ncount [out] number of reference geometries (NULL to ignore)\nidRefEnts [out] list of reference geometry id's (NULL to ignore)\n\nUse this function to project a curve, face, point or datum located in the active part/component to the sketch plane.\nThe calling procedure MUST deallocate the output list with cvxMemFree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of reference geometries?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReference\ndata [in] reference geometry input data\ncount [out] number of reference geometries (NULL to ignore)\nidRefEnts [out] list of reference geometry id's (NULL to ignore)\n\nUse this function to project a curve, face, point or datum located in the active part/component to the sketch plane.\nThe calling procedure MUST deallocate the output list with cvxMemFree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list after using cvxSkReference?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReference\ndata [in] reference geometry input data\ncount [out] number of reference geometries (NULL to ignore)\nidRefEnts [out] list of reference geometry id's (NULL to ignore)\n\nUse this function to project a curve, face, point or datum located in the active part/component to the sketch plane.\nThe calling procedure MUST deallocate the output list with cvxMemFree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxSkMove()?"
            },
            {
                "role": "assistant",
                "content": "cvxSkMoveInit\ntype [in] move method\ndata [out] Region set data\n\nInitialize the parameters of the cvxSkMove().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to initialize the move in cvxSkMove()?"
            },
            {
                "role": "assistant",
                "content": "cvxSkMoveInit\ntype [in] move method\ndata [out] Region set data\n\nInitialize the parameters of the cvxSkMove().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to empty everything before calling cvxSkMove()?"
            },
            {
                "role": "assistant",
                "content": "cvxSkMoveInit\ntype [in] move method\ndata [out] Region set data\n\nInitialize the parameters of the cvxSkMove().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to move an entity within the active 2D environment?"
            },
            {
                "role": "assistant",
                "content": "cvxSkMove\ndata [in] move data\n\nMoves the specified entity(entities) within the active 2D environment(drawing of sketch).\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread.\nnote:\nInterface cvxSkMoveInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for the cvxSkMove function?"
            },
            {
                "role": "assistant",
                "content": "cvxSkMove\ndata [in] move data\n\nMoves the specified entity(entities) within the active 2D environment(drawing of sketch).\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread.\nnote:\nInterface cvxSkMoveInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can you explain the move data parameter for the cvxSkMove function?"
            },
            {
                "role": "assistant",
                "content": "cvxSkMove\ndata [in] move data\n\nMoves the specified entity(entities) within the active 2D environment(drawing of sketch).\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread.\nnote:\nInterface cvxSkMoveInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to rotate specified entity in 2D environment?"
            },
            {
                "role": "assistant",
                "content": "cvxSkRotate\ndata [in] Rotate data\ncnt [out] number of Entity ids that created (input NULL to ignore)\nidEnts [out] id of Entities that created (input NULL to ignore)\n\nRotate the specified entity(entities) within the active 2D environment(drawing of sketch). If \"idEnts\" is not NULL and value of Setting is VX_ROTATE_COPY, the ids of the rotate entity is output.\nnote:\nInterface cvxSkRotateInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for rotation?"
            },
            {
                "role": "assistant",
                "content": "cvxSkRotate\ndata [in] Rotate data\ncnt [out] number of Entity ids that created (input NULL to ignore)\nidEnts [out] id of Entities that created (input NULL to ignore)\n\nRotate the specified entity(entities) within the active 2D environment(drawing of sketch). If \"idEnts\" is not NULL and value of Setting is VX_ROTATE_COPY, the ids of the rotate entity is output.\nnote:\nInterface cvxSkRotateInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of entities created after rotation?"
            },
            {
                "role": "assistant",
                "content": "cvxSkRotate\ndata [in] Rotate data\ncnt [out] number of Entity ids that created (input NULL to ignore)\nidEnts [out] id of Entities that created (input NULL to ignore)\n\nRotate the specified entity(entities) within the active 2D environment(drawing of sketch). If \"idEnts\" is not NULL and value of Setting is VX_ROTATE_COPY, the ids of the rotate entity is output.\nnote:\nInterface cvxSkRotateInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the ids of the entities created after rotation?"
            },
            {
                "role": "assistant",
                "content": "cvxSkRotate\ndata [in] Rotate data\ncnt [out] number of Entity ids that created (input NULL to ignore)\nidEnts [out] id of Entities that created (input NULL to ignore)\n\nRotate the specified entity(entities) within the active 2D environment(drawing of sketch). If \"idEnts\" is not NULL and value of Setting is VX_ROTATE_COPY, the ids of the rotate entity is output.\nnote:\nInterface cvxSkRotateInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxSkRotate?"
            },
            {
                "role": "assistant",
                "content": "cvxSkRotateInit\ndata [out] Rotate data\n\nInitialize the parameters of the cvxSkRotate().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize the rotate data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkRotateInit\ndata [out] Rotate data\n\nInitialize the parameters of the cvxSkRotate().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing the rotate data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkRotateInit\ndata [out] Rotate data\n\nInitialize the parameters of the cvxSkRotate().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to mirror entities within the active 2D environment?"
            },
            {
                "role": "assistant",
                "content": "cvxSkMirr\ndata [in] mirror data\ncnt [out] number of Entity ids that created (input NULL to ignore)\nidEnts [out] id of Entities that created (input NULL to ignore)\n\nMirror the specified entity(entities) within the active 2D environment(drawing of sketch). If \"idEnts\" is not NULL, the ids of the mirrored entity is output.\nnote:\nInterface cvxSkMirrInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for mirroring entities?"
            },
            {
                "role": "assistant",
                "content": "cvxSkMirr\ndata [in] mirror data\ncnt [out] number of Entity ids that created (input NULL to ignore)\nidEnts [out] id of Entities that created (input NULL to ignore)\n\nMirror the specified entity(entities) within the active 2D environment(drawing of sketch). If \"idEnts\" is not NULL, the ids of the mirrored entity is output.\nnote:\nInterface cvxSkMirrInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of entities created after mirroring?"
            },
            {
                "role": "assistant",
                "content": "cvxSkMirr\ndata [in] mirror data\ncnt [out] number of Entity ids that created (input NULL to ignore)\nidEnts [out] id of Entities that created (input NULL to ignore)\n\nMirror the specified entity(entities) within the active 2D environment(drawing of sketch). If \"idEnts\" is not NULL, the ids of the mirrored entity is output.\nnote:\nInterface cvxSkMirrInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get the ids of the mirrored entities?"
            },
            {
                "role": "assistant",
                "content": "cvxSkMirr\ndata [in] mirror data\ncnt [out] number of Entity ids that created (input NULL to ignore)\nidEnts [out] id of Entities that created (input NULL to ignore)\n\nMirror the specified entity(entities) within the active 2D environment(drawing of sketch). If \"idEnts\" is not NULL, the ids of the mirrored entity is output.\nnote:\nInterface cvxSkMirrInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxSkMirr()?"
            },
            {
                "role": "assistant",
                "content": "cvxSkMirrInit\ndata [out] mirror data\n\nInitialize the parameters of the cvxSkMirr().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing cvxSkMirr()?"
            },
            {
                "role": "assistant",
                "content": "cvxSkMirrInit\ndata [out] mirror data\n\nInitialize the parameters of the cvxSkMirr().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get mirror data using cvxSkMirrInit()?"
            },
            {
                "role": "assistant",
                "content": "cvxSkMirrInit\ndata [out] mirror data\n\nInitialize the parameters of the cvxSkMirr().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to scale entities in the active sketch or sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxSkScale\nCount [in] number of entities\nidEnts [in] list of entity id's\nX_scale [in] X scale factor\nY_scale [in] Y scale factor\nPnt [in] optional reference point (input NULL to ignore)\n\nScales the specified entities in the active sketch or sheet by the input scale factors relative to the X, Y axes and origin of the active sketch If \"Pnt\" is not NULL, its coordinates are used as the center of scaling."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify X and Y scale factors for scaling entities?"
            },
            {
                "role": "assistant",
                "content": "cvxSkScale\nCount [in] number of entities\nidEnts [in] list of entity id's\nX_scale [in] X scale factor\nY_scale [in] Y scale factor\nPnt [in] optional reference point (input NULL to ignore)\n\nScales the specified entities in the active sketch or sheet by the input scale factors relative to the X, Y axes and origin of the active sketch If \"Pnt\" is not NULL, its coordinates are used as the center of scaling."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there an option to use a reference point as the center of scaling?"
            },
            {
                "role": "assistant",
                "content": "cvxSkScale\nCount [in] number of entities\nidEnts [in] list of entity id's\nX_scale [in] X scale factor\nY_scale [in] Y scale factor\nPnt [in] optional reference point (input NULL to ignore)\n\nScales the specified entities in the active sketch or sheet by the input scale factors relative to the X, Y axes and origin of the active sketch If \"Pnt\" is not NULL, its coordinates are used as the center of scaling."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the pattern data structure?"
            },
            {
                "role": "assistant",
                "content": "cvxSkPtnDataInit\ntype [in] pattern type\ndata [out] pattern data\n\nInitialize the svxSkPtnData structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to empty everything inside the pattern data structure?"
            },
            {
                "role": "assistant",
                "content": "cvxSkPtnDataInit\ntype [in] pattern type\ndata [out] pattern data\n\nInitialize the svxSkPtnData structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize the svxSkPtnData structure?"
            },
            {
                "role": "assistant",
                "content": "cvxSkPtnDataInit\ntype [in] pattern type\ndata [out] pattern data\n\nInitialize the svxSkPtnData structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the cvxSkPattern function to create sketch patterns?"
            },
            {
                "role": "assistant",
                "content": "cvxSkPattern\nPattern [in] pattern input data\ncnt [out] count of idEnts(can be NULL)\nidEnts [out] list of new entity id.(can be NULL)\n\nUse this function to pattern of sketches patterns. Three different methods of patterning are available, each method requires different types of input.\nnote:\nInterface cvxSkPtnDataInit() can initialize variables Pattern of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the different methods available for sketch patterning using cvxSkPattern?"
            },
            {
                "role": "assistant",
                "content": "cvxSkPattern\nPattern [in] pattern input data\ncnt [out] count of idEnts(can be NULL)\nidEnts [out] list of new entity id.(can be NULL)\n\nUse this function to pattern of sketches patterns. Three different methods of patterning are available, each method requires different types of input.\nnote:\nInterface cvxSkPtnDataInit() can initialize variables Pattern of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize variables for the Pattern input in cvxSkPattern function?"
            },
            {
                "role": "assistant",
                "content": "cvxSkPattern\nPattern [in] pattern input data\ncnt [out] count of idEnts(can be NULL)\nidEnts [out] list of new entity id.(can be NULL)\n\nUse this function to pattern of sketches patterns. Three different methods of patterning are available, each method requires different types of input.\nnote:\nInterface cvxSkPtnDataInit() can initialize variables Pattern of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxSkCopy structure?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCopyInit\ntype [in] sketch copy type\ndata [out] sketch copy data\n\nInitialize the svxSkCopy structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the different types of sketch copy available for initialization?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCopyInit\ntype [in] sketch copy type\ndata [out] sketch copy data\n\nInitialize the svxSkCopy structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any function to get the sketch copy data after initialization?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCopyInit\ntype [in] sketch copy type\ndata [out] sketch copy data\n\nInitialize the svxSkCopy structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a copy using cvxSkCopy function?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCopy\nSpl [in] sketch copy input data\ncnt [out] count of idEnts(can be NULL)\nidEnts [out] list of new entity id.(can be NULL)\n\nUse this function to create a copy by the input svxSkCopy data.\nnote:\nInterface cvxSkCopyInit() can initialize variables data of this function. The calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables data for cvxSkCopy function?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCopy\nSpl [in] sketch copy input data\ncnt [out] count of idEnts(can be NULL)\nidEnts [out] list of new entity id.(can be NULL)\n\nUse this function to create a copy by the input svxSkCopy data.\nnote:\nInterface cvxSkCopyInit() can initialize variables data of this function. The calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list after using cvxSkCopy function?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCopy\nSpl [in] sketch copy input data\ncnt [out] count of idEnts(can be NULL)\nidEnts [out] list of new entity id.(can be NULL)\n\nUse this function to create a copy by the input svxSkCopy data.\nnote:\nInterface cvxSkCopyInit() can initialize variables data of this function. The calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a copy of a sketch in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSkIns\nFile [in] name of ZW3D file that contains the sketch as root object\nName [in] name of sketch root object\nPlane [in] sketch insertion plane\nidSketch [out] id of new sketch (NULL to ignore)\n\nInserts a copy of the specified sketch in the active part on the specified insertion plane. It is assumed that \"File\" resides in one of the default search directories. If \"idSketch\" is not NULL, the id of the new sketch is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the insertion plane for a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSkIns\nFile [in] name of ZW3D file that contains the sketch as root object\nName [in] name of sketch root object\nPlane [in] sketch insertion plane\nidSketch [out] id of new sketch (NULL to ignore)\n\nInserts a copy of the specified sketch in the active part on the specified insertion plane. It is assumed that \"File\" resides in one of the default search directories. If \"idSketch\" is not NULL, the id of the new sketch is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the id of the new sketch after insertion?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSkIns\nFile [in] name of ZW3D file that contains the sketch as root object\nName [in] name of sketch root object\nPlane [in] sketch insertion plane\nidSketch [out] id of new sketch (NULL to ignore)\n\nInserts a copy of the specified sketch in the active part on the specified insertion plane. It is assumed that \"File\" resides in one of the default search directories. If \"idSketch\" is not NULL, the id of the new sketch is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a copy of a sketch in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSkIns2\nFile [in] name of ZW3D file that contains the sketch as root object\nName [in] name of sketch root object\nidPlane [in] datum plane id\niAsso [in] option of associate copy\nidSketch [out] id of new sketch (NULL to ignore)\n\nInserts a copy of the specified sketch in the active part on the specified datum plane. The sketch location will be associatively linked to the datum plane \nIt is assumed that \"File\" resides in one of the default search directories. If \"idSketch\" is not NULL, the id of the new sketch is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to link the sketch location associatively to a datum plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSkIns2\nFile [in] name of ZW3D file that contains the sketch as root object\nName [in] name of sketch root object\nidPlane [in] datum plane id\niAsso [in] option of associate copy\nidSketch [out] id of new sketch (NULL to ignore)\n\nInserts a copy of the specified sketch in the active part on the specified datum plane. The sketch location will be associatively linked to the datum plane \nIt is assumed that \"File\" resides in one of the default search directories. If \"idSketch\" is not NULL, the id of the new sketch is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there an option to associate copy while inserting a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSkIns2\nFile [in] name of ZW3D file that contains the sketch as root object\nName [in] name of sketch root object\nidPlane [in] datum plane id\niAsso [in] option of associate copy\nidSketch [out] id of new sketch (NULL to ignore)\n\nInserts a copy of the specified sketch in the active part on the specified datum plane. The sketch location will be associatively linked to the datum plane \nIt is assumed that \"File\" resides in one of the default search directories. If \"idSketch\" is not NULL, the id of the new sketch is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a new sketch to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSkNew\nPlane [in] sketch insertion plane\nidSketch [out] id of new sketch\n\nAdds a new sketch to the active part, aligned with the specified insertion plane. The sketch is activated for editing.\nExit the sketch edit mode (back to editing the parent part) using cvxRootExit() or cvxSkActivate(0,0). If \"idSketch\" is not NULL, the id of the new sketch is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to align a new sketch with a specified insertion plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSkNew\nPlane [in] sketch insertion plane\nidSketch [out] id of new sketch\n\nAdds a new sketch to the active part, aligned with the specified insertion plane. The sketch is activated for editing.\nExit the sketch edit mode (back to editing the parent part) using cvxRootExit() or cvxSkActivate(0,0). If \"idSketch\" is not NULL, the id of the new sketch is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to exit the sketch edit mode and go back to editing the parent part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSkNew\nPlane [in] sketch insertion plane\nidSketch [out] id of new sketch\n\nAdds a new sketch to the active part, aligned with the specified insertion plane. The sketch is activated for editing.\nExit the sketch edit mode (back to editing the parent part) using cvxRootExit() or cvxSkActivate(0,0). If \"idSketch\" is not NULL, the id of the new sketch is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the id of the new sketch after adding it?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSkNew\nPlane [in] sketch insertion plane\nidSketch [out] id of new sketch\n\nAdds a new sketch to the active part, aligned with the specified insertion plane. The sketch is activated for editing.\nExit the sketch edit mode (back to editing the parent part) using cvxRootExit() or cvxSkActivate(0,0). If \"idSketch\" is not NULL, the id of the new sketch is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a new sketch to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSkPlane\nSkData [in] sketch input data\nidSketch [out] id of new sketch (NULL to ignore)\n\nAdds a new sketch to the active part, aligned with the specified insertion plane. The sketch is activated for editing.\nExit the sketch edit mode (back to editing the parent part) using cvxRootExit() or cvxSkActivate(0,0). If \"idSketch\" is not NULL, the id of the new sketch is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to align a sketch with a specified insertion plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSkPlane\nSkData [in] sketch input data\nidSketch [out] id of new sketch (NULL to ignore)\n\nAdds a new sketch to the active part, aligned with the specified insertion plane. The sketch is activated for editing.\nExit the sketch edit mode (back to editing the parent part) using cvxRootExit() or cvxSkActivate(0,0). If \"idSketch\" is not NULL, the id of the new sketch is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to exit the sketch edit mode and go back to editing the parent part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSkPlane\nSkData [in] sketch input data\nidSketch [out] id of new sketch (NULL to ignore)\n\nAdds a new sketch to the active part, aligned with the specified insertion plane. The sketch is activated for editing.\nExit the sketch edit mode (back to editing the parent part) using cvxRootExit() or cvxSkActivate(0,0). If \"idSketch\" is not NULL, the id of the new sketch is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the id of the new sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSkPlane\nSkData [in] sketch input data\nidSketch [out] id of new sketch (NULL to ignore)\n\nAdds a new sketch to the active part, aligned with the specified insertion plane. The sketch is activated for editing.\nExit the sketch edit mode (back to editing the parent part) using cvxRootExit() or cvxSkActivate(0,0). If \"idSketch\" is not NULL, the id of the new sketch is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxHatchPtnData structure?"
            },
            {
                "role": "assistant",
                "content": "cvxHatchPtnDataInit\ndata [out] cosmetic sketch hatch pattern definition data\n\nInitialize the svxHatchPtnData structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything inside the svxHatchPtnData structure?"
            },
            {
                "role": "assistant",
                "content": "cvxHatchPtnDataInit\ndata [out] cosmetic sketch hatch pattern definition data\n\nInitialize the svxHatchPtnData structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the cosmetic sketch hatch pattern definition data?"
            },
            {
                "role": "assistant",
                "content": "cvxHatchPtnDataInit\ndata [out] cosmetic sketch hatch pattern definition data\n\nInitialize the svxHatchPtnData structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a new cosmetic sketch to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCosSkPlane\nSkData [in] sketch input data\nisAddHatPtn [in] 1 if add hatch pattern ,else 0\nPatData [in] hatch pattern input data (NULL to use default)\nidSketch [out] id of new sketch (NULL to ignore)\n\nAdds a new cosmetic sketch to the active part, aligned with the specified insertion plane. The sketch is activated for editing.\nExit the sketch edit mode (back to editing the parent part) using cvxRootExit() or cvxSkActivate(0,0). If \"idSketch\" is not NULL, the id of the new sketch is output.\nnote:\nStructure svxSketchData can be initialized through interface cvxMemZero(). \n\n Structure svxHatchPtnData can be initialized through interface cvxHatchPtnDataInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to align a sketch with a specified insertion plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCosSkPlane\nSkData [in] sketch input data\nisAddHatPtn [in] 1 if add hatch pattern ,else 0\nPatData [in] hatch pattern input data (NULL to use default)\nidSketch [out] id of new sketch (NULL to ignore)\n\nAdds a new cosmetic sketch to the active part, aligned with the specified insertion plane. The sketch is activated for editing.\nExit the sketch edit mode (back to editing the parent part) using cvxRootExit() or cvxSkActivate(0,0). If \"idSketch\" is not NULL, the id of the new sketch is output.\nnote:\nStructure svxSketchData can be initialized through interface cvxMemZero(). \n\n Structure svxHatchPtnData can be initialized through interface cvxHatchPtnDataInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to exit the sketch edit mode and go back to editing the parent part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCosSkPlane\nSkData [in] sketch input data\nisAddHatPtn [in] 1 if add hatch pattern ,else 0\nPatData [in] hatch pattern input data (NULL to use default)\nidSketch [out] id of new sketch (NULL to ignore)\n\nAdds a new cosmetic sketch to the active part, aligned with the specified insertion plane. The sketch is activated for editing.\nExit the sketch edit mode (back to editing the parent part) using cvxRootExit() or cvxSkActivate(0,0). If \"idSketch\" is not NULL, the id of the new sketch is output.\nnote:\nStructure svxSketchData can be initialized through interface cvxMemZero(). \n\n Structure svxHatchPtnData can be initialized through interface cvxHatchPtnDataInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to add a hatch pattern to the sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCosSkPlane\nSkData [in] sketch input data\nisAddHatPtn [in] 1 if add hatch pattern ,else 0\nPatData [in] hatch pattern input data (NULL to use default)\nidSketch [out] id of new sketch (NULL to ignore)\n\nAdds a new cosmetic sketch to the active part, aligned with the specified insertion plane. The sketch is activated for editing.\nExit the sketch edit mode (back to editing the parent part) using cvxRootExit() or cvxSkActivate(0,0). If \"idSketch\" is not NULL, the id of the new sketch is output.\nnote:\nStructure svxSketchData can be initialized through interface cvxMemZero(). \n\n Structure svxHatchPtnData can be initialized through interface cvxHatchPtnDataInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxSketchData structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCosSkPlane\nSkData [in] sketch input data\nisAddHatPtn [in] 1 if add hatch pattern ,else 0\nPatData [in] hatch pattern input data (NULL to use default)\nidSketch [out] id of new sketch (NULL to ignore)\n\nAdds a new cosmetic sketch to the active part, aligned with the specified insertion plane. The sketch is activated for editing.\nExit the sketch edit mode (back to editing the parent part) using cvxRootExit() or cvxSkActivate(0,0). If \"idSketch\" is not NULL, the id of the new sketch is output.\nnote:\nStructure svxSketchData can be initialized through interface cvxMemZero(). \n\n Structure svxHatchPtnData can be initialized through interface cvxHatchPtnDataInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxHatchPtnData structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCosSkPlane\nSkData [in] sketch input data\nisAddHatPtn [in] 1 if add hatch pattern ,else 0\nPatData [in] hatch pattern input data (NULL to use default)\nidSketch [out] id of new sketch (NULL to ignore)\n\nAdds a new cosmetic sketch to the active part, aligned with the specified insertion plane. The sketch is activated for editing.\nExit the sketch edit mode (back to editing the parent part) using cvxRootExit() or cvxSkActivate(0,0). If \"idSketch\" is not NULL, the id of the new sketch is output.\nnote:\nStructure svxSketchData can be initialized through interface cvxMemZero(). \n\n Structure svxHatchPtnData can be initialized through interface cvxHatchPtnDataInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of svxPntByOffset?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPntByOffsetInit\ndata [out] point by offset data\nuseCirPnt [in] 1- to use critical point, else 0\n\nInitialize the parameters of the svxPntByOffset. It will set data->pntOnEnt.critTyp to VX_START_POINT if useCirPnt = 1.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of useCirPnt parameter?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPntByOffsetInit\ndata [out] point by offset data\nuseCirPnt [in] 1- to use critical point, else 0\n\nInitialize the parameters of the svxPntByOffset. It will set data->pntOnEnt.critTyp to VX_START_POINT if useCirPnt = 1.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should I use the critical point in svxPntByOffset?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPntByOffsetInit\ndata [out] point by offset data\nuseCirPnt [in] 1- to use critical point, else 0\n\nInitialize the parameters of the svxPntByOffset. It will set data->pntOnEnt.critTyp to VX_START_POINT if useCirPnt = 1.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize parameters for finding a point by two lines?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPntBy2LinesInit\ndata [out] point by two lines data\nuseCirPnt [in] 1- to use critical point, else 0\n\nInitialize the parameters of the svxPntBy2Lines. It will set data->pntOnCrv1.critTyp and data->pntOnCrv2.critTyp to VX_START_POINT if useCirPnt = 1.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set data for finding a point by two lines?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPntBy2LinesInit\ndata [out] point by two lines data\nuseCirPnt [in] 1- to use critical point, else 0\n\nInitialize the parameters of the svxPntBy2Lines. It will set data->pntOnCrv1.critTyp and data->pntOnCrv2.critTyp to VX_START_POINT if useCirPnt = 1.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use critical point while finding a point by two lines?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPntBy2LinesInit\ndata [out] point by two lines data\nuseCirPnt [in] 1- to use critical point, else 0\n\nInitialize the parameters of the svxPntBy2Lines. It will set data->pntOnCrv1.critTyp and data->pntOnCrv2.critTyp to VX_START_POINT if useCirPnt = 1.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize a UDF model?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInit\nudfPath [in] path of UDF model\n\nInitialize the specified UDF model, it will create a UDF command template.\nIf it successes, you can execute this command by follow steps:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to create a UDF command template?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInit\nudfPath [in] path of UDF model\n\nInitialize the specified UDF model, it will create a UDF command template.\nIf it successes, you can execute this command by follow steps:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the steps to execute a UDF command template?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInit\nudfPath [in] path of UDF model\n\nInitialize the specified UDF model, it will create a UDF command template.\nIf it successes, you can execute this command by follow steps:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of fields in the current UDF command?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInqFlds\ncnt [out] count of fields\nfldParams [out] value of field parameters\n\nGet the field parameters of current UDF command.\nnote:\nYou must call the function cvxPartUDFInit() first."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the value of field parameters in the current UDF command?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInqFlds\ncnt [out] count of fields\nfldParams [out] value of field parameters\n\nGet the field parameters of current UDF command.\nnote:\nYou must call the function cvxPartUDFInit() first."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function should be called first before using cvxPartUDFInqFlds?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInqFlds\ncnt [out] count of fields\nfldParams [out] value of field parameters\n\nGet the field parameters of current UDF command.\nnote:\nYou must call the function cvxPartUDFInit() first."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to destruct data after executing a user-defined feature command?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFTerm\n\nDestruct data after execute a user define feature command."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to clean up data after running a user-defined feature command?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFTerm\n\nDestruct data after execute a user define feature command."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle data destruction after executing a user-defined feature command?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFTerm\n\nDestruct data after execute a user define feature command."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to explode a custom feature into its defining operations?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFExplode\nidFtr [in] index of UDF feature\n\nExplode custom feature into the operations that define it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to break down a custom feature into its operations?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFExplode\nidFtr [in] index of UDF feature\n\nExplode custom feature into the operations that define it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get the operations that define a custom feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFExplode\nidFtr [in] index of UDF feature\n\nExplode custom feature into the operations that define it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the source file path of a specified UDF feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInqPath\nidFtr [in] index of UDF feature\nfile [out] source file path of UDF feature\n\nGet source file full path of specified UDF feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the source file of a UDF feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInqPath\nidFtr [in] index of UDF feature\nfile [out] source file path of UDF feature\n\nGet source file full path of specified UDF feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the full path of the source file for a specific UDF feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInqPath\nidFtr [in] index of UDF feature\nfile [out] source file path of UDF feature\n\nGet source file full path of specified UDF feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the source file path of a specific UDF feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInqLongPath\nidFtr [in] index of UDF feature\nfile [out] source file path of UDF feature\nsizefile [in] max size of file\n\nGet source file full path of specified UDF feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the full path of the source file for a UDF feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInqLongPath\nidFtr [in] index of UDF feature\nfile [out] source file path of UDF feature\nsizefile [in] max size of file\n\nGet source file full path of specified UDF feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to obtain the source file path for a specified UDF feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInqLongPath\nidFtr [in] index of UDF feature\nfile [out] source file path of UDF feature\nsizefile [in] max size of file\n\nGet source file full path of specified UDF feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of sub-features in a UDF feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInqSubFtrs\nidFtr [in] index of UDF feature\ncount [out] number of sub-feature in UDF feature\nftrList [out] list of sub-feature in UDF feature\n\nGet sub-feature list in specified UDF feature.\nThis function allocates memory for the array output via \"ftrList\". The calling procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of sub-features in a UDF feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInqSubFtrs\nidFtr [in] index of UDF feature\ncount [out] number of sub-feature in UDF feature\nftrList [out] list of sub-feature in UDF feature\n\nGet sub-feature list in specified UDF feature.\nThis function allocates memory for the array output via \"ftrList\". The calling procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about sub-features in a UDF feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInqSubFtrs\nidFtr [in] index of UDF feature\ncount [out] number of sub-feature in UDF feature\nftrList [out] list of sub-feature in UDF feature\n\nGet sub-feature list in specified UDF feature.\nThis function allocates memory for the array output via \"ftrList\". The calling procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a feature is a UDF feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrIsUDF\nidFtr [in] index of feature\nisUDF [out] 1 - is a UDF feature, 0 - is not a UDF feature, -1 - is not a feature\n\nGet the type of the feature: UDF or not."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a feature is a UDF feature or not?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrIsUDF\nidFtr [in] index of feature\nisUDF [out] 1 - is a UDF feature, 0 - is not a UDF feature, -1 - is not a feature\n\nGet the type of the feature: UDF or not."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I find out if a feature is a UDF feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrIsUDF\nidFtr [in] index of feature\nisUDF [out] 1 - is a UDF feature, 0 - is not a UDF feature, -1 - is not a feature\n\nGet the type of the feature: UDF or not."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to replace a UDF with a new file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFReplace\nidFtr [in] index of UDF feature\nfile [in] the file path of UDF to replace\n\nReplace the specified UDF to the new one by the path of UDF file. It requires that the new UDF has the same references as the old one, or it will fail."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to update a UDF feature with a new file path?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFReplace\nidFtr [in] index of UDF feature\nfile [in] the file path of UDF to replace\n\nReplace the specified UDF to the new one by the path of UDF file. It requires that the new UDF has the same references as the old one, or it will fail."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to replace a UDF feature with a new file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFReplace\nidFtr [in] index of UDF feature\nfile [in] the file path of UDF to replace\n\nReplace the specified UDF to the new one by the path of UDF file. It requires that the new UDF has the same references as the old one, or it will fail."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the default open directory for the wizard UDF?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFWizardPathSet\npath [in] full path of UDF\n\nSet the default open directory for the wizard UDF."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to specify the full path of UDF for the wizard?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFWizardPathSet\npath [in] full path of UDF\n\nSet the default open directory for the wizard UDF."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the function to set the default open directory for UDF?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFWizardPathSet\npath [in] full path of UDF\n\nSet the default open directory for the wizard UDF."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the default open directory for inserting UDF?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInsPathSet\npath [in] full path of UDF\n\nSet the default open directory for the Insert UDF."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to specify the full path of UDF for insertion?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInsPathSet\npath [in] full path of UDF\n\nSet the default open directory for the Insert UDF."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the default directory for inserting UDF?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInsPathSet\npath [in] full path of UDF\n\nSet the default open directory for the Insert UDF."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the default open directory for the wizard UDF?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFWizardPathGet\nDir [out] full path of UDF\n\nGet the default open directory for the wizard UDF."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the full path of UDF for the UDF wizard?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFWizardPathGet\nDir [out] full path of UDF\n\nGet the default open directory for the wizard UDF."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the default directory for the UDF wizard?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFWizardPathGet\nDir [out] full path of UDF\n\nGet the default open directory for the wizard UDF."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the default open directory for the wizard UDF?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFWizardPathGetByLongPath\nDir [out] full path of UDF\nsizeDir [in] max size of Dir\n\nGet the default open directory for the wizard UDF.\nA Dir that is too long (longer than \"sizeDir\") is truncated.\nIt is assumed that the input \"Dir\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the full path of UDF?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFWizardPathGetByLongPath\nDir [out] full path of UDF\nsizeDir [in] max size of Dir\n\nGet the default open directory for the wizard UDF.\nA Dir that is too long (longer than \"sizeDir\") is truncated.\nIt is assumed that the input \"Dir\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the maximum size of the directory for the UDF wizard path?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFWizardPathGetByLongPath\nDir [out] full path of UDF\nsizeDir [in] max size of Dir\n\nGet the default open directory for the wizard UDF.\nA Dir that is too long (longer than \"sizeDir\") is truncated.\nIt is assumed that the input \"Dir\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the full path of UDF?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInsPathGet\nDir [out] full path of UDF\n\nGet the default open directory for the Insert UDF."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the default open directory for Insert UDF?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInsPathGet\nDir [out] full path of UDF\n\nGet the default open directory for the Insert UDF."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the path of UDF for insertion?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInsPathGet\nDir [out] full path of UDF\n\nGet the default open directory for the Insert UDF."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the default open directory for Insert UDF?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInsPathGetByLongPath\nDir [out] full path of UDF\nsizeDir [in] max size of Dir\n\nGet the default open directory for the Insert UDF. A Dir that is too long (longer than \"sizeDir\") is truncated. It is assumed that the input \"Dir\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the maximum size of the directory path for Insert UDF?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInsPathGetByLongPath\nDir [out] full path of UDF\nsizeDir [in] max size of Dir\n\nGet the default open directory for the Insert UDF. A Dir that is too long (longer than \"sizeDir\") is truncated. It is assumed that the input \"Dir\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a limit on the length of the directory path for Insert UDF?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInsPathGetByLongPath\nDir [out] full path of UDF\nsizeDir [in] max size of Dir\n\nGet the default open directory for the Insert UDF. A Dir that is too long (longer than \"sizeDir\") is truncated. It is assumed that the input \"Dir\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 3D point entity to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPnt\nPoint [in] point coordinates\nidEnt [out] id of new point entity\n\nAdds a 3D point entity to the active part. If \"idEnt\" is not NULL, the id of the new point entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to output the id of the new point entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPnt\nPoint [in] point coordinates\nidEnt [out] id of new point entity\n\nAdds a 3D point entity to the active part. If \"idEnt\" is not NULL, the id of the new point entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to specify point coordinates for adding a 3D point entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPnt\nPoint [in] point coordinates\nidEnt [out] id of new point entity\n\nAdds a 3D point entity to the active part. If \"idEnt\" is not NULL, the id of the new point entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add 3D points entity to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPntNew\nCount [in] number of points\nPntData [in] points data\nidAlignPln [in] id of align plane\nPrjToPln [in] whether to project point to alignment plane\nidPntFtr [out] id of new point feature\n\nAdds 3D points entity to the active part.\nIf the id of the alignment plane \"idAlignPln\" is valid and \"PrjToPln\" is 1, the input point is projected onto the specified alignment plane.\nIf \"idPntFtr\" is not NULL, the id of the new point feature is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to project a point onto a specified alignment plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPntNew\nCount [in] number of points\nPntData [in] points data\nidAlignPln [in] id of align plane\nPrjToPln [in] whether to project point to alignment plane\nidPntFtr [out] id of new point feature\n\nAdds 3D points entity to the active part.\nIf the id of the alignment plane \"idAlignPln\" is valid and \"PrjToPln\" is 1, the input point is projected onto the specified alignment plane.\nIf \"idPntFtr\" is not NULL, the id of the new point feature is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new point feature after adding a point?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPntNew\nCount [in] number of points\nPntData [in] points data\nidAlignPln [in] id of align plane\nPrjToPln [in] whether to project point to alignment plane\nidPntFtr [out] id of new point feature\n\nAdds 3D points entity to the active part.\nIf the id of the alignment plane \"idAlignPln\" is valid and \"PrjToPln\" is 1, the input point is projected onto the specified alignment plane.\nIf \"idPntFtr\" is not NULL, the id of the new point feature is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a list of 3D point entities to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPnts\nCount [in] number of points\nPoints [in] list of points\n\nAdds a list 3D point entities to the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add multiple points to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPnts\nCount [in] number of points\nPoints [in] list of points\n\nAdds a list 3D point entities to the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add points to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPnts\nCount [in] number of points\nPoints [in] list of points\n\nAdds a list 3D point entities to the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create points along a curve with equal spacing?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPntsOnCrv\nidCrv [in] id of curve entity in active object\nPnt [in] reference point that specifies which end of the curve to start from; this input is only necessary if \"Dist\" is defined (i.e. non-zero); if this argument is NULL, the geometric start point of the curve will be used if needed.\nNum [in] the number of points to create along the curve; if \"Dist\" is zero, then the specified number of points will be created along the curve with equal spacing between them; \n\n if \"Dist\" is \"non-zero\", then \"Num\" points will be created along the curve with \"Dist\" as the spacing between each point; in this case, \"Pnt\" should be input and an extension option should be defined in case the specified number of points at the specified distance exceeds the length of the curve; \n\n if \"Num\" is input as zero, then \"Dist\" must be specified; in this case, points are created the specified distance apart, beginning at the end of the curve closest to \"Pnt\" and ending at/before the other end of the curve.\nDist [in] the distance (mm) between points (see description of \"Num\" argument)\nOpt [in] extension option is \"Dist\" is non-zero\nCount [out] if this argument is not NULL, output the number of points created\nidEnts [out] if \"Count\" is not NULL, and this argument is not NULL, a list of the database id's of the point entities created by this function is output. \n\n Memory for the list is allocated by this function. The calling procedure is responsible to free the memory.\n\nCreates point entities spaced on and along a curve based on the specified input parameters."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create points along a curve with specified distance between them?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPntsOnCrv\nidCrv [in] id of curve entity in active object\nPnt [in] reference point that specifies which end of the curve to start from; this input is only necessary if \"Dist\" is defined (i.e. non-zero); if this argument is NULL, the geometric start point of the curve will be used if needed.\nNum [in] the number of points to create along the curve; if \"Dist\" is zero, then the specified number of points will be created along the curve with equal spacing between them; \n\n if \"Dist\" is \"non-zero\", then \"Num\" points will be created along the curve with \"Dist\" as the spacing between each point; in this case, \"Pnt\" should be input and an extension option should be defined in case the specified number of points at the specified distance exceeds the length of the curve; \n\n if \"Num\" is input as zero, then \"Dist\" must be specified; in this case, points are created the specified distance apart, beginning at the end of the curve closest to \"Pnt\" and ending at/before the other end of the curve.\nDist [in] the distance (mm) between points (see description of \"Num\" argument)\nOpt [in] extension option is \"Dist\" is non-zero\nCount [out] if this argument is not NULL, output the number of points created\nidEnts [out] if \"Count\" is not NULL, and this argument is not NULL, a list of the database id's of the point entities created by this function is output. \n\n Memory for the list is allocated by this function. The calling procedure is responsible to free the memory.\n\nCreates point entities spaced on and along a curve based on the specified input parameters."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there an option to specify the extension when creating points along a curve with a specified distance?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPntsOnCrv\nidCrv [in] id of curve entity in active object\nPnt [in] reference point that specifies which end of the curve to start from; this input is only necessary if \"Dist\" is defined (i.e. non-zero); if this argument is NULL, the geometric start point of the curve will be used if needed.\nNum [in] the number of points to create along the curve; if \"Dist\" is zero, then the specified number of points will be created along the curve with equal spacing between them; \n\n if \"Dist\" is \"non-zero\", then \"Num\" points will be created along the curve with \"Dist\" as the spacing between each point; in this case, \"Pnt\" should be input and an extension option should be defined in case the specified number of points at the specified distance exceeds the length of the curve; \n\n if \"Num\" is input as zero, then \"Dist\" must be specified; in this case, points are created the specified distance apart, beginning at the end of the curve closest to \"Pnt\" and ending at/before the other end of the curve.\nDist [in] the distance (mm) between points (see description of \"Num\" argument)\nOpt [in] extension option is \"Dist\" is non-zero\nCount [out] if this argument is not NULL, output the number of points created\nidEnts [out] if \"Count\" is not NULL, and this argument is not NULL, a list of the database id's of the point entities created by this function is output. \n\n Memory for the list is allocated by this function. The calling procedure is responsible to free the memory.\n\nCreates point entities spaced on and along a curve based on the specified input parameters."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get the count of points created along the curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPntsOnCrv\nidCrv [in] id of curve entity in active object\nPnt [in] reference point that specifies which end of the curve to start from; this input is only necessary if \"Dist\" is defined (i.e. non-zero); if this argument is NULL, the geometric start point of the curve will be used if needed.\nNum [in] the number of points to create along the curve; if \"Dist\" is zero, then the specified number of points will be created along the curve with equal spacing between them; \n\n if \"Dist\" is \"non-zero\", then \"Num\" points will be created along the curve with \"Dist\" as the spacing between each point; in this case, \"Pnt\" should be input and an extension option should be defined in case the specified number of points at the specified distance exceeds the length of the curve; \n\n if \"Num\" is input as zero, then \"Dist\" must be specified; in this case, points are created the specified distance apart, beginning at the end of the curve closest to \"Pnt\" and ending at/before the other end of the curve.\nDist [in] the distance (mm) between points (see description of \"Num\" argument)\nOpt [in] extension option is \"Dist\" is non-zero\nCount [out] if this argument is not NULL, output the number of points created\nidEnts [out] if \"Count\" is not NULL, and this argument is not NULL, a list of the database id's of the point entities created by this function is output. \n\n Memory for the list is allocated by this function. The calling procedure is responsible to free the memory.\n\nCreates point entities spaced on and along a curve based on the specified input parameters."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of database id's of the point entities created along the curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPntsOnCrv\nidCrv [in] id of curve entity in active object\nPnt [in] reference point that specifies which end of the curve to start from; this input is only necessary if \"Dist\" is defined (i.e. non-zero); if this argument is NULL, the geometric start point of the curve will be used if needed.\nNum [in] the number of points to create along the curve; if \"Dist\" is zero, then the specified number of points will be created along the curve with equal spacing between them; \n\n if \"Dist\" is \"non-zero\", then \"Num\" points will be created along the curve with \"Dist\" as the spacing between each point; in this case, \"Pnt\" should be input and an extension option should be defined in case the specified number of points at the specified distance exceeds the length of the curve; \n\n if \"Num\" is input as zero, then \"Dist\" must be specified; in this case, points are created the specified distance apart, beginning at the end of the curve closest to \"Pnt\" and ending at/before the other end of the curve.\nDist [in] the distance (mm) between points (see description of \"Num\" argument)\nOpt [in] extension option is \"Dist\" is non-zero\nCount [out] if this argument is not NULL, output the number of points created\nidEnts [out] if \"Count\" is not NULL, and this argument is not NULL, a list of the database id's of the point entities created by this function is output. \n\n Memory for the list is allocated by this function. The calling procedure is responsible to free the memory.\n\nCreates point entities spaced on and along a curve based on the specified input parameters."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 3D line to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLine2pt\nStart [in] start point\nEnd [in] end point\nidEnt [out] id of new 3D line entity\n\nAdds a 3D line to the active part. If \"idEnt\" is not NULL, the id of the new line entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a line between two points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLine2pt\nStart [in] start point\nEnd [in] end point\nidEnt [out] id of new 3D line entity\n\nAdds a 3D line to the active part. If \"idEnt\" is not NULL, the id of the new line entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the newly created 3D line entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLine2pt\nStart [in] start point\nEnd [in] end point\nidEnt [out] id of new 3D line entity\n\nAdds a 3D line to the active part. If \"idEnt\" is not NULL, the id of the new line entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartLine()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLineInit\nlineData [out] 3D line data\n\nInitialize the parameters of the cvxPartLine().\nnote:\nDo not assign a value to variable \"lineData\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing cvxPartLine()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLineInit\nlineData [out] 3D line data\n\nInitialize the parameters of the cvxPartLine().\nnote:\nDo not assign a value to variable \"lineData\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get 3D line data for cvxPartLine()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLineInit\nlineData [out] 3D line data\n\nInitialize the parameters of the cvxPartLine().\nnote:\nDo not assign a value to variable \"lineData\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 3D line to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLine\nlineData [in] 3D line data\nidLine [out] id of new 3D line\n\nAdds a 3D line to the active part. If \"idLine\" is not NULL, the id of the new line entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a 3D line in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLine\nlineData [in] 3D line data\nidLine [out] id of new 3D line\n\nAdds a 3D line to the active part. If \"idLine\" is not NULL, the id of the new line entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the newly added 3D line?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLine\nlineData [in] 3D line data\nidLine [out] id of new 3D line\n\nAdds a 3D line to the active part. If \"idLine\" is not NULL, the id of the new line entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartPolyline?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPolylineInit\ndata [out] 3D polyline data\n\nInitialize the parameters of the cvxPartPolyline().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing cvxPartPolyline?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPolylineInit\ndata [out] 3D polyline data\n\nInitialize the parameters of the cvxPartPolyline().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get 3D polyline data using cvxPartPolylineInit?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPolylineInit\ndata [out] 3D polyline data\n\nInitialize the parameters of the cvxPartPolyline().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 3D Polyline to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPolyLine\npolylinedata [in] 3D polyline data\nCnt [out] number of lines to construct polyline\nidEnt [out] id of new lines to construct polyline\n\nAdd a 3D Polyline to the active part by creating a separate line entity between each pair of input points. If \"idEnt\" is not NULL, this function outputs a list of the new line entity id's, and the number of new lines is assigned to \"Cnt\". The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create separate line entities between each pair of input points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPolyLine\npolylinedata [in] 3D polyline data\nCnt [out] number of lines to construct polyline\nidEnt [out] id of new lines to construct polyline\n\nAdd a 3D Polyline to the active part by creating a separate line entity between each pair of input points. If \"idEnt\" is not NULL, this function outputs a list of the new line entity id's, and the number of new lines is assigned to \"Cnt\". The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the number of lines to construct a polyline?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPolyLine\npolylinedata [in] 3D polyline data\nCnt [out] number of lines to construct polyline\nidEnt [out] id of new lines to construct polyline\n\nAdd a 3D Polyline to the active part by creating a separate line entity between each pair of input points. If \"idEnt\" is not NULL, this function outputs a list of the new line entity id's, and the number of new lines is assigned to \"Cnt\". The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of new lines to construct a polyline?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPolyLine\npolylinedata [in] 3D polyline data\nCnt [out] number of lines to construct polyline\nidEnt [out] id of new lines to construct polyline\n\nAdd a 3D Polyline to the active part by creating a separate line entity between each pair of input points. If \"idEnt\" is not NULL, this function outputs a list of the new line entity id's, and the number of new lines is assigned to \"Cnt\". The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 3D arc to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartArc3pt\nStart [in] start point\nEnd [in] end point\nMid [in] mid (i.e. through) point\nidEnt [out] id of new 3D arc entity\n\nAdds a 3D arc to the active part. If \"idEnt\" is not NULL, the id of the new arc entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a 3D arc with start, end, and mid points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartArc3pt\nStart [in] start point\nEnd [in] end point\nMid [in] mid (i.e. through) point\nidEnt [out] id of new 3D arc entity\n\nAdds a 3D arc to the active part. If \"idEnt\" is not NULL, the id of the new arc entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the id of the newly created 3D arc entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartArc3pt\nStart [in] start point\nEnd [in] end point\nMid [in] mid (i.e. through) point\nidEnt [out] id of new 3D arc entity\n\nAdds a 3D arc to the active part. If \"idEnt\" is not NULL, the id of the new arc entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 3D arc to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartArcRad\nPlane [in] insertion plane\nRadius [in] radius (mm)\nStart [in] start angle (deg) - CCW from X axis\nEnd [in] end angle (deg) - CCW from X axis\nidEnt [out] id of new 2D circle entity\n\nAdds a 3D arc to the active part. The arc lies on the specified plane with its center at the plane's origin and its start/end angles measured CCW from the plane's X axis. If \"idEnt\" is not NULL, the id of the new entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to add a 3D arc?"
            },
            {
                "role": "assistant",
                "content": "cvxPartArcRad\nPlane [in] insertion plane\nRadius [in] radius (mm)\nStart [in] start angle (deg) - CCW from X axis\nEnd [in] end angle (deg) - CCW from X axis\nidEnt [out] id of new 2D circle entity\n\nAdds a 3D arc to the active part. The arc lies on the specified plane with its center at the plane's origin and its start/end angles measured CCW from the plane's X axis. If \"idEnt\" is not NULL, the id of the new entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the start and end angles of the 3D arc?"
            },
            {
                "role": "assistant",
                "content": "cvxPartArcRad\nPlane [in] insertion plane\nRadius [in] radius (mm)\nStart [in] start angle (deg) - CCW from X axis\nEnd [in] end angle (deg) - CCW from X axis\nidEnt [out] id of new 2D circle entity\n\nAdds a 3D arc to the active part. The arc lies on the specified plane with its center at the plane's origin and its start/end angles measured CCW from the plane's X axis. If \"idEnt\" is not NULL, the id of the new entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the id of the newly added 3D arc entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartArcRad\nPlane [in] insertion plane\nRadius [in] radius (mm)\nStart [in] start angle (deg) - CCW from X axis\nEnd [in] end angle (deg) - CCW from X axis\nidEnt [out] id of new 2D circle entity\n\nAdds a 3D arc to the active part. The arc lies on the specified plane with its center at the plane's origin and its start/end angles measured CCW from the plane's X axis. If \"idEnt\" is not NULL, the id of the new entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartArc()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartArcInit\narcData [out] 3D arc data\n\nInitialize the parameters of the cvxPartArc().\nnote:\nDo not assign a value to variable \"arcData\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to initialize 3D arc data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartArcInit\narcData [out] 3D arc data\n\nInitialize the parameters of the cvxPartArc().\nnote:\nDo not assign a value to variable \"arcData\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to empty everything before initializing arc data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartArcInit\narcData [out] 3D arc data\n\nInitialize the parameters of the cvxPartArc().\nnote:\nDo not assign a value to variable \"arcData\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 3D arc to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartArc\narcData [in] 3D arc data\nidArc [out] id of new 3D arc\n\nAdds a 3D arc to the active part. If \"idArc\" is not NULL, the id of the new arc entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a 3D arc?"
            },
            {
                "role": "assistant",
                "content": "cvxPartArc\narcData [in] 3D arc data\nidArc [out] id of new 3D arc\n\nAdds a 3D arc to the active part. If \"idArc\" is not NULL, the id of the new arc entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the newly added 3D arc?"
            },
            {
                "role": "assistant",
                "content": "cvxPartArc\narcData [in] 3D arc data\nidArc [out] id of new 3D arc\n\nAdds a 3D arc to the active part. If \"idArc\" is not NULL, the id of the new arc entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartCircle()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCircleInit\ncircleData [out] 3D circle data\n\nInitialize the parameters of the cvxPartCircle().\nnote:\nDo not assign a value to variable \"circleData\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize 3D circle data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCircleInit\ncircleData [out] 3D circle data\n\nInitialize the parameters of the cvxPartCircle().\nnote:\nDo not assign a value to variable \"circleData\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to empty everything before initializing circleData?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCircleInit\ncircleData [out] 3D circle data\n\nInitialize the parameters of the cvxPartCircle().\nnote:\nDo not assign a value to variable \"circleData\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 3D circle to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCircle\ncircleData [in] 3D circle data\nidCircle [out] id of new 3D circle\n\nAdds a 3D circle to the active part. If \"idCircle\" is not NULL, the id of the new arc entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a 3D circle?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCircle\ncircleData [in] 3D circle data\nidCircle [out] id of new 3D circle\n\nAdds a 3D circle to the active part. If \"idCircle\" is not NULL, the id of the new arc entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of a new 3D circle?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCircle\ncircleData [in] 3D circle data\nidCircle [out] id of new 3D circle\n\nAdds a 3D circle to the active part. If \"idCircle\" is not NULL, the id of the new arc entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartRectangle?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRectangleInit\ndata [out] Rectangle data\n\nInitialize the parameters of the cvxPartRectangle().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing cvxPartRectangle?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRectangleInit\ndata [out] Rectangle data\n\nInitialize the parameters of the cvxPartRectangle().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the rectangle data for cvxPartRectangle?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRectangleInit\ndata [out] Rectangle data\n\nInitialize the parameters of the cvxPartRectangle().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 3D rectangle to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRectangle\nrectData [in] rectangle input data\niCnt [out] number of output entities\nidEnt [out] id of new 3D rectangle entities\n\nAdd a 3D rectangle to the active part. The rectangle lies on the specified plane with the specified center. Commonly, the output number \"iCnt\" should be 4. If \"idEnt\" is not NULL, the id of 4 lines of the rectangle is output.\nnote:\nStructure svxRectangleData can be initialized through interface cvxPartRectangleInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to specify the center and plane for the 3D rectangle?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRectangle\nrectData [in] rectangle input data\niCnt [out] number of output entities\nidEnt [out] id of new 3D rectangle entities\n\nAdd a 3D rectangle to the active part. The rectangle lies on the specified plane with the specified center. Commonly, the output number \"iCnt\" should be 4. If \"idEnt\" is not NULL, the id of 4 lines of the rectangle is output.\nnote:\nStructure svxRectangleData can be initialized through interface cvxPartRectangleInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new 3D rectangle entities?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRectangle\nrectData [in] rectangle input data\niCnt [out] number of output entities\nidEnt [out] id of new 3D rectangle entities\n\nAdd a 3D rectangle to the active part. The rectangle lies on the specified plane with the specified center. Commonly, the output number \"iCnt\" should be 4. If \"idEnt\" is not NULL, the id of 4 lines of the rectangle is output.\nnote:\nStructure svxRectangleData can be initialized through interface cvxPartRectangleInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize the rectangle data through interface cvxPartRectangleInit()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRectangle\nrectData [in] rectangle input data\niCnt [out] number of output entities\nidEnt [out] id of new 3D rectangle entities\n\nAdd a 3D rectangle to the active part. The rectangle lies on the specified plane with the specified center. Commonly, the output number \"iCnt\" should be 4. If \"idEnt\" is not NULL, the id of 4 lines of the rectangle is output.\nnote:\nStructure svxRectangleData can be initialized through interface cvxPartRectangleInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 3D circle to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCir3pt\nP1 [in] first point on circle\nP2 [in] second point on circle\nP3 [in] third point on circle\nidEnt [out] id of new 3D circle entity\n\nAdds a 3D circle to the active part. If \"idEnt\" is not NULL, the id of the new circle entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a circle using three points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCir3pt\nP1 [in] first point on circle\nP2 [in] second point on circle\nP3 [in] third point on circle\nidEnt [out] id of new 3D circle entity\n\nAdds a 3D circle to the active part. If \"idEnt\" is not NULL, the id of the new circle entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the newly created 3D circle entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCir3pt\nP1 [in] first point on circle\nP2 [in] second point on circle\nP3 [in] third point on circle\nidEnt [out] id of new 3D circle entity\n\nAdds a 3D circle to the active part. If \"idEnt\" is not NULL, the id of the new circle entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 3D circle to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCirRad\nPlane [in] insertion plane\nRadius [in] radius (mm)\nidEnt [out] id of new 2D circle entity\n\nAdds a 3D circle to the active part. The circle lies on the specified plane with its center at the plane's origin. If \"idEnt\" is not NULL, the id of the new entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the insertion plane for a circle?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCirRad\nPlane [in] insertion plane\nRadius [in] radius (mm)\nidEnt [out] id of new 2D circle entity\n\nAdds a 3D circle to the active part. The circle lies on the specified plane with its center at the plane's origin. If \"idEnt\" is not NULL, the id of the new entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the newly added circle entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCirRad\nPlane [in] insertion plane\nRadius [in] radius (mm)\nidEnt [out] id of new 2D circle entity\n\nAdds a 3D circle to the active part. The circle lies on the specified plane with its center at the plane's origin. If \"idEnt\" is not NULL, the id of the new entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartEllipse?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEllipseInit\ndata [out] Ellipse data\n\nInitialize the parameters of the cvxPartEllipse().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize ellipse data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEllipseInit\ndata [out] Ellipse data\n\nInitialize the parameters of the cvxPartEllipse().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to empty everything before initializing ellipse data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEllipseInit\ndata [out] Ellipse data\n\nInitialize the parameters of the cvxPartEllipse().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 3D ellipse to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEllipse\nellipseData [in] ellipse input data\nidEnt [out] id of new 3D ellipse entity\n\nAdd a 3D ellipse to the active part. The ellipse lies on the specified plane with the specified center. If \"idEnt\" is not NULL, the id of the new entity is output.\nnote:\nStructure svxRectangleData can be initialized through interface cvxPartEllipseInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to specify the center and plane for the 3D ellipse?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEllipse\nellipseData [in] ellipse input data\nidEnt [out] id of new 3D ellipse entity\n\nAdd a 3D ellipse to the active part. The ellipse lies on the specified plane with the specified center. If \"idEnt\" is not NULL, the id of the new entity is output.\nnote:\nStructure svxRectangleData can be initialized through interface cvxPartEllipseInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get the id of the new 3D ellipse entity after adding it to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEllipse\nellipseData [in] ellipse input data\nidEnt [out] id of new 3D ellipse entity\n\nAdd a 3D ellipse to the active part. The ellipse lies on the specified plane with the specified center. If \"idEnt\" is not NULL, the id of the new entity is output.\nnote:\nStructure svxRectangleData can be initialized through interface cvxPartEllipseInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartCrvInt()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvIntInit\ndata [out] 3D interpolated curve data\n\nInitialize the parameters of the cvxPartCrvInt().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of cvxMemZero() inside the interface?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvIntInit\ndata [out] 3D interpolated curve data\n\nInitialize the parameters of the cvxPartCrvInt().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any specific way to assign a value to the variable 'data' before calling this function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvIntInit\ndata [out] 3D interpolated curve data\n\nInitialize the parameters of the cvxPartCrvInt().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the start tangent scale factor?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvIntScaleInit\nnPnt [in] number of the points\npPnts [in] points list\nstartScale [out] start tangent scale factor(NULL to ignore)\nendScale [out] end tangent scale factor(NULL to ignore)\n\nInitialize the parameters StartScale and EndScale of svxCrvIntData by the interpolated points."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the end tangent scale factor?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvIntScaleInit\nnPnt [in] number of the points\npPnts [in] points list\nstartScale [out] start tangent scale factor(NULL to ignore)\nendScale [out] end tangent scale factor(NULL to ignore)\n\nInitialize the parameters StartScale and EndScale of svxCrvIntData by the interpolated points."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize parameters by interpolated points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvIntScaleInit\nnPnt [in] number of the points\npPnts [in] points list\nstartScale [out] start tangent scale factor(NULL to ignore)\nendScale [out] end tangent scale factor(NULL to ignore)\n\nInitialize the parameters StartScale and EndScale of svxCrvIntData by the interpolated points."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 3D interpolated curve to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvInt\nCrv [in] input data interpolated curve\nidEnt [out] id of new 3D interpolated curve entity\n\nAdds a 3D curve interpolated through through the input points with the specified degree to the active part. If \"idEnt\" is not NULL, the id of the new curve entity is output.\nnote:\nStructure svxCrvIntData can be initialized through interface cvxPartCrvIntInit(). \n\n The StartScale and EndScale of svxCrvIntData can be initialized through interface cvxPartCrvIntScaleInit() by the interpolated points, or use the default value by cvxPartCrvIntInit(), or set them by yourselves ."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize svxCrvIntData through interface cvxPartCrvIntInit()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvInt\nCrv [in] input data interpolated curve\nidEnt [out] id of new 3D interpolated curve entity\n\nAdds a 3D curve interpolated through through the input points with the specified degree to the active part. If \"idEnt\" is not NULL, the id of the new curve entity is output.\nnote:\nStructure svxCrvIntData can be initialized through interface cvxPartCrvIntInit(). \n\n The StartScale and EndScale of svxCrvIntData can be initialized through interface cvxPartCrvIntScaleInit() by the interpolated points, or use the default value by cvxPartCrvIntInit(), or set them by yourselves ."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the StartScale and EndScale of svxCrvIntData using interface cvxPartCrvIntScaleInit()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvInt\nCrv [in] input data interpolated curve\nidEnt [out] id of new 3D interpolated curve entity\n\nAdds a 3D curve interpolated through through the input points with the specified degree to the active part. If \"idEnt\" is not NULL, the id of the new curve entity is output.\nnote:\nStructure svxCrvIntData can be initialized through interface cvxPartCrvIntInit(). \n\n The StartScale and EndScale of svxCrvIntData can be initialized through interface cvxPartCrvIntScaleInit() by the interpolated points, or use the default value by cvxPartCrvIntInit(), or set them by yourselves ."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I set the StartScale and EndScale of svxCrvIntData by myself?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvInt\nCrv [in] input data interpolated curve\nidEnt [out] id of new 3D interpolated curve entity\n\nAdds a 3D curve interpolated through through the input points with the specified degree to the active part. If \"idEnt\" is not NULL, the id of the new curve entity is output.\nnote:\nStructure svxCrvIntData can be initialized through interface cvxPartCrvIntInit(). \n\n The StartScale and EndScale of svxCrvIntData can be initialized through interface cvxPartCrvIntScaleInit() by the interpolated points, or use the default value by cvxPartCrvIntInit(), or set them by yourselves ."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSpline()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSplineInit\ndata [out] Spline data\ncount [in] count of points\n\nInitialize the parameters of the cvxPartSpline(). If count > 0, this function allocates memory to data->Pnts based on the value of count and initializes the data->Pnts structure. Otherwise data->Pnts will be initialized to NULL.\ncvxSplinePntInit() can initialize struct svxSplinePnt (data->Pnts).\nIf the user needs to clear \"data\" and count > 0, the cvxMemFree interface needs to be called to free \"data->Pnts\" memory.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to allocate memory to data->Pnts based on the value of count?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSplineInit\ndata [out] Spline data\ncount [in] count of points\n\nInitialize the parameters of the cvxPartSpline(). If count > 0, this function allocates memory to data->Pnts based on the value of count and initializes the data->Pnts structure. Otherwise data->Pnts will be initialized to NULL.\ncvxSplinePntInit() can initialize struct svxSplinePnt (data->Pnts).\nIf the user needs to clear \"data\" and count > 0, the cvxMemFree interface needs to be called to free \"data->Pnts\" memory.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to clear 'data' when count is greater than 0?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSplineInit\ndata [out] Spline data\ncount [in] count of points\n\nInitialize the parameters of the cvxPartSpline(). If count > 0, this function allocates memory to data->Pnts based on the value of count and initializes the data->Pnts structure. Otherwise data->Pnts will be initialized to NULL.\ncvxSplinePntInit() can initialize struct svxSplinePnt (data->Pnts).\nIf the user needs to clear \"data\" and count > 0, the cvxMemFree interface needs to be called to free \"data->Pnts\" memory.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to initialize struct svxSplinePnt (data->Pnts)?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSplineInit\ndata [out] Spline data\ncount [in] count of points\n\nInitialize the parameters of the cvxPartSpline(). If count > 0, this function allocates memory to data->Pnts based on the value of count and initializes the data->Pnts structure. Otherwise data->Pnts will be initialized to NULL.\ncvxSplinePntInit() can initialize struct svxSplinePnt (data->Pnts).\nIf the user needs to clear \"data\" and count > 0, the cvxMemFree interface needs to be called to free \"data->Pnts\" memory.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxSplinePnt structure?"
            },
            {
                "role": "assistant",
                "content": "cvxSplinePntInit\ndata [out] Spline point data\n\nInitialize the svxSplinePnt structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything inside the svxSplinePnt structure?"
            },
            {
                "role": "assistant",
                "content": "cvxSplinePntInit\ndata [out] Spline point data\n\nInitialize the svxSplinePnt structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize the Spline point data?"
            },
            {
                "role": "assistant",
                "content": "cvxSplinePntInit\ndata [out] Spline point data\n\nInitialize the svxSplinePnt structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 3D curve interpolated through input points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSpline\nPntData [in] spline data\nidEnt [out] id of new 2D spline entity (NULL to ignore)\n\nAdds a 3D curve interpolated through through the input points/control points with the specified data to the active part.\nIf \"idEnt\" is not NULL, the id of the new curve entity is output.\nnote:\nStructure svxSplineData can be initialized through interface cvxPartSplineInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize svxSplineData through interface cvxPartSplineInit?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSpline\nPntData [in] spline data\nidEnt [out] id of new 2D spline entity (NULL to ignore)\n\nAdds a 3D curve interpolated through through the input points/control points with the specified data to the active part.\nIf \"idEnt\" is not NULL, the id of the new curve entity is output.\nnote:\nStructure svxSplineData can be initialized through interface cvxPartSplineInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new curve entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSpline\nPntData [in] spline data\nidEnt [out] id of new 2D spline entity (NULL to ignore)\n\nAdds a 3D curve interpolated through through the input points/control points with the specified data to the active part.\nIf \"idEnt\" is not NULL, the id of the new curve entity is output.\nnote:\nStructure svxSplineData can be initialized through interface cvxPartSplineInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of the project to face data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvProjToFaceInit\ndata [out] project to face data\n\nInitialize the parameters of the cvxPartCrvProjToFace().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing project to face data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvProjToFaceInit\ndata [out] project to face data\n\nInitialize the parameters of the cvxPartCrvProjToFace().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize project to face data without assigning a value to the variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvProjToFaceInit\ndata [out] project to face data\n\nInitialize the parameters of the cvxPartCrvProjToFace().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to project curves or a sketch onto faces and/or datum planes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvProjToFace\ndata [in] project to face data\ncntEnts [out] count of new curve entities (NULL to ignore)\npEnts [out] index of new curve entities (NULL to ignore)\n\nUse this command to project curves or a sketch onto faces and/or datum planes. By default, the curve is projected normal to the faces or planes. Use the Direction option to select a different project direction.\nYou can also choose to limit the projected curve to the face's trim boundaries. If more than one curve is created, they become a single feature.\nnote:\nInterface cvxPartCrvProjToFaceInit() can initialize variables of this function. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to limit the projected curve to the face's trim boundaries?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvProjToFace\ndata [in] project to face data\ncntEnts [out] count of new curve entities (NULL to ignore)\npEnts [out] index of new curve entities (NULL to ignore)\n\nUse this command to project curves or a sketch onto faces and/or datum planes. By default, the curve is projected normal to the faces or planes. Use the Direction option to select a different project direction.\nYou can also choose to limit the projected curve to the face's trim boundaries. If more than one curve is created, they become a single feature.\nnote:\nInterface cvxPartCrvProjToFaceInit() can initialize variables of this function. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I select a different project direction for the curve projection?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvProjToFace\ndata [in] project to face data\ncntEnts [out] count of new curve entities (NULL to ignore)\npEnts [out] index of new curve entities (NULL to ignore)\n\nUse this command to project curves or a sketch onto faces and/or datum planes. By default, the curve is projected normal to the faces or planes. Use the Direction option to select a different project direction.\nYou can also choose to limit the projected curve to the face's trim boundaries. If more than one curve is created, they become a single feature.\nnote:\nInterface cvxPartCrvProjToFaceInit() can initialize variables of this function. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartInterXCurve()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInterXCurveInit\ndata [out] inter curve data\n\nInitialize the parameters of the cvxPartInterXCurve().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing the parameters of cvxPartInterXCurve()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInterXCurveInit\ndata [out] inter curve data\n\nInitialize the parameters of the cvxPartInterXCurve().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize the inter curve data for cvxPartInterXCurve() without assigning a value to the variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInterXCurveInit\ndata [out] inter curve data\n\nInitialize the parameters of the cvxPartInterXCurve().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a curve at the intersection of faces, open shapes, or solids?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInterXCurve\npSurf [in] faces to intersect\nidFtr [out] id of new curves list (pass in NULL to ignore)\n\nUse this function to create a curve or curves at the intersection of two or more faces, open shapes, or solids.\nnote:\nInterface cvxPartInterXCurveInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create curves at the intersection of multiple faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInterXCurve\npSurf [in] faces to intersect\nidFtr [out] id of new curves list (pass in NULL to ignore)\n\nUse this function to create a curve or curves at the intersection of two or more faces, open shapes, or solids.\nnote:\nInterface cvxPartInterXCurveInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the ID of new curves list at the intersection of faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInterXCurve\npSurf [in] faces to intersect\nidFtr [out] id of new curves list (pass in NULL to ignore)\n\nUse this function to create a curve or curves at the intersection of two or more faces, open shapes, or solids.\nnote:\nInterface cvxPartInterXCurveInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of curve on face through points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvOnFaceThruPtsInit\ndata [out] curve on face through points data\n\nInitialize the parameters of the cvxPartCrvOnFaceThruPts().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing curve on face through points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvOnFaceThruPtsInit\ndata [out] curve on face through points data\n\nInitialize the parameters of the cvxPartCrvOnFaceThruPts().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize curve on face through points without assigning a value to the data variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvOnFaceThruPtsInit\ndata [out] curve on face through points data\n\nInitialize the parameters of the cvxPartCrvOnFaceThruPts().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a curve through points on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvOnFaceThruPts\ndata [out] curve on face through points data\nidEnt [in] index of new curve entity (NULL to ignore)\n\nUse this command to create a curve through a series of points on a face. Both the points and the curve lie on the face.\nnote:\nInterface cvxPartCrvOnFaceThruPtsInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a curve on a face through specified points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvOnFaceThruPts\ndata [out] curve on face through points data\nidEnt [in] index of new curve entity (NULL to ignore)\n\nUse this command to create a curve through a series of points on a face. Both the points and the curve lie on the face.\nnote:\nInterface cvxPartCrvOnFaceThruPtsInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize variables for creating a curve on a face through points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvOnFaceThruPts\ndata [out] curve on face through points data\nidEnt [in] index of new curve entity (NULL to ignore)\n\nUse this command to create a curve through a series of points on a face. Both the points and the curve lie on the face.\nnote:\nInterface cvxPartCrvOnFaceThruPtsInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of iso-curve on face data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIsoCurveOnFaceInit\ndata [out] iso-curve on face data\ncrvIsoType [in] iso-curve on face methods\n\nInitialize the parameters of the svxIsoCrvOnFaceData for cvxPartIsoCurveOnFace().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to initialize iso-curve on face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIsoCurveOnFaceInit\ndata [out] iso-curve on face data\ncrvIsoType [in] iso-curve on face methods\n\nInitialize the parameters of the svxIsoCrvOnFaceData for cvxPartIsoCurveOnFace().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing iso-curve on face data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIsoCurveOnFaceInit\ndata [out] iso-curve on face data\ncrvIsoType [in] iso-curve on face methods\n\nInitialize the parameters of the svxIsoCrvOnFaceData for cvxPartIsoCurveOnFace().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create iso-curves on a face using At Points method?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIsoCurveOnFace\ndata [in] iso-curve on face data\ncntEnts [out] count of new curve entities (NULL to ignore)\nidEnts [out] index of new curve entities (NULL to ignore)\n\nUse this command to create iso-curves on a face using a variety of methods. The curves are independent wireframe features that associated with the face. The methods in At Points, At U/V Parameter and Multiple.\nThe calling procedure MUST deallocate the output list with cvxMemFree() if cntEnts and idEnts are not NULL.\nnote:\nInterface cvxPartIsoCurveOnFaceInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create iso-curves on a face using At U/V Parameter method?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIsoCurveOnFace\ndata [in] iso-curve on face data\ncntEnts [out] count of new curve entities (NULL to ignore)\nidEnts [out] index of new curve entities (NULL to ignore)\n\nUse this command to create iso-curves on a face using a variety of methods. The curves are independent wireframe features that associated with the face. The methods in At Points, At U/V Parameter and Multiple.\nThe calling procedure MUST deallocate the output list with cvxMemFree() if cntEnts and idEnts are not NULL.\nnote:\nInterface cvxPartIsoCurveOnFaceInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create iso-curves on a face using Multiple method?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIsoCurveOnFace\ndata [in] iso-curve on face data\ncntEnts [out] count of new curve entities (NULL to ignore)\nidEnts [out] index of new curve entities (NULL to ignore)\n\nUse this command to create iso-curves on a face using a variety of methods. The curves are independent wireframe features that associated with the face. The methods in At Points, At U/V Parameter and Multiple.\nThe calling procedure MUST deallocate the output list with cvxMemFree() if cntEnts and idEnts are not NULL.\nnote:\nInterface cvxPartIsoCurveOnFaceInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for creating iso-curves on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIsoCurveOnFace\ndata [in] iso-curve on face data\ncntEnts [out] count of new curve entities (NULL to ignore)\nidEnts [out] index of new curve entities (NULL to ignore)\n\nUse this command to create iso-curves on a face using a variety of methods. The curves are independent wireframe features that associated with the face. The methods in At Points, At U/V Parameter and Multiple.\nThe calling procedure MUST deallocate the output list with cvxMemFree() if cntEnts and idEnts are not NULL.\nnote:\nInterface cvxPartIsoCurveOnFaceInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of isocline curve data for creating isocline curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIsoclineCurveInit\ndata [out] isocline curve data\ntype [in] create isocline curve's type (single angle or multiple angles)\n\nInitialize the parameters of the svxIsoclineCrvData for cvxPartIsoclineCurve().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to create isocline curve with single angle or multiple angles?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIsoclineCurveInit\ndata [out] isocline curve data\ntype [in] create isocline curve's type (single angle or multiple angles)\n\nInitialize the parameters of the svxIsoclineCrvData for cvxPartIsoclineCurve().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing the isocline curve data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIsoclineCurveInit\ndata [out] isocline curve data\ntype [in] create isocline curve's type (single angle or multiple angles)\n\nInitialize the parameters of the svxIsoclineCrvData for cvxPartIsoclineCurve().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create isocline curves on faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIsoclineCurve\ndata [in] isocline curve data\ncntEnts [out] count of new curve entities (NULL to ignore)\nidEnts [out] index of new curve entities (NULL to ignore)\n\nUse this command to create isocline curves on faces.\ncvxMemFree() if cntEnts and idEnts are not NULL.\nnote:\nInterface cvxPartIsoclineCurveInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for creating isocline curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIsoclineCurve\ndata [in] isocline curve data\ncntEnts [out] count of new curve entities (NULL to ignore)\nidEnts [out] index of new curve entities (NULL to ignore)\n\nUse this command to create isocline curves on faces.\ncvxMemFree() if cntEnts and idEnts are not NULL.\nnote:\nInterface cvxPartIsoclineCurveInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of new curve entities after creating isocline curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIsoclineCurve\ndata [in] isocline curve data\ncntEnts [out] count of new curve entities (NULL to ignore)\nidEnts [out] index of new curve entities (NULL to ignore)\n\nUse this command to create isocline curves on faces.\ncvxMemFree() if cntEnts and idEnts are not NULL.\nnote:\nInterface cvxPartIsoclineCurveInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create face curves around selected faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceCurve\ndata [in] face curve data\ncntEnts [out] count of new curve entities (NULL to ignore)\nidEnts [out] index of new curve entities (NULL to ignore)\n\nThis command is helpful when creating general face curves for which functionality provided by the parting line commands is not needed. Face curves can be created quickly around selected faces or from the projections of sketches and 3D curves onto those faces.\nnote:\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to create face curves from the projections of sketches and 3D curves onto selected faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceCurve\ndata [in] face curve data\ncntEnts [out] count of new curve entities (NULL to ignore)\nidEnts [out] index of new curve entities (NULL to ignore)\n\nThis command is helpful when creating general face curves for which functionality provided by the parting line commands is not needed. Face curves can be created quickly around selected faces or from the projections of sketches and 3D curves onto those faces.\nnote:\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of new curve entities created from face curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceCurve\ndata [in] face curve data\ncntEnts [out] count of new curve entities (NULL to ignore)\nidEnts [out] index of new curve entities (NULL to ignore)\n\nThis command is helpful when creating general face curves for which functionality provided by the parting line commands is not needed. Face curves can be created quickly around selected faces or from the projections of sketches and 3D curves onto those faces.\nnote:\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create new curves by projecting two existing curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCombinedProj\ndata [in] combined projection data\ncntEnts [out] count of new curve entities (NULL to ignore)\nidEnts [out] index of new curve entities (NULL to ignore)\n\nUse this command to create one or more new curves by project two curves. Please note that the projections of two curves must intersect, otherwise ZW3D will alarm this command failed.\nnote:\nThe calling procedure MUST deallocate the output list with cvxMemFree() if cntEnts and idEnts are not NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to project two curves and create new curve entities?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCombinedProj\ndata [in] combined projection data\ncntEnts [out] count of new curve entities (NULL to ignore)\nidEnts [out] index of new curve entities (NULL to ignore)\n\nUse this command to create one or more new curves by project two curves. Please note that the projections of two curves must intersect, otherwise ZW3D will alarm this command failed.\nnote:\nThe calling procedure MUST deallocate the output list with cvxMemFree() if cntEnts and idEnts are not NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check the count of new curve entities after projecting two curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCombinedProj\ndata [in] combined projection data\ncntEnts [out] count of new curve entities (NULL to ignore)\nidEnts [out] index of new curve entities (NULL to ignore)\n\nUse this command to create one or more new curves by project two curves. Please note that the projections of two curves must intersect, otherwise ZW3D will alarm this command failed.\nnote:\nThe calling procedure MUST deallocate the output list with cvxMemFree() if cntEnts and idEnts are not NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to extract centerlines from an existing face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtractCenterlines\ncntFaces [in] count of faces to create centerlines\nidFaces [in] index of faces to create centerlines\nextractAxis [in] 1 to display the axis, else 0\ncntEnts [out] count of new curve entities (NULL to ignore)\nidEnts [out] index of new curve entities (NULL to ignore)\n\nUse this command to extract centerlines from an existing face. Cylinder, Cone and Torus faces are recognized and the appropriate curve type is created.\nnote:\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to display the axis while extracting centerlines?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtractCenterlines\ncntFaces [in] count of faces to create centerlines\nidFaces [in] index of faces to create centerlines\nextractAxis [in] 1 to display the axis, else 0\ncntEnts [out] count of new curve entities (NULL to ignore)\nidEnts [out] index of new curve entities (NULL to ignore)\n\nUse this command to extract centerlines from an existing face. Cylinder, Cone and Torus faces are recognized and the appropriate curve type is created.\nnote:\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create curve entities for recognized faces like Cylinder, Cone, and Torus?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtractCenterlines\ncntFaces [in] count of faces to create centerlines\nidFaces [in] index of faces to create centerlines\nextractAxis [in] 1 to display the axis, else 0\ncntEnts [out] count of new curve entities (NULL to ignore)\nidEnts [out] index of new curve entities (NULL to ignore)\n\nUse this command to extract centerlines from an existing face. Cylinder, Cone and Torus faces are recognized and the appropriate curve type is created.\nnote:\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of curve blend constraints data for blending curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBlendCrvsConsInit\nconsData [out] curve blend constraints data\nobjType [in] object type (curve or face)\n\nInitialize the parameters of the svxCrvBlendCons for cvxPartBlendCrvs().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize the constraints data for blending curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBlendCrvsConsInit\nconsData [out] curve blend constraints data\nobjType [in] object type (curve or face)\n\nInitialize the parameters of the svxCrvBlendCons for cvxPartBlendCrvs().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters for blending curves based on object type?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBlendCrvsConsInit\nconsData [out] curve blend constraints data\nobjType [in] object type (curve or face)\n\nInitialize the parameters of the svxCrvBlendCons for cvxPartBlendCrvs().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of curve blend data for cvxPartBlendCrvs()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBlendCrvsInit\ndata [out] curve blend data\n\nInitialize the parameters of the cvxPartBlendCrvs().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing curve blend data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBlendCrvsInit\ndata [out] curve blend data\n\nInitialize the parameters of the cvxPartBlendCrvs().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize curve blend data for cvxPartBlendCrvs()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBlendCrvsInit\ndata [out] curve blend data\n\nInitialize the parameters of the cvxPartBlendCrvs().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a curve blend between two curves, lines, arcs, face edges or points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBlendCrvs\ndata [in] curve blend data\nidEnt [out] id of blend curve (NULL to ignore)\n\nUse this command to create a curve blend between two curves, lines, arcs, face edges or points. If \"idEnt\" is not NULL, the id of the shape created by this function is output via \"idEnt\".\nnote:\nInterface cvxPartBlendCrvsInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the id of the shape created by the curve blend function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBlendCrvs\ndata [in] curve blend data\nidEnt [out] id of blend curve (NULL to ignore)\n\nUse this command to create a curve blend between two curves, lines, arcs, face edges or points. If \"idEnt\" is not NULL, the id of the shape created by this function is output via \"idEnt\".\nnote:\nInterface cvxPartBlendCrvsInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to initialize variables for creating curve blends?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBlendCrvs\ndata [in] curve blend data\nidEnt [out] id of blend curve (NULL to ignore)\n\nUse this command to create a curve blend between two curves, lines, arcs, face edges or points. If \"idEnt\" is not NULL, the id of the shape created by this function is output via \"idEnt\".\nnote:\nInterface cvxPartBlendCrvsInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to offset a curve with a specified distance?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCurveOffset\nidCurve [in] curve id\nDis [in] offset distance\nidOut [out] id of curve after offset (NULL to ignore)\n\nOffset a curve with distance \"Dis\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to offset a curve by a given distance?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCurveOffset\nidCurve [in] curve id\nDis [in] offset distance\nidOut [out] id of curve after offset (NULL to ignore)\n\nOffset a curve with distance \"Dis\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the new curve id after offsetting a curve with a distance?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCurveOffset\nidCurve [in] curve id\nDis [in] offset distance\nidOut [out] id of curve after offset (NULL to ignore)\n\nOffset a curve with distance \"Dis\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a spiral curve on a plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSpiralCurve\ndata [in] spiral curve data\nidEnt [out] index of new curve entity (NULL to ignore)\n\nUse this command to create a spiral curve on a plane. User can define the revolve direction to clockwise or anti-clockwise."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to define the revolve direction of the spiral curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSpiralCurve\ndata [in] spiral curve data\nidEnt [out] index of new curve entity (NULL to ignore)\n\nUse this command to create a spiral curve on a plane. User can define the revolve direction to clockwise or anti-clockwise."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of the new curve entity after creating a spiral curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSpiralCurve\ndata [in] spiral curve data\nidEnt [out] index of new curve entity (NULL to ignore)\n\nUse this command to create a spiral curve on a plane. User can define the revolve direction to clockwise or anti-clockwise."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 3D curve-list entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvList\nCount [in] number of curves in curve-list\nCurves [in] pointer to list of 3D curve id's\nidEnt [out] id of new curve-list entity\n\nAdds a 3D curve-list entity which groups the specified curves. Features like Sweep, Revolve and Extrude may be applied to 3D curve-lists as well as 2D sketches. If \"idEnt\" is not NULL, the id of the new entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What features can be applied to 3D curve-lists?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvList\nCount [in] number of curves in curve-list\nCurves [in] pointer to list of 3D curve id's\nidEnt [out] id of new curve-list entity\n\nAdds a 3D curve-list entity which groups the specified curves. Features like Sweep, Revolve and Extrude may be applied to 3D curve-lists as well as 2D sketches. If \"idEnt\" is not NULL, the id of the new entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to group specified curves in CAD software?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvList\nCount [in] number of curves in curve-list\nCurves [in] pointer to list of 3D curve id's\nidEnt [out] id of new curve-list entity\n\nAdds a 3D curve-list entity which groups the specified curves. Features like Sweep, Revolve and Extrude may be applied to 3D curve-lists as well as 2D sketches. If \"idEnt\" is not NULL, the id of the new entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a curve to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCurve\nCrv [in] curve data\nidEnt [out] id of new curve entity\n\nAdds a curve to the active part. If \"idEnt\" is not NULL, the id of the new curve entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to output the id of the new curve entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCurve\nCrv [in] curve data\nidEnt [out] id of new curve entity\n\nAdds a curve to the active part. If \"idEnt\" is not NULL, the id of the new curve entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a new curve entity in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCurve\nCrv [in] curve data\nidEnt [out] id of new curve entity\n\nAdds a curve to the active part. If \"idEnt\" is not NULL, the id of the new curve entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to project a 2D curve along a direction?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCurveSilh\nidCurve [in] curve id\ndir [in] project direction\niCnt [out] number of new curves (NULL to ignore)\nidList [out] id of new curves (NULL to ignore)\n\nProject a 2D curve along a direction, to find its silhouettes. This will split the curve on its self-intersections. Output new silhouette curves via \"idList\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the silhouettes of a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCurveSilh\nidCurve [in] curve id\ndir [in] project direction\niCnt [out] number of new curves (NULL to ignore)\nidList [out] id of new curves (NULL to ignore)\n\nProject a 2D curve along a direction, to find its silhouettes. This will split the curve on its self-intersections. Output new silhouette curves via \"idList\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to split a curve on its self-intersections?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCurveSilh\nidCurve [in] curve id\ndir [in] project direction\niCnt [out] number of new curves (NULL to ignore)\nidList [out] id of new curves (NULL to ignore)\n\nProject a 2D curve along a direction, to find its silhouettes. This will split the curve on its self-intersections. Output new silhouette curves via \"idList\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to output new silhouette curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCurveSilh\nidCurve [in] curve id\ndir [in] project direction\niCnt [out] number of new curves (NULL to ignore)\nidList [out] id of new curves (NULL to ignore)\n\nProject a 2D curve along a direction, to find its silhouettes. This will split the curve on its self-intersections. Output new silhouette curves via \"idList\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a curve to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFittingCrv\niCnt [in] number of points\npnts [in] points\ntol [in] tolerance value\nsmth [in] smooth value\nidEnt [out] id of new curve entity\n\nAdd a curve to the active part from fitting some points and smooth it. If \"idEnt\" is not NULL, the id of the new curve entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to fit a curve from given points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFittingCrv\niCnt [in] number of points\npnts [in] points\ntol [in] tolerance value\nsmth [in] smooth value\nidEnt [out] id of new curve entity\n\nAdd a curve to the active part from fitting some points and smooth it. If \"idEnt\" is not NULL, the id of the new curve entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to smooth a curve in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFittingCrv\niCnt [in] number of points\npnts [in] points\ntol [in] tolerance value\nsmth [in] smooth value\nidEnt [out] id of new curve entity\n\nAdd a curve to the active part from fitting some points and smooth it. If \"idEnt\" is not NULL, the id of the new curve entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the id of the new curve entity after fitting points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFittingCrv\niCnt [in] number of points\npnts [in] points\ntol [in] tolerance value\nsmth [in] smooth value\nidEnt [out] id of new curve entity\n\nAdd a curve to the active part from fitting some points and smooth it. If \"idEnt\" is not NULL, the id of the new curve entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartCrvFillet()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvFilletInit\ndata [out] fillet data\n\nInitialize the parameters of the cvxPartCrvFillet().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of cvxMemZero() inside the interface?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvFilletInit\ndata [out] fillet data\n\nInitialize the parameters of the cvxPartCrvFillet().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any specific way to assign a value to the variable 'data' before calling this function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvFilletInit\ndata [out] fillet data\n\nInitialize the parameters of the cvxPartCrvFillet().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a fillet between two curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvFillet\ndata [in] fillet data\nidFillet [out] index of new fillet feature (NULL to ignore)\n\nUse this function to create a fillet between two curves."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a fillet feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvFillet\ndata [in] fillet data\nidFillet [out] index of new fillet feature (NULL to ignore)\n\nUse this function to create a fillet between two curves."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use fillet data to create a fillet between curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvFillet\ndata [in] fillet data\nidFillet [out] index of new fillet feature (NULL to ignore)\n\nUse this function to create a fillet between two curves."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartCrvFilletChain()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvFilletChainInit\ndata [out] chain fillet data\n\nInitialize the parameters of the cvxPartCrvFilletChain().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing the chain fillet data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvFilletChainInit\ndata [out] chain fillet data\n\nInitialize the parameters of the cvxPartCrvFilletChain().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize the chain fillet data without assigning a value to the variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvFilletChainInit\ndata [out] chain fillet data\n\nInitialize the parameters of the cvxPartCrvFilletChain().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create fillets between a chain of curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvFilletChain\ndata [in] chain fillet data\nidFilletChain [out] index of new fillet feature (NULL to ignore)\n\nUse this function to create fillets of a specified radius between a chain of curves."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create fillets with specified radius?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvFilletChain\ndata [in] chain fillet data\nidFilletChain [out] index of new fillet feature (NULL to ignore)\n\nUse this function to create fillets of a specified radius between a chain of curves."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use chain fillet data to create fillets?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvFilletChain\ndata [in] chain fillet data\nidFilletChain [out] index of new fillet feature (NULL to ignore)\n\nUse this function to create fillets of a specified radius between a chain of curves."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartCrvChamfer?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvChamferInit\ndata [out] chamfer data\n\nInitialize the parameters of the cvxPartCrvChamfer().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing chamfer data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvChamferInit\ndata [out] chamfer data\n\nInitialize the parameters of the cvxPartCrvChamfer().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get chamfer data without assigning a value to the variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvChamferInit\ndata [out] chamfer data\n\nInitialize the parameters of the cvxPartCrvChamfer().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a chamfer between two boundary curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvChamfer\ndata [in] chamfer data\nidChamfer [out] index of new chamfer feature (NULL to ignore)\n\nUse the function to create a chamfer between two boundary curves by specifying the setback(s) or setback value and angle. If a setback sets to \"ZERO\", the two curves are trimmed/extended to each other forming a corner."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to specify the setback and angle for creating a chamfer?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvChamfer\ndata [in] chamfer data\nidChamfer [out] index of new chamfer feature (NULL to ignore)\n\nUse the function to create a chamfer between two boundary curves by specifying the setback(s) or setback value and angle. If a setback sets to \"ZERO\", the two curves are trimmed/extended to each other forming a corner."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the index of the new chamfer feature after creation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvChamfer\ndata [in] chamfer data\nidChamfer [out] index of new chamfer feature (NULL to ignore)\n\nUse the function to create a chamfer between two boundary curves by specifying the setback(s) or setback value and angle. If a setback sets to \"ZERO\", the two curves are trimmed/extended to each other forming a corner."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartCrvChamferChain()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvChamferChainInit\ndata [out] chain chamfer data\n\nInitialize the parameters of the cvxPartCrvChamferChain().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing the chain chamfer data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvChamferChainInit\ndata [out] chain chamfer data\n\nInitialize the parameters of the cvxPartCrvChamferChain().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the chain chamfer data without assigning a value to the variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvChamferChainInit\ndata [out] chain chamfer data\n\nInitialize the parameters of the cvxPartCrvChamferChain().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create chamfers of equal setback around a chain of curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvChamferChain\ndata [in] chain chamfer data\nidChamfer [out] index of new chamfer feature (NULL to ignore)\n\nUse this function to create chamfers of equal setback around a chain of curves. There will be a chamfer between each adjacent curve in the chain.\nnote:\nInterface cvxPartCrvChamferChainInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create chamfers between each adjacent curve in a chain?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvChamferChain\ndata [in] chain chamfer data\nidChamfer [out] index of new chamfer feature (NULL to ignore)\n\nUse this function to create chamfers of equal setback around a chain of curves. There will be a chamfer between each adjacent curve in the chain.\nnote:\nInterface cvxPartCrvChamferChainInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of a new chamfer feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvChamferChain\ndata [in] chain chamfer data\nidChamfer [out] index of new chamfer feature (NULL to ignore)\n\nUse this function to create chamfers of equal setback around a chain of curves. There will be a chamfer between each adjacent curve in the chain.\nnote:\nInterface cvxPartCrvChamferChainInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to trim curves to faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvTrimToFaces\ndata [in] trim to faces data\nidTrim [out] index of new feature (NULL to ignore)\n\nUse this function to trim curves or sketches to faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to trim sketches to faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvTrimToFaces\ndata [in] trim to faces data\nidTrim [out] index of new feature (NULL to ignore)\n\nUse this function to trim curves or sketches to faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the trim to faces data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvTrimToFaces\ndata [in] trim to faces data\nidTrim [out] index of new feature (NULL to ignore)\n\nUse this function to trim curves or sketches to faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to split a curve at specified points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvSplitAtPnts\nidCurve [in] curve id\nCountPnts [in] number of points to split at\nPoints [in] list of points to split at\nCountCrvs [out] number of curves after split (NULL to ignore)\nNewCrvs [out] list of curves after split (NULL to ignore)\n\nSplit a curve at specified points. Outputs a list of indices of the new curves after split. The calling procedure MUST deallocate the internal memory of each element in the output list by calling cvxCurveFree(), after which the output list MUST be deallocated with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to split a curve at multiple points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvSplitAtPnts\nidCurve [in] curve id\nCountPnts [in] number of points to split at\nPoints [in] list of points to split at\nCountCrvs [out] number of curves after split (NULL to ignore)\nNewCrvs [out] list of curves after split (NULL to ignore)\n\nSplit a curve at specified points. Outputs a list of indices of the new curves after split. The calling procedure MUST deallocate the internal memory of each element in the output list by calling cvxCurveFree(), after which the output list MUST be deallocated with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of new curves after splitting a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvSplitAtPnts\nidCurve [in] curve id\nCountPnts [in] number of points to split at\nPoints [in] list of points to split at\nCountCrvs [out] number of curves after split (NULL to ignore)\nNewCrvs [out] list of curves after split (NULL to ignore)\n\nSplit a curve at specified points. Outputs a list of indices of the new curves after split. The calling procedure MUST deallocate the internal memory of each element in the output list by calling cvxCurveFree(), after which the output list MUST be deallocated with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the internal memory of the new curves after splitting?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvSplitAtPnts\nidCurve [in] curve id\nCountPnts [in] number of points to split at\nPoints [in] list of points to split at\nCountCrvs [out] number of curves after split (NULL to ignore)\nNewCrvs [out] list of curves after split (NULL to ignore)\n\nSplit a curve at specified points. Outputs a list of indices of the new curves after split. The calling procedure MUST deallocate the internal memory of each element in the output list by calling cvxCurveFree(), after which the output list MUST be deallocated with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the curve data of a curvilinear entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqReversedCurve\nidEnt [in] id of curvilinear entity\ndata [out] curve data.\n\nGet the curve data of the idEnt and the reversed curve data will be output.\nsee:\ncvxPartInqCurve().This interface can obtain curve data of curves, which is the opposite of this interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to obtain the reversed curve data of a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqReversedCurve\nidEnt [in] id of curvilinear entity\ndata [out] curve data.\n\nGet the curve data of the idEnt and the reversed curve data will be output.\nsee:\ncvxPartInqCurve().This interface can obtain curve data of curves, which is the opposite of this interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I retrieve the curve data of an entity and its reversed counterpart?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqReversedCurve\nidEnt [in] id of curvilinear entity\ndata [out] curve data.\n\nGet the curve data of the idEnt and the reversed curve data will be output.\nsee:\ncvxPartInqCurve().This interface can obtain curve data of curves, which is the opposite of this interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to trim or split curves to a set of boundary curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvTrimWithCrv\ndata [in] trim with curve data\nCountCrvs [out] count of new curve entities (NULL to ignore)\nNewCrvs [out] index of new curve entities (NULL to ignore)\n\nTrim or split curves to a set of boundary curves. First select the boundary Curves to split or trim to. Then select the curve Segments to delete, keep, or split. Curves can be split or trimmed by each curve in the set of boundary curves. At the part level you can trim 3D non-intersecting curves.\nnote:\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to select boundary curves to split or trim to?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvTrimWithCrv\ndata [in] trim with curve data\nCountCrvs [out] count of new curve entities (NULL to ignore)\nNewCrvs [out] index of new curve entities (NULL to ignore)\n\nTrim or split curves to a set of boundary curves. First select the boundary Curves to split or trim to. Then select the curve Segments to delete, keep, or split. Curves can be split or trimmed by each curve in the set of boundary curves. At the part level you can trim 3D non-intersecting curves.\nnote:\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list after trimming or splitting curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvTrimWithCrv\ndata [in] trim with curve data\nCountCrvs [out] count of new curve entities (NULL to ignore)\nNewCrvs [out] index of new curve entities (NULL to ignore)\n\nTrim or split curves to a set of boundary curves. First select the boundary Curves to split or trim to. Then select the curve Segments to delete, keep, or split. Curves can be split or trimmed by each curve in the set of boundary curves. At the part level you can trim 3D non-intersecting curves.\nnote:\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a concentric arc with a reference arc?"
            },
            {
                "role": "assistant",
                "content": "cvxPartConcentricArc\nrefArc [in] id of reference 3D arc entity (can be edge/curve)\nradius [in] radius (mm)\nidEnt [out] index of new 3D arc entity (NULL to ignore)\n\nUse this command to create an arc that share the same arc center."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to create an arc with the same center as a reference arc?"
            },
            {
                "role": "assistant",
                "content": "cvxPartConcentricArc\nrefArc [in] id of reference 3D arc entity (can be edge/curve)\nradius [in] radius (mm)\nidEnt [out] index of new 3D arc entity (NULL to ignore)\n\nUse this command to create an arc that share the same arc center."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the radius while creating a concentric arc?"
            },
            {
                "role": "assistant",
                "content": "cvxPartConcentricArc\nrefArc [in] id of reference 3D arc entity (can be edge/curve)\nradius [in] radius (mm)\nidEnt [out] index of new 3D arc entity (NULL to ignore)\n\nUse this command to create an arc that share the same arc center."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of converting curves to arcs/lines?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvConvertToArcsInit\ndata [out] curves convert to arc/line data\n\nInitialize the parameters of the cvxPartCrvConvertToArcs().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function should be called to empty everything before initializing the curve conversion parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvConvertToArcsInit\ndata [out] curves convert to arc/line data\n\nInitialize the parameters of the cvxPartCrvConvertToArcs().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a specific way to set up the data for converting curves to arcs/lines?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvConvertToArcsInit\ndata [out] curves convert to arc/line data\n\nInitialize the parameters of the cvxPartCrvConvertToArcs().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to convert curves to arcs/lines?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvConvertToArcs\ndata [in] curves convert to arc/line data\ncntArcs [out] count of arcs/lines after conversion (NULL to ignore)\nidArcs [out] id of arcs/lines after conversion (NULL to ignore)\n\nInitialize the parameters of the cvxPartCrvConvertToArcs().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of arcs/lines after conversion?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvConvertToArcs\ndata [in] curves convert to arc/line data\ncntArcs [out] count of arcs/lines after conversion (NULL to ignore)\nidArcs [out] id of arcs/lines after conversion (NULL to ignore)\n\nInitialize the parameters of the cvxPartCrvConvertToArcs().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of arcs/lines after conversion?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvConvertToArcs\ndata [in] curves convert to arc/line data\ncntArcs [out] count of arcs/lines after conversion (NULL to ignore)\nidArcs [out] id of arcs/lines after conversion (NULL to ignore)\n\nInitialize the parameters of the cvxPartCrvConvertToArcs().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a component into an active CamPlan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmCompInsert\nfileName [in] name of file for object selection\nshapeName [in] name of shape in file for object selection\nidx_CmComp [out] the index of the component object\n\nInsert the component into active CamPlan. Its id is output via \"idx_cmcomp\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to select an object from a file for insertion?"
            },
            {
                "role": "assistant",
                "content": "cvxCmCompInsert\nfileName [in] name of file for object selection\nshapeName [in] name of shape in file for object selection\nidx_CmComp [out] the index of the component object\n\nInsert the component into active CamPlan. Its id is output via \"idx_cmcomp\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of the inserted component object?"
            },
            {
                "role": "assistant",
                "content": "cvxCmCompInsert\nfileName [in] name of file for object selection\nshapeName [in] name of shape in file for object selection\nidx_CmComp [out] the index of the component object\n\nInsert the component into active CamPlan. Its id is output via \"idx_cmcomp\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a component in an active CamPlan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmCompDelete\nidx_CmComp [in] index of the component\n\nDelete the component in active CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove a component by its index in the active CamPlan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmCompDelete\nidx_CmComp [in] index of the component\n\nDelete the component in active CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to delete a component using its index in the active CamPlan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmCompDelete\nidx_CmComp [in] index of the component\n\nDelete the component in active CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the attributes of a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCmCompGetAttr\nidx_Cmcomp [in] index of the component\ncnt [in] count of attributes user wanna inquire\nattr [in] the enumerations user wanna inquire\npValue [out] the values return; user needs to free the memory\n\nInquire the component's attributes. Its value is output via \"pValue\".\nIf ZW_CAM_COMP_ATTR_CDCOMP is one value of attr, the data of pValue could be used for APIs of \"assembly component\" in VxApiPart.c(e.g. cvxCompInqPart()...).\nIf ZW_CAM_COMP_ATTR_CLASS is one value of attr, the data of pValue is one of evxCmCompClass.\nThe data of svxCmAttrValue should be converted according to the type of svxCmAttrValue."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the count of attributes for a specific component?"
            },
            {
                "role": "assistant",
                "content": "cvxCmCompGetAttr\nidx_Cmcomp [in] index of the component\ncnt [in] count of attributes user wanna inquire\nattr [in] the enumerations user wanna inquire\npValue [out] the values return; user needs to free the memory\n\nInquire the component's attributes. Its value is output via \"pValue\".\nIf ZW_CAM_COMP_ATTR_CDCOMP is one value of attr, the data of pValue could be used for APIs of \"assembly component\" in VxApiPart.c(e.g. cvxCompInqPart()...).\nIf ZW_CAM_COMP_ATTR_CLASS is one value of attr, the data of pValue is one of evxCmCompClass.\nThe data of svxCmAttrValue should be converted according to the type of svxCmAttrValue."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the values of specific attributes for a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCmCompGetAttr\nidx_Cmcomp [in] index of the component\ncnt [in] count of attributes user wanna inquire\nattr [in] the enumerations user wanna inquire\npValue [out] the values return; user needs to free the memory\n\nInquire the component's attributes. Its value is output via \"pValue\".\nIf ZW_CAM_COMP_ATTR_CDCOMP is one value of attr, the data of pValue could be used for APIs of \"assembly component\" in VxApiPart.c(e.g. cvxCompInqPart()...).\nIf ZW_CAM_COMP_ATTR_CLASS is one value of attr, the data of pValue is one of evxCmCompClass.\nThe data of svxCmAttrValue should be converted according to the type of svxCmAttrValue."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the attributes of a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCmCompSetAttr\nidx_Cmcomp [in] index of the component\ncnt [in] count of attributes user wanna set\nattr [in] the enumerations user wanna set\nvalue [in] the values needed\n\nSet the component attributes. \n\n \"attr\" should not be \"ZW_CAM_COMP_ATTR_FACES\". \n\n value->type: ZW_CAM_ATTR_VALUE_TYPE_INTEGER \n\n value->cnt: 1 \n\n value->data: evxCmCompClass"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to set the component attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxCmCompSetAttr\nidx_Cmcomp [in] index of the component\ncnt [in] count of attributes user wanna set\nattr [in] the enumerations user wanna set\nvalue [in] the values needed\n\nSet the component attributes. \n\n \"attr\" should not be \"ZW_CAM_COMP_ATTR_FACES\". \n\n value->type: ZW_CAM_ATTR_VALUE_TYPE_INTEGER \n\n value->cnt: 1 \n\n value->data: evxCmCompClass"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the count of attributes for a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCmCompSetAttr\nidx_Cmcomp [in] index of the component\ncnt [in] count of attributes user wanna set\nattr [in] the enumerations user wanna set\nvalue [in] the values needed\n\nSet the component attributes. \n\n \"attr\" should not be \"ZW_CAM_COMP_ATTR_FACES\". \n\n value->type: ZW_CAM_ATTR_VALUE_TYPE_INTEGER \n\n value->cnt: 1 \n\n value->data: evxCmCompClass"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the values for component attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxCmCompSetAttr\nidx_Cmcomp [in] index of the component\ncnt [in] count of attributes user wanna set\nattr [in] the enumerations user wanna set\nvalue [in] the values needed\n\nSet the component attributes. \n\n \"attr\" should not be \"ZW_CAM_COMP_ATTR_FACES\". \n\n value->type: ZW_CAM_ATTR_VALUE_TYPE_INTEGER \n\n value->cnt: 1 \n\n value->data: evxCmCompClass"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of components?"
            },
            {
                "role": "assistant",
                "content": "cvxCmCompInqInfo\ncompCnt [out] number of components\ncompNames [out] name of components\ncompPaths [out] path of components\n\nGet the components' information, including name and file path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the names of components?"
            },
            {
                "role": "assistant",
                "content": "cvxCmCompInqInfo\ncompCnt [out] number of components\ncompNames [out] name of components\ncompPaths [out] path of components\n\nGet the components' information, including name and file path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the file paths of components?"
            },
            {
                "role": "assistant",
                "content": "cvxCmCompInqInfo\ncompCnt [out] number of components\ncompNames [out] name of components\ncompPaths [out] path of components\n\nGet the components' information, including name and file path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of components?"
            },
            {
                "role": "assistant",
                "content": "cvxCmCompInqInfoByLongPath\ncompCnt [out] number of components\ncompNames [out] name of components\ncompPaths [out] path of components\n\nGet the components' information, including name and file path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the names of components?"
            },
            {
                "role": "assistant",
                "content": "cvxCmCompInqInfoByLongPath\ncompCnt [out] number of components\ncompNames [out] name of components\ncompPaths [out] path of components\n\nGet the components' information, including name and file path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the file path of components?"
            },
            {
                "role": "assistant",
                "content": "cvxCmCompInqInfoByLongPath\ncompCnt [out] number of components\ncompNames [out] name of components\ncompPaths [out] path of components\n\nGet the components' information, including name and file path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a new sketch to the active CAM plan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmPlanSkNew\nPlane [in] sketch insertion plane\nidSketch [out] id of new sketch\n\nAdds a new sketch to the active cam plan, aligned with the specified insertion plane. The sketch is activated for editing.\nIf \"idSketch\" is not NULL, the id of the new sketch is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to align a sketch with a specified insertion plane?"
            },
            {
                "role": "assistant",
                "content": "cvxCmPlanSkNew\nPlane [in] sketch insertion plane\nidSketch [out] id of new sketch\n\nAdds a new sketch to the active cam plan, aligned with the specified insertion plane. The sketch is activated for editing.\nIf \"idSketch\" is not NULL, the id of the new sketch is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to activate a new sketch for editing?"
            },
            {
                "role": "assistant",
                "content": "cvxCmPlanSkNew\nPlane [in] sketch insertion plane\nidSketch [out] id of new sketch\n\nAdds a new sketch to the active cam plan, aligned with the specified insertion plane. The sketch is activated for editing.\nIf \"idSketch\" is not NULL, the id of the new sketch is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the ID of the new sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxCmPlanSkNew\nPlane [in] sketch insertion plane\nidSketch [out] id of new sketch\n\nAdds a new sketch to the active cam plan, aligned with the specified insertion plane. The sketch is activated for editing.\nIf \"idSketch\" is not NULL, the id of the new sketch is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the attributes of a folder?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFolderGetAttr\nidx_folder [in] index of the folder\ncnt [in] cout of the attributes\nattr [in] list of evxCmFolderAttr user wanna get\nvalue [out] list of values return\n\nInquire the attributes of the folder. Its value is output via \"value\".\nvalue->type    &  value->cnt  &  value->data depend on \"attr\"\nZW_CAM_ATTR_VALUE_TYPE_STRING    <=32                 CM_FOLDER_NAME\nZW_CAM_ATTR_VALUE_TYPE_INTEGER   number      index    CM_FOLDER_SUB\n\nUser needs to allocate memory for \"value\", and free memory for \"value->data\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the value of specific attributes of a folder?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFolderGetAttr\nidx_folder [in] index of the folder\ncnt [in] cout of the attributes\nattr [in] list of evxCmFolderAttr user wanna get\nvalue [out] list of values return\n\nInquire the attributes of the folder. Its value is output via \"value\".\nvalue->type    &  value->cnt  &  value->data depend on \"attr\"\nZW_CAM_ATTR_VALUE_TYPE_STRING    <=32                 CM_FOLDER_NAME\nZW_CAM_ATTR_VALUE_TYPE_INTEGER   number      index    CM_FOLDER_SUB\n\nUser needs to allocate memory for \"value\", and free memory for \"value->data\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to allocate memory for the value of folder attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFolderGetAttr\nidx_folder [in] index of the folder\ncnt [in] cout of the attributes\nattr [in] list of evxCmFolderAttr user wanna get\nvalue [out] list of values return\n\nInquire the attributes of the folder. Its value is output via \"value\".\nvalue->type    &  value->cnt  &  value->data depend on \"attr\"\nZW_CAM_ATTR_VALUE_TYPE_STRING    <=32                 CM_FOLDER_NAME\nZW_CAM_ATTR_VALUE_TYPE_INTEGER   number      index    CM_FOLDER_SUB\n\nUser needs to allocate memory for \"value\", and free memory for \"value->data\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free memory for the value of folder attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFolderGetAttr\nidx_folder [in] index of the folder\ncnt [in] cout of the attributes\nattr [in] list of evxCmFolderAttr user wanna get\nvalue [out] list of values return\n\nInquire the attributes of the folder. Its value is output via \"value\".\nvalue->type    &  value->cnt  &  value->data depend on \"attr\"\nZW_CAM_ATTR_VALUE_TYPE_STRING    <=32                 CM_FOLDER_NAME\nZW_CAM_ATTR_VALUE_TYPE_INTEGER   number      index    CM_FOLDER_SUB\n\nUser needs to allocate memory for \"value\", and free memory for \"value->data\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve all operations under a specific folder node?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFolderInqOps\nfolder_name [in] folder name\nop_cnt [out] count of operations in the folder\nop_list [out] operations' index\n\nGet all operations under a folder node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the count of operations in a folder?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFolderInqOps\nfolder_name [in] folder name\nop_cnt [out] count of operations in the folder\nop_list [out] operations' index\n\nGet all operations under a folder node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the list of operations' index under a folder?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFolderInqOps\nfolder_name [in] folder name\nop_cnt [out] count of operations in the folder\nop_list [out] operations' index\n\nGet all operations under a folder node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a folder to the OPS item?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpInsFolder\nidx_out [out] index of folder\n\nInsert a Folder to the OPS item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a folder to the OPS item?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpInsFolder\nidx_out [out] index of folder\n\nInsert a Folder to the OPS item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of the inserted folder?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpInsFolder\nidx_out [out] index of folder\n\nInsert a Folder to the OPS item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the tree index by object database index?"
            },
            {
                "role": "assistant",
                "content": "cvxCmObjGetTreeId\nidx_in [in] object index\ntree_id [out] tree index\ntreeType [in] tree node type\n\nGet tree index by object db index."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the tree index for a specific object?"
            },
            {
                "role": "assistant",
                "content": "cvxCmObjGetTreeId\nidx_in [in] object index\ntree_id [out] tree index\ntreeType [in] tree node type\n\nGet tree index by object db index."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the tree index for a given object database index?"
            },
            {
                "role": "assistant",
                "content": "cvxCmObjGetTreeId\nidx_in [in] object index\ntree_id [out] tree index\ntreeType [in] tree node type\n\nGet tree index by object db index."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to rename a folder?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFldRename\nidx_fld [in] folder index\nfld_newName [in] new folder name\n\nChange the folder name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to change the name of a folder?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFldRename\nidx_fld [in] folder index\nfld_newName [in] new folder name\n\nChange the folder name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to update the folder name?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFldRename\nidx_fld [in] folder index\nfld_newName [in] new folder name\n\nChange the folder name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the clearances parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxCmSetClearance\ndClearZ [in] Clearances Form's Clear Z\ndAppZ [in] Clearances Form's Approach Z\ndRtZ [in] Clearances Form's Retract Z\ndAutoClear [in] Clearances Form's Auto Clear\niMiniClr [in] Clearances Form's Check the status of Auto Clear\n\nModify the parameter of the clearances."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set clearance parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxCmSetClearance\ndClearZ [in] Clearances Form's Clear Z\ndAppZ [in] Clearances Form's Approach Z\ndRtZ [in] Clearances Form's Retract Z\ndAutoClear [in] Clearances Form's Auto Clear\niMiniClr [in] Clearances Form's Check the status of Auto Clear\n\nModify the parameter of the clearances."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the approach Z clearance?"
            },
            {
                "role": "assistant",
                "content": "cvxCmSetClearance\ndClearZ [in] Clearances Form's Clear Z\ndAppZ [in] Clearances Form's Approach Z\ndRtZ [in] Clearances Form's Retract Z\ndAutoClear [in] Clearances Form's Auto Clear\niMiniClr [in] Clearances Form's Check the status of Auto Clear\n\nModify the parameter of the clearances."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check the status of Auto Clear?"
            },
            {
                "role": "assistant",
                "content": "cvxCmSetClearance\ndClearZ [in] Clearances Form's Clear Z\ndAppZ [in] Clearances Form's Approach Z\ndRtZ [in] Clearances Form's Retract Z\ndAutoClear [in] Clearances Form's Auto Clear\niMiniClr [in] Clearances Form's Check the status of Auto Clear\n\nModify the parameter of the clearances."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the clearance parameter of a form?"
            },
            {
                "role": "assistant",
                "content": "cvxCmGetClearance\ndClearZ [in] Clearances Form's Clear Z\ndAppZ [in] Clearances Form's Approach Z\ndRtZ [in] Clearances Form's Retract Z\ndAutoClear [in] Clearances Form's Auto Clear\niMiniClr [in] Clearances Form's Check the status of Auto Clear\n\nGet the parameter of the clearances."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the clearances of a form?"
            },
            {
                "role": "assistant",
                "content": "cvxCmGetClearance\ndClearZ [in] Clearances Form's Clear Z\ndAppZ [in] Clearances Form's Approach Z\ndRtZ [in] Clearances Form's Retract Z\ndAutoClear [in] Clearances Form's Auto Clear\niMiniClr [in] Clearances Form's Check the status of Auto Clear\n\nGet the parameter of the clearances."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the clearances parameters of a form?"
            },
            {
                "role": "assistant",
                "content": "cvxCmGetClearance\ndClearZ [in] Clearances Form's Clear Z\ndAppZ [in] Clearances Form's Approach Z\ndRtZ [in] Clearances Form's Retract Z\ndAutoClear [in] Clearances Form's Auto Clear\niMiniClr [in] Clearances Form's Check the status of Auto Clear\n\nGet the parameter of the clearances."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the speed and feed parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxCmSetSAndF\nFeedRough [in] The Feed of Rough Operation\nFeedFinish [in] The Feed of Finish Operation\nSpeedRough [in] The Speed of Rough Operation\nSpeedFinish [in] The Speed of Finish Operation\npName [in] This is the name of the operation you want to modify\n\nModify the parameter of the speed and feed .\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the speed and feed for a specific operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmSetSAndF\nFeedRough [in] The Feed of Rough Operation\nFeedFinish [in] The Feed of Finish Operation\nSpeedRough [in] The Speed of Rough Operation\nSpeedFinish [in] The Speed of Finish Operation\npName [in] This is the name of the operation you want to modify\n\nModify the parameter of the speed and feed .\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the feed and speed for a particular operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmSetSAndF\nFeedRough [in] The Feed of Rough Operation\nFeedFinish [in] The Feed of Finish Operation\nSpeedRough [in] The Speed of Rough Operation\nSpeedFinish [in] The Speed of Finish Operation\npName [in] This is the name of the operation you want to modify\n\nModify the parameter of the speed and feed .\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to output the manhours for a list of operations?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOutputManhours\nidx_opedef [in] index list of operations\ncnt [in] count of operations\nmanhours [out] manhours (in unit : second ) traveled for operation\n\nOutput the ManHours."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the manhours for a specific operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOutputManhours\nidx_opedef [in] index list of operations\ncnt [in] count of operations\nmanhours [out] manhours (in unit : second ) traveled for operation\n\nOutput the ManHours."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate the total manhours for a given count of operations?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOutputManhours\nidx_opedef [in] index list of operations\ncnt [in] count of operations\nmanhours [out] manhours (in unit : second ) traveled for operation\n\nOutput the ManHours."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a NC item to the NC folder?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOutputInsNC\nidx_fld [in] index of nc folder to insert. -1:root folder of Output\nidx_out [out] index of nc or nc folder\nfldType [in] insert type\n\nInsert a NC item or NC folder to the NC folder."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a NC folder to the root folder of Output?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOutputInsNC\nidx_fld [in] index of nc folder to insert. -1:root folder of Output\nidx_out [out] index of nc or nc folder\nfldType [in] insert type\n\nInsert a NC item or NC folder to the NC folder."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the index of NC or NC folder after insertion?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOutputInsNC\nidx_fld [in] index of nc folder to insert. -1:root folder of Output\nidx_out [out] index of nc or nc folder\nfldType [in] insert type\n\nInsert a NC item or NC folder to the NC folder."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a NC item?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOutputDelNC\nidx_in [in] index of nc or nc folder\nfldType [in] type of nc\n\nDelete a NC item or NC folder."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a NC folder?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOutputDelNC\nidx_in [in] index of nc or nc folder\nfldType [in] type of nc\n\nDelete a NC item or NC folder."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to delete a specific NC item or folder by index?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOutputDelNC\nidx_in [in] index of nc or nc folder\nfldType [in] type of nc\n\nDelete a NC item or NC folder."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the attributes of an NC item?"
            },
            {
                "role": "assistant",
                "content": "cvxCmGetOutputNCSet\nidx_nc [in] index of nc\nncSet [out] attribute of nc\n\nGet attributes of the NC item. Its value is output via \"ncSet\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the attribute of an NC item?"
            },
            {
                "role": "assistant",
                "content": "cvxCmGetOutputNCSet\nidx_nc [in] index of nc\nncSet [out] attribute of nc\n\nGet attributes of the NC item. Its value is output via \"ncSet\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the attribute set of an NC item?"
            },
            {
                "role": "assistant",
                "content": "cvxCmGetOutputNCSet\nidx_nc [in] index of nc\nncSet [out] attribute of nc\n\nGet attributes of the NC item. Its value is output via \"ncSet\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set attributes of the NC item?"
            },
            {
                "role": "assistant",
                "content": "cvxCmSetOutputNCSet\nidx_nc [in] index of nc\nncSet [in] attribute of nc\n\nSet attributes of the NC item. Members of ncSet should not be NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the members of ncSet that should not be NULL?"
            },
            {
                "role": "assistant",
                "content": "cvxCmSetOutputNCSet\nidx_nc [in] index of nc\nncSet [in] attribute of nc\n\nSet attributes of the NC item. Members of ncSet should not be NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the attributes of the NC item by index?"
            },
            {
                "role": "assistant",
                "content": "cvxCmSetOutputNCSet\nidx_nc [in] index of nc\nncSet [in] attribute of nc\n\nSet attributes of the NC item. Members of ncSet should not be NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert operations to the NC item?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOutputInsOps\nidx_nc [in] index of nc\ncnt [in] count of operations\nidx_op [in] list of operations\n\nInsert operations to the NC item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to add operations to the NC item?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOutputInsOps\nidx_nc [in] index of nc\ncnt [in] count of operations\nidx_op [in] list of operations\n\nInsert operations to the NC item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the count of operations to be inserted?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOutputInsOps\nidx_nc [in] index of nc\ncnt [in] count of operations\nidx_op [in] list of operations\n\nInsert operations to the NC item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to insert a list of operations to the NC item?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOutputInsOps\nidx_nc [in] index of nc\ncnt [in] count of operations\nidx_op [in] list of operations\n\nInsert operations to the NC item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxCmOutputDelOps\nidx_nc [in] index of nc\ncnt [in] count of operations\nidx_op [in] list of operations\n\nDelete operations of the NC item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxCmOutputDelOps\nidx_nc [in] index of nc\ncnt [in] count of operations\nidx_op [in] list of operations\n\nDelete operations of the NC item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxCmOutputDelOps\nidx_nc [in] index of nc\ncnt [in] count of operations\nidx_op [in] list of operations\n\nDelete operations of the NC item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to output files of the NC item?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOutputNC\nidx_nc [in] index of nc\noutType [in] out type\n\nOutput files of the NC item, depends on evxCmOutType."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the output type for the NC item?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOutputNC\nidx_nc [in] index of nc\noutType [in] out type\n\nOutput files of the NC item, depends on evxCmOutType."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the output files for a specific NC item?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOutputNC\nidx_nc [in] index of nc\noutType [in] out type\n\nOutput files of the NC item, depends on evxCmOutType."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpsOutputNc\nop_cnt [in] number of operations\nidx_opList [in] index of operations\nidx_nc [out] index of nc node\n\nInsert operations to the NC item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpsOutputNc\nop_cnt [in] number of operations\nidx_opList [in] index of operations\nidx_nc [out] index of nc node\n\nInsert operations to the NC item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpsOutputNc\nop_cnt [in] number of operations\nidx_opList [in] index of operations\nidx_nc [out] index of nc node\n\nInsert operations to the NC item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to clear the output form?"
            },
            {
                "role": "assistant",
                "content": "cvxCmMsgClear\n\nClear the output form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to clear the message output?"
            },
            {
                "role": "assistant",
                "content": "cvxCmMsgClear\n\nClear the output form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove messages from the output form?"
            },
            {
                "role": "assistant",
                "content": "cvxCmMsgClear\n\nClear the output form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a frame based on a Cartesian coordinate system?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameInsert\nframe_name [in] fame name wanna set\norigin_point [in] origin point to construct the coordinate system\nx_point [in] point in axis X\ny_point [in] point in axis Y\nidx_frame [out] index of the frame\n\nInsert the Frame based on Cartesian coordinate system in the active CamPlan. The 3 svxPoints are not used at this version."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the frame name for insertion?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameInsert\nframe_name [in] fame name wanna set\norigin_point [in] origin point to construct the coordinate system\nx_point [in] point in axis X\ny_point [in] point in axis Y\nidx_frame [out] index of the frame\n\nInsert the Frame based on Cartesian coordinate system in the active CamPlan. The 3 svxPoints are not used at this version."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of the inserted frame?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameInsert\nframe_name [in] fame name wanna set\norigin_point [in] origin point to construct the coordinate system\nx_point [in] point in axis X\ny_point [in] point in axis Y\nidx_frame [out] index of the frame\n\nInsert the Frame based on Cartesian coordinate system in the active CamPlan. The 3 svxPoints are not used at this version."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a frame in CamPlan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameDelete\nidx_frame [in] index of the frame\n\nDelete the frame in CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to remove a frame by index?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameDelete\nidx_frame [in] index of the frame\n\nDelete the frame in CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I delete a specific frame in CamPlan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameDelete\nidx_frame [in] index of the frame\n\nDelete the frame in CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the attributes of a frame?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameGetAttr\nidx_frame [in] index of the frame\nattr [in] enumeration of the attribute\nvalue [out] return value; user needs to free the memory\n\nInquire the Frame attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the attribute value of a specific frame?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameGetAttr\nidx_frame [in] index of the frame\nattr [in] enumeration of the attribute\nvalue [out] return value; user needs to free the memory\n\nInquire the Frame attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the available attributes that can be inquired for a frame?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameGetAttr\nidx_frame [in] index of the frame\nattr [in] enumeration of the attribute\nvalue [out] return value; user needs to free the memory\n\nInquire the Frame attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the attributes of a frame?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameSetAttr\nidx_frame [in] index of the frame\nattr [in] enumeration of the attribute\nvalue [in] the value wanna set\n\nSet the Frame attributes.\n\"value->type\"                 &     \"value->cnt\" depends on \"attr\", as follows:\nZW_CAM_ATTR_VALUE_TYPE_STRING       <=32     CM_FRAME_NAME\nZW_CAM_ATTR_VALUE_TYPE_DOUBLE       1        CM_FRAME_CLEAR_Z\n                                             CM_FRAME_APPROACH_Z\n                                             CM_FRAME_RETRACT_Z\n\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the different attributes that can be set for a frame?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameSetAttr\nidx_frame [in] index of the frame\nattr [in] enumeration of the attribute\nvalue [in] the value wanna set\n\nSet the Frame attributes.\n\"value->type\"                 &     \"value->cnt\" depends on \"attr\", as follows:\nZW_CAM_ATTR_VALUE_TYPE_STRING       <=32     CM_FRAME_NAME\nZW_CAM_ATTR_VALUE_TYPE_DOUBLE       1        CM_FRAME_CLEAR_Z\n                                             CM_FRAME_APPROACH_Z\n                                             CM_FRAME_RETRACT_Z\n\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the frame name?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameSetAttr\nidx_frame [in] index of the frame\nattr [in] enumeration of the attribute\nvalue [in] the value wanna set\n\nSet the Frame attributes.\n\"value->type\"                 &     \"value->cnt\" depends on \"attr\", as follows:\nZW_CAM_ATTR_VALUE_TYPE_STRING       <=32     CM_FRAME_NAME\nZW_CAM_ATTR_VALUE_TYPE_DOUBLE       1        CM_FRAME_CLEAR_Z\n                                             CM_FRAME_APPROACH_Z\n                                             CM_FRAME_RETRACT_Z\n\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the clear Z value for a frame?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameSetAttr\nidx_frame [in] index of the frame\nattr [in] enumeration of the attribute\nvalue [in] the value wanna set\n\nSet the Frame attributes.\n\"value->type\"                 &     \"value->cnt\" depends on \"attr\", as follows:\nZW_CAM_ATTR_VALUE_TYPE_STRING       <=32     CM_FRAME_NAME\nZW_CAM_ATTR_VALUE_TYPE_DOUBLE       1        CM_FRAME_CLEAR_Z\n                                             CM_FRAME_APPROACH_Z\n                                             CM_FRAME_RETRACT_Z\n\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the approach Z value for a frame?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameSetAttr\nidx_frame [in] index of the frame\nattr [in] enumeration of the attribute\nvalue [in] the value wanna set\n\nSet the Frame attributes.\n\"value->type\"                 &     \"value->cnt\" depends on \"attr\", as follows:\nZW_CAM_ATTR_VALUE_TYPE_STRING       <=32     CM_FRAME_NAME\nZW_CAM_ATTR_VALUE_TYPE_DOUBLE       1        CM_FRAME_CLEAR_Z\n                                             CM_FRAME_APPROACH_Z\n                                             CM_FRAME_RETRACT_Z\n\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the retract Z value for a frame?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameSetAttr\nidx_frame [in] index of the frame\nattr [in] enumeration of the attribute\nvalue [in] the value wanna set\n\nSet the Frame attributes.\n\"value->type\"                 &     \"value->cnt\" depends on \"attr\", as follows:\nZW_CAM_ATTR_VALUE_TYPE_STRING       <=32     CM_FRAME_NAME\nZW_CAM_ATTR_VALUE_TYPE_DOUBLE       1        CM_FRAME_CLEAR_Z\n                                             CM_FRAME_APPROACH_Z\n                                             CM_FRAME_RETRACT_Z\n\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a frame based on Cartesian coordinate system?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameInsert2\nframe_name [in] frame name wanna set\nframe_mat [in] frame matrix\nidx_frame [out] index of the frame\n\nInsert the Frame based on Cartesian coordinate system in the active CamPlan. The 3 svxPoints are not used at this version."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set a frame name?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameInsert2\nframe_name [in] frame name wanna set\nframe_mat [in] frame matrix\nidx_frame [out] index of the frame\n\nInsert the Frame based on Cartesian coordinate system in the active CamPlan. The 3 svxPoints are not used at this version."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of the inserted frame?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameInsert2\nframe_name [in] frame name wanna set\nframe_mat [in] frame matrix\nidx_frame [out] index of the frame\n\nInsert the Frame based on Cartesian coordinate system in the active CamPlan. The 3 svxPoints are not used at this version."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a frame into an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpAddFrame\nidxOp [in] index of the operation\nidxFrame [in] index of the frame\n\nInsert the Frame into the operation"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a frame to an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpAddFrame\nidxOp [in] index of the operation\nidxFrame [in] index of the frame\n\nInsert the Frame into the operation"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to add a frame to an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpAddFrame\nidxOp [in] index of the operation\nidxFrame [in] index of the frame\n\nInsert the Frame into the operation"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the matrix of a frame?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameGetMatrix\nidxFrame [in] index of the frame\nframeMat [out] frame matrix\n\nGet the frame matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the frame matrix using the frame index?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameGetMatrix\nidxFrame [in] index of the frame\nframeMat [out] frame matrix\n\nGet the frame matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to obtain the frame matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameGetMatrix\nidxFrame [in] index of the frame\nframeMat [out] frame matrix\n\nGet the frame matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of active frame?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameGetActive\nidx_actFrame [out] index of active frame\n\nGet the index of active frame"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a feature in a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrInsert\nftrType [in] type of the feature\nidx_CmComp [in] index of the component\ncnt [in] count of the geometries\ngeom [in] geometry indexes\nidx_FtrGrp [out] index of feature\n\nAdd a feature in the component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to insert a feature in a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrInsert\nftrType [in] type of the feature\nidx_CmComp [in] index of the component\ncnt [in] count of the geometries\ngeom [in] geometry indexes\nidx_FtrGrp [out] index of feature\n\nAdd a feature in the component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of a feature group after adding a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrInsert\nftrType [in] type of the feature\nidx_CmComp [in] index of the component\ncnt [in] count of the geometries\ngeom [in] geometry indexes\nidx_FtrGrp [out] index of feature\n\nAdd a feature in the component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a new feature in the component?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrInsertNew\nftrType [in] type of the feature\ncnt [in] count of the geometries\ngeom [in] geometry indexes\ndepths [in] depths of holes\nidx_FtrGrp [out] index of feature\n\nAdd a feature in the component.\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to insert a new feature by type?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrInsertNew\nftrType [in] type of the feature\ncnt [in] count of the geometries\ngeom [in] geometry indexes\ndepths [in] depths of holes\nidx_FtrGrp [out] index of feature\n\nAdd a feature in the component.\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of the newly inserted feature?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrInsertNew\nftrType [in] type of the feature\ncnt [in] count of the geometries\ngeom [in] geometry indexes\ndepths [in] depths of holes\nidx_FtrGrp [out] index of feature\n\nAdd a feature in the component.\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a feature to a new member without holes?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrInsertWithoutHoles\nftrType [in] type of the feature\nftrName [in] feature name which needs to be added to the new member\ncnt [in] count of the geometries\ngeom [in] geometry indexes\nidxFtrGrp [out] index of feature\n\nAdd a feature in the component. This function provides the ability to generate features other than holes. Currently, profile,surface,chamfer and cround are supported."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to insert a feature other than holes?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrInsertWithoutHoles\nftrType [in] type of the feature\nftrName [in] feature name which needs to be added to the new member\ncnt [in] count of the geometries\ngeom [in] geometry indexes\nidxFtrGrp [out] index of feature\n\nAdd a feature in the component. This function provides the ability to generate features other than holes. Currently, profile,surface,chamfer and cround are supported."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the supported feature types for insertion?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrInsertWithoutHoles\nftrType [in] type of the feature\nftrName [in] feature name which needs to be added to the new member\ncnt [in] count of the geometries\ngeom [in] geometry indexes\nidxFtrGrp [out] index of feature\n\nAdd a feature in the component. This function provides the ability to generate features other than holes. Currently, profile,surface,chamfer and cround are supported."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a feature in a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrInsertSK\nftrType [in] type of the feature\nftrName [in] feature name which needs to be added to the new member\nidxSk [in] index of the sketch where the geom is located.\ncnt [in] feature data\ngeom [in] index of geom\nidxFtrGrp [out] index of feature\n\nAdd a feature in the sketch."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a feature with a specific type?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrInsertSK\nftrType [in] type of the feature\nftrName [in] feature name which needs to be added to the new member\nidxSk [in] index of the sketch where the geom is located.\ncnt [in] feature data\ngeom [in] index of geom\nidxFtrGrp [out] index of feature\n\nAdd a feature in the sketch."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the index of the sketch for adding a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrInsertSK\nftrType [in] type of the feature\nftrName [in] feature name which needs to be added to the new member\nidxSk [in] index of the sketch where the geom is located.\ncnt [in] feature data\ngeom [in] index of geom\nidxFtrGrp [out] index of feature\n\nAdd a feature in the sketch."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of components?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrGetComp\ncomp_cnt [out] count of components\nidxComp [out] index of components\n\nGet component's geom index.\nThe idxComp output array must be deallocated with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of components?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrGetComp\ncomp_cnt [out] count of components\nidxComp [out] index of components\n\nGet component's geom index.\nThe idxComp output array must be deallocated with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to deallocate the output array after getting the component's geom index?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrGetComp\ncomp_cnt [out] count of components\nidxComp [out] index of components\n\nGet component's geom index.\nThe idxComp output array must be deallocated with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of curves in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxCmGetCrvId\nnumLine [out] number of curve\nlstLines [out] list of curve id\n\nGet curves' index in part"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the list of curve IDs in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxCmGetCrvId\nnumLine [out] number of curve\nlstLines [out] list of curve id\n\nGet curves' index in part"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to obtain the curve indices in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxCmGetCrvId\nnumLine [out] number of curve\nlstLines [out] list of curve id\n\nGet curves' index in part"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a hole feature in a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrInsertHole\nftrName [in] feature name\ncnt [in] count of the geometries\ngeom [in] geometry indexes\ndepths [in] depths of holes\nidxFtrGrp [out] index of feature\n\nAdd a hole feature in the component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a hole feature by feature name?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrInsertHole\nftrName [in] feature name\ncnt [in] count of the geometries\ngeom [in] geometry indexes\ndepths [in] depths of holes\nidxFtrGrp [out] index of feature\n\nAdd a hole feature in the component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the count and geometry indexes for adding a hole feature?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrInsertHole\nftrName [in] feature name\ncnt [in] count of the geometries\ngeom [in] geometry indexes\ndepths [in] depths of holes\nidxFtrGrp [out] index of feature\n\nAdd a hole feature in the component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get the index of the feature group after adding a hole feature?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrInsertHole\nftrName [in] feature name\ncnt [in] count of the geometries\ngeom [in] geometry indexes\ndepths [in] depths of holes\nidxFtrGrp [out] index of feature\n\nAdd a hole feature in the component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the display mode for cam plan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmPlanDispSetMode\niMode [in] display mode\n\nSet cam plan display mode."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the display mode for cam plan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmPlanDispSetMode\niMode [in] display mode\n\nSet cam plan display mode."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the available display modes for cam plan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmPlanDispSetMode\niMode [in] display mode\n\nSet cam plan display mode."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a feature by its index?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrDelete\nidx_ftrgrp [in] index of the feature\n\nDelete the feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove a feature using its index?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrDelete\nidx_ftrgrp [in] index of the feature\n\nDelete the feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to delete a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrDelete\nidx_ftrgrp [in] index of the feature\n\nDelete the feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the attribute of a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrGetAttr\nidx_ftrgrp [in] index of the feature\ncnt [in] count of the attributes\nattr [in] Attributes of interest\nvalue [out] the values return; user needs to free the memory\n\nInquire the attribute of the feature.\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the count of attributes for a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrGetAttr\nidx_ftrgrp [in] index of the feature\ncnt [in] count of the attributes\nattr [in] Attributes of interest\nvalue [out] the values return; user needs to free the memory\n\nInquire the attribute of the feature.\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the values of specific attributes for a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrGetAttr\nidx_ftrgrp [in] index of the feature\ncnt [in] count of the attributes\nattr [in] Attributes of interest\nvalue [out] the values return; user needs to free the memory\n\nInquire the attribute of the feature.\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the attribute of a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrSetAttr\nidx_ftrgrp [in] index of the feature\ncnt [in] count of the attributes\nattr [in] Attributes of interest\nvalue [in] values to assign to the feature\n\nModify the attribute of the feature.\nvalue->type:   ZW_CAM_ATTR_VALUE_TYPE_INTEGER\nvalue->cnt:    1\nvalue->data:   0(\"part\")\n               1(\"contain\")\n\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the types of values that can be assigned to the feature?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrSetAttr\nidx_ftrgrp [in] index of the feature\ncnt [in] count of the attributes\nattr [in] Attributes of interest\nvalue [in] values to assign to the feature\n\nModify the attribute of the feature.\nvalue->type:   ZW_CAM_ATTR_VALUE_TYPE_INTEGER\nvalue->cnt:    1\nvalue->data:   0(\"part\")\n               1(\"contain\")\n\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set attributes of interest to a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrSetAttr\nidx_ftrgrp [in] index of the feature\ncnt [in] count of the attributes\nattr [in] Attributes of interest\nvalue [in] values to assign to the feature\n\nModify the attribute of the feature.\nvalue->type:   ZW_CAM_ATTR_VALUE_TYPE_INTEGER\nvalue->cnt:    1\nvalue->data:   0(\"part\")\n               1(\"contain\")\n\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to rename a feature in the CAM tree?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrRename\nidx_ftr [in] cam tree index\nnewFtrName [in] new name\n\nChange the feature name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the name of a feature in the CAM tree?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrRename\nidx_ftr [in] cam tree index\nnewFtrName [in] new name\n\nChange the feature name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to update the name of a feature in the CAM tree?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrRename\nidx_ftr [in] cam tree index\nnewFtrName [in] new name\n\nChange the feature name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the parameters of a profile curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCmProfSetAttr\nprof_idx [in] profile feature index\ncurve_idx [in] curve in profile feature index\nnewOffset [in] offset value\nnewDraft [in] draft value\ntolloc [in] tool location value\n\nChange the profile curve parameters"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the attributes of a profile curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCmProfSetAttr\nprof_idx [in] profile feature index\ncurve_idx [in] curve in profile feature index\nnewOffset [in] offset value\nnewDraft [in] draft value\ntolloc [in] tool location value\n\nChange the profile curve parameters"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the offset and draft values of a profile curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCmProfSetAttr\nprof_idx [in] profile feature index\ncurve_idx [in] curve in profile feature index\nnewOffset [in] offset value\nnewDraft [in] draft value\ntolloc [in] tool location value\n\nChange the profile curve parameters"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I change the tool location value of a profile curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCmProfSetAttr\nprof_idx [in] profile feature index\ncurve_idx [in] curve in profile feature index\nnewOffset [in] offset value\nnewDraft [in] draft value\ntolloc [in] tool location value\n\nChange the profile curve parameters"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the type of a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrInqType\nidx_Ftr [in] profile feature index\nftrType [out] feature class\n\nInquire the type of feature"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the feature class by profile feature index?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrInqType\nidx_Ftr [in] profile feature index\nftrType [out] feature class\n\nInquire the type of feature"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine the type of a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrInqType\nidx_Ftr [in] profile feature index\nftrType [out] feature class\n\nInquire the type of feature"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxCmMachineInsert\nmachine_class [in] machine class\nmachine_type [in] machine type\nsub_type [in] machine sub_type\nidx_machine [out] index of machine\n\nInsert a machine to the cam plan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxCmMachineInsert\nmachine_class [in] machine class\nmachine_type [in] machine type\nsub_type [in] machine sub_type\nidx_machine [out] index of machine\n\nInsert a machine to the cam plan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxCmMachineInsert\nmachine_class [in] machine class\nmachine_type [in] machine type\nsub_type [in] machine sub_type\nidx_machine [out] index of machine\n\nInsert a machine to the cam plan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set a machine to active?"
            },
            {
                "role": "assistant",
                "content": "cvxCmMachineActive\nidx_machine [in] machine index\n\nSet the machine to active."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to activate a machine by index?"
            },
            {
                "role": "assistant",
                "content": "cvxCmMachineActive\nidx_machine [in] machine index\n\nSet the machine to active."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the active machine?"
            },
            {
                "role": "assistant",
                "content": "cvxCmMachineActive\nidx_machine [in] machine index\n\nSet the machine to active."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a machine by index?"
            },
            {
                "role": "assistant",
                "content": "cvxCmMachineDelete\nidx_machine [in] machine index\n\nDelete the machine."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove a machine from the list?"
            },
            {
                "role": "assistant",
                "content": "cvxCmMachineDelete\nidx_machine [in] machine index\n\nDelete the machine."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to delete a machine?"
            },
            {
                "role": "assistant",
                "content": "cvxCmMachineDelete\nidx_machine [in] machine index\n\nDelete the machine."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the attribute of a machine?"
            },
            {
                "role": "assistant",
                "content": "cvxCmMachineGetAttr\nidx_machine [in] index of machine\nattr [in] type of attribute\nvalue [out] value of attribute, user need to free the memory\n\nGet attribute of a machine."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the value of a specific attribute for a machine?"
            },
            {
                "role": "assistant",
                "content": "cvxCmMachineGetAttr\nidx_machine [in] index of machine\nattr [in] type of attribute\nvalue [out] value of attribute, user need to free the memory\n\nGet attribute of a machine."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the available types of attributes that can be retrieved for a machine?"
            },
            {
                "role": "assistant",
                "content": "cvxCmMachineGetAttr\nidx_machine [in] index of machine\nattr [in] type of attribute\nvalue [out] value of attribute, user need to free the memory\n\nGet attribute of a machine."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the machine's name attribute?"
            },
            {
                "role": "assistant",
                "content": "cvxCmMachineSetAttr\nidx_machine [in] index of the machine\nattr [in] type of attribute\nvalue [in] value of attribute\n\nModify the machine's attribute .\n\"value->type\"          &     \"value->cnt\"   &value->data depends on     \"attr\", as follows:\nZW_CAM_ATTR_VALUE_TYPE_STRING       <=32                                CM_MACH_NAME\n                                                                        CM_MACH_POST_CONFIGURATION\nZW_CAM_ATTR_VALUE_TYPE_INTEGER      1       evxCmMachClass              CM_MACH_CLASS\n                                            evxCmMachType               CM_MACH_TYPE\n                                            evxCmMachSubType            CM_MACH_SUBTYPE\n                                            evxCmMachCutCompenation     CM_MACH_CUT_COMPENSATION"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the post configuration of a machine?"
            },
            {
                "role": "assistant",
                "content": "cvxCmMachineSetAttr\nidx_machine [in] index of the machine\nattr [in] type of attribute\nvalue [in] value of attribute\n\nModify the machine's attribute .\n\"value->type\"          &     \"value->cnt\"   &value->data depends on     \"attr\", as follows:\nZW_CAM_ATTR_VALUE_TYPE_STRING       <=32                                CM_MACH_NAME\n                                                                        CM_MACH_POST_CONFIGURATION\nZW_CAM_ATTR_VALUE_TYPE_INTEGER      1       evxCmMachClass              CM_MACH_CLASS\n                                            evxCmMachType               CM_MACH_TYPE\n                                            evxCmMachSubType            CM_MACH_SUBTYPE\n                                            evxCmMachCutCompenation     CM_MACH_CUT_COMPENSATION"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the cut compensation attribute of a machine?"
            },
            {
                "role": "assistant",
                "content": "cvxCmMachineSetAttr\nidx_machine [in] index of the machine\nattr [in] type of attribute\nvalue [in] value of attribute\n\nModify the machine's attribute .\n\"value->type\"          &     \"value->cnt\"   &value->data depends on     \"attr\", as follows:\nZW_CAM_ATTR_VALUE_TYPE_STRING       <=32                                CM_MACH_NAME\n                                                                        CM_MACH_POST_CONFIGURATION\nZW_CAM_ATTR_VALUE_TYPE_INTEGER      1       evxCmMachClass              CM_MACH_CLASS\n                                            evxCmMachType               CM_MACH_TYPE\n                                            evxCmMachSubType            CM_MACH_SUBTYPE\n                                            evxCmMachCutCompenation     CM_MACH_CUT_COMPENSATION"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the machine's class attribute?"
            },
            {
                "role": "assistant",
                "content": "cvxCmMachineSetAttr\nidx_machine [in] index of the machine\nattr [in] type of attribute\nvalue [in] value of attribute\n\nModify the machine's attribute .\n\"value->type\"          &     \"value->cnt\"   &value->data depends on     \"attr\", as follows:\nZW_CAM_ATTR_VALUE_TYPE_STRING       <=32                                CM_MACH_NAME\n                                                                        CM_MACH_POST_CONFIGURATION\nZW_CAM_ATTR_VALUE_TYPE_INTEGER      1       evxCmMachClass              CM_MACH_CLASS\n                                            evxCmMachType               CM_MACH_TYPE\n                                            evxCmMachSubType            CM_MACH_SUBTYPE\n                                            evxCmMachCutCompenation     CM_MACH_CUT_COMPENSATION"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the type of a machine?"
            },
            {
                "role": "assistant",
                "content": "cvxCmMachineSetAttr\nidx_machine [in] index of the machine\nattr [in] type of attribute\nvalue [in] value of attribute\n\nModify the machine's attribute .\n\"value->type\"          &     \"value->cnt\"   &value->data depends on     \"attr\", as follows:\nZW_CAM_ATTR_VALUE_TYPE_STRING       <=32                                CM_MACH_NAME\n                                                                        CM_MACH_POST_CONFIGURATION\nZW_CAM_ATTR_VALUE_TYPE_INTEGER      1       evxCmMachClass              CM_MACH_CLASS\n                                            evxCmMachType               CM_MACH_TYPE\n                                            evxCmMachSubType            CM_MACH_SUBTYPE\n                                            evxCmMachCutCompenation     CM_MACH_CUT_COMPENSATION"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the subtype attribute of a machine?"
            },
            {
                "role": "assistant",
                "content": "cvxCmMachineSetAttr\nidx_machine [in] index of the machine\nattr [in] type of attribute\nvalue [in] value of attribute\n\nModify the machine's attribute .\n\"value->type\"          &     \"value->cnt\"   &value->data depends on     \"attr\", as follows:\nZW_CAM_ATTR_VALUE_TYPE_STRING       <=32                                CM_MACH_NAME\n                                                                        CM_MACH_POST_CONFIGURATION\nZW_CAM_ATTR_VALUE_TYPE_INTEGER      1       evxCmMachClass              CM_MACH_CLASS\n                                            evxCmMachType               CM_MACH_TYPE\n                                            evxCmMachSubType            CM_MACH_SUBTYPE\n                                            evxCmMachCutCompenation     CM_MACH_CUT_COMPENSATION"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a tool to the active machine's tool changer?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolChangerInsert\nidx_toolchanger [in] tool index\nLocation [in] location\nDiameter [in] cutter compensation along Diameter\nHeight [in] cutter compensation along Hight\n\nInsert a tool to the active machine's tool changer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to insert a tool to the tool changer?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolChangerInsert\nidx_toolchanger [in] tool index\nLocation [in] location\nDiameter [in] cutter compensation along Diameter\nHeight [in] cutter compensation along Hight\n\nInsert a tool to the active machine's tool changer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the tool in the active machine's tool changer?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolChangerInsert\nidx_toolchanger [in] tool index\nLocation [in] location\nDiameter [in] cutter compensation along Diameter\nHeight [in] cutter compensation along Hight\n\nInsert a tool to the active machine's tool changer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a tool changer in the active machine?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolChangerDelete\nidx_toolchanger [in] tool index\n\nDelete the tool changer in the active machine.\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove a tool from the active machine?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolChangerDelete\nidx_toolchanger [in] tool index\n\nDelete the tool changer in the active machine.\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to delete a tool changer?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolChangerDelete\nidx_toolchanger [in] tool index\n\nDelete the tool changer in the active machine.\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create an operation in the active CamPlan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpInsert\nopType [in] Operation type\nidx_Op [out] index of this inserted Operation\n\nCreate an operation in the active CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to insert an operation using a specific operation type?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpInsert\nopType [in] Operation type\nidx_Op [out] index of this inserted Operation\n\nCreate an operation in the active CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I get the index of the inserted operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpInsert\nopType [in] Operation type\nidx_Op [out] index of this inserted Operation\n\nCreate an operation in the active CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete an operation in the active CamPlan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpDelete\nidx_Op [in] index of operation\n\nDelete an operation in the active CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove an operation from the active CamPlan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpDelete\nidx_Op [in] index of operation\n\nDelete an operation in the active CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to delete a specific operation in the active CamPlan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpDelete\nidx_Op [in] index of operation\n\nDelete an operation in the active CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to duplicate an operation in the active CamPlan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpDuplicate\nidx_Op [in] index of source operation\ncpyOp [out] index of destination op\n\nDuplicate an operation in the active CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to copy an operation to another destination op?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpDuplicate\nidx_Op [in] index of source operation\ncpyOp [out] index of destination op\n\nDuplicate an operation in the active CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to duplicate an operation by index?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpDuplicate\nidx_Op [in] index of source operation\ncpyOp [out] index of destination op\n\nDuplicate an operation in the active CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a component into an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpAddComp\nidx_Op undocumented\nidx_CmComp undocumented\n\nAdd the component into the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to add a component to an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpAddComp\nidx_Op undocumented\nidx_CmComp undocumented\n\nAdd the component into the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process for adding a component to an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpAddComp\nidx_Op undocumented\nidx_CmComp undocumented\n\nAdd the component into the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove a component from an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpRemoveComp\nidx_Op [in] index of the operation\nidx_CmComp [in] index of the component\n\nRemove the component of the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to delete a component from an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpRemoveComp\nidx_Op [in] index of the operation\nidx_CmComp [in] index of the component\n\nRemove the component of the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to remove a component from an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpRemoveComp\nidx_Op [in] index of the operation\nidx_CmComp [in] index of the component\n\nRemove the component of the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a feature into an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpAddFtr\nidx_Op [in] index of the operation\nidx_FtrGrp [in] index of the feature\n\nAdd the feature into the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a feature to an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpAddFtr\nidx_Op [in] index of the operation\nidx_FtrGrp [in] index of the feature\n\nAdd the feature into the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to include a feature in an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpAddFtr\nidx_Op [in] index of the operation\nidx_FtrGrp [in] index of the feature\n\nAdd the feature into the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove a feature from an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpRemoveFtr\nidx_Op [in] index of the operation\nidx_ftrgrp [in] index of the feature\n\nRemove the feature of the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to delete a feature from an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpRemoveFtr\nidx_Op [in] index of the operation\nidx_ftrgrp [in] index of the feature\n\nRemove the feature of the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to remove a feature from a specific operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpRemoveFtr\nidx_Op [in] index of the operation\nidx_ftrgrp [in] index of the feature\n\nRemove the feature of the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate the operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpCalTPath\nidx_Op [in] index of the operation\n\nCalculate the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to calculate the operation based on the index?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpCalTPath\nidx_Op [in] index of the operation\n\nCalculate the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to perform operation calculation using the index?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpCalTPath\nidx_Op [in] index of the operation\n\nCalculate the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a tool to a specific operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpAddTool\nidx_Op [in] index of the operation\nidx_Tool [in] index of the tool\n\nAdd a tool in the target operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to assign a tool to an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpAddTool\nidx_Op [in] index of the operation\nidx_Tool [in] index of the tool\n\nAdd a tool in the target operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to add a tool to an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpAddTool\nidx_Op [in] index of the operation\nidx_Tool [in] index of the tool\n\nAdd a tool in the target operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove the tool of a specific operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpRemoveTool\nidx_Op [in] index of the operation\n\nRemove the tool of the target operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to delete the tool from an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpRemoveTool\nidx_Op [in] index of the operation\n\nRemove the tool of the target operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to remove the tool from a particular operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpRemoveTool\nidx_Op [in] index of the operation\n\nRemove the tool of the target operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the attributes of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpGetAttr\nidx_Op [in] index of the operation\ncnt [in] count of the attributes\nattr [in] enumerations user wanna get\nvalue [out] the values return\n\nInquire the attributes of the operation. Output a list of svxCmAttrValue via \"value\".\nNot all evxCmQmOpAttr is available for different type of Operation.\nAs follows are 5 Operation Type,\n   value->type        &             value->cnt   & value->data depend on \"attr\"\nZW_CAM_OPERATION_PROFILECUT:\n   ZW_CAM_ATTR_VALUE_TYPE_STRING    <=32                 ZW_CAM_QM_OPERATION_ATTR_NAME\n                                                         ZW_CAM_QM_OPERATION_ATTR_CLASS\n                                                         ZW_CAM_QM_OPERATION_ATTR_FRAME\n   ZW_CAM_ATTR_VALUE_TYPE_INTEGER   1     index of tool  ZW_CAM_QM_OPERATION_ATTR_TOOL\nZW_CAM_OPERATION_SMOOTHFLOW\nZW_CAM_OPERATION_OFFSET2D\nZW_CAM_OPERATION_OFFSET3D\nZW_CAM_OPERATION_ZLEVEL:\n   ZW_CAM_ATTR_VALUE_TYPE_STRING    <=32                 ZW_CAM_QM_OPERATION_ATTR_NAME\n                                                         ZW_CAM_QM_OPERATION_ATTR_CLASS\n                                                         ZW_CAM_QM_OPERATION_ATTR_FRAME\n   ZW_CAM_ATTR_VALUE_TYPE_DOUBLE    1                    ZW_CAM_QM_OPERATION_ATTR_SURF_THICK\n                                                         ZW_CAM_QM_OPERATION_ATTR_MINTOOLHEIGHT\n   ZW_CAM_ATTR_VALUE_TYPE_INTEGER   1     index of tool  ZW_CAM_QM_OPERATION_ATTR_TOOL\n\nThe following is a simple code to get operation's frame and surface thick: \nUser needs to allocate memory for \"value\", and free memory for \"value->data\".\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the frame of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpGetAttr\nidx_Op [in] index of the operation\ncnt [in] count of the attributes\nattr [in] enumerations user wanna get\nvalue [out] the values return\n\nInquire the attributes of the operation. Output a list of svxCmAttrValue via \"value\".\nNot all evxCmQmOpAttr is available for different type of Operation.\nAs follows are 5 Operation Type,\n   value->type        &             value->cnt   & value->data depend on \"attr\"\nZW_CAM_OPERATION_PROFILECUT:\n   ZW_CAM_ATTR_VALUE_TYPE_STRING    <=32                 ZW_CAM_QM_OPERATION_ATTR_NAME\n                                                         ZW_CAM_QM_OPERATION_ATTR_CLASS\n                                                         ZW_CAM_QM_OPERATION_ATTR_FRAME\n   ZW_CAM_ATTR_VALUE_TYPE_INTEGER   1     index of tool  ZW_CAM_QM_OPERATION_ATTR_TOOL\nZW_CAM_OPERATION_SMOOTHFLOW\nZW_CAM_OPERATION_OFFSET2D\nZW_CAM_OPERATION_OFFSET3D\nZW_CAM_OPERATION_ZLEVEL:\n   ZW_CAM_ATTR_VALUE_TYPE_STRING    <=32                 ZW_CAM_QM_OPERATION_ATTR_NAME\n                                                         ZW_CAM_QM_OPERATION_ATTR_CLASS\n                                                         ZW_CAM_QM_OPERATION_ATTR_FRAME\n   ZW_CAM_ATTR_VALUE_TYPE_DOUBLE    1                    ZW_CAM_QM_OPERATION_ATTR_SURF_THICK\n                                                         ZW_CAM_QM_OPERATION_ATTR_MINTOOLHEIGHT\n   ZW_CAM_ATTR_VALUE_TYPE_INTEGER   1     index of tool  ZW_CAM_QM_OPERATION_ATTR_TOOL\n\nThe following is a simple code to get operation's frame and surface thick: \nUser needs to allocate memory for \"value\", and free memory for \"value->data\".\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the surface thickness of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpGetAttr\nidx_Op [in] index of the operation\ncnt [in] count of the attributes\nattr [in] enumerations user wanna get\nvalue [out] the values return\n\nInquire the attributes of the operation. Output a list of svxCmAttrValue via \"value\".\nNot all evxCmQmOpAttr is available for different type of Operation.\nAs follows are 5 Operation Type,\n   value->type        &             value->cnt   & value->data depend on \"attr\"\nZW_CAM_OPERATION_PROFILECUT:\n   ZW_CAM_ATTR_VALUE_TYPE_STRING    <=32                 ZW_CAM_QM_OPERATION_ATTR_NAME\n                                                         ZW_CAM_QM_OPERATION_ATTR_CLASS\n                                                         ZW_CAM_QM_OPERATION_ATTR_FRAME\n   ZW_CAM_ATTR_VALUE_TYPE_INTEGER   1     index of tool  ZW_CAM_QM_OPERATION_ATTR_TOOL\nZW_CAM_OPERATION_SMOOTHFLOW\nZW_CAM_OPERATION_OFFSET2D\nZW_CAM_OPERATION_OFFSET3D\nZW_CAM_OPERATION_ZLEVEL:\n   ZW_CAM_ATTR_VALUE_TYPE_STRING    <=32                 ZW_CAM_QM_OPERATION_ATTR_NAME\n                                                         ZW_CAM_QM_OPERATION_ATTR_CLASS\n                                                         ZW_CAM_QM_OPERATION_ATTR_FRAME\n   ZW_CAM_ATTR_VALUE_TYPE_DOUBLE    1                    ZW_CAM_QM_OPERATION_ATTR_SURF_THICK\n                                                         ZW_CAM_QM_OPERATION_ATTR_MINTOOLHEIGHT\n   ZW_CAM_ATTR_VALUE_TYPE_INTEGER   1     index of tool  ZW_CAM_QM_OPERATION_ATTR_TOOL\n\nThe following is a simple code to get operation's frame and surface thick: \nUser needs to allocate memory for \"value\", and free memory for \"value->data\".\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name and class of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpGetAttr\nidx_Op [in] index of the operation\ncnt [in] count of the attributes\nattr [in] enumerations user wanna get\nvalue [out] the values return\n\nInquire the attributes of the operation. Output a list of svxCmAttrValue via \"value\".\nNot all evxCmQmOpAttr is available for different type of Operation.\nAs follows are 5 Operation Type,\n   value->type        &             value->cnt   & value->data depend on \"attr\"\nZW_CAM_OPERATION_PROFILECUT:\n   ZW_CAM_ATTR_VALUE_TYPE_STRING    <=32                 ZW_CAM_QM_OPERATION_ATTR_NAME\n                                                         ZW_CAM_QM_OPERATION_ATTR_CLASS\n                                                         ZW_CAM_QM_OPERATION_ATTR_FRAME\n   ZW_CAM_ATTR_VALUE_TYPE_INTEGER   1     index of tool  ZW_CAM_QM_OPERATION_ATTR_TOOL\nZW_CAM_OPERATION_SMOOTHFLOW\nZW_CAM_OPERATION_OFFSET2D\nZW_CAM_OPERATION_OFFSET3D\nZW_CAM_OPERATION_ZLEVEL:\n   ZW_CAM_ATTR_VALUE_TYPE_STRING    <=32                 ZW_CAM_QM_OPERATION_ATTR_NAME\n                                                         ZW_CAM_QM_OPERATION_ATTR_CLASS\n                                                         ZW_CAM_QM_OPERATION_ATTR_FRAME\n   ZW_CAM_ATTR_VALUE_TYPE_DOUBLE    1                    ZW_CAM_QM_OPERATION_ATTR_SURF_THICK\n                                                         ZW_CAM_QM_OPERATION_ATTR_MINTOOLHEIGHT\n   ZW_CAM_ATTR_VALUE_TYPE_INTEGER   1     index of tool  ZW_CAM_QM_OPERATION_ATTR_TOOL\n\nThe following is a simple code to get operation's frame and surface thick: \nUser needs to allocate memory for \"value\", and free memory for \"value->data\".\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of attributes for an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpGetAttr\nidx_Op [in] index of the operation\ncnt [in] count of the attributes\nattr [in] enumerations user wanna get\nvalue [out] the values return\n\nInquire the attributes of the operation. Output a list of svxCmAttrValue via \"value\".\nNot all evxCmQmOpAttr is available for different type of Operation.\nAs follows are 5 Operation Type,\n   value->type        &             value->cnt   & value->data depend on \"attr\"\nZW_CAM_OPERATION_PROFILECUT:\n   ZW_CAM_ATTR_VALUE_TYPE_STRING    <=32                 ZW_CAM_QM_OPERATION_ATTR_NAME\n                                                         ZW_CAM_QM_OPERATION_ATTR_CLASS\n                                                         ZW_CAM_QM_OPERATION_ATTR_FRAME\n   ZW_CAM_ATTR_VALUE_TYPE_INTEGER   1     index of tool  ZW_CAM_QM_OPERATION_ATTR_TOOL\nZW_CAM_OPERATION_SMOOTHFLOW\nZW_CAM_OPERATION_OFFSET2D\nZW_CAM_OPERATION_OFFSET3D\nZW_CAM_OPERATION_ZLEVEL:\n   ZW_CAM_ATTR_VALUE_TYPE_STRING    <=32                 ZW_CAM_QM_OPERATION_ATTR_NAME\n                                                         ZW_CAM_QM_OPERATION_ATTR_CLASS\n                                                         ZW_CAM_QM_OPERATION_ATTR_FRAME\n   ZW_CAM_ATTR_VALUE_TYPE_DOUBLE    1                    ZW_CAM_QM_OPERATION_ATTR_SURF_THICK\n                                                         ZW_CAM_QM_OPERATION_ATTR_MINTOOLHEIGHT\n   ZW_CAM_ATTR_VALUE_TYPE_INTEGER   1     index of tool  ZW_CAM_QM_OPERATION_ATTR_TOOL\n\nThe following is a simple code to get operation's frame and surface thick: \nUser needs to allocate memory for \"value\", and free memory for \"value->data\".\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the attributes of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpSetAttr\nidx_Op [in] index of the operation\ncnt [in] count of the attributes\nattr [in] enumerations user wanna set\nvalue [in] the values needed\n\nModify the attributes of the operation.\nNot all evxCmQmOpAttr is available for different type of Operation.\nAs follows are 5 Operation Type,\n   value->type        &             value->cnt   & value->data depend on \"attr\"\nZW_CAM_OPERATION_PROFILECUT:\n   ZW_CAM_ATTR_VALUE_TYPE_STRING    <=32                 ZW_CAM_QM_OPERATION_ATTR_NAME\nZW_CAM_OPERATION_SMOOTHFLOW\nZW_CAM_OPERATION_OFFSET2D\nZW_CAM_OPERATION_OFFSET3D\nZW_CAM_OPERATION_ZLEVEL:\n   ZW_CAM_ATTR_VALUE_TYPE_STRING    <=32                 ZW_CAM_QM_OPERATION_ATTR_NAME\n   ZW_CAM_ATTR_VALUE_TYPE_DOUBLE    1                    ZW_CAM_QM_OPERATION_ATTR_SURF_THICK\n\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the available attributes for different types of operations?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpSetAttr\nidx_Op [in] index of the operation\ncnt [in] count of the attributes\nattr [in] enumerations user wanna set\nvalue [in] the values needed\n\nModify the attributes of the operation.\nNot all evxCmQmOpAttr is available for different type of Operation.\nAs follows are 5 Operation Type,\n   value->type        &             value->cnt   & value->data depend on \"attr\"\nZW_CAM_OPERATION_PROFILECUT:\n   ZW_CAM_ATTR_VALUE_TYPE_STRING    <=32                 ZW_CAM_QM_OPERATION_ATTR_NAME\nZW_CAM_OPERATION_SMOOTHFLOW\nZW_CAM_OPERATION_OFFSET2D\nZW_CAM_OPERATION_OFFSET3D\nZW_CAM_OPERATION_ZLEVEL:\n   ZW_CAM_ATTR_VALUE_TYPE_STRING    <=32                 ZW_CAM_QM_OPERATION_ATTR_NAME\n   ZW_CAM_ATTR_VALUE_TYPE_DOUBLE    1                    ZW_CAM_QM_OPERATION_ATTR_SURF_THICK\n\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the values for different attributes of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpSetAttr\nidx_Op [in] index of the operation\ncnt [in] count of the attributes\nattr [in] enumerations user wanna set\nvalue [in] the values needed\n\nModify the attributes of the operation.\nNot all evxCmQmOpAttr is available for different type of Operation.\nAs follows are 5 Operation Type,\n   value->type        &             value->cnt   & value->data depend on \"attr\"\nZW_CAM_OPERATION_PROFILECUT:\n   ZW_CAM_ATTR_VALUE_TYPE_STRING    <=32                 ZW_CAM_QM_OPERATION_ATTR_NAME\nZW_CAM_OPERATION_SMOOTHFLOW\nZW_CAM_OPERATION_OFFSET2D\nZW_CAM_OPERATION_OFFSET3D\nZW_CAM_OPERATION_ZLEVEL:\n   ZW_CAM_ATTR_VALUE_TYPE_STRING    <=32                 ZW_CAM_QM_OPERATION_ATTR_NAME\n   ZW_CAM_ATTR_VALUE_TYPE_DOUBLE    1                    ZW_CAM_QM_OPERATION_ATTR_SURF_THICK\n\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the attributes of an operation based on a config file?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpSetAttrAsCfg\nidx_Op [in] index of the operation\ncfg_location [in] cfg file location with file name\n\nSet the attributes of the operation depends on the config file. To get a config file: \n\n\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to link a config file to an operation's attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpSetAttrAsCfg\nidx_Op [in] index of the operation\ncfg_location [in] cfg file location with file name\n\nSet the attributes of the operation depends on the config file. To get a config file: \n\n\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I use a config file to define the attributes of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpSetAttrAsCfg\nidx_Op [in] index of the operation\ncfg_location [in] cfg file location with file name\n\nSet the attributes of the operation depends on the config file. To get a config file: \n\n\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set speed & feed for an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpSetSpeed\nidx_op [in] idx of opdef\nspdfdName [in] name of speed & feed\n\nSet speed & feed for the operation. The speed & feed is from active Cam plan or current Library or default Library in proper order.\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the proper order to get speed & feed from active Cam plan, current Library, or default Library?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpSetSpeed\nidx_op [in] idx of opdef\nspdfdName [in] name of speed & feed\n\nSet speed & feed for the operation. The speed & feed is from active Cam plan or current Library or default Library in proper order.\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What does the function return if it succeeds or fails?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpSetSpeed\nidx_op [in] idx of opdef\nspdfdName [in] name of speed & feed\n\nSet speed & feed for the operation. The speed & feed is from active Cam plan or current Library or default Library in proper order.\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the attributes of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpSetAttr2\nidx_op [in] index of the operation\nfield [in] field id of the attribute\nitem [in] item id of the attribute\nvalue [in] value of the attribute\n\nModify the attributes of the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set attributes for a specific operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpSetAttr2\nidx_op [in] index of the operation\nfield [in] field id of the attribute\nitem [in] item id of the attribute\nvalue [in] value of the attribute\n\nModify the attributes of the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I change the value of an attribute for an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpSetAttr2\nidx_op [in] index of the operation\nfield [in] field id of the attribute\nitem [in] item id of the attribute\nvalue [in] value of the attribute\n\nModify the attributes of the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the attributes of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpGetAttr2\nidx_op [in] index of the operation\nfield [in] field id of the attribute\nitem [in] item id of the attribute\nis_on [out] on/off flag (MAYBE NULL)\nvalue [out] value of the attribute, caller should allocate memory\n\nInquire the attributes of the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the on/off flag of an attribute?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpGetAttr2\nidx_op [in] index of the operation\nfield [in] field id of the attribute\nitem [in] item id of the attribute\nis_on [out] on/off flag (MAYBE NULL)\nvalue [out] value of the attribute, caller should allocate memory\n\nInquire the attributes of the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the value of an attribute for a specific operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpGetAttr2\nidx_op [in] index of the operation\nfield [in] field id of the attribute\nitem [in] item id of the attribute\nis_on [out] on/off flag (MAYBE NULL)\nvalue [out] value of the attribute, caller should allocate memory\n\nInquire the attributes of the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of an operation by its name?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpGetIdxFromName\nop_name [in] name of operation\nop_index [out] index of operation\n\nGet the operation index with the specified name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the index of an operation using its name?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpGetIdxFromName\nop_name [in] name of operation\nop_index [out] index of operation\n\nGet the operation index with the specified name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I find the index of an operation by providing its name?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpGetIdxFromName\nop_name [in] name of operation\nop_index [out] index of operation\n\nGet the operation index with the specified name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set a point to an operation parameter?"
            },
            {
                "role": "assistant",
                "content": "cvxCmSetOpPoint\nidx_op [in] index of operation\np0 [in] point value\nfield [in] operation parameter's field\n\nSet one point to operation parameter."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set a point value to an operation parameter?"
            },
            {
                "role": "assistant",
                "content": "cvxCmSetOpPoint\nidx_op [in] index of operation\np0 [in] point value\nfield [in] operation parameter's field\n\nSet one point to operation parameter."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use 'cvxCmSetOpPoint' to assign a point to an operation parameter?"
            },
            {
                "role": "assistant",
                "content": "cvxCmSetOpPoint\nidx_op [in] index of operation\np0 [in] point value\nfield [in] operation parameter's field\n\nSet one point to operation parameter."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set points to an operation parameter?"
            },
            {
                "role": "assistant",
                "content": "cvxCmSetOpPoints\nidx_op [in] index of operation\nnum [in] number of points\npts [in] points value\nfield [in] operation parameter's field\n\nSet points to operation parameter.\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to set points to an operation parameter?"
            },
            {
                "role": "assistant",
                "content": "cvxCmSetOpPoints\nidx_op [in] index of operation\nnum [in] number of points\npts [in] points value\nfield [in] operation parameter's field\n\nSet points to operation parameter.\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to specify the number of points for an operation parameter?"
            },
            {
                "role": "assistant",
                "content": "cvxCmSetOpPoints\nidx_op [in] index of operation\nnum [in] number of points\npts [in] points value\nfield [in] operation parameter's field\n\nSet points to operation parameter.\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to rename an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpRename\nidx_op [in] operation index\nop_newName [in] new name\n\nChange the operation name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to change the name of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpRename\nidx_op [in] operation index\nop_newName [in] new name\n\nChange the operation name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to update the name of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpRename\nidx_op [in] operation index\nop_newName [in] new name\n\nChange the operation name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to replace the position of two tree nodes?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpDrag\ndrag_idx [in] index of to be drag\ndrag_type [in] type of to be drag\ndrop_idx [in] index of to be drop\ndrop_type [in] type of to be drop\niPos [in] position of to be drop 0:in,1:above,2:below\n\nReplace two tree nodes position."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to drag and drop tree nodes?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpDrag\ndrag_idx [in] index of to be drag\ndrag_type [in] type of to be drag\ndrop_idx [in] index of to be drop\ndrop_type [in] type of to be drop\niPos [in] position of to be drop 0:in,1:above,2:below\n\nReplace two tree nodes position."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use drag and drop to change the position of tree nodes?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpDrag\ndrag_idx [in] index of to be drag\ndrag_type [in] type of to be drag\ndrop_idx [in] index of to be drop\ndrop_type [in] type of to be drop\niPos [in] position of to be drop 0:in,1:above,2:below\n\nReplace two tree nodes position."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the attributes of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpSetBasicAttr\nidx_op [in] index of the operation\nfield [in] field id of the attribute\nitem [in] item id of the attribute\nvalue [in] value of the attribute\n\nModify the attributes of the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set basic attributes of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpSetBasicAttr\nidx_op [in] index of the operation\nfield [in] field id of the attribute\nitem [in] item id of the attribute\nvalue [in] value of the attribute\n\nModify the attributes of the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I change the value of an attribute for a specific operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpSetBasicAttr\nidx_op [in] index of the operation\nfield [in] field id of the attribute\nitem [in] item id of the attribute\nvalue [in] value of the attribute\n\nModify the attributes of the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the class of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpInqClass\nidx_Op [in] index of operation\nopClass [out] class of operation 0:rough,1:finish\n\nInquire operation's class"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the class of an operation by its index?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpInqClass\nidx_Op [in] index of operation\nopClass [out] class of operation 0:rough,1:finish\n\nInquire operation's class"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the different classes of operations and their corresponding indices?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpInqClass\nidx_Op [in] index of operation\nopClass [out] class of operation 0:rough,1:finish\n\nInquire operation's class"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the class parameter of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpSetClass\nidx_Op [in] index of operation\nopClass [in] class of operation 0:rough,1:finish\n\nSet the operation's class parameter"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to change the class of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpSetClass\nidx_Op [in] index of operation\nopClass [in] class of operation 0:rough,1:finish\n\nSet the operation's class parameter"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the class of an operation as rough or finish?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpSetClass\nidx_Op [in] index of operation\nopClass [in] class of operation 0:rough,1:finish\n\nSet the operation's class parameter"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the type of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpInqTypeS\nidx_Op [in] index of operation\nopType [out] type of operation\nnByte [in] size of type\n\nGet the operation's type"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about the type of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpInqTypeS\nidx_Op [in] index of operation\nopType [out] type of operation\nnByte [in] size of type\n\nGet the operation's type"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the type of an operation using its index?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpInqTypeS\nidx_Op [in] index of operation\nopType [out] type of operation\nnByte [in] size of type\n\nGet the operation's type"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the indexes of a specific type in the active CamPlan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmInqAl\ntype [in] cam object type\ncnt [out] the amount this type of objects\nidx_obj [out] the index of the object list, user is response to free this memory\n\nInquire the indexes of this type in the active CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the amount of a specific type of cam objects in the active CamPlan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmInqAl\ntype [in] cam object type\ncnt [out] the amount this type of objects\nidx_obj [out] the index of the object list, user is response to free this memory\n\nInquire the indexes of this type in the active CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the index of the object list for a specific type in the active CamPlan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmInqAl\ntype [in] cam object type\ncnt [out] the amount this type of objects\nidx_obj [out] the index of the object list, user is response to free this memory\n\nInquire the indexes of this type in the active CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to verify all operations with stock?"
            },
            {
                "role": "assistant",
                "content": "cvxCmSolidVerify\ngouge [out] check gouge value\n\nVerify all operations. There must be a stock."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check the gouge value for all operations?"
            },
            {
                "role": "assistant",
                "content": "cvxCmSolidVerify\ngouge [out] check gouge value\n\nVerify all operations. There must be a stock."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to ensure there is stock for all operations?"
            },
            {
                "role": "assistant",
                "content": "cvxCmSolidVerify\ngouge [out] check gouge value\n\nVerify all operations. There must be a stock."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to detect clash of operations?"
            },
            {
                "role": "assistant",
                "content": "cvxCmClashDetect\npartIdx [in] idx of part\nstockIdx [in] idx of stock\ncnt [in] number of operations\nidx_op [in] index list of operations\n\nDetect clash of operations, the operations should have been calculated. If clash happened, corresponding toolpath will change its color."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to change the color of toolpath if clash happens?"
            },
            {
                "role": "assistant",
                "content": "cvxCmClashDetect\npartIdx [in] idx of part\nstockIdx [in] idx of stock\ncnt [in] number of operations\nidx_op [in] index list of operations\n\nDetect clash of operations, the operations should have been calculated. If clash happened, corresponding toolpath will change its color."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to detect clash of operations?"
            },
            {
                "role": "assistant",
                "content": "cvxCmClashDetect\npartIdx [in] idx of part\nstockIdx [in] idx of stock\ncnt [in] number of operations\nidx_op [in] index list of operations\n\nDetect clash of operations, the operations should have been calculated. If clash happened, corresponding toolpath will change its color."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to detect gouge in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxCmGougeDetect\npartIdx [in] idx of part\nstockIdx [in] idx of stock\ncnt [in] number of operations\nidx_op [in] index list of operations\n\nDetect gouge of operations, the operations should have been calculated. If gouge happened, corresponding toolpath will change its color."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check for gouge in calculated operations?"
            },
            {
                "role": "assistant",
                "content": "cvxCmGougeDetect\npartIdx [in] idx of part\nstockIdx [in] idx of stock\ncnt [in] number of operations\nidx_op [in] index list of operations\n\nDetect gouge of operations, the operations should have been calculated. If gouge happened, corresponding toolpath will change its color."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the color of toolpath if gouge is detected?"
            },
            {
                "role": "assistant",
                "content": "cvxCmGougeDetect\npartIdx [in] idx of part\nstockIdx [in] idx of stock\ncnt [in] number of operations\nidx_op [in] index list of operations\n\nDetect gouge of operations, the operations should have been calculated. If gouge happened, corresponding toolpath will change its color."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a string from the configuration file using form and field id?"
            },
            {
                "role": "assistant",
                "content": "cvxCmConfigFileGetString\nform [in] form name\nfield [in] field id number\ncasesensitive [in] case sensitive comparison flag\ndbstring [inout] DB string\nguistring [inout] GUI string\nifound [out] flag to see if item was found\n\nYou can only specify either dbstring or guistring but not both. Whichever one is not specified is returned as output. If the requested string cannot be found then the input string is returned as output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if an item was found in the configuration file?"
            },
            {
                "role": "assistant",
                "content": "cvxCmConfigFileGetString\nform [in] form name\nfield [in] field id number\ncasesensitive [in] case sensitive comparison flag\ndbstring [inout] DB string\nguistring [inout] GUI string\nifound [out] flag to see if item was found\n\nYou can only specify either dbstring or guistring but not both. Whichever one is not specified is returned as output. If the requested string cannot be found then the input string is returned as output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to perform a case-sensitive comparison when getting a string from the configuration file?"
            },
            {
                "role": "assistant",
                "content": "cvxCmConfigFileGetString\nform [in] form name\nfield [in] field id number\ncasesensitive [in] case sensitive comparison flag\ndbstring [inout] DB string\nguistring [inout] GUI string\nifound [out] flag to see if item was found\n\nYou can only specify either dbstring or guistring but not both. Whichever one is not specified is returned as output. If the requested string cannot be found then the input string is returned as output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I specify either DB string or GUI string to get the configuration file string?"
            },
            {
                "role": "assistant",
                "content": "cvxCmConfigFileGetString\nform [in] form name\nfield [in] field id number\ncasesensitive [in] case sensitive comparison flag\ndbstring [inout] DB string\nguistring [inout] GUI string\nifound [out] flag to see if item was found\n\nYou can only specify either dbstring or guistring but not both. Whichever one is not specified is returned as output. If the requested string cannot be found then the input string is returned as output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the name of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmInqOpName\nidx_op [in] index of the operation\nopName [out] name of the operation\n\nInquire the name of the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the name of an operation by its index?"
            },
            {
                "role": "assistant",
                "content": "cvxCmInqOpName\nidx_op [in] index of the operation\nopName [out] name of the operation\n\nInquire the name of the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the name of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmInqOpName\nidx_op [in] index of the operation\nopName [out] name of the operation\n\nInquire the name of the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the index of an object by its name?"
            },
            {
                "role": "assistant",
                "content": "cvxCmInqIndexFromName\nobjClass [in] class of object\nsName [in] name of object\nindex [out] index of object found (or -1 if not found)\n\nGet the object index for the object with the specified name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the index of an object based on its name?"
            },
            {
                "role": "assistant",
                "content": "cvxCmInqIndexFromName\nobjClass [in] class of object\nsName [in] name of object\nindex [out] index of object found (or -1 if not found)\n\nGet the object index for the object with the specified name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the index of an object using its name?"
            },
            {
                "role": "assistant",
                "content": "cvxCmInqIndexFromName\nobjClass [in] class of object\nsName [in] name of object\nindex [out] index of object found (or -1 if not found)\n\nGet the object index for the object with the specified name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a tool into an active CamPlan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolInsert\ntltype [in] tool type\nsubtype [in] sub type of tool\nidx_tool [out] index of the new tool\n\nInsert a tool into active CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a new tool?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolInsert\ntltype [in] tool type\nsubtype [in] sub type of tool\nidx_tool [out] index of the new tool\n\nInsert a tool into active CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of the new tool after insertion?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolInsert\ntltype [in] tool type\nsubtype [in] sub type of tool\nidx_tool [out] index of the new tool\n\nInsert a tool into active CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a tool from the library into CamPlan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolInsertAsTemplate\ntemplate_path [in] template path\nfile_name [in] file name\nlibrary_name [in] library name\ntool_name [in] tool name\nidx_tool [out] tool index\n\nInsert the tool from the library into CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to insert a tool as a template?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolInsertAsTemplate\ntemplate_path [in] template path\nfile_name [in] file name\nlibrary_name [in] library name\ntool_name [in] tool name\nidx_tool [out] tool index\n\nInsert the tool from the library into CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the tool name and library name when inserting a tool?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolInsertAsTemplate\ntemplate_path [in] template path\nfile_name [in] file name\nlibrary_name [in] library name\ntool_name [in] tool name\nidx_tool [out] tool index\n\nInsert the tool from the library into CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the index of the inserted tool?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolInsertAsTemplate\ntemplate_path [in] template path\nfile_name [in] file name\nlibrary_name [in] library name\ntool_name [in] tool name\nidx_tool [out] tool index\n\nInsert the tool from the library into CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a tool in CamPlan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolDelete\nidx_tool [in] index of the tool\n\nDelete the tool in CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove a tool by its index in CamPlan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolDelete\nidx_tool [in] index of the tool\n\nDelete the tool in CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to delete a tool using its index in CamPlan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolDelete\nidx_tool [in] index of the tool\n\nDelete the tool in CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the attribute of a tool?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolGetAttr\nidx_tool [in] index of the tool\nattr [in] enumeration of tool attribute\nvalue [out] the values return; user needs to free the memory\n\nInquire the tool's attribute.\nsee:\ncvxCmToolSetAttr()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the value of a specific tool attribute?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolGetAttr\nidx_tool [in] index of the tool\nattr [in] enumeration of tool attribute\nvalue [out] the values return; user needs to free the memory\n\nInquire the tool's attribute.\nsee:\ncvxCmToolSetAttr()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free the memory after getting the tool's attribute value?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolGetAttr\nidx_tool [in] index of the tool\nattr [in] enumeration of tool attribute\nvalue [out] the values return; user needs to free the memory\n\nInquire the tool's attribute.\nsee:\ncvxCmToolSetAttr()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the tool's attribute?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolSetAttr\nidx_tool [in] index of the tool\nattr [in] enumeration of tool attribute\nvalue [in] the values needed\n\nSet the tool's attribute. \"attr\" can't be CM_TOOL_TYPE or CM_TOOL_SUBTYPE. While \"attr\" is CM_TOOL_HOLDER, holder (depends on its name) is from active CAM plan or current Library or default Library in proper older.\n\"value->type\"                 &     \"value->cnt\" depends on \"attr\", as follows:\nZW_CAM_ATTR_VALUE_TYPE_STRING       <=32     CM_TOOL_NAME\n                                             CM_TOOL_ID\n                                             CM_TOOL_HOLDER\nZW_CAM_ATTR_VALUE_TYPE_DOUBLE       1        CM_TOOL_LEN\n                                             CM_TOOL_CUTTERDIAMETER\nZW_CAM_ATTR_VALUE_TYPE_INTEGER      1        CM_TOOLCHANGER_LOCATION\n                                             CM_TOOLCHANGER_DIAMETER\n                                             CM_TOOLCHANGER_HEIGHT\n\nThe following is a simple code to set tool name and length: \nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the available tool attributes that can be set?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolSetAttr\nidx_tool [in] index of the tool\nattr [in] enumeration of tool attribute\nvalue [in] the values needed\n\nSet the tool's attribute. \"attr\" can't be CM_TOOL_TYPE or CM_TOOL_SUBTYPE. While \"attr\" is CM_TOOL_HOLDER, holder (depends on its name) is from active CAM plan or current Library or default Library in proper older.\n\"value->type\"                 &     \"value->cnt\" depends on \"attr\", as follows:\nZW_CAM_ATTR_VALUE_TYPE_STRING       <=32     CM_TOOL_NAME\n                                             CM_TOOL_ID\n                                             CM_TOOL_HOLDER\nZW_CAM_ATTR_VALUE_TYPE_DOUBLE       1        CM_TOOL_LEN\n                                             CM_TOOL_CUTTERDIAMETER\nZW_CAM_ATTR_VALUE_TYPE_INTEGER      1        CM_TOOLCHANGER_LOCATION\n                                             CM_TOOLCHANGER_DIAMETER\n                                             CM_TOOLCHANGER_HEIGHT\n\nThe following is a simple code to set tool name and length: \nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the tool name and length?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolSetAttr\nidx_tool [in] index of the tool\nattr [in] enumeration of tool attribute\nvalue [in] the values needed\n\nSet the tool's attribute. \"attr\" can't be CM_TOOL_TYPE or CM_TOOL_SUBTYPE. While \"attr\" is CM_TOOL_HOLDER, holder (depends on its name) is from active CAM plan or current Library or default Library in proper older.\n\"value->type\"                 &     \"value->cnt\" depends on \"attr\", as follows:\nZW_CAM_ATTR_VALUE_TYPE_STRING       <=32     CM_TOOL_NAME\n                                             CM_TOOL_ID\n                                             CM_TOOL_HOLDER\nZW_CAM_ATTR_VALUE_TYPE_DOUBLE       1        CM_TOOL_LEN\n                                             CM_TOOL_CUTTERDIAMETER\nZW_CAM_ATTR_VALUE_TYPE_INTEGER      1        CM_TOOLCHANGER_LOCATION\n                                             CM_TOOLCHANGER_DIAMETER\n                                             CM_TOOLCHANGER_HEIGHT\n\nThe following is a simple code to set tool name and length: \nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a specific format for setting the tool's attribute values?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolSetAttr\nidx_tool [in] index of the tool\nattr [in] enumeration of tool attribute\nvalue [in] the values needed\n\nSet the tool's attribute. \"attr\" can't be CM_TOOL_TYPE or CM_TOOL_SUBTYPE. While \"attr\" is CM_TOOL_HOLDER, holder (depends on its name) is from active CAM plan or current Library or default Library in proper older.\n\"value->type\"                 &     \"value->cnt\" depends on \"attr\", as follows:\nZW_CAM_ATTR_VALUE_TYPE_STRING       <=32     CM_TOOL_NAME\n                                             CM_TOOL_ID\n                                             CM_TOOL_HOLDER\nZW_CAM_ATTR_VALUE_TYPE_DOUBLE       1        CM_TOOL_LEN\n                                             CM_TOOL_CUTTERDIAMETER\nZW_CAM_ATTR_VALUE_TYPE_INTEGER      1        CM_TOOLCHANGER_LOCATION\n                                             CM_TOOLCHANGER_DIAMETER\n                                             CM_TOOLCHANGER_HEIGHT\n\nThe following is a simple code to set tool name and length: \nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a holder from the library into CamPlan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmHolderInsertAsTemplate\ntemplate_path [in] template path\nfile_name [in] file name\nlibrary_name [in] library name\nholder_name [in] holder name\nidx_holder [out] holder index\n\nInsert the holder from the library into CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to use a template path for inserting a holder?"
            },
            {
                "role": "assistant",
                "content": "cvxCmHolderInsertAsTemplate\ntemplate_path [in] template path\nfile_name [in] file name\nlibrary_name [in] library name\nholder_name [in] holder name\nidx_holder [out] holder index\n\nInsert the holder from the library into CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of the inserted holder?"
            },
            {
                "role": "assistant",
                "content": "cvxCmHolderInsertAsTemplate\ntemplate_path [in] template path\nfile_name [in] file name\nlibrary_name [in] library name\nholder_name [in] holder name\nidx_holder [out] holder index\n\nInsert the holder from the library into CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxCmSpeedInsertAsTemplate\ntemplate_path [in] template path\nfile_name [in] file name\nlibrary_name [in] library name\nspdfd_name [in] speed name\nidx_speed [out] speed index\n\nInsert the speed from the library into CamPlan.\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxCmSpeedInsertAsTemplate\ntemplate_path [in] template path\nfile_name [in] file name\nlibrary_name [in] library name\nspdfd_name [in] speed name\nidx_speed [out] speed index\n\nInsert the speed from the library into CamPlan.\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxCmSpeedInsertAsTemplate\ntemplate_path [in] template path\nfile_name [in] file name\nlibrary_name [in] library name\nspdfd_name [in] speed name\nidx_speed [out] speed index\n\nInsert the speed from the library into CamPlan.\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the attribute of a tool?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolGetData\nidx_tool [in] index of the tool\nattr [in] enumeration of tool attribute\nvalue [out] value of the attribute, caller should allocate memory\n\nInquire the tool's attribute."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the value of a tool's attribute?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolGetData\nidx_tool [in] index of the tool\nattr [in] enumeration of tool attribute\nvalue [out] value of the attribute, caller should allocate memory\n\nInquire the tool's attribute."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the tool attribute by index?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolGetData\nidx_tool [in] index of the tool\nattr [in] enumeration of tool attribute\nvalue [out] value of the attribute, caller should allocate memory\n\nInquire the tool's attribute."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the color value from the Configuration form?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetColor\nName [in] name of config file variable\nColor [out] value of the specified variable\n\nOutputs the value of a setting from the Configuration form/config file.\nVX_COLOR_BLACK is output if the variable value is not one of the standard color names.\nThis function should not be used to get the color from a variable whose value is a 3-integer RGB color.\nUse the cvxConfigGetRgb() function for variables whose values are defined by their RGB components.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the color value from the config file variable?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetColor\nName [in] name of config file variable\nColor [out] value of the specified variable\n\nOutputs the value of a setting from the Configuration form/config file.\nVX_COLOR_BLACK is output if the variable value is not one of the standard color names.\nThis function should not be used to get the color from a variable whose value is a 3-integer RGB color.\nUse the cvxConfigGetRgb() function for variables whose values are defined by their RGB components.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the specified variable value from the Configuration form?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetColor\nName [in] name of config file variable\nColor [out] value of the specified variable\n\nOutputs the value of a setting from the Configuration form/config file.\nVX_COLOR_BLACK is output if the variable value is not one of the standard color names.\nThis function should not be used to get the color from a variable whose value is a 3-integer RGB color.\nUse the cvxConfigGetRgb() function for variables whose values are defined by their RGB components.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the value of a specific setting from the Configuration form?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetInteger\nName undocumented\nValue undocumented\n\nOutputs the value of a setting from the Configuration form/config file. The variable value is assumed to be an integer (0 is assigned to \"Value\" when the value is not a number).\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\\\supp\\\\config.xml.\n\n@param [in] Name name of config file variable\n@param [out] Value value of the specified variable\n\n@retval succeeds\n-        ZW_API_NO_ERROR\n@retval fail\n-        ZW_API_GENERAL_ERROR - variable does not exist and set \"value\" to 0"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the integer value of a variable from the config file?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetInteger\nName undocumented\nValue undocumented\n\nOutputs the value of a setting from the Configuration form/config file. The variable value is assumed to be an integer (0 is assigned to \"Value\" when the value is not a number).\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\\\supp\\\\config.xml.\n\n@param [in] Name name of config file variable\n@param [out] Value value of the specified variable\n\n@retval succeeds\n-        ZW_API_NO_ERROR\n@retval fail\n-        ZW_API_GENERAL_ERROR - variable does not exist and set \"value\" to 0"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I access the integer value of a specific variable from the config.xml file?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetInteger\nName undocumented\nValue undocumented\n\nOutputs the value of a setting from the Configuration form/config file. The variable value is assumed to be an integer (0 is assigned to \"Value\" when the value is not a number).\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\\\supp\\\\config.xml.\n\n@param [in] Name name of config file variable\n@param [out] Value value of the specified variable\n\n@retval succeeds\n-        ZW_API_NO_ERROR\n@retval fail\n-        ZW_API_GENERAL_ERROR - variable does not exist and set \"value\" to 0"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the value of a setting from the Configuration form?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetNumber\nName undocumented\nValue undocumented\n\nOutputs the value of a setting from the Configuration form/config file. The variable value is assumed to be a number (0 is assigned to \"Value\" when the value is not a number).\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\\\supp\\\\config.xml.\n\n@param [in] Name name of config file variable\n@param [out] Value value of the specified variable\n\n@retval succeeds\n-        ZW_API_NO_ERROR\n@retval fail\n-        ZW_API_GENERAL_ERROR - variable does not exist and set \"value\" to 0"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the value of a specific variable from the config file?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetNumber\nName undocumented\nValue undocumented\n\nOutputs the value of a setting from the Configuration form/config file. The variable value is assumed to be a number (0 is assigned to \"Value\" when the value is not a number).\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\\\supp\\\\config.xml.\n\n@param [in] Name name of config file variable\n@param [out] Value value of the specified variable\n\n@retval succeeds\n-        ZW_API_NO_ERROR\n@retval fail\n-        ZW_API_GENERAL_ERROR - variable does not exist and set \"value\" to 0"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a variable exists in the config file and retrieve its value?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetNumber\nName undocumented\nValue undocumented\n\nOutputs the value of a setting from the Configuration form/config file. The variable value is assumed to be a number (0 is assigned to \"Value\" when the value is not a number).\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\\\supp\\\\config.xml.\n\n@param [in] Name name of config file variable\n@param [out] Value value of the specified variable\n\n@retval succeeds\n-        ZW_API_NO_ERROR\n@retval fail\n-        ZW_API_GENERAL_ERROR - variable does not exist and set \"value\" to 0"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to compare the value of a config file variable to a list of options?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetOption\nName [in] name of config file variable\nOptions [in] 0-terminated, comma-delimited allowed values\n\nGiven the variable name of a setting in the config file, look up the variable and compare its value as a string to the sub-strings \n\n contained in the comma-delimited \"Options\" string, and return the index (numbered from 1) of the matching sub-string. The string comparison is case-insensitive.\nFor example, if \"Options\" is \"mm,meter,mil,inch\" and the value of the config file variable of interest is \"meter\", this function will return 2.\nIf the value of the config file variable is \"foot\", this function will return 0.\nThe \"Options\" string should have no more than 32 sub-strings, no sub-string should be longer than 31 bytes, and the sub-strings should not contain blank spaces. \n\n If \"Options\" has more than 32 sub-strings, only the first 32 will be compared to the variable value. \n\n If any sub-string is longer than 31 bytes, only its first 31 bytes will be compared to the variable value (the variable value must also be 31 bytes or less).\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the index of a matching sub-string in the config file variable value?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetOption\nName [in] name of config file variable\nOptions [in] 0-terminated, comma-delimited allowed values\n\nGiven the variable name of a setting in the config file, look up the variable and compare its value as a string to the sub-strings \n\n contained in the comma-delimited \"Options\" string, and return the index (numbered from 1) of the matching sub-string. The string comparison is case-insensitive.\nFor example, if \"Options\" is \"mm,meter,mil,inch\" and the value of the config file variable of interest is \"meter\", this function will return 2.\nIf the value of the config file variable is \"foot\", this function will return 0.\nThe \"Options\" string should have no more than 32 sub-strings, no sub-string should be longer than 31 bytes, and the sub-strings should not contain blank spaces. \n\n If \"Options\" has more than 32 sub-strings, only the first 32 will be compared to the variable value. \n\n If any sub-string is longer than 31 bytes, only its first 31 bytes will be compared to the variable value (the variable value must also be 31 bytes or less).\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to perform a case-insensitive comparison of a config file variable value with a list of options?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetOption\nName [in] name of config file variable\nOptions [in] 0-terminated, comma-delimited allowed values\n\nGiven the variable name of a setting in the config file, look up the variable and compare its value as a string to the sub-strings \n\n contained in the comma-delimited \"Options\" string, and return the index (numbered from 1) of the matching sub-string. The string comparison is case-insensitive.\nFor example, if \"Options\" is \"mm,meter,mil,inch\" and the value of the config file variable of interest is \"meter\", this function will return 2.\nIf the value of the config file variable is \"foot\", this function will return 0.\nThe \"Options\" string should have no more than 32 sub-strings, no sub-string should be longer than 31 bytes, and the sub-strings should not contain blank spaces. \n\n If \"Options\" has more than 32 sub-strings, only the first 32 will be compared to the variable value. \n\n If any sub-string is longer than 31 bytes, only its first 31 bytes will be compared to the variable value (the variable value must also be 31 bytes or less).\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the RGB value of a specific variable from the Configuration form/config file?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetRgb\nName undocumented\nRgb undocumented\n\nOutputs the value of a setting from the Configuration form/config file. \n\n\nThe variable value is assumed to be the RGB components of a color, i.e. a comma-separated list of 3 integers between 0 and 255.\nThis function should not be used to get the color from a variable whose value is one of the standard color names rather than a 3-integer RGB color. \n\n\nUse the cvxConfigGetColor() function for variables whose values are color names.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\\\supp\\\\config.xml.\n\n@param [in] Name name of config file variable\n@param [out] Rgb value of the specified variable\n\n@retval succeeds\n-        ZW_API_NO_ERROR - variable exists and has a value of 3 integers\n@retval fail\n-        ZW_API_GENERAL_ERROR - variable does not exist and set \"Rgb\" to 0, 0, 0 (black)"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the color from a variable with RGB components?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetRgb\nName undocumented\nRgb undocumented\n\nOutputs the value of a setting from the Configuration form/config file. \n\n\nThe variable value is assumed to be the RGB components of a color, i.e. a comma-separated list of 3 integers between 0 and 255.\nThis function should not be used to get the color from a variable whose value is one of the standard color names rather than a 3-integer RGB color. \n\n\nUse the cvxConfigGetColor() function for variables whose values are color names.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\\\supp\\\\config.xml.\n\n@param [in] Name name of config file variable\n@param [out] Rgb value of the specified variable\n\n@retval succeeds\n-        ZW_API_NO_ERROR - variable exists and has a value of 3 integers\n@retval fail\n-        ZW_API_GENERAL_ERROR - variable does not exist and set \"Rgb\" to 0, 0, 0 (black)"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a variable exists and retrieve its RGB value?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetRgb\nName undocumented\nRgb undocumented\n\nOutputs the value of a setting from the Configuration form/config file. \n\n\nThe variable value is assumed to be the RGB components of a color, i.e. a comma-separated list of 3 integers between 0 and 255.\nThis function should not be used to get the color from a variable whose value is one of the standard color names rather than a 3-integer RGB color. \n\n\nUse the cvxConfigGetColor() function for variables whose values are color names.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\\\supp\\\\config.xml.\n\n@param [in] Name name of config file variable\n@param [out] Rgb value of the specified variable\n\n@retval succeeds\n-        ZW_API_NO_ERROR - variable exists and has a value of 3 integers\n@retval fail\n-        ZW_API_GENERAL_ERROR - variable does not exist and set \"Rgb\" to 0, 0, 0 (black)"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve a setting value from the Configuration form?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetString\nName [in] name of config file variable\nStr [out] 0-terminated value of the specified variable\nnBytes [in] max size of Str array in bytes\n\nOutputs the value of a setting from the Configuration form/config file. The variable value is simply copied as a string to \"Str\". \n\n If the value is longer than nBytes-1, the value is truncated to fit \"Str\".\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the value of a specific variable from the config file?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetString\nName [in] name of config file variable\nStr [out] 0-terminated value of the specified variable\nnBytes [in] max size of Str array in bytes\n\nOutputs the value of a setting from the Configuration form/config file. The variable value is simply copied as a string to \"Str\". \n\n If the value is longer than nBytes-1, the value is truncated to fit \"Str\".\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the value of a variable from the config.xml file?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetString\nName [in] name of config file variable\nStr [out] 0-terminated value of the specified variable\nnBytes [in] max size of Str array in bytes\n\nOutputs the value of a setting from the Configuration form/config file. The variable value is simply copied as a string to \"Str\". \n\n If the value is longer than nBytes-1, the value is truncated to fit \"Str\".\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the value of a setting from the Configuration form?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetYesNo\nName undocumented\nYesNo undocumented\n\nOutputs the value of a setting from the Configuration form/config file. The variable value must be one of the strings \"Yes\" or \"No\" (case is ignored). If the value is \"Yes\", 1 is output. If the value is \"No\", 0 is output.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\\\supp\\\\config.xml.\n\n@param [in] Name name of config file variable\n@param [out] YesNo 1 if value is \"Yes\", 0 if value is \"No\"\n\n@retval succeeds\n-        ZW_API_NO_ERROR - variable exists and has a value that is either \"Yes\" or \"No\""
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if a specific configuration value is set to 'Yes' or 'No'?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetYesNo\nName undocumented\nYesNo undocumented\n\nOutputs the value of a setting from the Configuration form/config file. The variable value must be one of the strings \"Yes\" or \"No\" (case is ignored). If the value is \"Yes\", 1 is output. If the value is \"No\", 0 is output.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\\\supp\\\\config.xml.\n\n@param [in] Name name of config file variable\n@param [out] YesNo 1 if value is \"Yes\", 0 if value is \"No\"\n\n@retval succeeds\n-        ZW_API_NO_ERROR - variable exists and has a value that is either \"Yes\" or \"No\""
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I get the value of a specific variable from the config file?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetYesNo\nName undocumented\nYesNo undocumented\n\nOutputs the value of a setting from the Configuration form/config file. The variable value must be one of the strings \"Yes\" or \"No\" (case is ignored). If the value is \"Yes\", 1 is output. If the value is \"No\", 0 is output.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\\\supp\\\\config.xml.\n\n@param [in] Name name of config file variable\n@param [out] YesNo 1 if value is \"Yes\", 0 if value is \"No\"\n\n@retval succeeds\n-        ZW_API_NO_ERROR - variable exists and has a value that is either \"Yes\" or \"No\""
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the config path for API developer?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigPathGet\npath [out] config path\nsizepath [in] max size of path\n\nGet config path for api developer. Api developers should save their config files here, if they have.\nA path that is too long (longer than \"sizepath\") is truncated.\nIt is assumed that the input \"path\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the maximum size of the config path?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigPathGet\npath [out] config path\nsizepath [in] max size of path\n\nGet config path for api developer. Api developers should save their config files here, if they have.\nA path that is too long (longer than \"sizepath\") is truncated.\nIt is assumed that the input \"path\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a limit on the length of the config path?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigPathGet\npath [out] config path\nsizepath [in] max size of path\n\nGet config path for api developer. Api developers should save their config files here, if they have.\nA path that is too long (longer than \"sizepath\") is truncated.\nIt is assumed that the input \"path\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the value of a setting from the Configuration form?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetColor\nName [in] name of config file variable\nColor [in] value of the specified variable\n\nSets the value of a setting from the Configuration form/config file.\nThis function should not be used to set the color from a variable whose value is a 3-integer RGB color. Use the cvxConfigSetRgb() function for variables whose values are defined by their RGB components.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the color from a variable?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetColor\nName [in] name of config file variable\nColor [in] value of the specified variable\n\nSets the value of a setting from the Configuration form/config file.\nThis function should not be used to set the color from a variable whose value is a 3-integer RGB color. Use the cvxConfigSetRgb() function for variables whose values are defined by their RGB components.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the color value of a specified variable?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetColor\nName [in] name of config file variable\nColor [in] value of the specified variable\n\nSets the value of a setting from the Configuration form/config file.\nThis function should not be used to set the color from a variable whose value is a 3-integer RGB color. Use the cvxConfigSetRgb() function for variables whose values are defined by their RGB components.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the value of a setting from the Configuration form?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetInteger\nName [in] name of config file variable\nValue [in] value of the specified variable\n\nSets the value of a setting from the Configuration form/config file. The variable value is assumed to be an integer (0 is assigned to \"Value\" when the value is not a number).\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign an integer value to a specified variable in the config file?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetInteger\nName [in] name of config file variable\nValue [in] value of the specified variable\n\nSets the value of a setting from the Configuration form/config file. The variable value is assumed to be an integer (0 is assigned to \"Value\" when the value is not a number).\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Where can I find the 'Name' defined in the config.xml file?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetInteger\nName [in] name of config file variable\nValue [in] value of the specified variable\n\nSets the value of a setting from the Configuration form/config file. The variable value is assumed to be an integer (0 is assigned to \"Value\" when the value is not a number).\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the value of a setting from the Configuration form?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetNumber\nName [in] name of config file variable\nValue [in] value of the specified variable\n\nSets the value of a setting from the Configuration form/config file. The variable value is assumed to be a number (0 is assigned to \"Value\" when the value is not a number).\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign a number to a specified variable in the config file?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetNumber\nName [in] name of config file variable\nValue [in] value of the specified variable\n\nSets the value of a setting from the Configuration form/config file. The variable value is assumed to be a number (0 is assigned to \"Value\" when the value is not a number).\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Where can I find the 'Name' defined in the config.xml file?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetNumber\nName [in] name of config file variable\nValue [in] value of the specified variable\n\nSets the value of a setting from the Configuration form/config file. The variable value is assumed to be a number (0 is assigned to \"Value\" when the value is not a number).\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the value of a setting from the Configuration form?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetOption\nName [in] name of config file variable\nOption [in] value of the specified variable\n\nSets the value of a setting from the Configuration form/config file.\nThe \"Option\" should not be longer than 31 bytes, and it should not contain blank spaces.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to change the value of a variable in the config file?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetOption\nName [in] name of config file variable\nOption [in] value of the specified variable\n\nSets the value of a setting from the Configuration form/config file.\nThe \"Option\" should not be longer than 31 bytes, and it should not contain blank spaces.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the maximum length for the value of the specified variable?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetOption\nName [in] name of config file variable\nOption [in] value of the specified variable\n\nSets the value of a setting from the Configuration form/config file.\nThe \"Option\" should not be longer than 31 bytes, and it should not contain blank spaces.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the RGB value of a configuration variable?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetRgb\nName [in] name of config file variable\nRgb [in] value of the specified variable\n\nSets the value of a setting from the Configuration form/config file. The variable value is assumed to be the RGB components of a color, i.e. a comma-separated list of 3 integers between 0 and 255.\nThis function should not be used to set the color from a variable whose value is one of the standard color names rather than a 3-integer RGB color. Use the cvxConfigSetColor() function for variables whose values are color names.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the color from a variable with RGB components?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetRgb\nName [in] name of config file variable\nRgb [in] value of the specified variable\n\nSets the value of a setting from the Configuration form/config file. The variable value is assumed to be the RGB components of a color, i.e. a comma-separated list of 3 integers between 0 and 255.\nThis function should not be used to set the color from a variable whose value is one of the standard color names rather than a 3-integer RGB color. Use the cvxConfigSetColor() function for variables whose values are color names.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to update the RGB value of a configuration variable?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetRgb\nName [in] name of config file variable\nRgb [in] value of the specified variable\n\nSets the value of a setting from the Configuration form/config file. The variable value is assumed to be the RGB components of a color, i.e. a comma-separated list of 3 integers between 0 and 255.\nThis function should not be used to set the color from a variable whose value is one of the standard color names rather than a 3-integer RGB color. Use the cvxConfigSetColor() function for variables whose values are color names.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the string value of a setting from the Configuration form/config file?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetString\nName [in] name of config file variable\nStr [in] value of the specified variable\n\nSets the string value of a setting from the Configuration form/config file.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to change the value of a specific variable in the configuration file?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetString\nName [in] name of config file variable\nStr [in] value of the specified variable\n\nSets the string value of a setting from the Configuration form/config file.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the value of a variable in the configuration file?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetString\nName [in] name of config file variable\nStr [in] value of the specified variable\n\nSets the string value of a setting from the Configuration form/config file.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the value of a setting from the Configuration form?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetYesNo\nName [in] name of config file variable\nYesNo [in] value of the specified variable\n\nSets the value of a setting from the Configuration form/config file. The variable value must be one of the strings \"Yes\" or \"No\" (case is ignored). 1-Yes, 0-No.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the value of a variable in the config file?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetYesNo\nName [in] name of config file variable\nYesNo [in] value of the specified variable\n\nSets the value of a setting from the Configuration form/config file. The variable value must be one of the strings \"Yes\" or \"No\" (case is ignored). 1-Yes, 0-No.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set a variable to Yes or No in the config file?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetYesNo\nName [in] name of config file variable\nYesNo [in] value of the specified variable\n\nSets the value of a setting from the Configuration form/config file. The variable value must be one of the strings \"Yes\" or \"No\" (case is ignored). 1-Yes, 0-No.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the type of a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqType\nidDim [in] the index of dimension\ntype [out] the type of specified dimension\n\nGet the type(evxDimType) of specified dimension. It can't get the corresponding type if \"*type = VX_DIM_LAST\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the type of a dimension by its index?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqType\nidDim [in] the index of dimension\ntype [out] the type of specified dimension\n\nGet the type(evxDimType) of specified dimension. It can't get the corresponding type if \"*type = VX_DIM_LAST\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to obtain the type of a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqType\nidDim [in] the index of dimension\ntype [out] the type of specified dimension\n\nGet the type(evxDimType) of specified dimension. It can't get the corresponding type if \"*type = VX_DIM_LAST\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the type of a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqTypeEx\nidDim [in] the index of dimension\ntypeEx [out] the type of specified dimension\n\nGet the type(evxDimTypeEx) of specified dimension.\nIt can't get the corresponding type if \"*type = VX_DIM_EX_LAST\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the type of a dimension by its index?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqTypeEx\nidDim [in] the index of dimension\ntypeEx [out] the type of specified dimension\n\nGet the type(evxDimTypeEx) of specified dimension.\nIt can't get the corresponding type if \"*type = VX_DIM_EX_LAST\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to get the type of a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqTypeEx\nidDim [in] the index of dimension\ntypeEx [out] the type of specified dimension\n\nGet the type(evxDimTypeEx) of specified dimension.\nIt can't get the corresponding type if \"*type = VX_DIM_EX_LAST\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if a dimension label is a radius or diameter?"
            },
            {
                "role": "assistant",
                "content": "cvxDimIsRadius\nidDim [in] the index of dimension\nisRadius [out] 1 is radius, 0 is diameter\n\nDetermine whether the label is diameter or radius."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check if a dimension label represents a radius or diameter?"
            },
            {
                "role": "assistant",
                "content": "cvxDimIsRadius\nidDim [in] the index of dimension\nisRadius [out] 1 is radius, 0 is diameter\n\nDetermine whether the label is diameter or radius."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to distinguish between radius and diameter in a dimension label?"
            },
            {
                "role": "assistant",
                "content": "cvxDimIsRadius\nidDim [in] the index of dimension\nisRadius [out] 1 is radius, 0 is diameter\n\nDetermine whether the label is diameter or radius."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the state of a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqState\nidDim [in] the index of dimension\nstate [out] the state of specified dimension\n\nGet the state(evxDimState) of specified dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to inquire the state of a dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqState\nidDim [in] the index of dimension\nstate [out] the state of specified dimension\n\nGet the state(evxDimState) of specified dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to retrieve the state of a specific dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqState\nidDim [in] the index of dimension\nstate [out] the state of specified dimension\n\nGet the state(evxDimState) of specified dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of dimension bundles in a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqDimBundles\nidDim [in] index of dimension\nCount [out] number of dimension bundles in dimension\nidBundles [out] list of index of dimension bundles\n\nOutputs a list of indices of dimension bundles in specified dimension.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of dimension bundles in a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqDimBundles\nidDim [in] index of dimension\nCount [out] number of dimension bundles in dimension\nidBundles [out] list of index of dimension bundles\n\nOutputs a list of indices of dimension bundles in specified dimension.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about dimension bundles in a specific dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqDimBundles\nidDim [in] index of dimension\nCount [out] number of dimension bundles in dimension\nidBundles [out] list of index of dimension bundles\n\nOutputs a list of indices of dimension bundles in specified dimension.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get FCS data of a specified dimension object?"
            },
            {
                "role": "assistant",
                "content": "cvxDimFCSDataGet\nidFCS [in] index of FCS dimension\nnumOfFcs [out] number of FCS data (NULL to ignore)\nFcsData [out] list of FCS data (NULL to ignore)\nNote1 [out] FCS annotation text1 (NULL to ignore)\nNote2 [out] FCS annotation text2 (NULL to ignore)\n\nGet data of specified FCS dimension object.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the number of FCS data for a specific dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimFCSDataGet\nidFCS [in] index of FCS dimension\nnumOfFcs [out] number of FCS data (NULL to ignore)\nFcsData [out] list of FCS data (NULL to ignore)\nNote1 [out] FCS annotation text1 (NULL to ignore)\nNote2 [out] FCS annotation text2 (NULL to ignore)\n\nGet data of specified FCS dimension object.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the FCS annotation text for a specified dimension object?"
            },
            {
                "role": "assistant",
                "content": "cvxDimFCSDataGet\nidFCS [in] index of FCS dimension\nnumOfFcs [out] number of FCS data (NULL to ignore)\nFcsData [out] list of FCS data (NULL to ignore)\nNote1 [out] FCS annotation text1 (NULL to ignore)\nNote2 [out] FCS annotation text2 (NULL to ignore)\n\nGet data of specified FCS dimension object.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the variable of a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqVar\nidDim [in] id of dimension or dimension bundle to inquire\nVar [out] the variable of specified dimension\n\nOutputs the variable that belong to the specified id. The parent of dimension can be part,sketch or drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to inquire the variable of a dimension or dimension bundle?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqVar\nidDim [in] id of dimension or dimension bundle to inquire\nVar [out] the variable of specified dimension\n\nOutputs the variable that belong to the specified id. The parent of dimension can be part,sketch or drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the variable of a dimension belonging to a specific parent like part, sketch, or drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqVar\nidDim [in] id of dimension or dimension bundle to inquire\nVar [out] the variable of specified dimension\n\nOutputs the variable that belong to the specified id. The parent of dimension can be part,sketch or drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the value of a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimValMod\nidDim [in] the index of the dimension object\nexp [in] the expression of the dimension object\n\nModify the value of the specified dimension.\nThe parent of dimension can be part or sketch.\nIf the dimension belongs to a block and the expression is referenced by another file or current part, you can not use the expression name as the second parameter directly, use the correct form of the expression reference(File Name:Root Name:Expression or\nRoot Name:Expression)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the correct form of expression reference when modifying the value of a dimension belonging to a block?"
            },
            {
                "role": "assistant",
                "content": "cvxDimValMod\nidDim [in] the index of the dimension object\nexp [in] the expression of the dimension object\n\nModify the value of the specified dimension.\nThe parent of dimension can be part or sketch.\nIf the dimension belongs to a block and the expression is referenced by another file or current part, you can not use the expression name as the second parameter directly, use the correct form of the expression reference(File Name:Root Name:Expression or\nRoot Name:Expression)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can the value of a dimension be modified if it belongs to a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxDimValMod\nidDim [in] the index of the dimension object\nexp [in] the expression of the dimension object\n\nModify the value of the specified dimension.\nThe parent of dimension can be part or sketch.\nIf the dimension belongs to a block and the expression is referenced by another file or current part, you can not use the expression name as the second parameter directly, use the correct form of the expression reference(File Name:Root Name:Expression or\nRoot Name:Expression)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the value of a specified dimension without updating?"
            },
            {
                "role": "assistant",
                "content": "cvxDimValModNoUpdate\nidDim [in] the index of the dimension object\nexp [in] the expression of the dimension object\n\nModify the value of the specified dimension. it is similar to cvxDimValMod(), the difference is no update/eval/redraw in this function so as to speed up. It needs to call cvxDimValMod() for the last dim for update all previous changes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to modify the value of a dimension without redrawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDimValModNoUpdate\nidDim [in] the index of the dimension object\nexp [in] the expression of the dimension object\n\nModify the value of the specified dimension. it is similar to cvxDimValMod(), the difference is no update/eval/redraw in this function so as to speed up. It needs to call cvxDimValMod() for the last dim for update all previous changes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the expression of a dimension without updating?"
            },
            {
                "role": "assistant",
                "content": "cvxDimValModNoUpdate\nidDim [in] the index of the dimension object\nexp [in] the expression of the dimension object\n\nModify the value of the specified dimension. it is similar to cvxDimValMod(), the difference is no update/eval/redraw in this function so as to speed up. It needs to call cvxDimValMod() for the last dim for update all previous changes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire dimension text content for a specific dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqText\nidDim [in] id of dimension\nsubDim [in] serial number of sub dimension(0,1,2...), refer to evxHoleDimDataItem for sub-data item of hole dimension\npStr [out] output destination text\n\nThis function is to inquire dimension text content for the dimension with index idDim.\nThe calling procedure MUST deallocate the output string with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the procedure to deallocate the output string after using cvxDimInqText?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqText\nidDim [in] id of dimension\nsubDim [in] serial number of sub dimension(0,1,2...), refer to evxHoleDimDataItem for sub-data item of hole dimension\npStr [out] output destination text\n\nThis function is to inquire dimension text content for the dimension with index idDim.\nThe calling procedure MUST deallocate the output string with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the dimension text for a specific sub-dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqText\nidDim [in] id of dimension\nsubDim [in] serial number of sub dimension(0,1,2...), refer to evxHoleDimDataItem for sub-data item of hole dimension\npStr [out] output destination text\n\nThis function is to inquire dimension text content for the dimension with index idDim.\nThe calling procedure MUST deallocate the output string with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify dimension text for a specific dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimModTxt\nidDim [in] id of dimension\nsubDim [in] number to indicate which sub-dimension to be modified. The first sub-dimension starts from 0\npStr [in] new destination text\n\nThis function is to modify dimension text for the dimension with index idDim."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to change the destination text for a dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimModTxt\nidDim [in] id of dimension\nsubDim [in] number to indicate which sub-dimension to be modified. The first sub-dimension starts from 0\npStr [in] new destination text\n\nThis function is to modify dimension text for the dimension with index idDim."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I modify the text of a specific sub-dimension in a dimension entity?"
            },
            {
                "role": "assistant",
                "content": "cvxDimModTxt\nidDim [in] id of dimension\nsubDim [in] number to indicate which sub-dimension to be modified. The first sub-dimension starts from 0\npStr [in] new destination text\n\nThis function is to modify dimension text for the dimension with index idDim."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the user text type of a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqTextType\nidDim [in] index of dimension or dimension bundle\nType [out] text type (0-value, 1-user text, 2-override value)\n\nGet current user text type of specified dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine the text type of a dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqTextType\nidDim [in] index of dimension or dimension bundle\nType [out] text type (0-value, 1-user text, 2-override value)\n\nGet current user text type of specified dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the different text types available for a dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqTextType\nidDim [in] index of dimension or dimension bundle\nType [out] text type (0-value, 1-user text, 2-override value)\n\nGet current user text type of specified dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set user text type for a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimModTextType\nidDim [in] index of dimension or dimension bundle\nType [in] text type (0-value, 1-user text, 2-override value)\ntext [in] text string or override expression (NULL to ignore when Type=0)\n\nSet user text type and text string or override expression of specified dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set text string for a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimModTextType\nidDim [in] index of dimension or dimension bundle\nType [in] text type (0-value, 1-user text, 2-override value)\ntext [in] text string or override expression (NULL to ignore when Type=0)\n\nSet user text type and text string or override expression of specified dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to override value for a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimModTextType\nidDim [in] index of dimension or dimension bundle\nType [in] text type (0-value, 1-user text, 2-override value)\ntext [in] text string or override expression (NULL to ignore when Type=0)\n\nSet user text type and text string or override expression of specified dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the location of dimension text point?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqTxtPnt\nidDim [in] index of dimension\nTextPnt [out] dimension text origin\n\nGet dimension text point location of specified dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the dimension text origin?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqTxtPnt\nidDim [in] index of dimension\nTextPnt [out] dimension text origin\n\nGet dimension text point location of specified dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I find the dimension text point of a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqTxtPnt\nidDim [in] index of dimension\nTextPnt [out] dimension text origin\n\nGet dimension text point location of specified dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the location of dimension text point?"
            },
            {
                "role": "assistant",
                "content": "cvxDimModTxtPnt\nidDim [in] index of dimension or dimension bundle\ncenter [in] center flag (1-center, 0-not center)\nTextPnt [in] new dimension text origin\n\nThis function is to modify dimension text point location of specified dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the dimension text origin?"
            },
            {
                "role": "assistant",
                "content": "cvxDimModTxtPnt\nidDim [in] index of dimension or dimension bundle\ncenter [in] center flag (1-center, 0-not center)\nTextPnt [in] new dimension text origin\n\nThis function is to modify dimension text point location of specified dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the new dimension text origin?"
            },
            {
                "role": "assistant",
                "content": "cvxDimModTxtPnt\nidDim [in] index of dimension or dimension bundle\ncenter [in] center flag (1-center, 0-not center)\nTextPnt [in] new dimension text origin\n\nThis function is to modify dimension text point location of specified dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the point which a dimension points to?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqPos\nidDim [in] id of dimension\npPos [out] stretchable point coordinate\n\nThis function is to inquire the point which this dimension points to, The parent of dimension should be PMI in part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the stretchable point coordinate of a dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqPos\nidDim [in] id of dimension\npPos [out] stretchable point coordinate\n\nThis function is to inquire the point which this dimension points to, The parent of dimension should be PMI in part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the parent of a dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqPos\nidDim [in] id of dimension\npPos [out] stretchable point coordinate\n\nThis function is to inquire the point which this dimension points to, The parent of dimension should be PMI in part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get dimension point coordinates of a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqDimPnts\nidDim [in] index of dimension or PMI of dimension type\ncount [out] number of dimension points\nDimPnts [out] list of dimension point coordinates\n\nOutputs a list of dimension point coordinates of specified dimension.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list of dimension point coordinates?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqDimPnts\nidDim [in] index of dimension or PMI of dimension type\ncount [out] number of dimension points\nDimPnts [out] list of dimension point coordinates\n\nOutputs a list of dimension point coordinates of specified dimension.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the number of dimension points?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqDimPnts\nidDim [in] index of dimension or PMI of dimension type\ncount [out] number of dimension points\nDimPnts [out] list of dimension point coordinates\n\nOutputs a list of dimension point coordinates of specified dimension.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of dimension curves?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqDimLines\nidDim [in] index of dimension or PMI of dimension type\ncount [out] number of dimension curves\nDimCrvs [out] list of dimension curves\n\nOutputs a list of dimension curves of specified dimension.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nnote:\nAll points in svxCurve are the points in Frame that the local coordinate system of the curve, the function cvxPntTransform() can be used to convert points into points in the global coordinate system."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of dimension curves of a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqDimLines\nidDim [in] index of dimension or PMI of dimension type\ncount [out] number of dimension curves\nDimCrvs [out] list of dimension curves\n\nOutputs a list of dimension curves of specified dimension.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nnote:\nAll points in svxCurve are the points in Frame that the local coordinate system of the curve, the function cvxPntTransform() can be used to convert points into points in the global coordinate system."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to deallocate the output list of dimension curves?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqDimLines\nidDim [in] index of dimension or PMI of dimension type\ncount [out] number of dimension curves\nDimCrvs [out] list of dimension curves\n\nOutputs a list of dimension curves of specified dimension.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nnote:\nAll points in svxCurve are the points in Frame that the local coordinate system of the curve, the function cvxPntTransform() can be used to convert points into points in the global coordinate system."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can the function cvxPntTransform() be used to convert points into the global coordinate system?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqDimLines\nidDim [in] index of dimension or PMI of dimension type\ncount [out] number of dimension curves\nDimCrvs [out] list of dimension curves\n\nOutputs a list of dimension curves of specified dimension.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nnote:\nAll points in svxCurve are the points in Frame that the local coordinate system of the curve, the function cvxPntTransform() can be used to convert points into points in the global coordinate system."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of extension curves for a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqExtLines\nidDim [in] index of dimension or PMI of dimension type\ncount [out] number of extension curves\nDimCrvs [out] list of extension curves\n\nOutputs a list of extension curves of specified dimension.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nnote:\nall points in svxCurve are the points in Frame that the local coordinate system of the curve, the function cvxPntTransform() can be used to convert points into points in the global coordinate system."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the count of extension curves for a dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqExtLines\nidDim [in] index of dimension or PMI of dimension type\ncount [out] number of extension curves\nDimCrvs [out] list of extension curves\n\nOutputs a list of extension curves of specified dimension.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nnote:\nall points in svxCurve are the points in Frame that the local coordinate system of the curve, the function cvxPntTransform() can be used to convert points into points in the global coordinate system."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to deallocate the output list of extension curves?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqExtLines\nidDim [in] index of dimension or PMI of dimension type\ncount [out] number of extension curves\nDimCrvs [out] list of extension curves\n\nOutputs a list of extension curves of specified dimension.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nnote:\nall points in svxCurve are the points in Frame that the local coordinate system of the curve, the function cvxPntTransform() can be used to convert points into points in the global coordinate system."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the attributes data of a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimAtGetBySub\nidDim [in] id of dimension\nsubDim [in] serial number of sub dimension(0,1,2...), refer to evxHoleDimDataItem for sub-data item of hole dimension\ndmAttr [out] dimension attributes\n\nGets the attributes data of specified dimension. The different between this function and cvxDwgDimAtGet() is that this function get the element attribute of the input dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the element attribute of an input dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimAtGetBySub\nidDim [in] id of dimension\nsubDim [in] serial number of sub dimension(0,1,2...), refer to evxHoleDimDataItem for sub-data item of hole dimension\ndmAttr [out] dimension attributes\n\nGets the attributes data of specified dimension. The different between this function and cvxDwgDimAtGet() is that this function get the element attribute of the input dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the difference between cvxDimAtGetBySub and cvxDwgDimAtGet function?"
            },
            {
                "role": "assistant",
                "content": "cvxDimAtGetBySub\nidDim [in] id of dimension\nsubDim [in] serial number of sub dimension(0,1,2...), refer to evxHoleDimDataItem for sub-data item of hole dimension\ndmAttr [out] dimension attributes\n\nGets the attributes data of specified dimension. The different between this function and cvxDwgDimAtGet() is that this function get the element attribute of the input dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initiate a screen redraw?"
            },
            {
                "role": "assistant",
                "content": "cvxDispRedraw\n\nInitiates a screen redraw if display update is not disabled and if a redraw is not going to be forced at the end of the current operation.\nActive inputs (i.e. picks and previews) are not redrawn. If you desire a redraw that includes redisplay of active inputs, use cvxCmdSend(\"$CdRedrawAll\").\nnote:\nThis function must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to force a screen redraw at the end of the current operation?"
            },
            {
                "role": "assistant",
                "content": "cvxDispRedraw\n\nInitiates a screen redraw if display update is not disabled and if a redraw is not going to be forced at the end of the current operation.\nActive inputs (i.e. picks and previews) are not redrawn. If you desire a redraw that includes redisplay of active inputs, use cvxCmdSend(\"$CdRedrawAll\").\nnote:\nThis function must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should I use cvxCmdSend(\"$CdRedrawAll\") for redrawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDispRedraw\n\nInitiates a screen redraw if display update is not disabled and if a redraw is not going to be forced at the end of the current operation.\nActive inputs (i.e. picks and previews) are not redrawn. If you desire a redraw that includes redisplay of active inputs, use cvxCmdSend(\"$CdRedrawAll\").\nnote:\nThis function must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxDispDataUpdate\n\nCalling this function during a command will cause the data used to display part faces and edges to update/regenerate at the end of the command."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxDispDataUpdate\n\nCalling this function during a command will cause the data used to display part faces and edges to update/regenerate at the end of the command."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxDispDataUpdate\n\nCalling this function during a command will cause the data used to display part faces and edges to update/regenerate at the end of the command."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the active display mode?"
            },
            {
                "role": "assistant",
                "content": "cvxDispModeGet\nMode [out] active display mode\n\nOutputs the active display mode."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the active display mode?"
            },
            {
                "role": "assistant",
                "content": "cvxDispModeGet\nMode [out] active display mode\n\nOutputs the active display mode."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function can be used to obtain the active display mode?"
            },
            {
                "role": "assistant",
                "content": "cvxDispModeGet\nMode [out] active display mode\n\nOutputs the active display mode."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the active display mode?"
            },
            {
                "role": "assistant",
                "content": "cvxDispModeSet\nMode [in] display mode\n\nSets the active display mode."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the display mode?"
            },
            {
                "role": "assistant",
                "content": "cvxDispModeSet\nMode [in] display mode\n\nSets the active display mode."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the display mode?"
            },
            {
                "role": "assistant",
                "content": "cvxDispModeSet\nMode [in] display mode\n\nSets the active display mode."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the default color RGB components?"
            },
            {
                "role": "assistant",
                "content": "cvxDispRgbGet\nType [in] display attribute type\nRgb [out] default color RGB components\n\nGets the RGB components of the specified default point/wireframe/face color.\nsee:\ncvxDispColorGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the RGB components of the default point/wireframe/face color?"
            },
            {
                "role": "assistant",
                "content": "cvxDispRgbGet\nType [in] display attribute type\nRgb [out] default color RGB components\n\nGets the RGB components of the specified default point/wireframe/face color.\nsee:\ncvxDispColorGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function can be used to obtain the RGB components of the default display attribute type?"
            },
            {
                "role": "assistant",
                "content": "cvxDispRgbGet\nType [in] display attribute type\nRgb [out] default color RGB components\n\nGets the RGB components of the specified default point/wireframe/face color.\nsee:\ncvxDispColorGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the default color for points, wireframes, and faces using RGB components?"
            },
            {
                "role": "assistant",
                "content": "cvxDispRgbSet\nType [in] display attribute type\nRgb [in] color RGB components to use as default\n\nSets the default point/wireframe/face color from RGB components.\nnote:\nOnly faces support the full range of possible RGB colors. Points and wireframe entities can have only the colors corresponding to those predefined by the evxColor type. \n\n If \"Type\" is VX_DISP_POINT or VX_DISP_LINE, this function finds the evxColor that is closest to the given RGB components and uses that standard color for the specified default.\nsee:\ncvxDispColorSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the default color for points and wireframes based on the closest predefined evxColor?"
            },
            {
                "role": "assistant",
                "content": "cvxDispRgbSet\nType [in] display attribute type\nRgb [in] color RGB components to use as default\n\nSets the default point/wireframe/face color from RGB components.\nnote:\nOnly faces support the full range of possible RGB colors. Points and wireframe entities can have only the colors corresponding to those predefined by the evxColor type. \n\n If \"Type\" is VX_DISP_POINT or VX_DISP_LINE, this function finds the evxColor that is closest to the given RGB components and uses that standard color for the specified default.\nsee:\ncvxDispColorSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use RGB components to set the default color for faces?"
            },
            {
                "role": "assistant",
                "content": "cvxDispRgbSet\nType [in] display attribute type\nRgb [in] color RGB components to use as default\n\nSets the default point/wireframe/face color from RGB components.\nnote:\nOnly faces support the full range of possible RGB colors. Points and wireframe entities can have only the colors corresponding to those predefined by the evxColor type. \n\n If \"Type\" is VX_DISP_POINT or VX_DISP_LINE, this function finds the evxColor that is closest to the given RGB components and uses that standard color for the specified default.\nsee:\ncvxDispColorSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the default color for point/wireframe/face?"
            },
            {
                "role": "assistant",
                "content": "cvxDispColorGet\nType [in] display attribute type\nColor [out] color id\n\nGets the default point/wireframe/face color.\nFace colors may be defined over a broader range of RGB components than can be represented by the evxColor type. If the default face color is not one of the standard colors, this function outputs the nearest evxColor value that approximates it.\nsee:\ncvxDispRgbGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the color id for a specific display attribute type?"
            },
            {
                "role": "assistant",
                "content": "cvxDispColorGet\nType [in] display attribute type\nColor [out] color id\n\nGets the default point/wireframe/face color.\nFace colors may be defined over a broader range of RGB components than can be represented by the evxColor type. If the default face color is not one of the standard colors, this function outputs the nearest evxColor value that approximates it.\nsee:\ncvxDispRgbGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the default color for different display attribute types?"
            },
            {
                "role": "assistant",
                "content": "cvxDispColorGet\nType [in] display attribute type\nColor [out] color id\n\nGets the default point/wireframe/face color.\nFace colors may be defined over a broader range of RGB components than can be represented by the evxColor type. If the default face color is not one of the standard colors, this function outputs the nearest evxColor value that approximates it.\nsee:\ncvxDispRgbGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the default point color?"
            },
            {
                "role": "assistant",
                "content": "cvxDispColorSet\nType [in] display attribute type\nColor [in] color id to use as default\n\nSets the default point/wireframe/face color.\nsee:\ncvxDispRgbSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the default wireframe color?"
            },
            {
                "role": "assistant",
                "content": "cvxDispColorSet\nType [in] display attribute type\nColor [in] color id to use as default\n\nSets the default point/wireframe/face color.\nsee:\ncvxDispRgbSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the default face color?"
            },
            {
                "role": "assistant",
                "content": "cvxDispColorSet\nType [in] display attribute type\nColor [in] color id to use as default\n\nSets the default point/wireframe/face color.\nsee:\ncvxDispRgbSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the default color using color id?"
            },
            {
                "role": "assistant",
                "content": "cvxDispColorSet\nType [in] display attribute type\nColor [in] color id to use as default\n\nSets the default point/wireframe/face color.\nsee:\ncvxDispRgbSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to switch OFF automatic display update of a specified GUI item?"
            },
            {
                "role": "assistant",
                "content": "cvxDispSwitch\nItem [in] display/gui item\nisOn [in] 0=OFF, 1=ON\n\nSwitches OFF automatic display update of the specified GUI item when \"isOn=0\". Switches it back ON when \"isOn=1\".\nEach call to this function with \"isOn=0\" MUST be paired with a subsequent call to this same function with the same \"Item\" setting and \"isOn=1\" in order to restore the setting to its original state. This is CRITICAL for the ZW3D display to function properly after your application is done.\nBy default, display update is ON, so this function should ALWAYS be called first with \"isOn=0\" followed by a call with \"isOn=1\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to switch ON automatic display update of a specified GUI item?"
            },
            {
                "role": "assistant",
                "content": "cvxDispSwitch\nItem [in] display/gui item\nisOn [in] 0=OFF, 1=ON\n\nSwitches OFF automatic display update of the specified GUI item when \"isOn=0\". Switches it back ON when \"isOn=1\".\nEach call to this function with \"isOn=0\" MUST be paired with a subsequent call to this same function with the same \"Item\" setting and \"isOn=1\" in order to restore the setting to its original state. This is CRITICAL for the ZW3D display to function properly after your application is done.\nBy default, display update is ON, so this function should ALWAYS be called first with \"isOn=0\" followed by a call with \"isOn=1\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the default state of display update?"
            },
            {
                "role": "assistant",
                "content": "cvxDispSwitch\nItem [in] display/gui item\nisOn [in] 0=OFF, 1=ON\n\nSwitches OFF automatic display update of the specified GUI item when \"isOn=0\". Switches it back ON when \"isOn=1\".\nEach call to this function with \"isOn=0\" MUST be paired with a subsequent call to this same function with the same \"Item\" setting and \"isOn=1\" in order to restore the setting to its original state. This is CRITICAL for the ZW3D display to function properly after your application is done.\nBy default, display update is ON, so this function should ALWAYS be called first with \"isOn=0\" followed by a call with \"isOn=1\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Why is it critical to pair the call with isOn=0 with a subsequent call with isOn=1?"
            },
            {
                "role": "assistant",
                "content": "cvxDispSwitch\nItem [in] display/gui item\nisOn [in] 0=OFF, 1=ON\n\nSwitches OFF automatic display update of the specified GUI item when \"isOn=0\". Switches it back ON when \"isOn=1\".\nEach call to this function with \"isOn=0\" MUST be paired with a subsequent call to this same function with the same \"Item\" setting and \"isOn=1\" in order to restore the setting to its original state. This is CRITICAL for the ZW3D display to function properly after your application is done.\nBy default, display update is ON, so this function should ALWAYS be called first with \"isOn=0\" followed by a call with \"isOn=1\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the state of a display switch?"
            },
            {
                "role": "assistant",
                "content": "cvxDispSwitchGet\nItem [in] display/gui item\nisOn [out] 0=OFF, 1=ON\n\nOutputs the state of a switch set using cvxDispSwitch(). If \"Item = VX_DISP_ALL\", \"isOn\" is output as zero unless VX_DISP_SCREEN, VX_DISP_PREVIEW and VX_DISP_FORMS are all ON."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check if a specific display item is on or off?"
            },
            {
                "role": "assistant",
                "content": "cvxDispSwitchGet\nItem [in] display/gui item\nisOn [out] 0=OFF, 1=ON\n\nOutputs the state of a switch set using cvxDispSwitch(). If \"Item = VX_DISP_ALL\", \"isOn\" is output as zero unless VX_DISP_SCREEN, VX_DISP_PREVIEW and VX_DISP_FORMS are all ON."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine the state of a display item?"
            },
            {
                "role": "assistant",
                "content": "cvxDispSwitchGet\nItem [in] display/gui item\nisOn [out] 0=OFF, 1=ON\n\nOutputs the state of a switch set using cvxDispSwitch(). If \"Item = VX_DISP_ALL\", \"isOn\" is output as zero unless VX_DISP_SCREEN, VX_DISP_PREVIEW and VX_DISP_FORMS are all ON."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to disable display/UI update?"
            },
            {
                "role": "assistant",
                "content": "cvxDispState\nOption [in] 0 to disable display/UI update; \n\n 1 to re-enable display/UI update; \n\n 2 to re-enable AND refresh the display/UI\nState [inout] storage for display states\n\nThis function should ALWAYS be called in pairs to disable display/UI update (Option=0) and then to re-enable it (Option=1). \n\n The first call to disable display/UI update records current display settings in \"State\", then disables them. \n\n The second call uses the settings previously recorded in \"State\" to re-enable display/UI update.\nnote:\nIf this function is being used to re-enable display/UI update after an error occurred in application code, always use \"Option = 1\". In this case \"Option = 2\" could cause further errors by attempting to refresh the display from an erroneous database."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to re-enable display/UI update?"
            },
            {
                "role": "assistant",
                "content": "cvxDispState\nOption [in] 0 to disable display/UI update; \n\n 1 to re-enable display/UI update; \n\n 2 to re-enable AND refresh the display/UI\nState [inout] storage for display states\n\nThis function should ALWAYS be called in pairs to disable display/UI update (Option=0) and then to re-enable it (Option=1). \n\n The first call to disable display/UI update records current display settings in \"State\", then disables them. \n\n The second call uses the settings previously recorded in \"State\" to re-enable display/UI update.\nnote:\nIf this function is being used to re-enable display/UI update after an error occurred in application code, always use \"Option = 1\". In this case \"Option = 2\" could cause further errors by attempting to refresh the display from an erroneous database."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to refresh the display/UI after re-enabling it?"
            },
            {
                "role": "assistant",
                "content": "cvxDispState\nOption [in] 0 to disable display/UI update; \n\n 1 to re-enable display/UI update; \n\n 2 to re-enable AND refresh the display/UI\nState [inout] storage for display states\n\nThis function should ALWAYS be called in pairs to disable display/UI update (Option=0) and then to re-enable it (Option=1). \n\n The first call to disable display/UI update records current display settings in \"State\", then disables them. \n\n The second call uses the settings previously recorded in \"State\" to re-enable display/UI update.\nnote:\nIf this function is being used to re-enable display/UI update after an error occurred in application code, always use \"Option = 1\". In this case \"Option = 2\" could cause further errors by attempting to refresh the display from an erroneous database."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check the current display status of a specific visual display item?"
            },
            {
                "role": "assistant",
                "content": "cvxVisDispStatusGet\nItem [in] visual display Item\nisOn [in] on = 1, off = 0\n\nGet the current display status of specified visual display item ."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the display status of a visual item?"
            },
            {
                "role": "assistant",
                "content": "cvxVisDispStatusGet\nItem [in] visual display Item\nisOn [in] on = 1, off = 0\n\nGet the current display status of specified visual display item ."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I determine if a specific visual display item is currently on or off?"
            },
            {
                "role": "assistant",
                "content": "cvxVisDispStatusGet\nItem [in] visual display Item\nisOn [in] on = 1, off = 0\n\nGet the current display status of specified visual display item ."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update UI controls after entering a new environment?"
            },
            {
                "role": "assistant",
                "content": "cvxDispSceneUpdate\n\nAfter using the cvxCmdMacro() command and entering the new environment, user can use this interface to update various UI controls of the environment."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to refresh the UI after using cvxCmdMacro() command?"
            },
            {
                "role": "assistant",
                "content": "cvxDispSceneUpdate\n\nAfter using the cvxCmdMacro() command and entering the new environment, user can use this interface to update various UI controls of the environment."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the scene after entering a new environment?"
            },
            {
                "role": "assistant",
                "content": "cvxDispSceneUpdate\n\nAfter using the cvxCmdMacro() command and entering the new environment, user can use this interface to update various UI controls of the environment."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the top left X coordinate of the active display window?"
            },
            {
                "role": "assistant",
                "content": "cvxDispWindowRectGet\nincludeFrame [in] Include window frame; 0, Exclude window frame\nisGlobal [in] Get the global coordinates; 0, Get the client coordinates\nx [out] top left X. If don't get this value, set it nullptr.\ny [out] top left Y. If don't get this value, set it nullptr.\nw [out] active display window's width. If don't get this value, set it nullptr.\nh [out] active display window's height. If don't get this value, set it nullptr.\n\nGet the global or client coordinates of the active display window."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the top left Y coordinate of the active display window?"
            },
            {
                "role": "assistant",
                "content": "cvxDispWindowRectGet\nincludeFrame [in] Include window frame; 0, Exclude window frame\nisGlobal [in] Get the global coordinates; 0, Get the client coordinates\nx [out] top left X. If don't get this value, set it nullptr.\ny [out] top left Y. If don't get this value, set it nullptr.\nw [out] active display window's width. If don't get this value, set it nullptr.\nh [out] active display window's height. If don't get this value, set it nullptr.\n\nGet the global or client coordinates of the active display window."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the width of the active display window?"
            },
            {
                "role": "assistant",
                "content": "cvxDispWindowRectGet\nincludeFrame [in] Include window frame; 0, Exclude window frame\nisGlobal [in] Get the global coordinates; 0, Get the client coordinates\nx [out] top left X. If don't get this value, set it nullptr.\ny [out] top left Y. If don't get this value, set it nullptr.\nw [out] active display window's width. If don't get this value, set it nullptr.\nh [out] active display window's height. If don't get this value, set it nullptr.\n\nGet the global or client coordinates of the active display window."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the height of the active display window?"
            },
            {
                "role": "assistant",
                "content": "cvxDispWindowRectGet\nincludeFrame [in] Include window frame; 0, Exclude window frame\nisGlobal [in] Get the global coordinates; 0, Get the client coordinates\nx [out] top left X. If don't get this value, set it nullptr.\ny [out] top left Y. If don't get this value, set it nullptr.\nw [out] active display window's width. If don't get this value, set it nullptr.\nh [out] active display window's height. If don't get this value, set it nullptr.\n\nGet the global or client coordinates of the active display window."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the global coordinates of the active display window?"
            },
            {
                "role": "assistant",
                "content": "cvxDispWindowRectGet\nincludeFrame [in] Include window frame; 0, Exclude window frame\nisGlobal [in] Get the global coordinates; 0, Get the client coordinates\nx [out] top left X. If don't get this value, set it nullptr.\ny [out] top left Y. If don't get this value, set it nullptr.\nw [out] active display window's width. If don't get this value, set it nullptr.\nh [out] active display window's height. If don't get this value, set it nullptr.\n\nGet the global or client coordinates of the active display window."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the client coordinates of the active display window?"
            },
            {
                "role": "assistant",
                "content": "cvxDispWindowRectGet\nincludeFrame [in] Include window frame; 0, Exclude window frame\nisGlobal [in] Get the global coordinates; 0, Get the client coordinates\nx [out] top left X. If don't get this value, set it nullptr.\ny [out] top left Y. If don't get this value, set it nullptr.\nw [out] active display window's width. If don't get this value, set it nullptr.\nh [out] active display window's height. If don't get this value, set it nullptr.\n\nGet the global or client coordinates of the active display window."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of light sources?"
            },
            {
                "role": "assistant",
                "content": "cvxDispGetLights\nCount [out] number of light sources\nLights [out] list of light sources\n\nGets a list of light sources associated with the active part or assembly.\nThis function allocates memory for the list of light sources. This memory MUST be deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of light sources?"
            },
            {
                "role": "assistant",
                "content": "cvxDispGetLights\nCount [out] number of light sources\nLights [out] list of light sources\n\nGets a list of light sources associated with the active part or assembly.\nThis function allocates memory for the list of light sources. This memory MUST be deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve light sources associated with the active part or assembly?"
            },
            {
                "role": "assistant",
                "content": "cvxDispGetLights\nCount [out] number of light sources\nLights [out] list of light sources\n\nGets a list of light sources associated with the active part or assembly.\nThis function allocates memory for the list of light sources. This memory MUST be deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxDispSetLights()?"
            },
            {
                "role": "assistant",
                "content": "cvxDispSetLightsInit\ndata [out] light source data\n\nInitialize the parameters of the cvxDispSetLights().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the light source data?"
            },
            {
                "role": "assistant",
                "content": "cvxDispSetLightsInit\ndata [out] light source data\n\nInitialize the parameters of the cvxDispSetLights().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to empty everything before initializing the light source data?"
            },
            {
                "role": "assistant",
                "content": "cvxDispSetLightsInit\ndata [out] light source data\n\nInitialize the parameters of the cvxDispSetLights().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set light sources for the active part or assembly?"
            },
            {
                "role": "assistant",
                "content": "cvxDispSetLights\nCount [in] number of light sources\nLights [in] list of light sources\n\nSet light sources associated with the active part or assembly. New light sources will replace the existing ones.\nnote:\nInterface cvxDispSetLightsInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to replace existing light sources with new ones?"
            },
            {
                "role": "assistant",
                "content": "cvxDispSetLights\nCount [in] number of light sources\nLights [in] list of light sources\n\nSet light sources associated with the active part or assembly. New light sources will replace the existing ones.\nnote:\nInterface cvxDispSetLightsInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can you provide the function to initialize variables for setting light sources?"
            },
            {
                "role": "assistant",
                "content": "cvxDispSetLights\nCount [in] number of light sources\nLights [in] list of light sources\n\nSet light sources associated with the active part or assembly. New light sources will replace the existing ones.\nnote:\nInterface cvxDispSetLightsInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to load a specific Show-n-Tell file?"
            },
            {
                "role": "assistant",
                "content": "cvxShowOpen\nFile [in] path to Show-n-Tell file\n\nLoads the specified \"Show-n-Tell\" file. Use cvxShowDisplay() to activate a specific \"Show-n-Tell\" slide."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to open a Show-n-Tell file?"
            },
            {
                "role": "assistant",
                "content": "cvxShowOpen\nFile [in] path to Show-n-Tell file\n\nLoads the specified \"Show-n-Tell\" file. Use cvxShowDisplay() to activate a specific \"Show-n-Tell\" slide."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxShowDisplay() to activate a specific slide in Show-n-Tell?"
            },
            {
                "role": "assistant",
                "content": "cvxShowOpen\nFile [in] path to Show-n-Tell file\n\nLoads the specified \"Show-n-Tell\" file. Use cvxShowDisplay() to activate a specific \"Show-n-Tell\" slide."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a specific 'Show-n-Tell' slide?"
            },
            {
                "role": "assistant",
                "content": "cvxShowDisp\nSlideNumber [in] Show-n-Tell slide number ( >= 1)\n\nDisplays the specified \"Show-n-Tell\" slide, numbered from 1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to show a particular slide by slide number?"
            },
            {
                "role": "assistant",
                "content": "cvxShowDisp\nSlideNumber [in] Show-n-Tell slide number ( >= 1)\n\nDisplays the specified \"Show-n-Tell\" slide, numbered from 1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I display a slide in 'Show-n-Tell' using its slide number?"
            },
            {
                "role": "assistant",
                "content": "cvxShowDisp\nSlideNumber [in] Show-n-Tell slide number ( >= 1)\n\nDisplays the specified \"Show-n-Tell\" slide, numbered from 1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the active view to encompass all visible geometry?"
            },
            {
                "role": "assistant",
                "content": "cvxDispZoomAll\nRedraw [in] 1 to redraw after zoom all; else 0\n\nSets active view to encompass all visible geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to zoom all visible geometry in the active view?"
            },
            {
                "role": "assistant",
                "content": "cvxDispZoomAll\nRedraw [in] 1 to redraw after zoom all; else 0\n\nSets active view to encompass all visible geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to redraw after zooming all visible geometry?"
            },
            {
                "role": "assistant",
                "content": "cvxDispZoomAll\nRedraw [in] 1 to redraw after zoom all; else 0\n\nSets active view to encompass all visible geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the active view to encompass all visible geometry including dimensions?"
            },
            {
                "role": "assistant",
                "content": "cvxDispZoomAllIncludeDim\nRedraw [in] 1 to redraw after zoom all; else 0\n\nSets active view to encompass all visible geometry including dimensions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to zoom all and include dimensions in the active view?"
            },
            {
                "role": "assistant",
                "content": "cvxDispZoomAllIncludeDim\nRedraw [in] 1 to redraw after zoom all; else 0\n\nSets active view to encompass all visible geometry including dimensions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to redraw after zooming all to include dimensions?"
            },
            {
                "role": "assistant",
                "content": "cvxDispZoomAllIncludeDim\nRedraw [in] 1 to redraw after zoom all; else 0\n\nSets active view to encompass all visible geometry including dimensions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to zoom at a specific location on the active view?"
            },
            {
                "role": "assistant",
                "content": "cvxDispZoomAt\npoint [in] point to zoom at\nfactor [in] the factor to zoom at, mostly to be 0.8\n\nZoom at a specific location on the active view using the zoom factor."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to zoom at a specific point?"
            },
            {
                "role": "assistant",
                "content": "cvxDispZoomAt\npoint [in] point to zoom at\nfactor [in] the factor to zoom at, mostly to be 0.8\n\nZoom at a specific location on the active view using the zoom factor."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to adjust the zoom factor at a specific location?"
            },
            {
                "role": "assistant",
                "content": "cvxDispZoomAt\npoint [in] point to zoom at\nfactor [in] the factor to zoom at, mostly to be 0.8\n\nZoom at a specific location on the active view using the zoom factor."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the active view to construction limits of a target object?"
            },
            {
                "role": "assistant",
                "content": "cvxDispZoomLimits\n\nSet active view to construction limits of target object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to zoom the active view to the limits of a specific object?"
            },
            {
                "role": "assistant",
                "content": "cvxDispZoomLimits\n\nSet active view to construction limits of target object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to adjust the view to the construction limits of a target object?"
            },
            {
                "role": "assistant",
                "content": "cvxDispZoomLimits\n\nSet active view to construction limits of target object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to zoom in using the cvxDispZoomIn function?"
            },
            {
                "role": "assistant",
                "content": "cvxDispZoomIn\nZoomIn [in] 1 to zoom-in, 0 to zoom-out\nStartPoint [in] start point\nEndPoint [in] end point\n\nWindow zoom in or out. StartPoint and endpoint are on the diagonal of the rectangle.\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to zoom out using the cvxDispZoomIn function?"
            },
            {
                "role": "assistant",
                "content": "cvxDispZoomIn\nZoomIn [in] 1 to zoom-in, 0 to zoom-out\nStartPoint [in] start point\nEndPoint [in] end point\n\nWindow zoom in or out. StartPoint and endpoint are on the diagonal of the rectangle.\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to specify the start and end points for zooming?"
            },
            {
                "role": "assistant",
                "content": "cvxDispZoomIn\nZoomIn [in] 1 to zoom-in, 0 to zoom-out\nStartPoint [in] start point\nEndPoint [in] end point\n\nWindow zoom in or out. StartPoint and endpoint are on the diagonal of the rectangle.\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the visibility of a local datum?"
            },
            {
                "role": "assistant",
                "content": "cvxDatumLocalVis\niVisible [in] visible flag of local datum\n\nSet visible of the local datum."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to control the visibility of local datum?"
            },
            {
                "role": "assistant",
                "content": "cvxDatumLocalVis\niVisible [in] visible flag of local datum\n\nSet visible of the local datum."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the visibility of a local datum?"
            },
            {
                "role": "assistant",
                "content": "cvxDatumLocalVis\niVisible [in] visible flag of local datum\n\nSet visible of the local datum."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the display mode of a specified datum plane?"
            },
            {
                "role": "assistant",
                "content": "cvxDatumDispModeSet\nidDatum [in] id of datum plane\nDispMode [in] display mode of datum plane\n\nSet display mode of the specified datum plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the display mode of a datum plane?"
            },
            {
                "role": "assistant",
                "content": "cvxDatumDispModeSet\nidDatum [in] id of datum plane\nDispMode [in] display mode of datum plane\n\nSet display mode of the specified datum plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I modify the display mode of a specific datum plane?"
            },
            {
                "role": "assistant",
                "content": "cvxDatumDispModeSet\nidDatum [in] id of datum plane\nDispMode [in] display mode of datum plane\n\nSet display mode of the specified datum plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the display mode of a specified datum plane?"
            },
            {
                "role": "assistant",
                "content": "cvxDatumDispModeGet\nidDatum [in] id of datum plane\nDispMode [out] display mode of datum plane\n\nGet display mode of the specified datum plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the display mode of a datum plane?"
            },
            {
                "role": "assistant",
                "content": "cvxDatumDispModeGet\nidDatum [in] id of datum plane\nDispMode [out] display mode of datum plane\n\nGet display mode of the specified datum plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the display mode of a specific datum plane?"
            },
            {
                "role": "assistant",
                "content": "cvxDatumDispModeGet\nidDatum [in] id of datum plane\nDispMode [out] display mode of datum plane\n\nGet display mode of the specified datum plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the display attribute of a datum entity?"
            },
            {
                "role": "assistant",
                "content": "cvxDatumDispAttrGet\nidDatum [in] id of datum entity\nDispAt [out] display attribute of datum entity\n\nGet display attribute of the specified datum entity, including datum plane, datum axis and datum CSYS."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the display attribute of a specified datum entity?"
            },
            {
                "role": "assistant",
                "content": "cvxDatumDispAttrGet\nidDatum [in] id of datum entity\nDispAt [out] display attribute of datum entity\n\nGet display attribute of the specified datum entity, including datum plane, datum axis and datum CSYS."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function can be used to obtain the display attribute of a datum entity?"
            },
            {
                "role": "assistant",
                "content": "cvxDatumDispAttrGet\nidDatum [in] id of datum entity\nDispAt [out] display attribute of datum entity\n\nGet display attribute of the specified datum entity, including datum plane, datum axis and datum CSYS."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set display attribute of a datum entity?"
            },
            {
                "role": "assistant",
                "content": "cvxDatumDispAttrSet\nidDatum [in] id of datum entity\nDispAt [in] display attribute of datum entity\n\nSet display attribute of the specified datum entity, including datum plane, datum axis and datum CSYS."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the display attribute of a datum entity?"
            },
            {
                "role": "assistant",
                "content": "cvxDatumDispAttrSet\nidDatum [in] id of datum entity\nDispAt [in] display attribute of datum entity\n\nSet display attribute of the specified datum entity, including datum plane, datum axis and datum CSYS."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the display attribute of a datum plane, axis, or CSYS?"
            },
            {
                "role": "assistant",
                "content": "cvxDatumDispAttrSet\nidDatum [in] id of datum entity\nDispAt [in] display attribute of datum entity\n\nSet display attribute of the specified datum entity, including datum plane, datum axis and datum CSYS."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the display mode of a specified datum axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisDispModeGet\nidAxis [in] id of datum axis\nDspMode [out] display mode of datum axis\n\nGet display mode of the specified datum axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the display mode of a datum axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisDispModeGet\nidAxis [in] id of datum axis\nDspMode [out] display mode of datum axis\n\nGet display mode of the specified datum axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I check the display mode of a specific datum axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisDispModeGet\nidAxis [in] id of datum axis\nDspMode [out] display mode of datum axis\n\nGet display mode of the specified datum axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the display mode of a specified datum axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisDispModeSet\nidAxis [in] id of datum axis\nDspMode [in] display mode of datum axis\n\nSet display mode of the specified datum axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the display mode of a datum axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisDispModeSet\nidAxis [in] id of datum axis\nDspMode [in] display mode of datum axis\n\nSet display mode of the specified datum axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I modify the display mode of a datum axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisDispModeSet\nidAxis [in] id of datum axis\nDspMode [in] display mode of datum axis\n\nSet display mode of the specified datum axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve attribute data from a specific drawing in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAtGet\nidDrawing [in] drawing id\ndrawingAt [out] attribute of drawing\n\nRetrieves attribute data from the specified drawing in the active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the attribute of a drawing by its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAtGet\nidDrawing [in] drawing id\ndrawingAt [out] attribute of drawing\n\nRetrieves attribute data from the specified drawing in the active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I access the attribute of a drawing in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAtGet\nidDrawing [in] drawing id\ndrawingAt [out] attribute of drawing\n\nRetrieves attribute data from the specified drawing in the active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the drawing data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAtSet\nidDrawing [in] drawing id\ndrawingAt [in] attribute of drawing\n\nSet the drawing data. if useTemplate is 1 or templateName is not NULL, add the template to the drawing or replace the template of the drawing else it will create new drawing border and insert block to drawing"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to add a template to the drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAtSet\nidDrawing [in] drawing id\ndrawingAt [in] attribute of drawing\n\nSet the drawing data. if useTemplate is 1 or templateName is not NULL, add the template to the drawing or replace the template of the drawing else it will create new drawing border and insert block to drawing"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a new drawing border and insert a block to the drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAtSet\nidDrawing [in] drawing id\ndrawingAt [in] attribute of drawing\n\nSet the drawing data. if useTemplate is 1 or templateName is not NULL, add the template to the drawing or replace the template of the drawing else it will create new drawing border and insert block to drawing"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the sheet attribute of a specified item?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAtItemGet\nitemId [in] item id\nAt [out] item attribute\n\nOutputs the sheet attribute of specified item. The itemId includes all of evxAtItemId. If the sheet has associated parts, this function also can inquire the parts item attribute.\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must be assigned to At->label before calling this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to inquire the parts item attribute of a specified item?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAtItemGet\nitemId [in] item id\nAt [out] item attribute\n\nOutputs the sheet attribute of specified item. The itemId includes all of evxAtItemId. If the sheet has associated parts, this function also can inquire the parts item attribute.\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must be assigned to At->label before calling this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the user-defined attribute name for a specific item?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAtItemGet\nitemId [in] item id\nAt [out] item attribute\n\nOutputs the sheet attribute of specified item. The itemId includes all of evxAtItemId. If the sheet has associated parts, this function also can inquire the parts item attribute.\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must be assigned to At->label before calling this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of dimension entity IDs in a specific drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqDims\nidDrawing [in] drawing id\ndimTypeList [in] dimension type list (NULL to get all dimensions)\ndimTypeCount [in] dimension type count (0 to get all dimensions)\ncount [out] count of the object\ndims [out] dimension list\n\nOutputs a list of the dimension entity IDs in the special drawing.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get all dimensions in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqDims\nidDrawing [in] drawing id\ndimTypeList [in] dimension type list (NULL to get all dimensions)\ndimTypeCount [in] dimension type count (0 to get all dimensions)\ncount [out] count of the object\ndims [out] dimension list\n\nOutputs a list of the dimension entity IDs in the special drawing.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list after getting the dimension list?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqDims\nidDrawing [in] drawing id\ndimTypeList [in] dimension type list (NULL to get all dimensions)\ndimTypeCount [in] dimension type count (0 to get all dimensions)\ncount [out] count of the object\ndims [out] dimension list\n\nOutputs a list of the dimension entity IDs in the special drawing.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of entities associated with a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqDimEnts\nidDim [in] index of dimension\ncount [out] number of list\nidEnts [out] pointer to pointer of entities array\n\nOutputs the id list of entities associated with the specified dimension.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list after getting the id list of entities?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqDimEnts\nidDim [in] index of dimension\ncount [out] number of list\nidEnts [out] pointer to pointer of entities array\n\nOutputs the id list of entities associated with the specified dimension.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to count the number of entities associated with a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqDimEnts\nidDim [in] index of dimension\ncount [out] number of list\nidEnts [out] pointer to pointer of entities array\n\nOutputs the id list of entities associated with the specified dimension.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the grip point coordinates of a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqDimGripPnts\nidDim [in] id of dimension\nNum [out] number of grip points of dimension\nPnts [out] list of grip point coordinates of dimension\n\nGet grip point coordinates of the specified dimension.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the number of grip points of a dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqDimGripPnts\nidDim [in] id of dimension\nNum [out] number of grip points of dimension\nPnts [out] list of grip point coordinates of dimension\n\nGet grip point coordinates of the specified dimension.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list after getting the grip point coordinates?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqDimGripPnts\nidDim [in] id of dimension\nNum [out] number of grip points of dimension\nPnts [out] list of grip point coordinates of dimension\n\nGet grip point coordinates of the specified dimension.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the width of a dimension text box in a drawing sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgGetDimTextBox\nidDim [in] the index of the dimension object\ntbWid [out] text box width\ntbHgt [out] text box height\nchSlp [out] text box slope\ntxtPt [out] text box position\n\nGet width, height, slope, position for a dimension text box in drawing sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the height of a dimension text box in a drawing sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgGetDimTextBox\nidDim [in] the index of the dimension object\ntbWid [out] text box width\ntbHgt [out] text box height\nchSlp [out] text box slope\ntxtPt [out] text box position\n\nGet width, height, slope, position for a dimension text box in drawing sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the slope of a dimension text box in a drawing sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgGetDimTextBox\nidDim [in] the index of the dimension object\ntbWid [out] text box width\ntbHgt [out] text box height\nchSlp [out] text box slope\ntxtPt [out] text box position\n\nGet width, height, slope, position for a dimension text box in drawing sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the position of a dimension text box in a drawing sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgGetDimTextBox\nidDim [in] the index of the dimension object\ntbWid [out] text box width\ntbHgt [out] text box height\nchSlp [out] text box slope\ntxtPt [out] text box position\n\nGet width, height, slope, position for a dimension text box in drawing sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get dimension id by view id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqDimByView\nidView [in] view id\ncount [out] count of \"idDims\"\nidDims [out] list of dimension id\n\nGet dimension id by view id.\nnote:\nDimensions and other annotations created prior to version 27.00 (VX_API_VERSION < 2700) might have been attached to either a drawing or to a view within the drawing. Beginning in version 27.00, ZW3D always attaches new dimensions and annotations to the drawing.\nnote:\nThe cvxDwgInqDimByView() function gets only those older entities that are still attached to a view; \n\n The cvxDwgInqDimByDrawing() function gets entities that are directly attached to the drawing, regardless of the version in which the entity was created. \n\n The cvxDwgInqDims() function gets all dimension and annotation entities from a drawing regardless of whether they are attached to the drawing or attached to a view within the drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get count of dimension id by view id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqDimByView\nidView [in] view id\ncount [out] count of \"idDims\"\nidDims [out] list of dimension id\n\nGet dimension id by view id.\nnote:\nDimensions and other annotations created prior to version 27.00 (VX_API_VERSION < 2700) might have been attached to either a drawing or to a view within the drawing. Beginning in version 27.00, ZW3D always attaches new dimensions and annotations to the drawing.\nnote:\nThe cvxDwgInqDimByView() function gets only those older entities that are still attached to a view; \n\n The cvxDwgInqDimByDrawing() function gets entities that are directly attached to the drawing, regardless of the version in which the entity was created. \n\n The cvxDwgInqDims() function gets all dimension and annotation entities from a drawing regardless of whether they are attached to the drawing or attached to a view within the drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get a list of dimension id by providing a view id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqDimByView\nidView [in] view id\ncount [out] count of \"idDims\"\nidDims [out] list of dimension id\n\nGet dimension id by view id.\nnote:\nDimensions and other annotations created prior to version 27.00 (VX_API_VERSION < 2700) might have been attached to either a drawing or to a view within the drawing. Beginning in version 27.00, ZW3D always attaches new dimensions and annotations to the drawing.\nnote:\nThe cvxDwgInqDimByView() function gets only those older entities that are still attached to a view; \n\n The cvxDwgInqDimByDrawing() function gets entities that are directly attached to the drawing, regardless of the version in which the entity was created. \n\n The cvxDwgInqDims() function gets all dimension and annotation entities from a drawing regardless of whether they are attached to the drawing or attached to a view within the drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get dimension id by drawing id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqDimByDrawing\nidDrawing [in] drawing id\ncount [out] count of \"idDims\"\nidDims [out] list of dimension id\n\nGet dimension id by drawing id.\nnote:\nDimensions and other annotations created prior to version 27.00 (VX_API_VERSION < 2700) might have been attached to either a drawing or to a view within the drawing. Beginning in version 27.00, ZW3D always attaches new dimensions and annotations to the drawing.\nnote:\nThe cvxDwgInqDimByDrawing() function gets entities that are directly attached to the drawing, regardless of the version in which the entity was created. \n\n The cvxDwgInqDimByView() function gets only those older entities that are still attached to a view; \n\n The cvxDwgInqDims() function gets all dimension and annotation entities from a drawing regardless of whether they are attached to the drawing or attached to a view within the drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to count the dimensions by drawing id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqDimByDrawing\nidDrawing [in] drawing id\ncount [out] count of \"idDims\"\nidDims [out] list of dimension id\n\nGet dimension id by drawing id.\nnote:\nDimensions and other annotations created prior to version 27.00 (VX_API_VERSION < 2700) might have been attached to either a drawing or to a view within the drawing. Beginning in version 27.00, ZW3D always attaches new dimensions and annotations to the drawing.\nnote:\nThe cvxDwgInqDimByDrawing() function gets entities that are directly attached to the drawing, regardless of the version in which the entity was created. \n\n The cvxDwgInqDimByView() function gets only those older entities that are still attached to a view; \n\n The cvxDwgInqDims() function gets all dimension and annotation entities from a drawing regardless of whether they are attached to the drawing or attached to a view within the drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get a list of dimension ids by providing a drawing id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqDimByDrawing\nidDrawing [in] drawing id\ncount [out] count of \"idDims\"\nidDims [out] list of dimension id\n\nGet dimension id by drawing id.\nnote:\nDimensions and other annotations created prior to version 27.00 (VX_API_VERSION < 2700) might have been attached to either a drawing or to a view within the drawing. Beginning in version 27.00, ZW3D always attaches new dimensions and annotations to the drawing.\nnote:\nThe cvxDwgInqDimByDrawing() function gets entities that are directly attached to the drawing, regardless of the version in which the entity was created. \n\n The cvxDwgInqDimByView() function gets only those older entities that are still attached to a view; \n\n The cvxDwgInqDims() function gets all dimension and annotation entities from a drawing regardless of whether they are attached to the drawing or attached to a view within the drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get information about the dimension bundle?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqBundleDataByDim\nidDim [in] dimension id\ncount [out] count of data\ndata [out] dimension bundle data\n\nGet information about the dimension bundle.\nThe memory referenced by \"data\" is allocated by this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve dimension bundle data by dimension id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqBundleDataByDim\nidDim [in] dimension id\ncount [out] count of data\ndata [out] dimension bundle data\n\nGet information about the dimension bundle.\nThe memory referenced by \"data\" is allocated by this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get count of dimension bundle data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqBundleDataByDim\nidDim [in] dimension id\ncount [out] count of data\ndata [out] dimension bundle data\n\nGet information about the dimension bundle.\nThe memory referenced by \"data\" is allocated by this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve dimension attributes of a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgDimAtGet\nidDim [in] dimension id\ndmAttr [out] dimension attributes\n\nGets the attributes data of specified dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get dimension attributes data by dimension id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgDimAtGet\nidDim [in] dimension id\ndmAttr [out] dimension attributes\n\nGets the attributes data of specified dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the attributes data of a specific dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgDimAtGet\nidDim [in] dimension id\ndmAttr [out] dimension attributes\n\nGets the attributes data of specified dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the attributes data of a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgDimAtSet\nidDim [in] dimension id\ndmAttr [in] dimension attributes\n\nSets the attributes data of specified dimension. To modify some of the attributes of a dimension, it's better to use cvxDwgGetDimAt() to get the origional attribtes first.\nnote:\nThis function must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to modify dimension attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgDimAtSet\nidDim [in] dimension id\ndmAttr [in] dimension attributes\n\nSets the attributes data of specified dimension. To modify some of the attributes of a dimension, it's better to use cvxDwgGetDimAt() to get the origional attribtes first.\nnote:\nThis function must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function should be used to get the original attributes of a dimension before modifying?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgDimAtSet\nidDim [in] dimension id\ndmAttr [in] dimension attributes\n\nSets the attributes data of specified dimension. To modify some of the attributes of a dimension, it's better to use cvxDwgGetDimAt() to get the origional attribtes first.\nnote:\nThis function must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a new sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSheetAdd\nName [in] sheet name (NULL to use default sheet name)\nidSheet [out] id of sheet (NULL to ignore)\n\nAdd a new sheet. Output the sheet id if sheet is not NULL. If sheet name is NULL, the default sheet name is used."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the added sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSheetAdd\nName [in] sheet name (NULL to use default sheet name)\nidSheet [out] id of sheet (NULL to ignore)\n\nAdd a new sheet. Output the sheet id if sheet is not NULL. If sheet name is NULL, the default sheet name is used."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to use the default sheet name when adding a new sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSheetAdd\nName [in] sheet name (NULL to use default sheet name)\nidSheet [out] id of sheet (NULL to ignore)\n\nAdd a new sheet. Output the sheet id if sheet is not NULL. If sheet name is NULL, the default sheet name is used."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete specified sheets?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSheetDel\ncount [in] count of sheets\nidSheet [in] list of sheet ids\n\nDelete the specified sheets."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to delete multiple sheets at once?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSheetDel\ncount [in] count of sheets\nidSheet [in] list of sheet ids\n\nDelete the specified sheets."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the count of sheets to delete?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSheetDel\ncount [in] count of sheets\nidSheet [in] list of sheet ids\n\nDelete the specified sheets."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete sheets by their ids?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSheetDel\ncount [in] count of sheets\nidSheet [in] list of sheet ids\n\nDelete the specified sheets."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the scale of a specific sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSheetScaleGet\nidSheet [in] sheet id, 0(or -1) to use activated sheet\nscale [out] scale of specified sheet\n\nGet the scale of the specified sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the scale of a particular sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSheetScaleGet\nidSheet [in] sheet id, 0(or -1) to use activated sheet\nscale [out] scale of specified sheet\n\nGet the scale of the specified sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to obtain the scale of a specified sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSheetScaleGet\nidSheet [in] sheet id, 0(or -1) to use activated sheet\nscale [out] scale of specified sheet\n\nGet the scale of the specified sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the scale of a specified sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSheetScaleSet\nidSheet [in] sheet id, 0(or -1) to use activated sheet\nscale [in] scale of specified sheet\n\nSet the scale of the specified sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the scale of a sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSheetScaleSet\nidSheet [in] sheet id, 0(or -1) to use activated sheet\nscale [in] scale of specified sheet\n\nSet the scale of the specified sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the scale of a sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSheetScaleSet\nidSheet [in] sheet id, 0(or -1) to use activated sheet\nscale [in] scale of specified sheet\n\nSet the scale of the specified sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of drawing IDs?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqList\nidRoot [in] root ID\ncount [out] count of the list\nidDrawings [out] ID list of the drawings\n\nOutputs a list of the drawing IDs. The calling procedure MUST deallocate the output list with cvxMemFree(). Use cvxRootId() to get idRoot."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the count of drawing IDs?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqList\nidRoot [in] root ID\ncount [out] count of the list\nidDrawings [out] ID list of the drawings\n\nOutputs a list of the drawing IDs. The calling procedure MUST deallocate the output list with cvxMemFree(). Use cvxRootId() to get idRoot."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list of drawing IDs?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqList\nidRoot [in] root ID\ncount [out] count of the list\nidDrawings [out] ID list of the drawings\n\nOutputs a list of the drawing IDs. The calling procedure MUST deallocate the output list with cvxMemFree(). Use cvxRootId() to get idRoot."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the name of a specific drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqName\nidDrawing [in] drawing id\ndrawingName [out] drawing name\nnBytes [in] string max size of active file name\n\nGet the name of the special drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the name of a drawing using its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqName\nidDrawing [in] drawing id\ndrawingName [out] drawing name\nnBytes [in] string max size of active file name\n\nGet the name of the special drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to inquire the name of a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqName\nidDrawing [in] drawing id\ndrawingName [out] drawing name\nnBytes [in] string max size of active file name\n\nGet the name of the special drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the id of a drawing in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgFind\nrootName [in] root name\ndrawingName [in] drawing name\nidDrawing [out] drawing id\n\nGet the id of the special drawing in the current active file. if rootName=NULL, it means using the current sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of a specific drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgFind\nrootName [in] root name\ndrawingName [in] drawing name\nidDrawing [out] drawing id\n\nGet the id of the special drawing in the current active file. if rootName=NULL, it means using the current sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the drawing id using the drawing name?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgFind\nrootName [in] root name\ndrawingName [in] drawing name\nidDrawing [out] drawing id\n\nGet the id of the special drawing in the current active file. if rootName=NULL, it means using the current sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of the border block in a specified drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqBorderTitle\nidDrawing [in] index of drawing\nidBorder [out] index of Border block(NULL to ignore)\nidBorderSkt [out] index of Border sketch(NULL to ignore)\nidTitle [out] index of title block(NULL to ignore)\nidTitleSkt [out] index of title sketch(NULL to ignore)\n\nGet index of border and title including block and sketch in specified drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of the title sketch in a specified drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqBorderTitle\nidDrawing [in] index of drawing\nidBorder [out] index of Border block(NULL to ignore)\nidBorderSkt [out] index of Border sketch(NULL to ignore)\nidTitle [out] index of title block(NULL to ignore)\nidTitleSkt [out] index of title sketch(NULL to ignore)\n\nGet index of border and title including block and sketch in specified drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to ignore the title block and title sketch when getting the index in a specified drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqBorderTitle\nidDrawing [in] index of drawing\nidBorder [out] index of Border block(NULL to ignore)\nidBorderSkt [out] index of Border sketch(NULL to ignore)\nidTitle [out] index of title block(NULL to ignore)\nidTitleSkt [out] index of title sketch(NULL to ignore)\n\nGet index of border and title including block and sketch in specified drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of associated parts?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqPart\nrootName [in] root name (rootName[0]=0 or NULL for active sheet)\niCount [out] count of associated parts\npartList [out] part info(part name and file name) list\n\nOutputs a list of associated parts ."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the count of associated parts?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqPart\nrootName [in] root name (rootName[0]=0 or NULL for active sheet)\niCount [out] count of associated parts\npartList [out] part info(part name and file name) list\n\nOutputs a list of associated parts ."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get part info and file name list?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqPart\nrootName [in] root name (rootName[0]=0 or NULL for active sheet)\niCount [out] count of associated parts\npartList [out] part info(part name and file name) list\n\nOutputs a list of associated parts ."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the referenced part for a drawing sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSetRefPart\nFile [in] drawing sheet file name (NULL string for the active file)\nRoot [in] drawing sheet root name (NULL string for the active target object)\nidxView [in] update the specified view, -1 for all in the sheet\noldPart [in] old part name to be updated (can be NULL, see the description)\nnewPart [in] new part name\n\nSet the referenced part for the specified drawing sheet. Root can be NULL if the file extension is .Z3DRW.\nIf idxView is >0, only update the specified view, -1 to update all drawing views in the drawing sheet.\nIf oldPart is not specified, suppose to update the referenced part of the specified view (if idxView>0) or the active view of the drawing sheet (mostly the first view)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the specified view in a drawing sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSetRefPart\nFile [in] drawing sheet file name (NULL string for the active file)\nRoot [in] drawing sheet root name (NULL string for the active target object)\nidxView [in] update the specified view, -1 for all in the sheet\noldPart [in] old part name to be updated (can be NULL, see the description)\nnewPart [in] new part name\n\nSet the referenced part for the specified drawing sheet. Root can be NULL if the file extension is .Z3DRW.\nIf idxView is >0, only update the specified view, -1 to update all drawing views in the drawing sheet.\nIf oldPart is not specified, suppose to update the referenced part of the specified view (if idxView>0) or the active view of the drawing sheet (mostly the first view)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to update all drawing views in a drawing sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSetRefPart\nFile [in] drawing sheet file name (NULL string for the active file)\nRoot [in] drawing sheet root name (NULL string for the active target object)\nidxView [in] update the specified view, -1 for all in the sheet\noldPart [in] old part name to be updated (can be NULL, see the description)\nnewPart [in] new part name\n\nSet the referenced part for the specified drawing sheet. Root can be NULL if the file extension is .Z3DRW.\nIf idxView is >0, only update the specified view, -1 to update all drawing views in the drawing sheet.\nIf oldPart is not specified, suppose to update the referenced part of the specified view (if idxView>0) or the active view of the drawing sheet (mostly the first view)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the referenced part of the specified view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSetRefPart\nFile [in] drawing sheet file name (NULL string for the active file)\nRoot [in] drawing sheet root name (NULL string for the active target object)\nidxView [in] update the specified view, -1 for all in the sheet\noldPart [in] old part name to be updated (can be NULL, see the description)\nnewPart [in] new part name\n\nSet the referenced part for the specified drawing sheet. Root can be NULL if the file extension is .Z3DRW.\nIf idxView is >0, only update the specified view, -1 to update all drawing views in the drawing sheet.\nIf oldPart is not specified, suppose to update the referenced part of the specified view (if idxView>0) or the active view of the drawing sheet (mostly the first view)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the active view of the drawing sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSetRefPart\nFile [in] drawing sheet file name (NULL string for the active file)\nRoot [in] drawing sheet root name (NULL string for the active target object)\nidxView [in] update the specified view, -1 for all in the sheet\noldPart [in] old part name to be updated (can be NULL, see the description)\nnewPart [in] new part name\n\nSet the referenced part for the specified drawing sheet. Root can be NULL if the file extension is .Z3DRW.\nIf idxView is >0, only update the specified view, -1 to update all drawing views in the drawing sheet.\nIf oldPart is not specified, suppose to update the referenced part of the specified view (if idxView>0) or the active view of the drawing sheet (mostly the first view)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to activate a specific drawing in the current open sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgActivate\ndrawingName [in] drawing name\n\nActive the special drawing in the current open sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set a drawing as active in the current sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgActivate\ndrawingName [in] drawing name\n\nActive the special drawing in the current open sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to activate a drawing by its name?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgActivate\ndrawingName [in] drawing name\n\nActive the special drawing in the current open sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name of the active drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqActive\ndrawingName [out] drawing name\nnBytes [in] string max size of active file name\n\nOutputs the name of the active drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire the active drawing name?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqActive\ndrawingName [out] drawing name\nnBytes [in] string max size of active file name\n\nOutputs the name of the active drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the name of the active drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqActive\ndrawingName [out] drawing name\nnBytes [in] string max size of active file name\n\nOutputs the name of the active drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to regenerate all views in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgRegen\ncount [in] count of idViews (count < 1, regen all views)\nidViews [in] list of idView\nisRegenUnModifiedView [in] 1 if regenerate unmodified views,else 0\nisRegenTable [in] 1 if regenerate tables,else 0\nisPrompt [in] 1 if auto prompt for view regen ,else 0\nisRegenSketch [in] 1 if regenerate standalone sketch ,else 0\n\nRegenerate drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to regenerate specific views in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgRegen\ncount [in] count of idViews (count < 1, regen all views)\nidViews [in] list of idView\nisRegenUnModifiedView [in] 1 if regenerate unmodified views,else 0\nisRegenTable [in] 1 if regenerate tables,else 0\nisPrompt [in] 1 if auto prompt for view regen ,else 0\nisRegenSketch [in] 1 if regenerate standalone sketch ,else 0\n\nRegenerate drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I regenerate unmodified views using this function?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgRegen\ncount [in] count of idViews (count < 1, regen all views)\nidViews [in] list of idView\nisRegenUnModifiedView [in] 1 if regenerate unmodified views,else 0\nisRegenTable [in] 1 if regenerate tables,else 0\nisPrompt [in] 1 if auto prompt for view regen ,else 0\nisRegenSketch [in] 1 if regenerate standalone sketch ,else 0\n\nRegenerate drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to regenerate tables in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgRegen\ncount [in] count of idViews (count < 1, regen all views)\nidViews [in] list of idView\nisRegenUnModifiedView [in] 1 if regenerate unmodified views,else 0\nisRegenTable [in] 1 if regenerate tables,else 0\nisPrompt [in] 1 if auto prompt for view regen ,else 0\nisRegenSketch [in] 1 if regenerate standalone sketch ,else 0\n\nRegenerate drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there an option to auto prompt for view regeneration?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgRegen\ncount [in] count of idViews (count < 1, regen all views)\nidViews [in] list of idView\nisRegenUnModifiedView [in] 1 if regenerate unmodified views,else 0\nisRegenTable [in] 1 if regenerate tables,else 0\nisPrompt [in] 1 if auto prompt for view regen ,else 0\nisRegenSketch [in] 1 if regenerate standalone sketch ,else 0\n\nRegenerate drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to regenerate standalone sketches in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgRegen\ncount [in] count of idViews (count < 1, regen all views)\nidViews [in] list of idView\nisRegenUnModifiedView [in] 1 if regenerate unmodified views,else 0\nisRegenTable [in] 1 if regenerate tables,else 0\nisPrompt [in] 1 if auto prompt for view regen ,else 0\nisRegenSketch [in] 1 if regenerate standalone sketch ,else 0\n\nRegenerate drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the properties of character text in the style manager?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgStyleManagerWithTextAtGet\ntype [in] style maneger method\ndata [out] text attribute data\n\nGet the properties of the character text in the style manager.\nIf the type is VX_STYLEMANAGER_TEXT, the data is defined by struct svxDwgStyleManagerText,\nelse if the type is VX_STYLEMANAGER_ANNO_LEADER~VX_STYLEMANAGER_DIM_ORDINATE, the data is defined by struct svxDwgStyleManagerAnnoDimText,\nelse if the type is VX_STYLEMANAGER_TABLE_USER~VX_STYLEMANAGER_TABLE_REVISION, the data is svxDwgStyleManagerTableText,\nelse if the type is VX_STYLEMANAGER_SYM_WELD or VX_STYLEMANAGER_SYM_SRF_FINISH, the data is svxDwgStyleManagerSymText.\nelse if the type is VX_STYLEMANAGER_VIEW_BASE~VX_STYLEMANAGER_VIEW_ALTERNATE, the data is svxDwgStyleManagerViewText."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to retrieve text attribute data in the style manager?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgStyleManagerWithTextAtGet\ntype [in] style maneger method\ndata [out] text attribute data\n\nGet the properties of the character text in the style manager.\nIf the type is VX_STYLEMANAGER_TEXT, the data is defined by struct svxDwgStyleManagerText,\nelse if the type is VX_STYLEMANAGER_ANNO_LEADER~VX_STYLEMANAGER_DIM_ORDINATE, the data is defined by struct svxDwgStyleManagerAnnoDimText,\nelse if the type is VX_STYLEMANAGER_TABLE_USER~VX_STYLEMANAGER_TABLE_REVISION, the data is svxDwgStyleManagerTableText,\nelse if the type is VX_STYLEMANAGER_SYM_WELD or VX_STYLEMANAGER_SYM_SRF_FINISH, the data is svxDwgStyleManagerSymText.\nelse if the type is VX_STYLEMANAGER_VIEW_BASE~VX_STYLEMANAGER_VIEW_ALTERNATE, the data is svxDwgStyleManagerViewText."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the text attribute data based on different types in the style manager?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgStyleManagerWithTextAtGet\ntype [in] style maneger method\ndata [out] text attribute data\n\nGet the properties of the character text in the style manager.\nIf the type is VX_STYLEMANAGER_TEXT, the data is defined by struct svxDwgStyleManagerText,\nelse if the type is VX_STYLEMANAGER_ANNO_LEADER~VX_STYLEMANAGER_DIM_ORDINATE, the data is defined by struct svxDwgStyleManagerAnnoDimText,\nelse if the type is VX_STYLEMANAGER_TABLE_USER~VX_STYLEMANAGER_TABLE_REVISION, the data is svxDwgStyleManagerTableText,\nelse if the type is VX_STYLEMANAGER_SYM_WELD or VX_STYLEMANAGER_SYM_SRF_FINISH, the data is svxDwgStyleManagerSymText.\nelse if the type is VX_STYLEMANAGER_VIEW_BASE~VX_STYLEMANAGER_VIEW_ALTERNATE, the data is svxDwgStyleManagerViewText."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of geometry entities in a specified drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqGeom\nidDrawing [in] drawing id\ncount [out] count of objects\nidEnts [out] list of geometry entity id's\n\nOutputs a list of indices of geometry entities in the specified drawing.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of geometry entity id's in a specified drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqGeom\nidDrawing [in] drawing id\ncount [out] count of objects\nidEnts [out] list of geometry entity id's\n\nOutputs a list of indices of geometry entities in the specified drawing.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about geometry entities in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqGeom\nidDrawing [in] drawing id\ncount [out] count of objects\nidEnts [out] list of geometry entity id's\n\nOutputs a list of indices of geometry entities in the specified drawing.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of text entities in a specified drawing sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqText\nidDrawing [in] drawing id\ncount [in] count of objects\nidEnts [in] list of text entities id's\n\nOutputs the id list of text entities in the specified drawing sheet.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the text entities in a drawing by their id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqText\nidDrawing [in] drawing id\ncount [in] count of objects\nidEnts [in] list of text entities id's\n\nOutputs the id list of text entities in the specified drawing sheet.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list of text entities?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqText\nidDrawing [in] drawing id\ncount [in] count of objects\nidEnts [in] list of text entities id's\n\nOutputs the id list of text entities in the specified drawing sheet.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get hatch attribute by hatch id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqHatchAttr\nidHatch [in] hatch id\nHatchAttr [out] hatch attribute\n\nGet hatch attribute."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire hatch attribute?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqHatchAttr\nidHatch [in] hatch id\nHatchAttr [out] hatch attribute\n\nGet hatch attribute."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve hatch attribute of a specific hatch?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqHatchAttr\nidHatch [in] hatch id\nHatchAttr [out] hatch attribute\n\nGet hatch attribute."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set hatch attribute for a specific hatch id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgHatchAttrSet\nidHatch [in] hatch id\nHatchAttr [in] hatch attribute\n\nSet hatch attribute."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change hatch attribute?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgHatchAttrSet\nidHatch [in] hatch id\nHatchAttr [in] hatch attribute\n\nSet hatch attribute."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify hatch attribute using hatch id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgHatchAttrSet\nidHatch [in] hatch id\nHatchAttr [in] hatch attribute\n\nSet hatch attribute."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the associative boundary curves of a hatch entity?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgHatchAssoCrvsGet\nidHatch [in] id of hatch object\ncount [out] number of associative boundary curves\nAssocCrvs [out] associative boundary curves\n\nGet an array of associative boundary curves of given hatch entity. The memory for boundary curves is allocated in this function, so, the calling function has to deallocate it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the count of associative boundary curves for a specific hatch?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgHatchAssoCrvsGet\nidHatch [in] id of hatch object\ncount [out] number of associative boundary curves\nAssocCrvs [out] associative boundary curves\n\nGet an array of associative boundary curves of given hatch entity. The memory for boundary curves is allocated in this function, so, the calling function has to deallocate it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the associative boundary curves for a given hatch object?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgHatchAssoCrvsGet\nidHatch [in] id of hatch object\ncount [out] number of associative boundary curves\nAssocCrvs [out] associative boundary curves\n\nGet an array of associative boundary curves of given hatch entity. The memory for boundary curves is allocated in this function, so, the calling function has to deallocate it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get hatch id by view id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqHatchIdByView\nidView [in] view id\ncount [out] count of \"idHatchs\"\nidHatchs [out] list of hatch id\n\nGet hatch id by view id.\nnote:\nIf the hatch belong to a drawing and not to a view, the hatch id cannot be obtained. It can use cvxDwgInqHatchIdByDrawing in this case."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to obtain the count of hatch ids by view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqHatchIdByView\nidView [in] view id\ncount [out] count of \"idHatchs\"\nidHatchs [out] list of hatch id\n\nGet hatch id by view id.\nnote:\nIf the hatch belong to a drawing and not to a view, the hatch id cannot be obtained. It can use cvxDwgInqHatchIdByDrawing in this case."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get a list of hatch ids by providing the view id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqHatchIdByView\nidView [in] view id\ncount [out] count of \"idHatchs\"\nidHatchs [out] list of hatch id\n\nGet hatch id by view id.\nnote:\nIf the hatch belong to a drawing and not to a view, the hatch id cannot be obtained. It can use cvxDwgInqHatchIdByDrawing in this case."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of hatch ids in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqHatchIdByDrawing\nidDrawing [in] drawing id\ncount [out] count of \"idHatchs\"\nidHatchs [out] list of hatch id\n\nGet hatch id by drawing id.\nnote:\nIf the hatch belong to a view and not to a drawing, the hatch id cannot be obtained. It can use cvxDwgInqHatchIdByView in this case."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain a list of hatch ids by drawing id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqHatchIdByDrawing\nidDrawing [in] drawing id\ncount [out] count of \"idHatchs\"\nidHatchs [out] list of hatch id\n\nGet hatch id by drawing id.\nnote:\nIf the hatch belong to a view and not to a drawing, the hatch id cannot be obtained. It can use cvxDwgInqHatchIdByView in this case."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve hatch ids by drawing id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqHatchIdByDrawing\nidDrawing [in] drawing id\ncount [out] count of \"idHatchs\"\nidHatchs [out] list of hatch id\n\nGet hatch id by drawing id.\nnote:\nIf the hatch belong to a view and not to a drawing, the hatch id cannot be obtained. It can use cvxDwgInqHatchIdByView in this case."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the data of a reference entity?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgRefEntDataGet\nidRefEnt [in] index of reference entity\ndata [out] data of reference entity\n\nGet the component or shape data that the reference object points to."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the component or shape data that a reference object points to?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgRefEntDataGet\nidRefEnt [in] index of reference entity\ndata [out] data of reference entity\n\nGet the component or shape data that the reference object points to."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to obtain the data of a reference entity?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgRefEntDataGet\nidRefEnt [in] index of reference entity\ndata [out] data of reference entity\n\nGet the component or shape data that the reference object points to."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the parent view index of a specified geometry?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgGeomGetView\nidGeom [in] index of geometry in view\nidView [out] index of parent view\n\nGet index of parent view of specified geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the parent view index of a geometry in a view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgGeomGetView\nidGeom [in] index of geometry in view\nidView [out] index of parent view\n\nGet index of parent view of specified geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function can be used to obtain the parent view index of a specific geometry?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgGeomGetView\nidGeom [in] index of geometry in view\nidView [out] index of parent view\n\nGet index of parent view of specified geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of shown geometries corresponding to original edges and faces?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewGeomInqList\nviewId [in] view index\noption [in] number to indicate which type of geometry to obtain. Detail can refer to description.\ncount [out] number of list\nindices [out] pointer to pointer of geometry indices array\n\nThis function is to get the geometry indices list depending on the option.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nValues of option are as follows: \n\n 1: shown geometries NOT corresponding to original edges and faces, such as \n\n boundary generated by Broken Section view; \n\n 2: shown geometries cooresponding to original edges and faces; \n\n 3: hidden geometry; \n\n 4: tangent-shown geometry; \n\n 5: tangent-hidden geometry; \n\n 6: cosmetic thread geometry; \n\n 7: section view cutting plane geometry, or for detail view clip boundary \n\n (circle only) \n\n 8: centerline geometry; \n\n 9: centerline objects; \n\n 10: 3D wireframe data; \n\n 11: \"hidden\" wireframe curves; \n\n 12: \"hidden\" top centermarks; \n\n 13: \"hidden\" centerlines; \n\n 14: \"hidden\" threads; \n\n 15: 3D point data; \n\n 16: xtra def'n stuff (thick line); \n\n 17: 3D anno text; \n\n 18: xtra def'n stuff (arrows); \n\n 19: bend lines of sheet metal; \n\n 20: \"hidden\" bend lines of sheet metal; \n\n 21: thread end lines; \n\n 22: hidden thread end lines; \n\n 23: bend notes of sheet metal; \n\n 24: hidden bend notes of sheet metal; \n\n 25: lines for weld beads in idx_beads; \n\n 26: weld beads; \n\n 27: crop line; \n\n 28: 3D hatch lines of cosmetic sketch \n\n 29: associated entities \n\n 30: associated dimensions"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the hidden geometry list?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewGeomInqList\nviewId [in] view index\noption [in] number to indicate which type of geometry to obtain. Detail can refer to description.\ncount [out] number of list\nindices [out] pointer to pointer of geometry indices array\n\nThis function is to get the geometry indices list depending on the option.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nValues of option are as follows: \n\n 1: shown geometries NOT corresponding to original edges and faces, such as \n\n boundary generated by Broken Section view; \n\n 2: shown geometries cooresponding to original edges and faces; \n\n 3: hidden geometry; \n\n 4: tangent-shown geometry; \n\n 5: tangent-hidden geometry; \n\n 6: cosmetic thread geometry; \n\n 7: section view cutting plane geometry, or for detail view clip boundary \n\n (circle only) \n\n 8: centerline geometry; \n\n 9: centerline objects; \n\n 10: 3D wireframe data; \n\n 11: \"hidden\" wireframe curves; \n\n 12: \"hidden\" top centermarks; \n\n 13: \"hidden\" centerlines; \n\n 14: \"hidden\" threads; \n\n 15: 3D point data; \n\n 16: xtra def'n stuff (thick line); \n\n 17: 3D anno text; \n\n 18: xtra def'n stuff (arrows); \n\n 19: bend lines of sheet metal; \n\n 20: \"hidden\" bend lines of sheet metal; \n\n 21: thread end lines; \n\n 22: hidden thread end lines; \n\n 23: bend notes of sheet metal; \n\n 24: hidden bend notes of sheet metal; \n\n 25: lines for weld beads in idx_beads; \n\n 26: weld beads; \n\n 27: crop line; \n\n 28: 3D hatch lines of cosmetic sketch \n\n 29: associated entities \n\n 30: associated dimensions"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the 3D wireframe data list?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewGeomInqList\nviewId [in] view index\noption [in] number to indicate which type of geometry to obtain. Detail can refer to description.\ncount [out] number of list\nindices [out] pointer to pointer of geometry indices array\n\nThis function is to get the geometry indices list depending on the option.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nValues of option are as follows: \n\n 1: shown geometries NOT corresponding to original edges and faces, such as \n\n boundary generated by Broken Section view; \n\n 2: shown geometries cooresponding to original edges and faces; \n\n 3: hidden geometry; \n\n 4: tangent-shown geometry; \n\n 5: tangent-hidden geometry; \n\n 6: cosmetic thread geometry; \n\n 7: section view cutting plane geometry, or for detail view clip boundary \n\n (circle only) \n\n 8: centerline geometry; \n\n 9: centerline objects; \n\n 10: 3D wireframe data; \n\n 11: \"hidden\" wireframe curves; \n\n 12: \"hidden\" top centermarks; \n\n 13: \"hidden\" centerlines; \n\n 14: \"hidden\" threads; \n\n 15: 3D point data; \n\n 16: xtra def'n stuff (thick line); \n\n 17: 3D anno text; \n\n 18: xtra def'n stuff (arrows); \n\n 19: bend lines of sheet metal; \n\n 20: \"hidden\" bend lines of sheet metal; \n\n 21: thread end lines; \n\n 22: hidden thread end lines; \n\n 23: bend notes of sheet metal; \n\n 24: hidden bend notes of sheet metal; \n\n 25: lines for weld beads in idx_beads; \n\n 26: weld beads; \n\n 27: crop line; \n\n 28: 3D hatch lines of cosmetic sketch \n\n 29: associated entities \n\n 30: associated dimensions"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the centerline objects list?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewGeomInqList\nviewId [in] view index\noption [in] number to indicate which type of geometry to obtain. Detail can refer to description.\ncount [out] number of list\nindices [out] pointer to pointer of geometry indices array\n\nThis function is to get the geometry indices list depending on the option.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nValues of option are as follows: \n\n 1: shown geometries NOT corresponding to original edges and faces, such as \n\n boundary generated by Broken Section view; \n\n 2: shown geometries cooresponding to original edges and faces; \n\n 3: hidden geometry; \n\n 4: tangent-shown geometry; \n\n 5: tangent-hidden geometry; \n\n 6: cosmetic thread geometry; \n\n 7: section view cutting plane geometry, or for detail view clip boundary \n\n (circle only) \n\n 8: centerline geometry; \n\n 9: centerline objects; \n\n 10: 3D wireframe data; \n\n 11: \"hidden\" wireframe curves; \n\n 12: \"hidden\" top centermarks; \n\n 13: \"hidden\" centerlines; \n\n 14: \"hidden\" threads; \n\n 15: 3D point data; \n\n 16: xtra def'n stuff (thick line); \n\n 17: 3D anno text; \n\n 18: xtra def'n stuff (arrows); \n\n 19: bend lines of sheet metal; \n\n 20: \"hidden\" bend lines of sheet metal; \n\n 21: thread end lines; \n\n 22: hidden thread end lines; \n\n 23: bend notes of sheet metal; \n\n 24: hidden bend notes of sheet metal; \n\n 25: lines for weld beads in idx_beads; \n\n 26: weld beads; \n\n 27: crop line; \n\n 28: 3D hatch lines of cosmetic sketch \n\n 29: associated entities \n\n 30: associated dimensions"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the list of associated dimensions?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewGeomInqList\nviewId [in] view index\noption [in] number to indicate which type of geometry to obtain. Detail can refer to description.\ncount [out] number of list\nindices [out] pointer to pointer of geometry indices array\n\nThis function is to get the geometry indices list depending on the option.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nValues of option are as follows: \n\n 1: shown geometries NOT corresponding to original edges and faces, such as \n\n boundary generated by Broken Section view; \n\n 2: shown geometries cooresponding to original edges and faces; \n\n 3: hidden geometry; \n\n 4: tangent-shown geometry; \n\n 5: tangent-hidden geometry; \n\n 6: cosmetic thread geometry; \n\n 7: section view cutting plane geometry, or for detail view clip boundary \n\n (circle only) \n\n 8: centerline geometry; \n\n 9: centerline objects; \n\n 10: 3D wireframe data; \n\n 11: \"hidden\" wireframe curves; \n\n 12: \"hidden\" top centermarks; \n\n 13: \"hidden\" centerlines; \n\n 14: \"hidden\" threads; \n\n 15: 3D point data; \n\n 16: xtra def'n stuff (thick line); \n\n 17: 3D anno text; \n\n 18: xtra def'n stuff (arrows); \n\n 19: bend lines of sheet metal; \n\n 20: \"hidden\" bend lines of sheet metal; \n\n 21: thread end lines; \n\n 22: hidden thread end lines; \n\n 23: bend notes of sheet metal; \n\n 24: hidden bend notes of sheet metal; \n\n 25: lines for weld beads in idx_beads; \n\n 26: weld beads; \n\n 27: crop line; \n\n 28: 3D hatch lines of cosmetic sketch \n\n 29: associated entities \n\n 30: associated dimensions"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the shape id of a specific geometry in a view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewGeomGetShapeId\ngeomId [in] index of geometry in view\nfileName [out] file name of the component of view of line, it can be NULL\nfileNameBytes [in] maximum bytes that fileName can hold\npartName [out] part name of the component of view of line, it can be NULL\npartNameBytes [in] maximum bytes that partName can hold\npickPath [out] pick path, it can be NULL\ngeom3DId [out] index of geometry 3D corresponding to geomId, it can be NULL\nshapeId [out] shape or sketch id that geometry in view specified by geomId can be traced back to, it can be NULL\n\nThis function is to get shape id that geometry in view specified by geomId can be traced back to. The file name, part name or pick path is also output if one of them is no NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to trace back the shape id of a geometry in a view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewGeomGetShapeId\ngeomId [in] index of geometry in view\nfileName [out] file name of the component of view of line, it can be NULL\nfileNameBytes [in] maximum bytes that fileName can hold\npartName [out] part name of the component of view of line, it can be NULL\npartNameBytes [in] maximum bytes that partName can hold\npickPath [out] pick path, it can be NULL\ngeom3DId [out] index of geometry 3D corresponding to geomId, it can be NULL\nshapeId [out] shape or sketch id that geometry in view specified by geomId can be traced back to, it can be NULL\n\nThis function is to get shape id that geometry in view specified by geomId can be traced back to. The file name, part name or pick path is also output if one of them is no NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the file name or part name of a specific component in a view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewGeomGetShapeId\ngeomId [in] index of geometry in view\nfileName [out] file name of the component of view of line, it can be NULL\nfileNameBytes [in] maximum bytes that fileName can hold\npartName [out] part name of the component of view of line, it can be NULL\npartNameBytes [in] maximum bytes that partName can hold\npickPath [out] pick path, it can be NULL\ngeom3DId [out] index of geometry 3D corresponding to geomId, it can be NULL\nshapeId [out] shape or sketch id that geometry in view specified by geomId can be traced back to, it can be NULL\n\nThis function is to get shape id that geometry in view specified by geomId can be traced back to. The file name, part name or pick path is also output if one of them is no NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a specific reference component in a drawing view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRefCompVisSet\nidView [in] view id in drawing\nfileName [in] file name of component\npartName [in] part name of component\nshow [in] 1 to unblank component; 0 to blank\n\nDisplays or hides the specified reference component in the specified view, Do not support section view and detail view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to hide a specific reference component in a drawing view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRefCompVisSet\nidView [in] view id in drawing\nfileName [in] file name of component\npartName [in] part name of component\nshow [in] 1 to unblank component; 0 to blank\n\nDisplays or hides the specified reference component in the specified view, Do not support section view and detail view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is it possible to unblank a component in a specified view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRefCompVisSet\nidView [in] view id in drawing\nfileName [in] file name of component\npartName [in] part name of component\nshow [in] 1 to unblank component; 0 to blank\n\nDisplays or hides the specified reference component in the specified view, Do not support section view and detail view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to blank a component in a specified view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRefCompVisSet\nidView [in] view id in drawing\nfileName [in] file name of component\npartName [in] part name of component\nshow [in] 1 to unblank component; 0 to blank\n\nDisplays or hides the specified reference component in the specified view, Do not support section view and detail view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I set the visibility of a component in a drawing view using the file name and part name?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRefCompVisSet\nidView [in] view id in drawing\nfileName [in] file name of component\npartName [in] part name of component\nshow [in] 1 to unblank component; 0 to blank\n\nDisplays or hides the specified reference component in the specified view, Do not support section view and detail view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of reference entities in a specific view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewInqRefEnts\nviewId [in] view id in drawing\ncount [out] number of reference entities\nidRefEnts [out] list of reference entities\n\nOutputs a list of the reference entity IDs in the special view.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to obtain a list of reference entity IDs in a particular view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewInqRefEnts\nviewId [in] view id in drawing\ncount [out] number of reference entities\nidRefEnts [out] list of reference entities\n\nOutputs a list of the reference entity IDs in the special view.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I deallocate the output list of reference entities obtained from a specific view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewInqRefEnts\nviewId [in] view id in drawing\ncount [out] number of reference entities\nidRefEnts [out] list of reference entities\n\nOutputs a list of the reference entity IDs in the special view.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the hidden state of a referenced entity by its index?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRefBlankGet\nidRefEnt [in] index of reference entity\nblank [out] status of reference entity(1 is blank,else display)\n\nGet the hidden state by referencing the entity id."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if a referenced entity is blank or displayed?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRefBlankGet\nidRefEnt [in] index of reference entity\nblank [out] status of reference entity(1 is blank,else display)\n\nGet the hidden state by referencing the entity id."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the status of a reference entity as blank or displayed?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRefBlankGet\nidRefEnt [in] index of reference entity\nblank [out] status of reference entity(1 is blank,else display)\n\nGet the hidden state by referencing the entity id."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the hidden state of a reference entity by its index?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRefBlankSet\nidRefEnt [in] index of reference entity\nblank [in] status of reference entity(1 is blank,else display)\n\nSet the hidden state by referencing the entity id."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to blank a specific reference entity?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRefBlankSet\nidRefEnt [in] index of reference entity\nblank [in] status of reference entity(1 is blank,else display)\n\nSet the hidden state by referencing the entity id."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I change the display status of a reference entity?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRefBlankSet\nidRefEnt [in] index of reference entity\nblank [in] status of reference entity(1 is blank,else display)\n\nSet the hidden state by referencing the entity id."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get wireframe attributes of a specified reference entity?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRefEntAtGet\nidRefEnt [in] index of reference entity\nclrValid [out] 1 from attribute; 0 inherited from view\ntypeValid [out] 1 from attribute; 0 inherited from view\nwidthValid [out] 1 from attribute; 0 inherited from view\nentAt [out] wireframe attributes, attribute items that are not inherit from view is valid\n\nGets the wireframe attributes of specified reference entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if the color is valid from the attribute or inherited from the view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRefEntAtGet\nidRefEnt [in] index of reference entity\nclrValid [out] 1 from attribute; 0 inherited from view\ntypeValid [out] 1 from attribute; 0 inherited from view\nwidthValid [out] 1 from attribute; 0 inherited from view\nentAt [out] wireframe attributes, attribute items that are not inherit from view is valid\n\nGets the wireframe attributes of specified reference entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if the type is valid from the attribute or inherited from the view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRefEntAtGet\nidRefEnt [in] index of reference entity\nclrValid [out] 1 from attribute; 0 inherited from view\ntypeValid [out] 1 from attribute; 0 inherited from view\nwidthValid [out] 1 from attribute; 0 inherited from view\nentAt [out] wireframe attributes, attribute items that are not inherit from view is valid\n\nGets the wireframe attributes of specified reference entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the width validity from the attribute or inherited from the view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRefEntAtGet\nidRefEnt [in] index of reference entity\nclrValid [out] 1 from attribute; 0 inherited from view\ntypeValid [out] 1 from attribute; 0 inherited from view\nwidthValid [out] 1 from attribute; 0 inherited from view\nentAt [out] wireframe attributes, attribute items that are not inherit from view is valid\n\nGets the wireframe attributes of specified reference entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the wireframe attributes that are not inherited from the view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRefEntAtGet\nidRefEnt [in] index of reference entity\nclrValid [out] 1 from attribute; 0 inherited from view\ntypeValid [out] 1 from attribute; 0 inherited from view\nwidthValid [out] 1 from attribute; 0 inherited from view\nentAt [out] wireframe attributes, attribute items that are not inherit from view is valid\n\nGets the wireframe attributes of specified reference entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set wireframe attributes of a specified reference entity?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRefEntAtSet\nidRefEnt [in] index of reference entity\nclrValid [in] 1 to set base on attribute; 0 to inherit view\ntypeValid [in] 1 to set base on attribute; 0 to inherit view\nwidthValid [in] 1 to set base on attribute; 0 to inherit view\nentAt [in] wireframe attributes, attribute items that are not inherit from view are set\n\nSet the wireframe attributes of specified reference entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to specify the wireframe attributes of a reference entity?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRefEntAtSet\nidRefEnt [in] index of reference entity\nclrValid [in] 1 to set base on attribute; 0 to inherit view\ntypeValid [in] 1 to set base on attribute; 0 to inherit view\nwidthValid [in] 1 to set base on attribute; 0 to inherit view\nentAt [in] wireframe attributes, attribute items that are not inherit from view are set\n\nSet the wireframe attributes of specified reference entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the base on attribute for wireframe attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRefEntAtSet\nidRefEnt [in] index of reference entity\nclrValid [in] 1 to set base on attribute; 0 to inherit view\ntypeValid [in] 1 to set base on attribute; 0 to inherit view\nwidthValid [in] 1 to set base on attribute; 0 to inherit view\nentAt [in] wireframe attributes, attribute items that are not inherit from view are set\n\nSet the wireframe attributes of specified reference entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inherit view for wireframe attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRefEntAtSet\nidRefEnt [in] index of reference entity\nclrValid [in] 1 to set base on attribute; 0 to inherit view\ntypeValid [in] 1 to set base on attribute; 0 to inherit view\nwidthValid [in] 1 to set base on attribute; 0 to inherit view\nentAt [in] wireframe attributes, attribute items that are not inherit from view are set\n\nSet the wireframe attributes of specified reference entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get 3D point from a pick point on an entity in a drawing sheet view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewPnt2DTo3D\npnt2DId [in] point id in view\npnt3D [out] 3D point\n\nGet 3D point in part coordinates corresponding to a pick point on an entity in a drawing sheet view.\nThe 3D coordinates are output in pnt3D. If pzPnt is V_NULL, this function merely determines whether the given pick is on an entity that can be mapped to a 3D point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to determine whether a given pick is on an entity that can be mapped to a 3D point?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewPnt2DTo3D\npnt2DId [in] point id in view\npnt3D [out] 3D point\n\nGet 3D point in part coordinates corresponding to a pick point on an entity in a drawing sheet view.\nThe 3D coordinates are output in pnt3D. If pzPnt is V_NULL, this function merely determines whether the given pick is on an entity that can be mapped to a 3D point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the 3D coordinates of a pick point on an entity in a drawing sheet view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewPnt2DTo3D\npnt2DId [in] point id in view\npnt3D [out] 3D point\n\nGet 3D point in part coordinates corresponding to a pick point on an entity in a drawing sheet view.\nThe 3D coordinates are output in pnt3D. If pzPnt is V_NULL, this function merely determines whether the given pick is on an entity that can be mapped to a 3D point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to convert a 3D point to a 2D point in a drawing sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewPnt3DTo2D\nviewId [in] view id in drawing\npnt3D [in] 3D point\npnt2D [out] 2D point\n\nGet 2D point value in drawing sheet corresponding to a 3D point value in the part. The 2D coordinate is output in pnt2D and it is converted from the matrix of view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the 2D point value in a drawing sheet from a 3D point in the part?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewPnt3DTo2D\nviewId [in] view id in drawing\npnt3D [in] 3D point\npnt2D [out] 2D point\n\nGet 2D point value in drawing sheet corresponding to a 3D point value in the part. The 2D coordinate is output in pnt2D and it is converted from the matrix of view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the 2D coordinate from the matrix of a view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewPnt3DTo2D\nviewId [in] view id in drawing\npnt3D [in] 3D point\npnt2D [out] 2D point\n\nGet 2D point value in drawing sheet corresponding to a 3D point value in the part. The 2D coordinate is output in pnt2D and it is converted from the matrix of view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of all symbol entities in the active sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxShtInqSymbol\ntype [in] symbol object type (VX_SYM_ALL to get all)\nCount [out] number of symbol entities\nidEnts [out] list of symbol entity id's\n\nOutputs a list of indices of specified type symbol entities in the active sheet.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of symbol entities in the active sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxShtInqSymbol\ntype [in] symbol object type (VX_SYM_ALL to get all)\nCount [out] number of symbol entities\nidEnts [out] list of symbol entity id's\n\nOutputs a list of indices of specified type symbol entities in the active sheet.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of symbol entities by type in the active sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxShtInqSymbol\ntype [in] symbol object type (VX_SYM_ALL to get all)\nCount [out] number of symbol entities\nidEnts [out] list of symbol entity id's\n\nOutputs a list of indices of specified type symbol entities in the active sheet.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of symbol objects by id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqSymObjList\nidSym [in] id of symbol\ncount [out] count of listId\nlistId [out] list of symbol object id\n\nGets a list of symbol objects."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the count of symbol object list?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqSymObjList\nidSym [in] id of symbol\ncount [out] count of listId\nlistId [out] list of symbol object id\n\nGets a list of symbol objects."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the list of symbol objects by id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqSymObjList\nidSym [in] id of symbol\ncount [out] count of listId\nlistId [out] list of symbol object id\n\nGets a list of symbol objects."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the type of a specified symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqSymType\nidSym [in] the index of symbol\ntype [out] the type of specified symbol\n\nGet the type(evxSymbolType) of specified symbol. It can't get the corresponding type if \"*type = VX_SYM_ALL\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine the type of a symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqSymType\nidSym [in] the index of symbol\ntype [out] the type of specified symbol\n\nGet the type(evxSymbolType) of specified symbol. It can't get the corresponding type if \"*type = VX_SYM_ALL\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function can be used to retrieve the type of a symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqSymType\nidSym [in] the index of symbol\ntype [out] the type of specified symbol\n\nGet the type(evxSymbolType) of specified symbol. It can't get the corresponding type if \"*type = VX_SYM_ALL\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of entities associated with a specific symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqSymEnts\nidSym [in] index of symbol\nCount [out] number of list\nidEnts [out] pointer to pointer of entities array\n\nOutputs the id list of entities associated with the specified symbol.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the count of entities associated with a symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqSymEnts\nidSym [in] index of symbol\nCount [out] number of list\nidEnts [out] pointer to pointer of entities array\n\nOutputs the id list of entities associated with the specified symbol.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list after getting the entities associated with a symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqSymEnts\nidSym [in] index of symbol\nCount [out] number of list\nidEnts [out] pointer to pointer of entities array\n\nOutputs the id list of entities associated with the specified symbol.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the attributes data of a specified symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymAtGet\nidSym [in] index of symbol\nsymAttr [out] symbol attributes\n\nGets the attributes data of specified symbol. the function supports the following 4 symbol types: VX_SYM_SURF, VX_SYM_WELD, VX_SYM_BEAD, VX_SYM_ENDTRT."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve symbol attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymAtGet\nidSym [in] index of symbol\nsymAttr [out] symbol attributes\n\nGets the attributes data of specified symbol. the function supports the following 4 symbol types: VX_SYM_SURF, VX_SYM_WELD, VX_SYM_BEAD, VX_SYM_ENDTRT."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get symbol attributes by index?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymAtGet\nidSym [in] index of symbol\nsymAttr [out] symbol attributes\n\nGets the attributes data of specified symbol. the function supports the following 4 symbol types: VX_SYM_SURF, VX_SYM_WELD, VX_SYM_BEAD, VX_SYM_ENDTRT."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set attributes data of a specified symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymAtSet\nidSym [in] index of symbol\nsymAttr [in] symbol attributes\n\nSets the attributes data of specified symbol. the function supports the following 4 symbol types: VX_SYM_SURF, VX_SYM_WELD, VX_SYM_BEAD, VX_SYM_ENDTRT."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set symbol attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymAtSet\nidSym [in] index of symbol\nsymAttr [in] symbol attributes\n\nSets the attributes data of specified symbol. the function supports the following 4 symbol types: VX_SYM_SURF, VX_SYM_WELD, VX_SYM_BEAD, VX_SYM_ENDTRT."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set attributes for different symbol types like VX_SYM_SURF, VX_SYM_WELD, VX_SYM_BEAD, VX_SYM_ENDTRT?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymAtSet\nidSym [in] index of symbol\nsymAttr [in] symbol attributes\n\nSets the attributes data of specified symbol. the function supports the following 4 symbol types: VX_SYM_SURF, VX_SYM_WELD, VX_SYM_BEAD, VX_SYM_ENDTRT."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the symbol image data of a specified image?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymImgAtGet\nidSymImg [in] image id\ndata [out] image data\n\nGets the symbol image data of specified image."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the image data of a symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymImgAtGet\nidSymImg [in] image id\ndata [out] image data\n\nGets the symbol image data of specified image."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the image data of a specific symbol image?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymImgAtGet\nidSymImg [in] image id\ndata [out] image data\n\nGets the symbol image data of specified image."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the symbol image data of a specified image?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymImgAtSet\nidSymImg [in] image id\ndata [in] image data\n\nSets the symbol image data of specified image."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to update the image data of a symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymImgAtSet\nidSymImg [in] image id\ndata [in] image data\n\nSets the symbol image data of specified image."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the image data of a symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymImgAtSet\nidSymImg [in] image id\ndata [in] image data\n\nSets the symbol image data of specified image."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve surface roughness data of a specified symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymSurfDataGet\nidSymSurf [in] symbol id\ndata [out] surface roughness data\n\nGet the surface roughness data of specified symbol."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the surface roughness data for a specific symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymSurfDataGet\nidSymSurf [in] symbol id\ndata [out] surface roughness data\n\nGet the surface roughness data of specified symbol."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to obtain the surface roughness data for a particular symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymSurfDataGet\nidSymSurf [in] symbol id\ndata [out] surface roughness data\n\nGet the surface roughness data of specified symbol."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the surface roughness data of a specified symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymSurfDataSet\nidSymSurf [in] symbol id\ndata [in] surface roughness data\n\nSet the surface roughness data of specified symbol."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to update the surface roughness data of a symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymSurfDataSet\nidSymSurf [in] symbol id\ndata [in] surface roughness data\n\nSet the surface roughness data of specified symbol."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to input surface roughness data for a specific symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymSurfDataSet\nidSymSurf [in] symbol id\ndata [in] surface roughness data\n\nSet the surface roughness data of specified symbol."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve weld data for a specific symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymWeldDataGet\nidSymWeld [in] symbol id\ndata [out] weld data\n\nGet the weld data of special symbol.\nThis function allocates memory for \"jogPoints\" and \"leaderPoints\" in svxSymWeld struct. The memory MUST be deallocated by the calling procedure using cvxSymWeldFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the weld data for a symbol using its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymWeldDataGet\nidSymWeld [in] symbol id\ndata [out] weld data\n\nGet the weld data of special symbol.\nThis function allocates memory for \"jogPoints\" and \"leaderPoints\" in svxSymWeld struct. The memory MUST be deallocated by the calling procedure using cvxSymWeldFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate memory for jogPoints and leaderPoints in svxSymWeld struct after retrieving the weld data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymWeldDataGet\nidSymWeld [in] symbol id\ndata [out] weld data\n\nGet the weld data of special symbol.\nThis function allocates memory for \"jogPoints\" and \"leaderPoints\" in svxSymWeld struct. The memory MUST be deallocated by the calling procedure using cvxSymWeldFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the weld data for a special symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymWeldDataSet\nidSymWeld [in] symbol id\ndata [in] weld data\n\nSet the weld data of special symbol."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to update the weld data for a specific symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymWeldDataSet\nidSymWeld [in] symbol id\ndata [in] weld data\n\nSet the weld data of special symbol."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to input weld data for a symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymWeldDataSet\nidSymWeld [in] symbol id\ndata [in] weld data\n\nSet the weld data of special symbol."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free memory associated with a specified weld structure?"
            },
            {
                "role": "assistant",
                "content": "cvxSymWeldFree\nWeldData [in] weld data structure\n\nFrees memory associated with the specified weld structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to release memory associated with weld data structure?"
            },
            {
                "role": "assistant",
                "content": "cvxSymWeldFree\nWeldData [in] weld data structure\n\nFrees memory associated with the specified weld structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate memory for a weld data structure?"
            },
            {
                "role": "assistant",
                "content": "cvxSymWeldFree\nWeldData [in] weld data structure\n\nFrees memory associated with the specified weld structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of objects in a User Symbol group?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgUserSymObjGet\nidSymUser [in] id of user symbol\nnObj [out] number of objects in group\nidObjs [out] list of object indices\n\nGet a list of indices of the objects in the User Symbol.\nThis function allocates memory for \"list\". The calling procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the list of object indices in a User Symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgUserSymObjGet\nidSymUser [in] id of user symbol\nnObj [out] number of objects in group\nidObjs [out] list of object indices\n\nGet a list of indices of the objects in the User Symbol.\nThis function allocates memory for \"list\". The calling procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get the indices of the objects in a User Symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgUserSymObjGet\nidSymUser [in] id of user symbol\nnObj [out] number of objects in group\nidObjs [out] list of object indices\n\nGet a list of indices of the objects in the User Symbol.\nThis function allocates memory for \"list\". The calling procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the insertion position of a symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymInsPointGet\nidSym [in] id of symbol\npnt [out] symbol insertion point\n\nGet the insertion position of the symbol."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the symbol insertion point?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymInsPointGet\nidSym [in] id of symbol\npnt [out] symbol insertion point\n\nGet the insertion position of the symbol."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the position of a symbol insertion?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymInsPointGet\nidSym [in] id of symbol\npnt [out] symbol insertion point\n\nGet the insertion position of the symbol."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the insertion position of a symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymInsPointSet\nidSym [in] id of symbol\npnt [in] symbol insertion point\n\nSet the insertion position of the symbol.\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to set the insertion point of a symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymInsPointSet\nidSym [in] id of symbol\npnt [in] symbol insertion point\n\nSet the insertion position of the symbol.\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to specify the insertion point of a symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymInsPointSet\nidSym [in] id of symbol\npnt [in] symbol insertion point\n\nSet the insertion position of the symbol.\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the linked file path with a special symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymLinkGet\nidSymLink [in] index of OLE object symbol\nfilePath [out] the linked file path with symbol\n\nGet the linked file path with special symbol."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the linked file path using the symbol index?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymLinkGet\nidSymLink [in] index of OLE object symbol\nfilePath [out] the linked file path with symbol\n\nGet the linked file path with special symbol."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can you provide a method to obtain the linked file path for a specific symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymLinkGet\nidSymLink [in] index of OLE object symbol\nfilePath [out] the linked file path with symbol\n\nGet the linked file path with special symbol."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the linked file path with a specific symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymLinkGetByLongPath\nidSymLink [in] index of OLE object symbol\nfilePath [out] the linked file path with symbol\nsizePath [in] max size of filePath\n\nGet the linked file path with special symbol.\nA filePath that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"filePath\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the file path linked to a symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymLinkGetByLongPath\nidSymLink [in] index of OLE object symbol\nfilePath [out] the linked file path with symbol\nsizePath [in] max size of filePath\n\nGet the linked file path with special symbol.\nA filePath that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"filePath\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle a file path longer than the specified size?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymLinkGetByLongPath\nidSymLink [in] index of OLE object symbol\nfilePath [out] the linked file path with symbol\nsizePath [in] max size of filePath\n\nGet the linked file path with special symbol.\nA filePath that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"filePath\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to export an embedded file from a symbol openLink object?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymLinkExport\nidSymLink [in] the index of symbol openLink object\nfilePath [inout] path of export file\n\nExport embedded file from symbol openLink object to specified path. if only the export path is specified, the file uses the original file name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to export a file from a symbol openLink object to a specific path?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymLinkExport\nidSymLink [in] the index of symbol openLink object\nfilePath [inout] path of export file\n\nExport embedded file from symbol openLink object to specified path. if only the export path is specified, the file uses the original file name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the export path for an embedded file from a symbol openLink object?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymLinkExport\nidSymLink [in] the index of symbol openLink object\nfilePath [inout] path of export file\n\nExport embedded file from symbol openLink object to specified path. if only the export path is specified, the file uses the original file name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to export an embedded file from a symbol openLink object?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymLinkExportByLongPath\nidSymLink [in] the index of symbol openLink object\nfilePath [inout] path of export file\nsizePath [in] max size of filePath\n\nExport embedded file from symbol openLink object to specified path. if only the export path is specified, the file uses the original file name.\nA filePath that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the export path for the embedded file?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymLinkExportByLongPath\nidSymLink [in] the index of symbol openLink object\nfilePath [inout] path of export file\nsizePath [in] max size of filePath\n\nExport embedded file from symbol openLink object to specified path. if only the export path is specified, the file uses the original file name.\nA filePath that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if the export path is longer than the maximum size?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymLinkExportByLongPath\nidSymLink [in] the index of symbol openLink object\nfilePath [inout] path of export file\nsizePath [in] max size of filePath\n\nExport embedded file from symbol openLink object to specified path. if only the export path is specified, the file uses the original file name.\nA filePath that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of table objects in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqTables\nidDrawing [in] drawing id\ntype [in] table type\ncount [out] count of the object\ntables [out] table list\n\nOutputs a list of the table entity IDs in the special drawing. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of table entity IDs in a specific drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqTables\nidDrawing [in] drawing id\ntype [in] table type\ncount [out] count of the object\ntables [out] table list\n\nOutputs a list of the table entity IDs in the special drawing. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to deallocate the output list of table entity IDs?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqTables\nidDrawing [in] drawing id\ntype [in] table type\ncount [out] count of the object\ntables [out] table list\n\nOutputs a list of the table entity IDs in the special drawing. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the type of a specified table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqTableType\nidTable [in] id of table\ntype [out] table type\n\nGets the type of the specified table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about the type of a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqTableType\nidTable [in] id of table\ntype [out] table type\n\nGets the type of the specified table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I determine the type of a specific table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqTableType\nidTable [in] id of table\ntype [out] table type\n\nGets the type of the specified table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the row count of a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgGetTableSize\niTblIdx [in] index of table\npRowNum [out] row number of table\npColNum [out] column number of table\n\nGet the row and column count of table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the column count of a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgGetTableSize\niTblIdx [in] index of table\npRowNum [out] row number of table\npColNum [out] column number of table\n\nGet the row and column count of table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the size of a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgGetTableSize\niTblIdx [in] index of table\npRowNum [out] row number of table\npColNum [out] column number of table\n\nGet the row and column count of table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to adjust the size of a table to minimum?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableAdjustSize\nidTable [in] id of table\n\nAdjust table size to minimum."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to resize a table to its minimum size?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableAdjustSize\nidTable [in] id of table\n\nAdjust table size to minimum."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to adjust the size of a table using its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableAdjustSize\nidTable [in] id of table\n\nAdjust table size to minimum."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the insert position of a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableInsPntSet\nidTable [in] id of table\npnt [in] new insert point\n\nModify the insert position of the table.\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the insert point of a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableInsPntSet\nidTable [in] id of table\npnt [in] new insert point\n\nModify the insert position of the table.\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the position of a table in CAD software?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableInsPntSet\nidTable [in] id of table\npnt [in] new insert point\n\nModify the insert position of the table.\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the insert position of a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableInsPntGet\nidTable [in] id of table\npnt [out] insert point\n\nGet the insert position of the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the insert point of a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableInsPntGet\nidTable [in] id of table\npnt [out] insert point\n\nGet the insert position of the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the position where a table is inserted?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableInsPntGet\nidTable [in] id of table\npnt [out] insert point\n\nGet the insert position of the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableExport\nidTable [in] table id\npath [in] export file full path\n\nExport the specified table to excel file. The file type is '.xls' or '.xlsx'."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableExport\nidTable [in] table id\npath [in] export file full path\n\nExport the specified table to excel file. The file type is '.xls' or '.xlsx'."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableExport\nidTable [in] table id\npath [in] export file full path\n\nExport the specified table to excel file. The file type is '.xls' or '.xlsx'."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to link a table to an Excel file?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableLinkToExcel\nidTable [in] table id\npath [in] the linked excel file full path\n\nLink the specified table to the specified excel."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to link a specific table to an Excel file?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableLinkToExcel\nidTable [in] table id\npath [in] the linked excel file full path\n\nLink the specified table to the specified excel."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the Excel file path for a table link?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableLinkToExcel\nidTable [in] table id\npath [in] the linked excel file full path\n\nLink the specified table to the specified excel."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the height of a specific row in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableRowHeightSet\nidTable [in] index of table\nRow [in] index of row\nHeight [in] height of row, auto adjust row height when Height < 0\n\nSet the row height of the specified row in the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to adjust the row height automatically in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableRowHeightSet\nidTable [in] index of table\nRow [in] index of row\nHeight [in] height of row, auto adjust row height when Height < 0\n\nSet the row height of the specified row in the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the height of a row in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableRowHeightSet\nidTable [in] index of table\nRow [in] index of row\nHeight [in] height of row, auto adjust row height when Height < 0\n\nSet the row height of the specified row in the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a row below a specified row in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableRowInsert\nidTable [in] index of table\nRow [in] index of row\n\nInsert a row below the specified row in the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a row in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableRowInsert\nidTable [in] index of table\nRow [in] index of row\n\nInsert a row below the specified row in the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a new row in a table below a specific row?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableRowInsert\nidTable [in] index of table\nRow [in] index of row\n\nInsert a row below the specified row in the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a row from a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableRowDelete\nidTable [in] index of table\nRow [in] index of row\n\ndelete specified row from table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to remove a specific row from a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableRowDelete\nidTable [in] index of table\nRow [in] index of row\n\ndelete specified row from table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to delete a row by index from a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableRowDelete\nidTable [in] index of table\nRow [in] index of row\n\ndelete specified row from table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the column width of a specific column in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableColWidthSet\nidTable [in] index of table\nCol [in] index of column\nWidth [in] width of column, auto adjust column width when width < 0\n\nSet the column width of the specified column in the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to adjust the column width automatically in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableColWidthSet\nidTable [in] index of table\nCol [in] index of column\nWidth [in] width of column, auto adjust column width when width < 0\n\nSet the column width of the specified column in the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the width of a column in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableColWidthSet\nidTable [in] index of table\nCol [in] index of column\nWidth [in] width of column, auto adjust column width when width < 0\n\nSet the column width of the specified column in the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a column to the right of a specified column in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableColInsert\nidTable [in] index of table\nCol [in] index of column\n\nInsert a column to the right of the specified column in the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a column to a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableColInsert\nidTable [in] index of table\nCol [in] index of column\n\nInsert a column to the right of the specified column in the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a new column in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableColInsert\nidTable [in] index of table\nCol [in] index of column\n\nInsert a column to the right of the specified column in the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a column from a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableColDelete\nidTable [in] index of table\nCol [in] index of column\n\nDelete specified column from table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to remove a specific column from a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableColDelete\nidTable [in] index of table\nCol [in] index of column\n\nDelete specified column from table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I delete a column by its index from a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableColDelete\nidTable [in] index of table\nCol [in] index of column\n\nDelete specified column from table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the text attribute of a specific cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableCellAtGet\nidTable [in] index of table\nRow [in] index of row\nCol [in] index of column\nTextAt [out] attribute of text\n\nGet text attribute of the specified cell in the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the text attribute of a cell in a table using its row and column index?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableCellAtGet\nidTable [in] index of table\nRow [in] index of row\nCol [in] index of column\nTextAt [out] attribute of text\n\nGet text attribute of the specified cell in the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to obtain the text attribute of a cell in a table based on its position?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableCellAtGet\nidTable [in] index of table\nRow [in] index of row\nCol [in] index of column\nTextAt [out] attribute of text\n\nGet text attribute of the specified cell in the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set text attribute of a specified cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableCellAtSet\nidTable [in] index of table\nRow [in] index of row\nCol [in] index of column\nTextAt [in] attribute of text (NULL to use table attribute)\n\nSet text attribute of the specified cell in the table.\nRow>0 && Col>0: set text attribute of the specified cell, TextAT can be NULL \n\n Row>0 && Col<0: set text attribute of specified row, TextAT can be NULL \n\n Row<0 && Col>0: set text attribute of specified column, TextAT can be NULL \n\n Row<0 && Col<0: set text attribute for the entire table, TextAT can not be NULL\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set text attribute of a specified row in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableCellAtSet\nidTable [in] index of table\nRow [in] index of row\nCol [in] index of column\nTextAt [in] attribute of text (NULL to use table attribute)\n\nSet text attribute of the specified cell in the table.\nRow>0 && Col>0: set text attribute of the specified cell, TextAT can be NULL \n\n Row>0 && Col<0: set text attribute of specified row, TextAT can be NULL \n\n Row<0 && Col>0: set text attribute of specified column, TextAT can be NULL \n\n Row<0 && Col<0: set text attribute for the entire table, TextAT can not be NULL\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I set text attribute of a specified column in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableCellAtSet\nidTable [in] index of table\nRow [in] index of row\nCol [in] index of column\nTextAt [in] attribute of text (NULL to use table attribute)\n\nSet text attribute of the specified cell in the table.\nRow>0 && Col>0: set text attribute of the specified cell, TextAT can be NULL \n\n Row>0 && Col<0: set text attribute of specified row, TextAT can be NULL \n\n Row<0 && Col>0: set text attribute of specified column, TextAT can be NULL \n\n Row<0 && Col<0: set text attribute for the entire table, TextAT can not be NULL\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to set text attribute for the entire table in CAD software?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableCellAtSet\nidTable [in] index of table\nRow [in] index of row\nCol [in] index of column\nTextAt [in] attribute of text (NULL to use table attribute)\n\nSet text attribute of the specified cell in the table.\nRow>0 && Col>0: set text attribute of the specified cell, TextAT can be NULL \n\n Row>0 && Col<0: set text attribute of specified row, TextAT can be NULL \n\n Row<0 && Col>0: set text attribute of specified column, TextAT can be NULL \n\n Row<0 && Col<0: set text attribute for the entire table, TextAT can not be NULL\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the value of a cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableCellSet\nidTable [in] table id\nRow [in] row of table\nCol [in] column of table\nValue [in] modify value\n\nModify the value of specified cell of table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the value of a specific cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableCellSet\nidTable [in] table id\nRow [in] row of table\nCol [in] column of table\nValue [in] modify value\n\nModify the value of specified cell of table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the value of a cell in a table by specifying row and column?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableCellSet\nidTable [in] table id\nRow [in] row of table\nCol [in] column of table\nValue [in] modify value\n\nModify the value of specified cell of table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the value of a specific cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableCellGet\nidTable [in] table id\nRow [in] row of table\nCol [in] column of table\nValue [out] value of specified cell\nnBytes [in] string max size of value\n\nGet the value of specified cell of table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the value of a cell in a table using its row and column?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableCellGet\nidTable [in] table id\nRow [in] row of table\nCol [in] column of table\nValue [out] value of specified cell\nnBytes [in] string max size of value\n\nGet the value of specified cell of table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the value of a particular cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableCellGet\nidTable [in] table id\nRow [in] row of table\nCol [in] column of table\nValue [out] value of specified cell\nnBytes [in] string max size of value\n\nGet the value of specified cell of table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to merge cells in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableCellsMerge\nidTable [in] table id\nstartRow [in] start row\nendRow [in] end row\nstartCol [in] start column\nendCol [in] end column\nkFirstData [in] flag of keep the first data when merging some cells\n\nmerge the selected (endRow-startRow+1)*(endCol-startCol+1) cells to one cell.\nif kFirstData = 0 and the selected cells have a lot of data, it will fail to merge them.\nnote:\n1 <= startRow <= endRow <= maxRow, 1 <= startCol <= endCol <= maxCol. maxRow is the maximum row of the table, maxCol is the maximum column of the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to merge cells in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableCellsMerge\nidTable [in] table id\nstartRow [in] start row\nendRow [in] end row\nstartCol [in] start column\nendCol [in] end column\nkFirstData [in] flag of keep the first data when merging some cells\n\nmerge the selected (endRow-startRow+1)*(endCol-startCol+1) cells to one cell.\nif kFirstData = 0 and the selected cells have a lot of data, it will fail to merge them.\nnote:\n1 <= startRow <= endRow <= maxRow, 1 <= startCol <= endCol <= maxCol. maxRow is the maximum row of the table, maxCol is the maximum column of the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle merging cells with a lot of data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableCellsMerge\nidTable [in] table id\nstartRow [in] start row\nendRow [in] end row\nstartCol [in] start column\nendCol [in] end column\nkFirstData [in] flag of keep the first data when merging some cells\n\nmerge the selected (endRow-startRow+1)*(endCol-startCol+1) cells to one cell.\nif kFirstData = 0 and the selected cells have a lot of data, it will fail to merge them.\nnote:\n1 <= startRow <= endRow <= maxRow, 1 <= startCol <= endCol <= maxCol. maxRow is the maximum row of the table, maxCol is the maximum column of the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to un-merge cells in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableCellsUnMerge\nidTable [in] table id\nminRow [in] min row\nmaxRow [in] max row\nminCol [in] min column\nmaxCol [in] max column\n\nun-merge the selected cells."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to un-merge specific range of cells in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableCellsUnMerge\nidTable [in] table id\nminRow [in] min row\nmaxRow [in] max row\nminCol [in] min column\nmaxCol [in] max column\n\nun-merge the selected cells."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to un-merge cells within a specified row and column range?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableCellsUnMerge\nidTable [in] table id\nminRow [in] min row\nmaxRow [in] max row\nminCol [in] min column\nmaxCol [in] max column\n\nun-merge the selected cells."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of view entity IDs in a specific drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqViews\nidDrawing [in] drawing id\ntype [in] view type\ncount [out] count of the object\nviews [out] view list\n\nOutputs a list of the view entity IDs in the special drawing. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the count of view objects in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqViews\nidDrawing [in] drawing id\ntype [in] view type\ncount [out] count of the object\nviews [out] view list\n\nOutputs a list of the view entity IDs in the special drawing. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain a list of view entities based on a specific view type?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqViews\nidDrawing [in] drawing id\ntype [in] view type\ncount [out] count of the object\nviews [out] view list\n\nOutputs a list of the view entity IDs in the special drawing. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if the views in a drawing need to be updated?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqViewMod\nidDrawing [in] the index of drawing\nmodified [out] 1 if one of the views in specified drawing need to be updated\n\nCheck whether the views in the specified drawing has outdated and need to be updated, \n\n output 1 if one of the views need to be updated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a specific drawing view is outdated?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqViewMod\nidDrawing [in] the index of drawing\nmodified [out] 1 if one of the views in specified drawing need to be updated\n\nCheck whether the views in the specified drawing has outdated and need to be updated, \n\n output 1 if one of the views need to be updated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I find out if any views in a drawing need to be refreshed?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqViewMod\nidDrawing [in] the index of drawing\nmodified [out] 1 if one of the views in specified drawing need to be updated\n\nCheck whether the views in the specified drawing has outdated and need to be updated, \n\n output 1 if one of the views need to be updated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the type of a specified view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqViewType\nidView [in] the index of view\ntype [out] the type of specified view\n\nGet the type(evxViewType) of specified view. \n\n It can't get the corresponding type if \"*type = VX_VIEW_ALL\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine the type of a specific view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqViewType\nidView [in] the index of view\ntype [out] the type of specified view\n\nGet the type(evxViewType) of specified view. \n\n It can't get the corresponding type if \"*type = VX_VIEW_ALL\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the type of a particular view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqViewType\nidView [in] the index of view\ntype [out] the type of specified view\n\nGet the type(evxViewType) of specified view. \n\n It can't get the corresponding type if \"*type = VX_VIEW_ALL\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the type of a specified view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqViewTypeEx\nviewId [in] index of view in sheeting\nviewType [out] type of view\n\nGet the type(evxViewTypeEx) of specified view. \n\n Types of view are more detailed than cvxDwgInqViewType()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the type of a view in a sheeting?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqViewTypeEx\nviewId [in] index of view in sheeting\nviewType [out] type of view\n\nGet the type(evxViewTypeEx) of specified view. \n\n Types of view are more detailed than cvxDwgInqViewType()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the detailed type of a view in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqViewTypeEx\nviewId [in] index of view in sheeting\nviewType [out] type of view\n\nGet the type(evxViewTypeEx) of specified view. \n\n Types of view are more detailed than cvxDwgInqViewType()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the attribute data of a specified view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewAtGet\nidView [in] index of view (<= 0 to get the global variables)\nviewAttr [out] view attributes\n\nGets the attribute data of specified view. if index of view less than 0, the \n\n function will get the global variables for view layout attributes used in CdV3Ins."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve global variables for view layout attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewAtGet\nidView [in] index of view (<= 0 to get the global variables)\nviewAttr [out] view attributes\n\nGets the attribute data of specified view. if index of view less than 0, the \n\n function will get the global variables for view layout attributes used in CdV3Ins."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain view attributes using the view index?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewAtGet\nidView [in] index of view (<= 0 to get the global variables)\nviewAttr [out] view attributes\n\nGets the attribute data of specified view. if index of view less than 0, the \n\n function will get the global variables for view layout attributes used in CdV3Ins."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the attributes of a specific view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewAtSet\nidView [in] index of view (<= 0 to set the global variables)\nviewAttr [in] view attributes\n\nSet the attribute of specified view. if index of view less than 0, the \n\n function will set the global variables for view layout attributes used in CdV3Ins."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set global variables for view layout attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewAtSet\nidView [in] index of view (<= 0 to set the global variables)\nviewAttr [in] view attributes\n\nSet the attribute of specified view. if index of view less than 0, the \n\n function will set the global variables for view layout attributes used in CdV3Ins."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use CdV3Ins to set view attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewAtSet\nidView [in] index of view (<= 0 to set the global variables)\nviewAttr [in] view attributes\n\nSet the attribute of specified view. if index of view less than 0, the \n\n function will set the global variables for view layout attributes used in CdV3Ins."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewLockSet\nidView [in] id view\nlock [in] 1 is lock ,0 is unlock\n\nLock/Unlock the location of view"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewLockSet\nidView [in] id view\nlock [in] 1 is lock ,0 is unlock\n\nLock/Unlock the location of view"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewLockSet\nidView [in] id view\nlock [in] 1 is lock ,0 is unlock\n\nLock/Unlock the location of view"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a specific view is locked?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewLockGet\nidView [in] id view\nisLock [out] 1 is lock ,0 is unlock\n\nDetermine whether the view is locked."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a view is locked?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewLockGet\nidView [in] id view\nisLock [out] 1 is lock ,0 is unlock\n\nDetermine whether the view is locked."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I find out if a view is locked or unlocked?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewLockGet\nidView [in] id view\nisLock [out] 1 is lock ,0 is unlock\n\nDetermine whether the view is locked."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the coordinates of the top left corner of the view border?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewDottedBorderGet\nidView [in] index of view\nUpperLeft [out] top left corner\nUpperRight [out] top right corner\nBottomLeft [out] left bottom\nBottomRight [out] right bottom\n\nGets the coordinates of the four vertices of the border."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the coordinates of the top right corner of the view border?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewDottedBorderGet\nidView [in] index of view\nUpperLeft [out] top left corner\nUpperRight [out] top right corner\nBottomLeft [out] left bottom\nBottomRight [out] right bottom\n\nGets the coordinates of the four vertices of the border."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the coordinates of the bottom left corner of the view border?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewDottedBorderGet\nidView [in] index of view\nUpperLeft [out] top left corner\nUpperRight [out] top right corner\nBottomLeft [out] left bottom\nBottomRight [out] right bottom\n\nGets the coordinates of the four vertices of the border."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to get the coordinates of the bottom right corner of the view border?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewDottedBorderGet\nidView [in] index of view\nUpperLeft [out] top left corner\nUpperRight [out] top right corner\nBottomLeft [out] left bottom\nBottomRight [out] right bottom\n\nGets the coordinates of the four vertices of the border."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the source part object of a drawing view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewInqPart\nidView [in] view id, -1 to get the active view for the target sheet\npart [out] part\n\nOutputs source part object of the drawing view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the part from a drawing view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewInqPart\nidView [in] view id, -1 to get the active view for the target sheet\npart [out] part\n\nOutputs source part object of the drawing view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the part from a specific drawing view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewInqPart\nidView [in] view id, -1 to get the active view for the target sheet\npart [out] part\n\nOutputs source part object of the drawing view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the name of the active item of configuration table by the source part object of the drawing view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewInqPartConfig\nidView [in] view id, -1 to get the active view for the target sheet\npartCfg [out] the name of the active item of configuration table\n\nInquire the name of the active item of configuration table by the source part object of the drawing view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the active view for the target sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewInqPartConfig\nidView [in] view id, -1 to get the active view for the target sheet\npartCfg [out] the name of the active item of configuration table\n\nInquire the name of the active item of configuration table by the source part object of the drawing view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name of the active item of configuration table by the view id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewInqPartConfig\nidView [in] view id, -1 to get the active view for the target sheet\npartCfg [out] the name of the active item of configuration table\n\nInquire the name of the active item of configuration table by the source part object of the drawing view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the name of the active item of configuration table by the source part object of the drawing view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewInqPartConfigByLongName\nidView [in] view id, -1 to get the active view for the target sheet\npartCfg [out] the name of the active item of configuration table\nsize [in] max size of partCfg.\n\nInquire the name of the active item of configuration table by the source part object of the drawing view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the active item of configuration table by the source part object of the drawing view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewInqPartConfigByLongName\nidView [in] view id, -1 to get the active view for the target sheet\npartCfg [out] the name of the active item of configuration table\nsize [in] max size of partCfg.\n\nInquire the name of the active item of configuration table by the source part object of the drawing view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name of the active item of configuration table for a specific drawing view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewInqPartConfigByLongName\nidView [in] view id, -1 to get the active view for the target sheet\npartCfg [out] the name of the active item of configuration table\nsize [in] max size of partCfg.\n\nInquire the name of the active item of configuration table by the source part object of the drawing view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the sub-views of a specified view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewInqChildView\nidView [in] index of view\ncount [out] number of idViews\nidViews [out] list of child view\n\nOutput sub-views of the specified view.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the child views of a particular view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewInqChildView\nidView [in] index of view\ncount [out] number of idViews\nidViews [out] list of child view\n\nOutput sub-views of the specified view.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the list of child views for a specific view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewInqChildView\nidView [in] index of view\ncount [out] number of idViews\nidViews [out] list of child view\n\nOutput sub-views of the specified view.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to associate entities with a specific view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewEntitiesAssociate\nidView [in] index of view (idView = -1 to disassociate)\ncount [in] number of idEnts\nidEnts [in] list of entity id\n\nThis function is to associate the entities with the view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to disassociate entities from a view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewEntitiesAssociate\nidView [in] index of view (idView = -1 to disassociate)\ncount [in] number of idEnts\nidEnts [in] list of entity id\n\nThis function is to associate the entities with the view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the number of entities to associate with a view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewEntitiesAssociate\nidView [in] index of view (idView = -1 to disassociate)\ncount [in] number of idEnts\nidEnts [in] list of entity id\n\nThis function is to associate the entities with the view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I provide a list of entity IDs to associate with a view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewEntitiesAssociate\nidView [in] index of view (idView = -1 to disassociate)\ncount [in] number of idEnts\nidEnts [in] list of entity id\n\nThis function is to associate the entities with the view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get perspective projection by view id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewInqProjection\nidView [in] id view\nprojection [out] projection angle\n\nGet perspective projection by view id."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to inquire projection angle by view id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewInqProjection\nidView [in] id view\nprojection [out] projection angle\n\nGet perspective projection by view id."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve projection angle using view id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewInqProjection\nidView [in] id view\nprojection [out] projection angle\n\nGet perspective projection by view id."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the starting position of a specific view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewLocationGet\nidView [in] index of view\npoint [out] position of specified view\n\nGets the starting position of the view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the position of a view by its index?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewLocationGet\nidView [in] index of view\npoint [out] position of specified view\n\nGets the starting position of the view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can you provide the method to obtain the position of a specified view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewLocationGet\nidView [in] index of view\npoint [out] position of specified view\n\nGets the starting position of the view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the alignment by idView?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAlignmentGet\nidView [in] id of view\nalign [out] 1 if application alignment, else 0.\n\nGet alignment by idView."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if the alignment is application alignment or not?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAlignmentGet\nidView [in] id of view\nalign [out] 1 if application alignment, else 0.\n\nGet alignment by idView."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get the alignment status for a specific view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAlignmentGet\nidView [in] id of view\nalign [out] 1 if application alignment, else 0.\n\nGet alignment by idView."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the origin point of a specified view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewInqOrgPnt\nidView [in] id of view\npnt [out] origin point of specified view\nidEnt [out] id of origin point(NULL to ignore)\n\nGet the origin point of specified view. \n\n If idEnt is not NULL, output the id of origin point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the ID of the origin point of a specified view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewInqOrgPnt\nidView [in] id of view\npnt [out] origin point of specified view\nidEnt [out] id of origin point(NULL to ignore)\n\nGet the origin point of specified view. \n\n If idEnt is not NULL, output the id of origin point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the origin point of a specific view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewInqOrgPnt\nidView [in] id of view\npnt [out] origin point of specified view\nidEnt [out] id of origin point(NULL to ignore)\n\nGet the origin point of specified view. \n\n If idEnt is not NULL, output the id of origin point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the attribute of a special break line?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgBrkLineAtSet\nbrkLnViewId [in] id of break line\nbrkLineAt [in] Attribute of Break Line\n\nSet Attribute of special break line. \n\n Before you use this function, you'd better calling cvxDwgBrkLineAtGet() to initialize brkLineAt."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function should be called before using cvxDwgBrkLineAtSet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgBrkLineAtSet\nbrkLnViewId [in] id of break line\nbrkLineAt [in] Attribute of Break Line\n\nSet Attribute of special break line. \n\n Before you use this function, you'd better calling cvxDwgBrkLineAtGet() to initialize brkLineAt."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to set the attribute of a break line?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgBrkLineAtSet\nbrkLnViewId [in] id of break line\nbrkLineAt [in] Attribute of Break Line\n\nSet Attribute of special break line. \n\n Before you use this function, you'd better calling cvxDwgBrkLineAtGet() to initialize brkLineAt."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the attribute of a special break line?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgBrkLineAtGet\nbrkLnViewId [in] id of break line\nbrkLineAt [out] Attribute of Break Line\n\nGet attribute of special break line. \n\n If brkLineAt->layerName = \"\",it means layer by view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the attribute of a break line by its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgBrkLineAtGet\nbrkLnViewId [in] id of break line\nbrkLineAt [out] Attribute of Break Line\n\nGet attribute of special break line. \n\n If brkLineAt->layerName = \"\",it means layer by view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if the layer of a break line is based on the view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgBrkLineAtGet\nbrkLnViewId [in] id of break line\nbrkLineAt [out] Attribute of Break Line\n\nGet attribute of special break line. \n\n If brkLineAt->layerName = \"\",it means layer by view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check and fix a file name without warning messages?"
            },
            {
                "role": "assistant",
                "content": "cvxFileNameCheck\nfileName [inout] file name\nnBytes [in] max size of file name(no longer than 512 bytes)\n\nCheck and fix name without warning messages, \n\n If the name contains some of \\/:*?\"<>|,~!@$# it is invalid,  <br>\nthis function will replace those character with _ to repair it.  <br>\n\nIt is assumed that the input \"fileName\" is no longer than 512 bytes.\nnote:\nNormally, this function used to check the file name when new a file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to repair an invalid file name?"
            },
            {
                "role": "assistant",
                "content": "cvxFileNameCheck\nfileName [inout] file name\nnBytes [in] max size of file name(no longer than 512 bytes)\n\nCheck and fix name without warning messages, \n\n If the name contains some of \\/:*?\"<>|,~!@$# it is invalid,  <br>\nthis function will replace those character with _ to repair it.  <br>\n\nIt is assumed that the input \"fileName\" is no longer than 512 bytes.\nnote:\nNormally, this function used to check the file name when new a file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to ensure a valid file name without special characters?"
            },
            {
                "role": "assistant",
                "content": "cvxFileNameCheck\nfileName [inout] file name\nnBytes [in] max size of file name(no longer than 512 bytes)\n\nCheck and fix name without warning messages, \n\n If the name contains some of \\/:*?\"<>|,~!@$# it is invalid,  <br>\nthis function will replace those character with _ to repair it.  <br>\n\nIt is assumed that the input \"fileName\" is no longer than 512 bytes.\nnote:\nNormally, this function used to check the file name when new a file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a new ZW3D file with a specified name?"
            },
            {
                "role": "assistant",
                "content": "cvxFileNew\nName [in] ZW3D file name\n\nCreates a new ZW3D file with the specified name and makes it active, \n\n add root object using cvxRootAdd() after creating the file. If you \n\n need to create a single object file, cvxFileNewSingle() is recommended. \n\n\nnote:\nUser can call cvxFileNameCheck() to check the Name first."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function should I use to add a root object after creating the file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileNew\nName [in] ZW3D file name\n\nCreates a new ZW3D file with the specified name and makes it active, \n\n add root object using cvxRootAdd() after creating the file. If you \n\n need to create a single object file, cvxFileNewSingle() is recommended. \n\n\nnote:\nUser can call cvxFileNameCheck() to check the Name first."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a recommended function for creating a single object file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileNew\nName [in] ZW3D file name\n\nCreates a new ZW3D file with the specified name and makes it active, \n\n add root object using cvxRootAdd() after creating the file. If you \n\n need to create a single object file, cvxFileNewSingle() is recommended. \n\n\nnote:\nUser can call cvxFileNameCheck() to check the Name first."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I check if the file name is valid before creating a new file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileNew\nName [in] ZW3D file name\n\nCreates a new ZW3D file with the specified name and makes it active, \n\n add root object using cvxRootAdd() after creating the file. If you \n\n need to create a single object file, cvxFileNewSingle() is recommended. \n\n\nnote:\nUser can call cvxFileNameCheck() to check the Name first."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a new ZW3D file with a description?"
            },
            {
                "role": "assistant",
                "content": "cvxFileNew2\nName [in] ZW3D file name\nDescription [in] optional object description (or NULL)\n\nThis function is the same as cvxFileNew2(), but it also allows you \n\n to assign a text string description to the new object file. The \n\n description must not be longer than 32 bytes, including the null- \n\n terminator.\nnote:\nUser can call cvxFileNameCheck() to check the Name first."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to assign a text string description to a new object file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileNew2\nName [in] ZW3D file name\nDescription [in] optional object description (or NULL)\n\nThis function is the same as cvxFileNew2(), but it also allows you \n\n to assign a text string description to the new object file. The \n\n description must not be longer than 32 bytes, including the null- \n\n terminator.\nnote:\nUser can call cvxFileNameCheck() to check the Name first."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function allows assigning a description to a new ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileNew2\nName [in] ZW3D file name\nDescription [in] optional object description (or NULL)\n\nThis function is the same as cvxFileNew2(), but it also allows you \n\n to assign a text string description to the new object file. The \n\n description must not be longer than 32 bytes, including the null- \n\n terminator.\nnote:\nUser can call cvxFileNameCheck() to check the Name first."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a new single-root file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileNewSingle\nfileName [in] file name\nfileType [in] single-root file type\nfileSubtype [in] single-root file subtype\ntemplateName [in] optional template object name (or NULL)\nfileDescription [in] optional object description (or NULL)\n\nCreates a new single-root file with the specified name, file type, subtype, template name and description. \n\n and makes it active.\nnote:\nUser can call cvxFileNameCheck() to check the Name first."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the name, type, and subtype of a new file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileNewSingle\nfileName [in] file name\nfileType [in] single-root file type\nfileSubtype [in] single-root file subtype\ntemplateName [in] optional template object name (or NULL)\nfileDescription [in] optional object description (or NULL)\n\nCreates a new single-root file with the specified name, file type, subtype, template name and description. \n\n and makes it active.\nnote:\nUser can call cvxFileNameCheck() to check the Name first."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to make a new file active after creation?"
            },
            {
                "role": "assistant",
                "content": "cvxFileNewSingle\nfileName [in] file name\nfileType [in] single-root file type\nfileSubtype [in] single-root file subtype\ntemplateName [in] optional template object name (or NULL)\nfileDescription [in] optional object description (or NULL)\n\nCreates a new single-root file with the specified name, file type, subtype, template name and description. \n\n and makes it active.\nnote:\nUser can call cvxFileNameCheck() to check the Name first."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxFileKeep\nfKeepOpen [in] 1 to keep files open, 0 to let files close\n\nSet the flag that allows files to remain open after certain functions \n\n have accessed them. When the cvxPartAtItemGetInFile() or \n\n cvxPartAtItemSetInFile() function must open a file to access an \n\n attribute, by default it will also close the file when that function \n\n returns. However, if cvxFileKeep(1) is called first, \n\n cvxPartAtItemGetInFile() and cvxPartAtItemSetInFile() will leave the file \n\n open, which makes subsequent calls more efficient when accessing other \n\n attributes in the same file. Calling cvxFileKeep(0) restores the \n\n default behavior, i.e. cvxPartAtItemGetInFile() and \n\n cvxPartAtItemSetInFile() will close any files that they must open. \n\n\nThis function does not affect files that are already open when \n\n cvxPartAtItemGetInFile() or cvxPartAtItemSetInFile() is called. Files \n\n that are already open will remain open when accessed by those \n\n functions, regardless of how the fKeepOpen flag is set. \n\n\nThis function returns the previous state of the fKeepOpen flag. In \n\n typical usage, the returned value should be given back to this \n\n function the second time this function is called, which will restore \n\n the original state of the flag. For example: \n\n \nsee:\ncvxFileClose(), cvxFileSave(), and similarly named functions to close \n\n files that may have been opened by cvxPartAtItemGetInFile() or \n\n cvxPartAtItemSetInFile()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxFileKeep\nfKeepOpen [in] 1 to keep files open, 0 to let files close\n\nSet the flag that allows files to remain open after certain functions \n\n have accessed them. When the cvxPartAtItemGetInFile() or \n\n cvxPartAtItemSetInFile() function must open a file to access an \n\n attribute, by default it will also close the file when that function \n\n returns. However, if cvxFileKeep(1) is called first, \n\n cvxPartAtItemGetInFile() and cvxPartAtItemSetInFile() will leave the file \n\n open, which makes subsequent calls more efficient when accessing other \n\n attributes in the same file. Calling cvxFileKeep(0) restores the \n\n default behavior, i.e. cvxPartAtItemGetInFile() and \n\n cvxPartAtItemSetInFile() will close any files that they must open. \n\n\nThis function does not affect files that are already open when \n\n cvxPartAtItemGetInFile() or cvxPartAtItemSetInFile() is called. Files \n\n that are already open will remain open when accessed by those \n\n functions, regardless of how the fKeepOpen flag is set. \n\n\nThis function returns the previous state of the fKeepOpen flag. In \n\n typical usage, the returned value should be given back to this \n\n function the second time this function is called, which will restore \n\n the original state of the flag. For example: \n\n \nsee:\ncvxFileClose(), cvxFileSave(), and similarly named functions to close \n\n files that may have been opened by cvxPartAtItemGetInFile() or \n\n cvxPartAtItemSetInFile()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxFileKeep\nfKeepOpen [in] 1 to keep files open, 0 to let files close\n\nSet the flag that allows files to remain open after certain functions \n\n have accessed them. When the cvxPartAtItemGetInFile() or \n\n cvxPartAtItemSetInFile() function must open a file to access an \n\n attribute, by default it will also close the file when that function \n\n returns. However, if cvxFileKeep(1) is called first, \n\n cvxPartAtItemGetInFile() and cvxPartAtItemSetInFile() will leave the file \n\n open, which makes subsequent calls more efficient when accessing other \n\n attributes in the same file. Calling cvxFileKeep(0) restores the \n\n default behavior, i.e. cvxPartAtItemGetInFile() and \n\n cvxPartAtItemSetInFile() will close any files that they must open. \n\n\nThis function does not affect files that are already open when \n\n cvxPartAtItemGetInFile() or cvxPartAtItemSetInFile() is called. Files \n\n that are already open will remain open when accessed by those \n\n functions, regardless of how the fKeepOpen flag is set. \n\n\nThis function returns the previous state of the fKeepOpen flag. In \n\n typical usage, the returned value should be given back to this \n\n function the second time this function is called, which will restore \n\n the original state of the flag. For example: \n\n \nsee:\ncvxFileClose(), cvxFileSave(), and similarly named functions to close \n\n files that may have been opened by cvxPartAtItemGetInFile() or \n\n cvxPartAtItemSetInFile()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to open an existing ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileOpen\nFile [in] ZW3D file name\n\nOpens an existing VX or ZW3D file. It is assumed the file resides \n\n somewhere in the active search directories (see cvxPathSet()). \n\n Use cvxPathSearchFirst() to force a particular directory to \n\n be searched first."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to open a VX file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileOpen\nFile [in] ZW3D file name\n\nOpens an existing VX or ZW3D file. It is assumed the file resides \n\n somewhere in the active search directories (see cvxPathSet()). \n\n Use cvxPathSearchFirst() to force a particular directory to \n\n be searched first."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set active search directories for opening a file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileOpen\nFile [in] ZW3D file name\n\nOpens an existing VX or ZW3D file. It is assumed the file resides \n\n somewhere in the active search directories (see cvxPathSet()). \n\n Use cvxPathSearchFirst() to force a particular directory to \n\n be searched first."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to reopen a ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileReOpen\nName [in] ZW3D file name (not include file path)\n\nIf the specified file is not in the memory, then just open it as cvxFileOpen().\nIf the specified file is already opened in the memory, try to reload the data from the physical file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to reload data from a physical file if it's already opened in memory?"
            },
            {
                "role": "assistant",
                "content": "cvxFileReOpen\nName [in] ZW3D file name (not include file path)\n\nIf the specified file is not in the memory, then just open it as cvxFileOpen().\nIf the specified file is already opened in the memory, try to reload the data from the physical file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if I try to open a file that is already in memory?"
            },
            {
                "role": "assistant",
                "content": "cvxFileReOpen\nName [in] ZW3D file name (not include file path)\n\nIf the specified file is not in the memory, then just open it as cvxFileOpen().\nIf the specified file is already opened in the memory, try to reload the data from the physical file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to replace the data of a file in ZW3D?"
            },
            {
                "role": "assistant",
                "content": "cvxFileReplace\nfilePath [in] path of the file to be replaced\nnewData [in] path of the file contains the new data\nfDel [in] 1 if want to delete newData, else 0\n\nReplace the file data of filePath with newData. The newData file will be deleted if fDel is not 0.\nnote:\nnewData cannot be already located/opened in ZW3D. \n\n The filePath and newData must the full path of the file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to delete the new data file after replacing the original file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileReplace\nfilePath [in] path of the file to be replaced\nnewData [in] path of the file contains the new data\nfDel [in] 1 if want to delete newData, else 0\n\nReplace the file data of filePath with newData. The newData file will be deleted if fDel is not 0.\nnote:\nnewData cannot be already located/opened in ZW3D. \n\n The filePath and newData must the full path of the file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I use a partial path for the file to be replaced or the new data file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileReplace\nfilePath [in] path of the file to be replaced\nnewData [in] path of the file contains the new data\nfDel [in] 1 if want to delete newData, else 0\n\nReplace the file data of filePath with newData. The newData file will be deleted if fDel is not 0.\nnote:\nnewData cannot be already located/opened in ZW3D. \n\n The filePath and newData must the full path of the file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to save the active ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileSave\nClose [in] 1 = close file after saving it; 0 = leave it open\n\nSaves the active ZW3D file to the location it was previously saved at."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there an option to close the file after saving it?"
            },
            {
                "role": "assistant",
                "content": "cvxFileSave\nClose [in] 1 = close file after saving it; 0 = leave it open\n\nSaves the active ZW3D file to the location it was previously saved at."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to leave the file open after saving it?"
            },
            {
                "role": "assistant",
                "content": "cvxFileSave\nClose [in] 1 = close file after saving it; 0 = leave it open\n\nSaves the active ZW3D file to the location it was previously saved at."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to save the active ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileSave2\nClose [in] 1 = close file after saving it; 0 = leave it open\n\nSaves the active ZW3D file and its relevant files to the location they were previously saved at."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there an option to close the file after saving it?"
            },
            {
                "role": "assistant",
                "content": "cvxFileSave2\nClose [in] 1 = close file after saving it; 0 = leave it open\n\nSaves the active ZW3D file and its relevant files to the location they were previously saved at."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to save the relevant files along with the active ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileSave2\nClose [in] 1 = close file after saving it; 0 = leave it open\n\nSaves the active ZW3D file and its relevant files to the location they were previously saved at."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to save the active file with the option to keep it open or close it?"
            },
            {
                "role": "assistant",
                "content": "cvxFileSave3\nClose [in] 1 = close file after saving it; 0 = leave it open\nDisPrompt [in] 1 = no prompt during saving it; 0 = leave it open\nRelated [in] 1 = save the related files; 0 = save current file only\n\nSaves the active file. You can control keep/close, pop-out/disable prompt and save the related files by parameters."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to save the file without any prompts during the process?"
            },
            {
                "role": "assistant",
                "content": "cvxFileSave3\nClose [in] 1 = close file after saving it; 0 = leave it open\nDisPrompt [in] 1 = no prompt during saving it; 0 = leave it open\nRelated [in] 1 = save the related files; 0 = save current file only\n\nSaves the active file. You can control keep/close, pop-out/disable prompt and save the related files by parameters."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I save the related files along with the current file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileSave3\nClose [in] 1 = close file after saving it; 0 = leave it open\nDisPrompt [in] 1 = no prompt during saving it; 0 = leave it open\nRelated [in] 1 = save the related files; 0 = save current file only\n\nSaves the active file. You can control keep/close, pop-out/disable prompt and save the related files by parameters."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to save all active ZW3D files?"
            },
            {
                "role": "assistant",
                "content": "cvxFileSaveAll\n\nSaves all active ZW3D files to the specified path/filename."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to save all files to a specific path?"
            },
            {
                "role": "assistant",
                "content": "cvxFileSaveAll\n\nSaves all active ZW3D files to the specified path/filename."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the path and filename for saving all active files?"
            },
            {
                "role": "assistant",
                "content": "cvxFileSaveAll\n\nSaves all active ZW3D files to the specified path/filename."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to save the active ZW3D file to a specified path/filename?"
            },
            {
                "role": "assistant",
                "content": "cvxFileSaveAs\nFile [in] pathname to save file under\n\nSaves the active ZW3D file to the specified path/filename. \n\n If there is prompt dialog, please use \"cvxUserActionStatusSet2()\" to avoid interrupt."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to avoid interrupt when saving the file with a prompt dialog?"
            },
            {
                "role": "assistant",
                "content": "cvxFileSaveAs\nFile [in] pathname to save file under\n\nSaves the active ZW3D file to the specified path/filename. \n\n If there is prompt dialog, please use \"cvxUserActionStatusSet2()\" to avoid interrupt."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function should be used to avoid interrupt when saving the file with a prompt dialog?"
            },
            {
                "role": "assistant",
                "content": "cvxFileSaveAs\nFile [in] pathname to save file under\n\nSaves the active ZW3D file to the specified path/filename. \n\n If there is prompt dialog, please use \"cvxUserActionStatusSet2()\" to avoid interrupt."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to save a list of files to a specified directory?"
            },
            {
                "role": "assistant",
                "content": "cvxFilesSaveTo\nCount [in] count of the files list to save\nFileList [in] name list of files to save (only file name)\nPath [in] path to save files\n\nSaves the specified files in memory saved to the specified directory. The file name will not be changed.\nnote:\nIf the file is not opened in ZW3D and it can be found in the search path, just copy it to the specified directory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to save multiple files at once?"
            },
            {
                "role": "assistant",
                "content": "cvxFilesSaveTo\nCount [in] count of the files list to save\nFileList [in] name list of files to save (only file name)\nPath [in] path to save files\n\nSaves the specified files in memory saved to the specified directory. The file name will not be changed.\nnote:\nIf the file is not opened in ZW3D and it can be found in the search path, just copy it to the specified directory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the path for saving files?"
            },
            {
                "role": "assistant",
                "content": "cvxFilesSaveTo\nCount [in] count of the files list to save\nFileList [in] name list of files to save (only file name)\nPath [in] path to save files\n\nSaves the specified files in memory saved to the specified directory. The file name will not be changed.\nnote:\nIf the file is not opened in ZW3D and it can be found in the search path, just copy it to the specified directory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to save a list of files to a specified directory?"
            },
            {
                "role": "assistant",
                "content": "cvxFilesSaveToByLongPath\nCount [in] count of the files list to save\nFileList [in] name list of files to save (only file name)\nPath [in] path to save files\n\nSaves the specified files in memory saved to the specified directory. The file name will not be changed.\nnote:\nIf the file is not opened in ZW3D and it can be found in the search path, just copy it to the specified directory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to save files without changing the file name?"
            },
            {
                "role": "assistant",
                "content": "cvxFilesSaveToByLongPath\nCount [in] count of the files list to save\nFileList [in] name list of files to save (only file name)\nPath [in] path to save files\n\nSaves the specified files in memory saved to the specified directory. The file name will not be changed.\nnote:\nIf the file is not opened in ZW3D and it can be found in the search path, just copy it to the specified directory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to save files from memory to a specific path?"
            },
            {
                "role": "assistant",
                "content": "cvxFilesSaveToByLongPath\nCount [in] count of the files list to save\nFileList [in] name list of files to save (only file name)\nPath [in] path to save files\n\nSaves the specified files in memory saved to the specified directory. The file name will not be changed.\nnote:\nIf the file is not opened in ZW3D and it can be found in the search path, just copy it to the specified directory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to save a file with a specified path and filename?"
            },
            {
                "role": "assistant",
                "content": "cvxCompFileSaveAs\nCompPath [in] pick-path of component\nUpdateFlag [in] update flag, please see the description\nFile [in] path name to save file (must include the new file name)\n\nSaves the file referred by the specified component to the specified path/filename.\nUpdateFlag is 0 to just update the specified component only, 1 to update all the \n\n components refer to the same part in the same parent assembly, and -1 to update all \n\n as cvxFileSaveAs (no prompt, save as new and replace original one)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the update flag used for when saving a file?"
            },
            {
                "role": "assistant",
                "content": "cvxCompFileSaveAs\nCompPath [in] pick-path of component\nUpdateFlag [in] update flag, please see the description\nFile [in] path name to save file (must include the new file name)\n\nSaves the file referred by the specified component to the specified path/filename.\nUpdateFlag is 0 to just update the specified component only, 1 to update all the \n\n components refer to the same part in the same parent assembly, and -1 to update all \n\n as cvxFileSaveAs (no prompt, save as new and replace original one)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to update all components referring to the same part in the same parent assembly while saving the file?"
            },
            {
                "role": "assistant",
                "content": "cvxCompFileSaveAs\nCompPath [in] pick-path of component\nUpdateFlag [in] update flag, please see the description\nFile [in] path name to save file (must include the new file name)\n\nSaves the file referred by the specified component to the specified path/filename.\nUpdateFlag is 0 to just update the specified component only, 1 to update all the \n\n components refer to the same part in the same parent assembly, and -1 to update all \n\n as cvxFileSaveAs (no prompt, save as new and replace original one)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to close the active ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileClose\n\nCloses the active ZW3D file, prompting the user whether to save or discard changes before closing the file.\nsee:\ncvxFileClose2() for a version of this function with more options."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to prompt the user to save or discard changes before closing the file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileClose\n\nCloses the active ZW3D file, prompting the user whether to save or discard changes before closing the file.\nsee:\ncvxFileClose2() for a version of this function with more options."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the alternative function to cvxFileClose with more options?"
            },
            {
                "role": "assistant",
                "content": "cvxFileClose\n\nCloses the active ZW3D file, prompting the user whether to save or discard changes before closing the file.\nsee:\ncvxFileClose2() for a version of this function with more options."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to close a file using cvxFileClose2 function?"
            },
            {
                "role": "assistant",
                "content": "cvxFileClose2\nName [in] file name (input NULL or empty string to close the active file)\nOption [in] 0 - prompt whether to save or discard changes before closing file; \n\n 1 - automatically save changes before closing file; \n\n 2 - automatically discard changes before closing file; if the undo-redo \n\n log references the file, undo-redo information is cleared for all files \n\n in the active session. \n\n 3 - automatically discard changes before closing file; existing undo-redo \n\n information will be kept, but will ignore the closed file; if you use this \n\n option, it is on you to be certain that no harm will come from undoing or \n\n redoing transactions without regard for how the closed file may have been \n\n involved in them.\n\nCloses the specified file, whether or not it is the active file. \n\n The active file will remain active after the specified file is closed. \n\n If the specified file (Name) is the active file, no attempt is made to select another file for activation after \"Name\" is closed."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the options available for closing a file with cvxFileClose2 function?"
            },
            {
                "role": "assistant",
                "content": "cvxFileClose2\nName [in] file name (input NULL or empty string to close the active file)\nOption [in] 0 - prompt whether to save or discard changes before closing file; \n\n 1 - automatically save changes before closing file; \n\n 2 - automatically discard changes before closing file; if the undo-redo \n\n log references the file, undo-redo information is cleared for all files \n\n in the active session. \n\n 3 - automatically discard changes before closing file; existing undo-redo \n\n information will be kept, but will ignore the closed file; if you use this \n\n option, it is on you to be certain that no harm will come from undoing or \n\n redoing transactions without regard for how the closed file may have been \n\n involved in them.\n\nCloses the specified file, whether or not it is the active file. \n\n The active file will remain active after the specified file is closed. \n\n If the specified file (Name) is the active file, no attempt is made to select another file for activation after \"Name\" is closed."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I close the active file using cvxFileClose2 function?"
            },
            {
                "role": "assistant",
                "content": "cvxFileClose2\nName [in] file name (input NULL or empty string to close the active file)\nOption [in] 0 - prompt whether to save or discard changes before closing file; \n\n 1 - automatically save changes before closing file; \n\n 2 - automatically discard changes before closing file; if the undo-redo \n\n log references the file, undo-redo information is cleared for all files \n\n in the active session. \n\n 3 - automatically discard changes before closing file; existing undo-redo \n\n information will be kept, but will ignore the closed file; if you use this \n\n option, it is on you to be certain that no harm will come from undoing or \n\n redoing transactions without regard for how the closed file may have been \n\n involved in them.\n\nCloses the specified file, whether or not it is the active file. \n\n The active file will remain active after the specified file is closed. \n\n If the specified file (Name) is the active file, no attempt is made to select another file for activation after \"Name\" is closed."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to clear the active session?"
            },
            {
                "role": "assistant",
                "content": "cvxSessionClear\n\nClears the active session."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to clear the active session?"
            },
            {
                "role": "assistant",
                "content": "cvxSessionClear\n\nClears the active session."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to reset the active session?"
            },
            {
                "role": "assistant",
                "content": "cvxSessionClear\n\nClears the active session."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to clear unused files from the cache?"
            },
            {
                "role": "assistant",
                "content": "cvxFileSessionClear\nfile [in] file name (file[0]=0 or NULL to clear all unused files)\n\nRemoves unused files from the cache."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to remove all unused files from the cache?"
            },
            {
                "role": "assistant",
                "content": "cvxFileSessionClear\nfile [in] file name (file[0]=0 or NULL to clear all unused files)\n\nRemoves unused files from the cache."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to clear a specific file from the cache?"
            },
            {
                "role": "assistant",
                "content": "cvxFileSessionClear\nfile [in] file name (file[0]=0 or NULL to clear all unused files)\n\nRemoves unused files from the cache."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to save the active session?"
            },
            {
                "role": "assistant",
                "content": "cvxSessionSave\n\nSaves the active session."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to save the current session?"
            },
            {
                "role": "assistant",
                "content": "cvxSessionSave\n\nSaves the active session."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to store the active session?"
            },
            {
                "role": "assistant",
                "content": "cvxSessionSave\n\nSaves the active session."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to restore the last session backup?"
            },
            {
                "role": "assistant",
                "content": "cvxSessionRestore\n\nRestores the last session backup."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to recover the previous session?"
            },
            {
                "role": "assistant",
                "content": "cvxSessionRestore\n\nRestores the last session backup."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I retrieve the last session backup?"
            },
            {
                "role": "assistant",
                "content": "cvxSessionRestore\n\nRestores the last session backup."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of file import?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImportInit\ndata [out] import file data\ntype [in] import file type\ngeneral [out] setting general properties(NULL to use default settings)\n\nInitialize the parameters of the cvxFileImport().\n\"general\" supports initialization of the following import types, which correspond to the following data types: \n\n If the type = VX_IMPORT_TYPE_UG, the general is svxImportUGData. \n\n If the type = VX_IMPORT_TYPE_STEP, the general is svxImportSTEPData. \n\n If the type = VX_IMPORT_TYPE_DWG_DXF, the general is svxImportDwgDxfData. \n\n If the type = VX_IMPORT_TYPE_STL, the general is svxImportSTLData. if the Type = VX_IMPORT_PTS_FROM_FILE, the general is svxImportPTSData.\nnote:\nDo not assign a value to variable \"data\" before calling this function. \n\n The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set general properties for file import?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImportInit\ndata [out] import file data\ntype [in] import file type\ngeneral [out] setting general properties(NULL to use default settings)\n\nInitialize the parameters of the cvxFileImport().\n\"general\" supports initialization of the following import types, which correspond to the following data types: \n\n If the type = VX_IMPORT_TYPE_UG, the general is svxImportUGData. \n\n If the type = VX_IMPORT_TYPE_STEP, the general is svxImportSTEPData. \n\n If the type = VX_IMPORT_TYPE_DWG_DXF, the general is svxImportDwgDxfData. \n\n If the type = VX_IMPORT_TYPE_STL, the general is svxImportSTLData. if the Type = VX_IMPORT_PTS_FROM_FILE, the general is svxImportPTSData.\nnote:\nDo not assign a value to variable \"data\" before calling this function. \n\n The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to import UG file data?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImportInit\ndata [out] import file data\ntype [in] import file type\ngeneral [out] setting general properties(NULL to use default settings)\n\nInitialize the parameters of the cvxFileImport().\n\"general\" supports initialization of the following import types, which correspond to the following data types: \n\n If the type = VX_IMPORT_TYPE_UG, the general is svxImportUGData. \n\n If the type = VX_IMPORT_TYPE_STEP, the general is svxImportSTEPData. \n\n If the type = VX_IMPORT_TYPE_DWG_DXF, the general is svxImportDwgDxfData. \n\n If the type = VX_IMPORT_TYPE_STL, the general is svxImportSTLData. if the Type = VX_IMPORT_PTS_FROM_FILE, the general is svxImportPTSData.\nnote:\nDo not assign a value to variable \"data\" before calling this function. \n\n The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to import STEP file data?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImportInit\ndata [out] import file data\ntype [in] import file type\ngeneral [out] setting general properties(NULL to use default settings)\n\nInitialize the parameters of the cvxFileImport().\n\"general\" supports initialization of the following import types, which correspond to the following data types: \n\n If the type = VX_IMPORT_TYPE_UG, the general is svxImportUGData. \n\n If the type = VX_IMPORT_TYPE_STEP, the general is svxImportSTEPData. \n\n If the type = VX_IMPORT_TYPE_DWG_DXF, the general is svxImportDwgDxfData. \n\n If the type = VX_IMPORT_TYPE_STL, the general is svxImportSTLData. if the Type = VX_IMPORT_PTS_FROM_FILE, the general is svxImportPTSData.\nnote:\nDo not assign a value to variable \"data\" before calling this function. \n\n The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to import DWG/DXF file data?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImportInit\ndata [out] import file data\ntype [in] import file type\ngeneral [out] setting general properties(NULL to use default settings)\n\nInitialize the parameters of the cvxFileImport().\n\"general\" supports initialization of the following import types, which correspond to the following data types: \n\n If the type = VX_IMPORT_TYPE_UG, the general is svxImportUGData. \n\n If the type = VX_IMPORT_TYPE_STEP, the general is svxImportSTEPData. \n\n If the type = VX_IMPORT_TYPE_DWG_DXF, the general is svxImportDwgDxfData. \n\n If the type = VX_IMPORT_TYPE_STL, the general is svxImportSTLData. if the Type = VX_IMPORT_PTS_FROM_FILE, the general is svxImportPTSData.\nnote:\nDo not assign a value to variable \"data\" before calling this function. \n\n The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to import STL file data?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImportInit\ndata [out] import file data\ntype [in] import file type\ngeneral [out] setting general properties(NULL to use default settings)\n\nInitialize the parameters of the cvxFileImport().\n\"general\" supports initialization of the following import types, which correspond to the following data types: \n\n If the type = VX_IMPORT_TYPE_UG, the general is svxImportUGData. \n\n If the type = VX_IMPORT_TYPE_STEP, the general is svxImportSTEPData. \n\n If the type = VX_IMPORT_TYPE_DWG_DXF, the general is svxImportDwgDxfData. \n\n If the type = VX_IMPORT_TYPE_STL, the general is svxImportSTLData. if the Type = VX_IMPORT_PTS_FROM_FILE, the general is svxImportPTSData.\nnote:\nDo not assign a value to variable \"data\" before calling this function. \n\n The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to import PTS file data?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImportInit\ndata [out] import file data\ntype [in] import file type\ngeneral [out] setting general properties(NULL to use default settings)\n\nInitialize the parameters of the cvxFileImport().\n\"general\" supports initialization of the following import types, which correspond to the following data types: \n\n If the type = VX_IMPORT_TYPE_UG, the general is svxImportUGData. \n\n If the type = VX_IMPORT_TYPE_STEP, the general is svxImportSTEPData. \n\n If the type = VX_IMPORT_TYPE_DWG_DXF, the general is svxImportDwgDxfData. \n\n If the type = VX_IMPORT_TYPE_STL, the general is svxImportSTLData. if the Type = VX_IMPORT_PTS_FROM_FILE, the general is svxImportPTSData.\nnote:\nDo not assign a value to variable \"data\" before calling this function. \n\n The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to import a specified file to a specified object?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImport\nimportData [in] import data of specified file\n\nImport specified file to specified object.\nYou can use function cvxOpCount() before importing the file, \n\n and then use cvxEntNewList()/cvxEntNew() to get the new specified \n\n entities after importing the file.\nnote:\nInterface cvxFileImportInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for the file import function?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImport\nimportData [in] import data of specified file\n\nImport specified file to specified object.\nYou can use function cvxOpCount() before importing the file, \n\n and then use cvxEntNewList()/cvxEntNew() to get the new specified \n\n entities after importing the file.\nnote:\nInterface cvxFileImportInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I use cvxOpCount() before importing a file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImport\nimportData [in] import data of specified file\n\nImport specified file to specified object.\nYou can use function cvxOpCount() before importing the file, \n\n and then use cvxEntNewList()/cvxEntNew() to get the new specified \n\n entities after importing the file.\nnote:\nInterface cvxFileImportInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I get the new specified entities after importing a file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImport\nimportData [in] import data of specified file\n\nImport specified file to specified object.\nYou can use function cvxOpCount() before importing the file, \n\n and then use cvxEntNewList()/cvxEntNew() to get the new specified \n\n entities after importing the file.\nnote:\nInterface cvxFileImportInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to import multiple files or directories into ZW3D?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImportMulti\nCount [in] count of files or directories list to import\nPathList [in] list of files or directories to import\nSubFolder [in] whether to include sub-folders files (1: yes; 0: no)\nSavePath [in] output path that does not contain file name, NULL to output file to input folder\nType [in] the import file types\nSetting [in] the import setting data (NULL to use default setting)\n\nUse this function to import non-ZW3D files types such as Catia V4, JT,NX etc. into ZW3D as parts, sketches, or drawing sheets. the files will be imported and save as Z3 file automatically.\nCurrently, \"Setting\" only supports the following import type, and the data type matching the type is as follows: \n\n If type = VX_IMPORT_TYPE_UG, Setting is svxImportUGData. \n\n If type = VX_IMPORT_TYPE_STEP, Setting is svxImportSTEPData. \n\n If type = VX_IMPORT_TYPE_DWG_DXF, Setting is svxImportDwgDxfData. \n\n If type = VX_IMPORT_TYPE_STL, Setting is svxImportSTLData.\nnote:\nVX_IMPORT_TYPE_JT and VX_IMPORT_PTS_FROM_FILE are not supported by the function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to include sub-folders files during import?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImportMulti\nCount [in] count of files or directories list to import\nPathList [in] list of files or directories to import\nSubFolder [in] whether to include sub-folders files (1: yes; 0: no)\nSavePath [in] output path that does not contain file name, NULL to output file to input folder\nType [in] the import file types\nSetting [in] the import setting data (NULL to use default setting)\n\nUse this function to import non-ZW3D files types such as Catia V4, JT,NX etc. into ZW3D as parts, sketches, or drawing sheets. the files will be imported and save as Z3 file automatically.\nCurrently, \"Setting\" only supports the following import type, and the data type matching the type is as follows: \n\n If type = VX_IMPORT_TYPE_UG, Setting is svxImportUGData. \n\n If type = VX_IMPORT_TYPE_STEP, Setting is svxImportSTEPData. \n\n If type = VX_IMPORT_TYPE_DWG_DXF, Setting is svxImportDwgDxfData. \n\n If type = VX_IMPORT_TYPE_STL, Setting is svxImportSTLData.\nnote:\nVX_IMPORT_TYPE_JT and VX_IMPORT_PTS_FROM_FILE are not supported by the function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the supported import file types for this function?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImportMulti\nCount [in] count of files or directories list to import\nPathList [in] list of files or directories to import\nSubFolder [in] whether to include sub-folders files (1: yes; 0: no)\nSavePath [in] output path that does not contain file name, NULL to output file to input folder\nType [in] the import file types\nSetting [in] the import setting data (NULL to use default setting)\n\nUse this function to import non-ZW3D files types such as Catia V4, JT,NX etc. into ZW3D as parts, sketches, or drawing sheets. the files will be imported and save as Z3 file automatically.\nCurrently, \"Setting\" only supports the following import type, and the data type matching the type is as follows: \n\n If type = VX_IMPORT_TYPE_UG, Setting is svxImportUGData. \n\n If type = VX_IMPORT_TYPE_STEP, Setting is svxImportSTEPData. \n\n If type = VX_IMPORT_TYPE_DWG_DXF, Setting is svxImportDwgDxfData. \n\n If type = VX_IMPORT_TYPE_STL, Setting is svxImportSTLData.\nnote:\nVX_IMPORT_TYPE_JT and VX_IMPORT_PTS_FROM_FILE are not supported by the function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the import setting data for different file types?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImportMulti\nCount [in] count of files or directories list to import\nPathList [in] list of files or directories to import\nSubFolder [in] whether to include sub-folders files (1: yes; 0: no)\nSavePath [in] output path that does not contain file name, NULL to output file to input folder\nType [in] the import file types\nSetting [in] the import setting data (NULL to use default setting)\n\nUse this function to import non-ZW3D files types such as Catia V4, JT,NX etc. into ZW3D as parts, sketches, or drawing sheets. the files will be imported and save as Z3 file automatically.\nCurrently, \"Setting\" only supports the following import type, and the data type matching the type is as follows: \n\n If type = VX_IMPORT_TYPE_UG, Setting is svxImportUGData. \n\n If type = VX_IMPORT_TYPE_STEP, Setting is svxImportSTEPData. \n\n If type = VX_IMPORT_TYPE_DWG_DXF, Setting is svxImportDwgDxfData. \n\n If type = VX_IMPORT_TYPE_STL, Setting is svxImportSTLData.\nnote:\nVX_IMPORT_TYPE_JT and VX_IMPORT_PTS_FROM_FILE are not supported by the function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to import multiple files or directories by long path?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImportMultiByLongPath\nCount [in] count of files or directories list to import\nPathList [in] list of files or directories to import\nSubFolder [in] whether to include sub-folders files (1: yes; 0: no)\nSavePath [in] output path that does not contain file name, NULL to output file to input folder\nType [in] the import file types\nSetting [in] the import setting data (NULL to use default setting)\n\nUse this function to import non-ZW3D files types such as Catia V4, JT,NX etc. \n\n into ZW3D as parts, sketches, or drawing sheets. the files will be imported \n\n and save as Z3 file automatically.\nCurrently, \"Setting\" only supports the following import type, and the data type matching the type is as follows: \n\n If type = VX_IMPORT_TYPE_UG, Setting is svxImportUGData. \n\n If type = VX_IMPORT_TYPE_STEP, Setting is svxImportSTEPData. \n\n If type = VX_IMPORT_TYPE_DWG_DXF, Setting is svxImportDwgDxfData. \n\n If type = VX_IMPORT_TYPE_STL, Setting is svxImportSTLData.\nnote:\nVX_IMPORT_TYPE_JT and VX_IMPORT_PTS_FROM_FILE are not supported by the function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to include sub-folders files during import?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImportMultiByLongPath\nCount [in] count of files or directories list to import\nPathList [in] list of files or directories to import\nSubFolder [in] whether to include sub-folders files (1: yes; 0: no)\nSavePath [in] output path that does not contain file name, NULL to output file to input folder\nType [in] the import file types\nSetting [in] the import setting data (NULL to use default setting)\n\nUse this function to import non-ZW3D files types such as Catia V4, JT,NX etc. \n\n into ZW3D as parts, sketches, or drawing sheets. the files will be imported \n\n and save as Z3 file automatically.\nCurrently, \"Setting\" only supports the following import type, and the data type matching the type is as follows: \n\n If type = VX_IMPORT_TYPE_UG, Setting is svxImportUGData. \n\n If type = VX_IMPORT_TYPE_STEP, Setting is svxImportSTEPData. \n\n If type = VX_IMPORT_TYPE_DWG_DXF, Setting is svxImportDwgDxfData. \n\n If type = VX_IMPORT_TYPE_STL, Setting is svxImportSTLData.\nnote:\nVX_IMPORT_TYPE_JT and VX_IMPORT_PTS_FROM_FILE are not supported by the function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to specify the output path for the imported files?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImportMultiByLongPath\nCount [in] count of files or directories list to import\nPathList [in] list of files or directories to import\nSubFolder [in] whether to include sub-folders files (1: yes; 0: no)\nSavePath [in] output path that does not contain file name, NULL to output file to input folder\nType [in] the import file types\nSetting [in] the import setting data (NULL to use default setting)\n\nUse this function to import non-ZW3D files types such as Catia V4, JT,NX etc. \n\n into ZW3D as parts, sketches, or drawing sheets. the files will be imported \n\n and save as Z3 file automatically.\nCurrently, \"Setting\" only supports the following import type, and the data type matching the type is as follows: \n\n If type = VX_IMPORT_TYPE_UG, Setting is svxImportUGData. \n\n If type = VX_IMPORT_TYPE_STEP, Setting is svxImportSTEPData. \n\n If type = VX_IMPORT_TYPE_DWG_DXF, Setting is svxImportDwgDxfData. \n\n If type = VX_IMPORT_TYPE_STL, Setting is svxImportSTLData.\nnote:\nVX_IMPORT_TYPE_JT and VX_IMPORT_PTS_FROM_FILE are not supported by the function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the supported import file types for this function?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImportMultiByLongPath\nCount [in] count of files or directories list to import\nPathList [in] list of files or directories to import\nSubFolder [in] whether to include sub-folders files (1: yes; 0: no)\nSavePath [in] output path that does not contain file name, NULL to output file to input folder\nType [in] the import file types\nSetting [in] the import setting data (NULL to use default setting)\n\nUse this function to import non-ZW3D files types such as Catia V4, JT,NX etc. \n\n into ZW3D as parts, sketches, or drawing sheets. the files will be imported \n\n and save as Z3 file automatically.\nCurrently, \"Setting\" only supports the following import type, and the data type matching the type is as follows: \n\n If type = VX_IMPORT_TYPE_UG, Setting is svxImportUGData. \n\n If type = VX_IMPORT_TYPE_STEP, Setting is svxImportSTEPData. \n\n If type = VX_IMPORT_TYPE_DWG_DXF, Setting is svxImportDwgDxfData. \n\n If type = VX_IMPORT_TYPE_STL, Setting is svxImportSTLData.\nnote:\nVX_IMPORT_TYPE_JT and VX_IMPORT_PTS_FROM_FILE are not supported by the function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the import setting data for specific file types?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImportMultiByLongPath\nCount [in] count of files or directories list to import\nPathList [in] list of files or directories to import\nSubFolder [in] whether to include sub-folders files (1: yes; 0: no)\nSavePath [in] output path that does not contain file name, NULL to output file to input folder\nType [in] the import file types\nSetting [in] the import setting data (NULL to use default setting)\n\nUse this function to import non-ZW3D files types such as Catia V4, JT,NX etc. \n\n into ZW3D as parts, sketches, or drawing sheets. the files will be imported \n\n and save as Z3 file automatically.\nCurrently, \"Setting\" only supports the following import type, and the data type matching the type is as follows: \n\n If type = VX_IMPORT_TYPE_UG, Setting is svxImportUGData. \n\n If type = VX_IMPORT_TYPE_STEP, Setting is svxImportSTEPData. \n\n If type = VX_IMPORT_TYPE_DWG_DXF, Setting is svxImportDwgDxfData. \n\n If type = VX_IMPORT_TYPE_STL, Setting is svxImportSTLData.\nnote:\nVX_IMPORT_TYPE_JT and VX_IMPORT_PTS_FROM_FILE are not supported by the function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to import an STL file to an active part?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImportStl\npath [in] STL file path\nidOut [out] id of Imported STL Block\n\nImport a STL file to active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to import STL files?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImportStl\npath [in] STL file path\nidOut [out] id of Imported STL Block\n\nImport a STL file to active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the ID of the imported STL block?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImportStl\npath [in] STL file path\nidOut [out] id of Imported STL Block\n\nImport a STL file to active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of file export?"
            },
            {
                "role": "assistant",
                "content": "cvxFileExportInit\ntype [in] type of export\nimgType [in] see description(evxImgType)\ndata [out] data of file\n\nInitialize the parameters of the cvxFileExport().\nSet \"imgType\" only when the \"type\" is VX_EXPORT_TYPE_IMG or VX_EXPORT_TYPE_PDF. Otherwise, set it to 0.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should I set the imgType parameter?"
            },
            {
                "role": "assistant",
                "content": "cvxFileExportInit\ntype [in] type of export\nimgType [in] see description(evxImgType)\ndata [out] data of file\n\nInitialize the parameters of the cvxFileExport().\nSet \"imgType\" only when the \"type\" is VX_EXPORT_TYPE_IMG or VX_EXPORT_TYPE_PDF. Otherwise, set it to 0.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there anything to consider before calling the function?"
            },
            {
                "role": "assistant",
                "content": "cvxFileExportInit\ntype [in] type of export\nimgType [in] see description(evxImgType)\ndata [out] data of file\n\nInitialize the parameters of the cvxFileExport().\nSet \"imgType\" only when the \"type\" is VX_EXPORT_TYPE_IMG or VX_EXPORT_TYPE_PDF. Otherwise, set it to 0.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to export a file to a specified path?"
            },
            {
                "role": "assistant",
                "content": "cvxFileExport\nType [in] type of export\nPath [in] path of export file\nData [in] data of file\n\nExports the specified file to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData. \n\n else if the Type is VX_EXPORT_TYPE_STL, the data is svxSTLData.\nInterface cvxFileExportInit() initializes the corresponding structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to export an image file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileExport\nType [in] type of export\nPath [in] path of export file\nData [in] data of file\n\nExports the specified file to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData. \n\n else if the Type is VX_EXPORT_TYPE_STL, the data is svxSTLData.\nInterface cvxFileExportInit() initializes the corresponding structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to export a PDF file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileExport\nType [in] type of export\nPath [in] path of export file\nData [in] data of file\n\nExports the specified file to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData. \n\n else if the Type is VX_EXPORT_TYPE_STL, the data is svxSTLData.\nInterface cvxFileExportInit() initializes the corresponding structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can you explain the process of exporting a DWG file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileExport\nType [in] type of export\nPath [in] path of export file\nData [in] data of file\n\nExports the specified file to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData. \n\n else if the Type is VX_EXPORT_TYPE_STL, the data is svxSTLData.\nInterface cvxFileExportInit() initializes the corresponding structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to export a STEP file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileExport\nType [in] type of export\nPath [in] path of export file\nData [in] data of file\n\nExports the specified file to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData. \n\n else if the Type is VX_EXPORT_TYPE_STL, the data is svxSTLData.\nInterface cvxFileExportInit() initializes the corresponding structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to export a JT file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileExport\nType [in] type of export\nPath [in] path of export file\nData [in] data of file\n\nExports the specified file to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData. \n\n else if the Type is VX_EXPORT_TYPE_STL, the data is svxSTLData.\nInterface cvxFileExportInit() initializes the corresponding structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to export a file as HTML?"
            },
            {
                "role": "assistant",
                "content": "cvxFileExport\nType [in] type of export\nPath [in] path of export file\nData [in] data of file\n\nExports the specified file to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData. \n\n else if the Type is VX_EXPORT_TYPE_STL, the data is svxSTLData.\nInterface cvxFileExportInit() initializes the corresponding structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to export a file as STL?"
            },
            {
                "role": "assistant",
                "content": "cvxFileExport\nType [in] type of export\nPath [in] path of export file\nData [in] data of file\n\nExports the specified file to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData. \n\n else if the Type is VX_EXPORT_TYPE_STL, the data is svxSTLData.\nInterface cvxFileExportInit() initializes the corresponding structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to export specified files to a destination path?"
            },
            {
                "role": "assistant",
                "content": "cvxFileExportMulti\nCount [in] count of the files list to export (0 to export all currently open files)\nFileList [in] list of files to export (NULL to export all currently open and newly files)\nFilter [in] type of object to export, VX_FILE_ALL to export all object\nType [in] type of export\nPath [in] destination path for exporting files (excluding file name)\nData [in] export parameter\n\nExports the specified files to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_STL, the data is svxSTLData.\nInterface cvxFileExportInit() initializes the corresponding structure.\nnote:\nVX_EXPORT_TYPE_GRP and VX_EXPORT_TYPE_HTML are not supported by the function. CAM Plan don't support export."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to export all currently open files?"
            },
            {
                "role": "assistant",
                "content": "cvxFileExportMulti\nCount [in] count of the files list to export (0 to export all currently open files)\nFileList [in] list of files to export (NULL to export all currently open and newly files)\nFilter [in] type of object to export, VX_FILE_ALL to export all object\nType [in] type of export\nPath [in] destination path for exporting files (excluding file name)\nData [in] export parameter\n\nExports the specified files to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_STL, the data is svxSTLData.\nInterface cvxFileExportInit() initializes the corresponding structure.\nnote:\nVX_EXPORT_TYPE_GRP and VX_EXPORT_TYPE_HTML are not supported by the function. CAM Plan don't support export."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to export files of a specific type?"
            },
            {
                "role": "assistant",
                "content": "cvxFileExportMulti\nCount [in] count of the files list to export (0 to export all currently open files)\nFileList [in] list of files to export (NULL to export all currently open and newly files)\nFilter [in] type of object to export, VX_FILE_ALL to export all object\nType [in] type of export\nPath [in] destination path for exporting files (excluding file name)\nData [in] export parameter\n\nExports the specified files to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_STL, the data is svxSTLData.\nInterface cvxFileExportInit() initializes the corresponding structure.\nnote:\nVX_EXPORT_TYPE_GRP and VX_EXPORT_TYPE_HTML are not supported by the function. CAM Plan don't support export."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can you explain the export process for different file types such as IMG, PDF, DWG, IGES, STEP, JT, PARA_TEXT, PARA_BINARY, CAT5_PART, CAT5_ASM, and STL?"
            },
            {
                "role": "assistant",
                "content": "cvxFileExportMulti\nCount [in] count of the files list to export (0 to export all currently open files)\nFileList [in] list of files to export (NULL to export all currently open and newly files)\nFilter [in] type of object to export, VX_FILE_ALL to export all object\nType [in] type of export\nPath [in] destination path for exporting files (excluding file name)\nData [in] export parameter\n\nExports the specified files to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_STL, the data is svxSTLData.\nInterface cvxFileExportInit() initializes the corresponding structure.\nnote:\nVX_EXPORT_TYPE_GRP and VX_EXPORT_TYPE_HTML are not supported by the function. CAM Plan don't support export."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to export specified files to a destination path?"
            },
            {
                "role": "assistant",
                "content": "cvxFileExportMultiByLongPath\nCount [in] count of the files list to export (0 to export all currently open files)\nFileList [in] list of files to export (NULL to export all currently open and newly files)\nFilter [in] type of object to export, VX_FILE_ALL to export all object\nType [in] type of export\nPath [in] destination path for exporting files (excluding file name)\nData [in] export parameter\n\nExports the specified files to specified path. If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. else if the Type is VX_EXPORT_TYPE_STL, the data is svxSTLData.\nInterface cvxFileExportInit() initializes the corresponding structure.\nnote:\nVX_EXPORT_TYPE_GRP and VX_EXPORT_TYPE_HTML are not supported by the function. CAM Plan don't support export."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to initialize the export structure?"
            },
            {
                "role": "assistant",
                "content": "cvxFileExportMultiByLongPath\nCount [in] count of the files list to export (0 to export all currently open files)\nFileList [in] list of files to export (NULL to export all currently open and newly files)\nFilter [in] type of object to export, VX_FILE_ALL to export all object\nType [in] type of export\nPath [in] destination path for exporting files (excluding file name)\nData [in] export parameter\n\nExports the specified files to specified path. If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. else if the Type is VX_EXPORT_TYPE_STL, the data is svxSTLData.\nInterface cvxFileExportInit() initializes the corresponding structure.\nnote:\nVX_EXPORT_TYPE_GRP and VX_EXPORT_TYPE_HTML are not supported by the function. CAM Plan don't support export."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to export all currently open files to a specified path?"
            },
            {
                "role": "assistant",
                "content": "cvxFileExportMultiByLongPath\nCount [in] count of the files list to export (0 to export all currently open files)\nFileList [in] list of files to export (NULL to export all currently open and newly files)\nFilter [in] type of object to export, VX_FILE_ALL to export all object\nType [in] type of export\nPath [in] destination path for exporting files (excluding file name)\nData [in] export parameter\n\nExports the specified files to specified path. If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. else if the Type is VX_EXPORT_TYPE_STL, the data is svxSTLData.\nInterface cvxFileExportInit() initializes the corresponding structure.\nnote:\nVX_EXPORT_TYPE_GRP and VX_EXPORT_TYPE_HTML are not supported by the function. CAM Plan don't support export."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to export different types of files such as IMG, PDF, DWG, IGES, STEP, JT, ParaText, ParaBinary, CAT5Part, CAT5ASM, and STL?"
            },
            {
                "role": "assistant",
                "content": "cvxFileExportMultiByLongPath\nCount [in] count of the files list to export (0 to export all currently open files)\nFileList [in] list of files to export (NULL to export all currently open and newly files)\nFilter [in] type of object to export, VX_FILE_ALL to export all object\nType [in] type of export\nPath [in] destination path for exporting files (excluding file name)\nData [in] export parameter\n\nExports the specified files to specified path. If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. else if the Type is VX_EXPORT_TYPE_STL, the data is svxSTLData.\nInterface cvxFileExportInit() initializes the corresponding structure.\nnote:\nVX_EXPORT_TYPE_GRP and VX_EXPORT_TYPE_HTML are not supported by the function. CAM Plan don't support export."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the type of object that can be exported using this function?"
            },
            {
                "role": "assistant",
                "content": "cvxFileExportMultiByLongPath\nCount [in] count of the files list to export (0 to export all currently open files)\nFileList [in] list of files to export (NULL to export all currently open and newly files)\nFilter [in] type of object to export, VX_FILE_ALL to export all object\nType [in] type of export\nPath [in] destination path for exporting files (excluding file name)\nData [in] export parameter\n\nExports the specified files to specified path. If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. else if the Type is VX_EXPORT_TYPE_STL, the data is svxSTLData.\nInterface cvxFileExportInit() initializes the corresponding structure.\nnote:\nVX_EXPORT_TYPE_GRP and VX_EXPORT_TYPE_HTML are not supported by the function. CAM Plan don't support export."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to export a specified flat solid to a specified path?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlatSolidExport\nidFlatten [in] id of flatten\ntype [in] export type\nfilePath [in] file path\ndata [in] data of file\n\nExports the specified flat solid to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the data structure for exporting as an image?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlatSolidExport\nidFlatten [in] id of flatten\ntype [in] export type\nfilePath [in] file path\ndata [in] data of file\n\nExports the specified flat solid to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the data structure for exporting as a PDF?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlatSolidExport\nidFlatten [in] id of flatten\ntype [in] export type\nfilePath [in] file path\ndata [in] data of file\n\nExports the specified flat solid to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the data structure for exporting as a DWG file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlatSolidExport\nidFlatten [in] id of flatten\ntype [in] export type\nfilePath [in] file path\ndata [in] data of file\n\nExports the specified flat solid to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the data structure for exporting as an IGES file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlatSolidExport\nidFlatten [in] id of flatten\ntype [in] export type\nfilePath [in] file path\ndata [in] data of file\n\nExports the specified flat solid to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the data structure for exporting as a STEP file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlatSolidExport\nidFlatten [in] id of flatten\ntype [in] export type\nfilePath [in] file path\ndata [in] data of file\n\nExports the specified flat solid to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the data structure for exporting as a JT file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlatSolidExport\nidFlatten [in] id of flatten\ntype [in] export type\nfilePath [in] file path\ndata [in] data of file\n\nExports the specified flat solid to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the data structure for exporting as a text file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlatSolidExport\nidFlatten [in] id of flatten\ntype [in] export type\nfilePath [in] file path\ndata [in] data of file\n\nExports the specified flat solid to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the data structure for exporting as a binary file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlatSolidExport\nidFlatten [in] id of flatten\ntype [in] export type\nfilePath [in] file path\ndata [in] data of file\n\nExports the specified flat solid to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the data structure for exporting as a CAT5 part file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlatSolidExport\nidFlatten [in] id of flatten\ntype [in] export type\nfilePath [in] file path\ndata [in] data of file\n\nExports the specified flat solid to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the data structure for exporting as a CAT5 assembly file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlatSolidExport\nidFlatten [in] id of flatten\ntype [in] export type\nfilePath [in] file path\ndata [in] data of file\n\nExports the specified flat solid to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the data structure for exporting as an HTML file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlatSolidExport\nidFlatten [in] id of flatten\ntype [in] export type\nfilePath [in] file path\ndata [in] data of file\n\nExports the specified flat solid to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to export a flat pattern to a specified path?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlatPatternExport\nidFlatten [in] id of flatten\nfilePath [in] file path\ndata [in] data of file\n\nExports the specified flat pattern to specified path. This function can only export *.dwg/*.dxf files.\nnote:\nInterface cvxFileExportInit(VX_EXPORT_TYPE_DWG,0,data) can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to export flat pattern to *.dwg/*.dxf files?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlatPatternExport\nidFlatten [in] id of flatten\nfilePath [in] file path\ndata [in] data of file\n\nExports the specified flat pattern to specified path. This function can only export *.dwg/*.dxf files.\nnote:\nInterface cvxFileExportInit(VX_EXPORT_TYPE_DWG,0,data) can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize variables for flat pattern export?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlatPatternExport\nidFlatten [in] id of flatten\nfilePath [in] file path\ndata [in] data of file\n\nExports the specified flat pattern to specified path. This function can only export *.dwg/*.dxf files.\nnote:\nInterface cvxFileExportInit(VX_EXPORT_TYPE_DWG,0,data) can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set a callback function for processing a target file option?"
            },
            {
                "role": "assistant",
                "content": "cvxFileAction\ntype [in] action type\nparam [in] callback function\n\nSet a callback function. When processing the target file option, the callback function will be called.\nIf this function called many times with the same 'type', only the last will take effect.\nIf param->pfn is null, the original callback function, if there exists, will be removed.\nIf param->pfn isn't null, the first parameter is caller's data, it can be null, the second parameter is actual file, the last parameter may be null, it's used as the path for output file sometimes. lastly, if param->pfn invokes successes, the function will return 0, else 1.\nnote:\nIf one call this function to register a callback in a dll module, he must call this function again, with argument param set as NULL, to unregister the callback for each action before the dll module exit. \n\n Usually we can do this in the exit function of the dll module."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if the callback function is called multiple times with the same type?"
            },
            {
                "role": "assistant",
                "content": "cvxFileAction\ntype [in] action type\nparam [in] callback function\n\nSet a callback function. When processing the target file option, the callback function will be called.\nIf this function called many times with the same 'type', only the last will take effect.\nIf param->pfn is null, the original callback function, if there exists, will be removed.\nIf param->pfn isn't null, the first parameter is caller's data, it can be null, the second parameter is actual file, the last parameter may be null, it's used as the path for output file sometimes. lastly, if param->pfn invokes successes, the function will return 0, else 1.\nnote:\nIf one call this function to register a callback in a dll module, he must call this function again, with argument param set as NULL, to unregister the callback for each action before the dll module exit. \n\n Usually we can do this in the exit function of the dll module."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove the original callback function?"
            },
            {
                "role": "assistant",
                "content": "cvxFileAction\ntype [in] action type\nparam [in] callback function\n\nSet a callback function. When processing the target file option, the callback function will be called.\nIf this function called many times with the same 'type', only the last will take effect.\nIf param->pfn is null, the original callback function, if there exists, will be removed.\nIf param->pfn isn't null, the first parameter is caller's data, it can be null, the second parameter is actual file, the last parameter may be null, it's used as the path for output file sometimes. lastly, if param->pfn invokes successes, the function will return 0, else 1.\nnote:\nIf one call this function to register a callback in a dll module, he must call this function again, with argument param set as NULL, to unregister the callback for each action before the dll module exit. \n\n Usually we can do this in the exit function of the dll module."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters for the callback function?"
            },
            {
                "role": "assistant",
                "content": "cvxFileAction\ntype [in] action type\nparam [in] callback function\n\nSet a callback function. When processing the target file option, the callback function will be called.\nIf this function called many times with the same 'type', only the last will take effect.\nIf param->pfn is null, the original callback function, if there exists, will be removed.\nIf param->pfn isn't null, the first parameter is caller's data, it can be null, the second parameter is actual file, the last parameter may be null, it's used as the path for output file sometimes. lastly, if param->pfn invokes successes, the function will return 0, else 1.\nnote:\nIf one call this function to register a callback in a dll module, he must call this function again, with argument param set as NULL, to unregister the callback for each action before the dll module exit. \n\n Usually we can do this in the exit function of the dll module."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to unregister the callback function in a dll module?"
            },
            {
                "role": "assistant",
                "content": "cvxFileAction\ntype [in] action type\nparam [in] callback function\n\nSet a callback function. When processing the target file option, the callback function will be called.\nIf this function called many times with the same 'type', only the last will take effect.\nIf param->pfn is null, the original callback function, if there exists, will be removed.\nIf param->pfn isn't null, the first parameter is caller's data, it can be null, the second parameter is actual file, the last parameter may be null, it's used as the path for output file sometimes. lastly, if param->pfn invokes successes, the function will return 0, else 1.\nnote:\nIf one call this function to register a callback in a dll module, he must call this function again, with argument param set as NULL, to unregister the callback for each action before the dll module exit. \n\n Usually we can do this in the exit function of the dll module."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to activate a ZW3D file for editing?"
            },
            {
                "role": "assistant",
                "content": "cvxFileActivate\nName [in] ZW3D file name\n\nActivates the specified ZW3D file for editing. The file must already have been opened, or it must reside in one of the default search directories (cvxPathSearchFirst()). \n\n If the Name carries the specific path which is not in the default search path, this function will add it to the default search path and set it as the priority search path.\nsee:\ncvxRootActivate2s() will activate the specified file in the memory and the target object will be activated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set a specific path as the priority search path for a ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileActivate\nName [in] ZW3D file name\n\nActivates the specified ZW3D file for editing. The file must already have been opened, or it must reside in one of the default search directories (cvxPathSearchFirst()). \n\n If the Name carries the specific path which is not in the default search path, this function will add it to the default search path and set it as the priority search path.\nsee:\ncvxRootActivate2s() will activate the specified file in the memory and the target object will be activated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function can be used to activate a file in the memory and the target object?"
            },
            {
                "role": "assistant",
                "content": "cvxFileActivate\nName [in] ZW3D file name\n\nActivates the specified ZW3D file for editing. The file must already have been opened, or it must reside in one of the default search directories (cvxPathSearchFirst()). \n\n If the Name carries the specific path which is not in the default search path, this function will add it to the default search path and set it as the priority search path.\nsee:\ncvxRootActivate2s() will activate the specified file in the memory and the target object will be activated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the directory of the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileDirectory\nDirectory [out] source directory for the active file\n\nIf the active file has been saved, the directory where it resides is output. Otherwise, Dir[0]=0 is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the source directory of the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileDirectory\nDirectory [out] source directory for the active file\n\nIf the active file has been saved, the directory where it resides is output. Otherwise, Dir[0]=0 is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the directory of the saved active file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileDirectory\nDirectory [out] source directory for the active file\n\nIf the active file has been saved, the directory where it resides is output. Otherwise, Dir[0]=0 is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the source directory for the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileDirectoryByLongPath\nDirectory [out] source directory for the active file\nsizeDire [unknown] sizeDire max size of Directory\n\nIf the active file has been saved, the directory where it resides is output. Otherwise, Dir[0]=0 is output.\nA Directory that is too long (longer than \"sizeDire\") is truncated.\nIt is assumed that the input \"Directory\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the directory of the active file if it has been saved?"
            },
            {
                "role": "assistant",
                "content": "cvxFileDirectoryByLongPath\nDirectory [out] source directory for the active file\nsizeDire [unknown] sizeDire max size of Directory\n\nIf the active file has been saved, the directory where it resides is output. Otherwise, Dir[0]=0 is output.\nA Directory that is too long (longer than \"sizeDire\") is truncated.\nIt is assumed that the input \"Directory\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the maximum size of the directory that can be retrieved?"
            },
            {
                "role": "assistant",
                "content": "cvxFileDirectoryByLongPath\nDirectory [out] source directory for the active file\nsizeDire [unknown] sizeDire max size of Directory\n\nIf the active file has been saved, the directory where it resides is output. Otherwise, Dir[0]=0 is output.\nA Directory that is too long (longer than \"sizeDire\") is truncated.\nIt is assumed that the input \"Directory\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle a directory that is too long?"
            },
            {
                "role": "assistant",
                "content": "cvxFileDirectoryByLongPath\nDirectory [out] source directory for the active file\nsizeDire [unknown] sizeDire max size of Directory\n\nIf the active file has been saved, the directory where it resides is output. Otherwise, Dir[0]=0 is output.\nA Directory that is too long (longer than \"sizeDire\") is truncated.\nIt is assumed that the input \"Directory\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name of the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqActive\nName [out] name of active file\nnBytes [in] string max size of active file name\n\nOutputs the name of the active file. \n\n Outputs Name[0]=0 if there is no active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check if there is an active file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqActive\nName [out] name of active file\nnBytes [in] string max size of active file name\n\nOutputs the name of the active file. \n\n Outputs Name[0]=0 if there is no active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the maximum size of the active file name?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqActive\nName [out] name of active file\nnBytes [in] string max size of active file name\n\nOutputs the name of the active file. \n\n Outputs Name[0]=0 if there is no active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if the active file is a multi-object file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileTypeGet\nMultiObject [out] 1=multi-object file; 0=single-object file\n\nGets flag indicating whether the active file is multi-object or single object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if the active file is a single-object file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileTypeGet\nMultiObject [out] 1=multi-object file; 0=single-object file\n\nGets flag indicating whether the active file is multi-object or single object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I get the flag indicating the type of the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileTypeGet\nMultiObject [out] 1=multi-object file; 0=single-object file\n\nGets flag indicating whether the active file is multi-object or single object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the flag for a multi-object file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileTypeSet\nMultiObject [in] 1=multi-object file; 0=single-object file\n\nSets flag indicating whether the active file is multi-object or single object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to indicate if the active file is a single-object file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileTypeSet\nMultiObject [in] 1=multi-object file; 0=single-object file\n\nSets flag indicating whether the active file is multi-object or single object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the file as multi-object or single-object?"
            },
            {
                "role": "assistant",
                "content": "cvxFileTypeSet\nMultiObject [in] 1=multi-object file; 0=single-object file\n\nSets flag indicating whether the active file is multi-object or single object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the subtype of a specified file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqSubType\nfileName [in] file name (or NULL)\nfileSubtype [out] file subtype\n\nGet the specified file subtype. \n\n If fileName is NULL or blank string, get current file subtype.\nnote:\nMulti-object files do not have a subtype."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the subtype of a file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqSubType\nfileName [in] file name (or NULL)\nfileSubtype [out] file subtype\n\nGet the specified file subtype. \n\n If fileName is NULL or blank string, get current file subtype.\nnote:\nMulti-object files do not have a subtype."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the subtype of a file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqSubType\nfileName [in] file name (or NULL)\nfileSubtype [out] file subtype\n\nGet the specified file subtype. \n\n If fileName is NULL or blank string, get current file subtype.\nnote:\nMulti-object files do not have a subtype."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to get the subtype of a file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqSubType\nfileName [in] file name (or NULL)\nfileSubtype [out] file subtype\n\nGet the specified file subtype. \n\n If fileName is NULL or blank string, get current file subtype.\nnote:\nMulti-object files do not have a subtype."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name of the open file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqOpen\nName [out] name of active file\nnBytes [in] string max size of active file name\n\nOutputs the name of the open file. \n\n Outputs Name[0]=0 if there is no open file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check if a file is open?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqOpen\nName [out] name of active file\nnBytes [in] string max size of active file name\n\nOutputs the name of the open file. \n\n Outputs Name[0]=0 if there is no open file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to limit the maximum size of the file name?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqOpen\nName [out] name of active file\nnBytes [in] string max size of active file name\n\nOutputs the name of the open file. \n\n Outputs Name[0]=0 if there is no open file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of open file list?"
            },
            {
                "role": "assistant",
                "content": "cvxFileOpenList\ncount [out] count of the list\nfileList [out] file list\n\nGet all of the open file list. \n\n The list referenced by \"**fileList\" is allocated by this function. \n\n And must be deallocated by the calling procedure. \n\n A NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of open files?"
            },
            {
                "role": "assistant",
                "content": "cvxFileOpenList\ncount [out] count of the list\nfileList [out] file list\n\nGet all of the open file list. \n\n The list referenced by \"**fileList\" is allocated by this function. \n\n And must be deallocated by the calling procedure. \n\n A NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve all the open files?"
            },
            {
                "role": "assistant",
                "content": "cvxFileOpenList\ncount [out] count of the list\nfileList [out] file list\n\nGet all of the open file list. \n\n The list referenced by \"**fileList\" is allocated by this function. \n\n And must be deallocated by the calling procedure. \n\n A NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of open file list?"
            },
            {
                "role": "assistant",
                "content": "cvxFileOpenListByLongPath\ncount [out] count of the list\nfileList [out] file list\n\nGet all of the open file list. The list referenced by \"**fileList\" is allocated by this function. And must be deallocated by the calling procedure. A NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the file list of open files?"
            },
            {
                "role": "assistant",
                "content": "cvxFileOpenListByLongPath\ncount [out] count of the list\nfileList [out] file list\n\nGet all of the open file list. The list referenced by \"**fileList\" is allocated by this function. And must be deallocated by the calling procedure. A NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve all the open files?"
            },
            {
                "role": "assistant",
                "content": "cvxFileOpenListByLongPath\ncount [out] count of the list\nfileList [out] file list\n\nGet all of the open file list. The list referenced by \"**fileList\" is allocated by this function. And must be deallocated by the calling procedure. A NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of all loaded files?"
            },
            {
                "role": "assistant",
                "content": "cvxFileLoadList\nstate [in] 0 to get all loaded files; \n\n 1 to get all files loaded and in use \n\n 2 to get all loaded but unused files\ncount [out] count of the list\nfileList [out] file list\n\nGet the loaded file list, including front-open and background-loaded files.\nThe list referenced by \"**fileList\" is allocated by this function. And must be deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of all loaded and in use files?"
            },
            {
                "role": "assistant",
                "content": "cvxFileLoadList\nstate [in] 0 to get all loaded files; \n\n 1 to get all files loaded and in use \n\n 2 to get all loaded but unused files\ncount [out] count of the list\nfileList [out] file list\n\nGet the loaded file list, including front-open and background-loaded files.\nThe list referenced by \"**fileList\" is allocated by this function. And must be deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of all loaded but unused files?"
            },
            {
                "role": "assistant",
                "content": "cvxFileLoadList\nstate [in] 0 to get all loaded files; \n\n 1 to get all files loaded and in use \n\n 2 to get all loaded but unused files\ncount [out] count of the list\nfileList [out] file list\n\nGet the loaded file list, including front-open and background-loaded files.\nThe list referenced by \"**fileList\" is allocated by this function. And must be deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of loaded file list?"
            },
            {
                "role": "assistant",
                "content": "cvxFileLoadListByLongPath\nstate [in] 0 to get all loaded files; 1 to get all files loaded and in use 2 to get all loaded but unused files\ncount [out] count of the list\nfileList [out] file list\n\nGet the loaded file list, including front-open and background-loaded files.\nThe list referenced by \"**fileList\" is allocated by this function. And must be deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get all loaded but unused files?"
            },
            {
                "role": "assistant",
                "content": "cvxFileLoadListByLongPath\nstate [in] 0 to get all loaded files; 1 to get all files loaded and in use 2 to get all loaded but unused files\ncount [out] count of the list\nfileList [out] file list\n\nGet the loaded file list, including front-open and background-loaded files.\nThe list referenced by \"**fileList\" is allocated by this function. And must be deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the file list of all loaded and in use files?"
            },
            {
                "role": "assistant",
                "content": "cvxFileLoadListByLongPath\nstate [in] 0 to get all loaded files; 1 to get all files loaded and in use 2 to get all loaded but unused files\ncount [out] count of the list\nfileList [out] file list\n\nGet the loaded file list, including front-open and background-loaded files.\nThe list referenced by \"**fileList\" is allocated by this function. And must be deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the version of the current file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileVersionGet\nfile [in] full file path\nversion [out] version number\n\nGet the version of the current file. \n\n If file=NULL, it means return the version of the current active file. \n\n This function will return a four digits value. \n\n the front two means the annual version. The last two means the upgrade. Like: \n\n 1800 means ZW3D 2014 \n\n 1810 means ZW3D 2014 SP \n\n 1900 means ZW3D 2015 \n\n 1910 means ZW3D 2015 SP \n\n ......"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the version number of a specific file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileVersionGet\nfile [in] full file path\nversion [out] version number\n\nGet the version of the current file. \n\n If file=NULL, it means return the version of the current active file. \n\n This function will return a four digits value. \n\n the front two means the annual version. The last two means the upgrade. Like: \n\n 1800 means ZW3D 2014 \n\n 1810 means ZW3D 2014 SP \n\n 1900 means ZW3D 2015 \n\n 1910 means ZW3D 2015 SP \n\n ......"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check the version of the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileVersionGet\nfile [in] full file path\nversion [out] version number\n\nGet the version of the current file. \n\n If file=NULL, it means return the version of the current active file. \n\n This function will return a four digits value. \n\n the front two means the annual version. The last two means the upgrade. Like: \n\n 1800 means ZW3D 2014 \n\n 1810 means ZW3D 2014 SP \n\n 1900 means ZW3D 2015 \n\n 1910 means ZW3D 2015 SP \n\n ......"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get the ZW3D version from the file path?"
            },
            {
                "role": "assistant",
                "content": "cvxFileVersionGet\nfile [in] full file path\nversion [out] version number\n\nGet the version of the current file. \n\n If file=NULL, it means return the version of the current active file. \n\n This function will return a four digits value. \n\n the front two means the annual version. The last two means the upgrade. Like: \n\n 1800 means ZW3D 2014 \n\n 1810 means ZW3D 2014 SP \n\n 1900 means ZW3D 2015 \n\n 1910 means ZW3D 2015 SP \n\n ......"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a VX or ZW3D file is modified?"
            },
            {
                "role": "assistant",
                "content": "cvxFileIsModified\nName [in] VX or ZW3D file name\nModified [out] 1-modified, 0-unmodified\n\nGet modification status of the specified VX or ZW3D file.\nsee:\ncvxRootInqMod() and cvxRootInqModSinceRegen()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a specific file has been modified?"
            },
            {
                "role": "assistant",
                "content": "cvxFileIsModified\nName [in] VX or ZW3D file name\nModified [out] 1-modified, 0-unmodified\n\nGet modification status of the specified VX or ZW3D file.\nsee:\ncvxRootInqMod() and cvxRootInqModSinceRegen()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the modification status of a VX or ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileIsModified\nName [in] VX or ZW3D file name\nModified [out] 1-modified, 0-unmodified\n\nGet modification status of the specified VX or ZW3D file.\nsee:\ncvxRootInqMod() and cvxRootInqModSinceRegen()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of associated files with a target object?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqAssociatedList\ncount [out] number of files in list\nfileList [out] list of files\n\nGet associated file list with the target object.This includes \n\n assembly component files, drawing view files, imported files (IGES, \n\n STEP,...) and links.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of associated files with a target object?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqAssociatedList\ncount [out] number of files in list\nfileList [out] list of files\n\nGet associated file list with the target object.This includes \n\n assembly component files, drawing view files, imported files (IGES, \n\n STEP,...) and links.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the associated files with a target object?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqAssociatedList\ncount [out] number of files in list\nfileList [out] list of files\n\nGet associated file list with the target object.This includes \n\n assembly component files, drawing view files, imported files (IGES, \n\n STEP,...) and links.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of associated files with a target object?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqAssociatedListByLongPath\ncount [out] number of files in list\nfileList [out] list of files\n\nGet associated file list with the target object.This includes assembly component files, drawing view files, imported files (IGES, STEP,...) and links.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of associated files with a target object?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqAssociatedListByLongPath\ncount [out] number of files in list\nfileList [out] list of files\n\nGet associated file list with the target object.This includes assembly component files, drawing view files, imported files (IGES, STEP,...) and links.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the imported files associated with a target object?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqAssociatedListByLongPath\ncount [out] number of files in list\nfileList [out] list of files\n\nGet associated file list with the target object.This includes assembly component files, drawing view files, imported files (IGES, STEP,...) and links.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the associated file list with the target object?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqAssociatedListByName\nfileName [in] file name to inquire, NULL for just the active target\nnDepth [in] max depth to inquire the linked files, -1 to ignore (see description)\ncount [out] number of files in list\nfileList [out] list of files\n\nGet associated file list with the target object or the specified file.This includes assembly component files, drawing view files, imported files (IGES, STEP,...) and links.\nIf iDepth is >=0, then the link files will be ignore for the depth more than it. Set it as -1 to get all (ignore the depth checking).\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the linked files with a specified file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqAssociatedListByName\nfileName [in] file name to inquire, NULL for just the active target\nnDepth [in] max depth to inquire the linked files, -1 to ignore (see description)\ncount [out] number of files in list\nfileList [out] list of files\n\nGet associated file list with the target object or the specified file.This includes assembly component files, drawing view files, imported files (IGES, STEP,...) and links.\nIf iDepth is >=0, then the link files will be ignore for the depth more than it. Set it as -1 to get all (ignore the depth checking).\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to ignore the depth checking and get all associated files?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqAssociatedListByName\nfileName [in] file name to inquire, NULL for just the active target\nnDepth [in] max depth to inquire the linked files, -1 to ignore (see description)\ncount [out] number of files in list\nfileList [out] list of files\n\nGet associated file list with the target object or the specified file.This includes assembly component files, drawing view files, imported files (IGES, STEP,...) and links.\nIf iDepth is >=0, then the link files will be ignore for the depth more than it. Set it as -1 to get all (ignore the depth checking).\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the associated file list with the target object?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqAssociatedListByLongName\nfileName [in] file name to inquire, NULL for just the active target\nnDepth [in] max depth to inquire the linked files, -1 to ignore (see description)\ncount [out] number of files in list\nfileList [out] list of files\n\nGet associated file list with the target object or the specified file.This includes assembly component files, drawing view files, imported files (IGES, STEP,...) and links.\nIf iDepth is >=0, then the link files will be ignore for the depth more than it. Set it as -1 to get all (ignore the depth checking).\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the linked files with a specified file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqAssociatedListByLongName\nfileName [in] file name to inquire, NULL for just the active target\nnDepth [in] max depth to inquire the linked files, -1 to ignore (see description)\ncount [out] number of files in list\nfileList [out] list of files\n\nGet associated file list with the target object or the specified file.This includes assembly component files, drawing view files, imported files (IGES, STEP,...) and links.\nIf iDepth is >=0, then the link files will be ignore for the depth more than it. Set it as -1 to get all (ignore the depth checking).\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to ignore the depth checking and get all linked files?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqAssociatedListByLongName\nfileName [in] file name to inquire, NULL for just the active target\nnDepth [in] max depth to inquire the linked files, -1 to ignore (see description)\ncount [out] number of files in list\nfileList [out] list of files\n\nGet associated file list with the target object or the specified file.This includes assembly component files, drawing view files, imported files (IGES, STEP,...) and links.\nIf iDepth is >=0, then the link files will be ignore for the depth more than it. Set it as -1 to get all (ignore the depth checking).\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to extract a preview bitmap from a source file?"
            },
            {
                "role": "assistant",
                "content": "cvxFilePreviewExtract\nSrcFile [in] pathname to source file\nBmpFile [in] pathname to bitmap file to be extracted (include bitmap name and the extension)\n\nExtract the preview bitmap from a source file. For example: BmpFile = \"D:\\\\fileName.bmp\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to extract a bitmap from a file?"
            },
            {
                "role": "assistant",
                "content": "cvxFilePreviewExtract\nSrcFile [in] pathname to source file\nBmpFile [in] pathname to bitmap file to be extracted (include bitmap name and the extension)\n\nExtract the preview bitmap from a source file. For example: BmpFile = \"D:\\\\fileName.bmp\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the pathname for the source file and the bitmap file to be extracted?"
            },
            {
                "role": "assistant",
                "content": "cvxFilePreviewExtract\nSrcFile [in] pathname to source file\nBmpFile [in] pathname to bitmap file to be extracted (include bitmap name and the extension)\n\nExtract the preview bitmap from a source file. For example: BmpFile = \"D:\\\\fileName.bmp\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the file name of the top root object in an assembly?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqAsm\nName [out] file name of top root object in assembly\nnBytes [in] string max size of file name\n\nOutputs the file name of top root object in assembly. Outputs \"Name[0]=0\" if error."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the file name of the top root object in an assembly?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqAsm\nName [out] file name of top root object in assembly\nnBytes [in] string max size of file name\n\nOutputs the file name of top root object in assembly. Outputs \"Name[0]=0\" if error."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle errors when retrieving the file name of the top root object in an assembly?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqAsm\nName [out] file name of top root object in assembly\nnBytes [in] string max size of file name\n\nOutputs the file name of top root object in assembly. Outputs \"Name[0]=0\" if error."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the assembly mode of the target part?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqAssemMode\n\nGet target part's assembly mode, if no target is active, return the value in configuration."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the assembly mode of the active target part?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqAssemMode\n\nGet target part's assembly mode, if no target is active, return the value in configuration."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the assembly mode if there is no active target part?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqAssemMode\n\nGet target part's assembly mode, if no target is active, return the value in configuration."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxFileIsUDF\npath [in] file path(NULL to use default path)\nfile [in] file name(contains the file extension)\nisUDF [out] 1 is UDF file,else 0\n\nDetermine whether a file is a UDF file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxFileIsUDF\npath [in] file path(NULL to use default path)\nfile [in] file name(contains the file extension)\nisUDF [out] 1 is UDF file,else 0\n\nDetermine whether a file is a UDF file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxFileIsUDF\npath [in] file path(NULL to use default path)\nfile [in] file name(contains the file extension)\nisUDF [out] 1 is UDF file,else 0\n\nDetermine whether a file is a UDF file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the associated file list of a specified UDF file?"
            },
            {
                "role": "assistant",
                "content": "cvxUDFFileInqAssociatedList\npath [in] file path(NULL to use default path)\nfile [in] file name(contains the file extension)\ncount [out] number of files in list\nfileList [out] list of files\n\nGet the associated file list of the specified UDF file.\nThe calling procedure MUST deallocate the output fileList with cvxMemFree().\nnote:\nThis function will open the UDF file in the memory if it doesn't locate before, you can use cvxFileSessionClear() to remove it form the cache."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output file list?"
            },
            {
                "role": "assistant",
                "content": "cvxUDFFileInqAssociatedList\npath [in] file path(NULL to use default path)\nfile [in] file name(contains the file extension)\ncount [out] number of files in list\nfileList [out] list of files\n\nGet the associated file list of the specified UDF file.\nThe calling procedure MUST deallocate the output fileList with cvxMemFree().\nnote:\nThis function will open the UDF file in the memory if it doesn't locate before, you can use cvxFileSessionClear() to remove it form the cache."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to remove the UDF file from the cache?"
            },
            {
                "role": "assistant",
                "content": "cvxUDFFileInqAssociatedList\npath [in] file path(NULL to use default path)\nfile [in] file name(contains the file extension)\ncount [out] number of files in list\nfileList [out] list of files\n\nGet the associated file list of the specified UDF file.\nThe calling procedure MUST deallocate the output fileList with cvxMemFree().\nnote:\nThis function will open the UDF file in the memory if it doesn't locate before, you can use cvxFileSessionClear() to remove it form the cache."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the associated file list of a specified UDF file?"
            },
            {
                "role": "assistant",
                "content": "cvxUDFFileInqAssociatedListByLongPath\npath [in] file path(NULL to use default path)\nfile [in] file name(contains the file extension)\ncount [out] number of files in list\nfileList [out] list of files\n\nGet the associated file list of the specified UDF file.\nThe calling procedure MUST deallocate the output fileList with cvxMemFree().\nnote:\nThis function will open the UDF file in the memory if it doesn't locate before, you can use cvxFileSessionClear() to remove it form the cache."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output file list?"
            },
            {
                "role": "assistant",
                "content": "cvxUDFFileInqAssociatedListByLongPath\npath [in] file path(NULL to use default path)\nfile [in] file name(contains the file extension)\ncount [out] number of files in list\nfileList [out] list of files\n\nGet the associated file list of the specified UDF file.\nThe calling procedure MUST deallocate the output fileList with cvxMemFree().\nnote:\nThis function will open the UDF file in the memory if it doesn't locate before, you can use cvxFileSessionClear() to remove it form the cache."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove the UDF file from the cache?"
            },
            {
                "role": "assistant",
                "content": "cvxUDFFileInqAssociatedListByLongPath\npath [in] file path(NULL to use default path)\nfile [in] file name(contains the file extension)\ncount [out] number of files in list\nfileList [out] list of files\n\nGet the associated file list of the specified UDF file.\nThe calling procedure MUST deallocate the output fileList with cvxMemFree().\nnote:\nThis function will open the UDF file in the memory if it doesn't locate before, you can use cvxFileSessionClear() to remove it form the cache."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the description of a specified file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileDescriptionSet\nName [in] ZW3D or VX file name (Name[0]=0 or NULL for active file)\nDescription [in] object description. no longer than 32 bytes.\n\nSets description of specified file. \n\n The file description here is different from the attribute \"Description\" of root object. To set the attribute \"Description\" of root object, you can use the attribute setting functions, such as cvxPartAtItemSet and cvxPartAtItemSetInFile."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the file description?"
            },
            {
                "role": "assistant",
                "content": "cvxFileDescriptionSet\nName [in] ZW3D or VX file name (Name[0]=0 or NULL for active file)\nDescription [in] object description. no longer than 32 bytes.\n\nSets description of specified file. \n\n The file description here is different from the attribute \"Description\" of root object. To set the attribute \"Description\" of root object, you can use the attribute setting functions, such as cvxPartAtItemSet and cvxPartAtItemSetInFile."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the file name for setting the description?"
            },
            {
                "role": "assistant",
                "content": "cvxFileDescriptionSet\nName [in] ZW3D or VX file name (Name[0]=0 or NULL for active file)\nDescription [in] object description. no longer than 32 bytes.\n\nSets description of specified file. \n\n The file description here is different from the attribute \"Description\" of root object. To set the attribute \"Description\" of root object, you can use the attribute setting functions, such as cvxPartAtItemSet and cvxPartAtItemSetInFile."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the description of a specified file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileDescriptionGet\nName [in] ZW3D or VX file name (Name[0]=0 or NULL for active file)\nDescription [out] object description\n\nGets the description of specified file. \n\n The file description here is different from the attribute \"Description\" of root object. To get the attribute \"Description\" of root object, you can use the attribute getting functions, such as cvxPartAtItemGet and cvxPartAtItemGetInFile."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the file description?"
            },
            {
                "role": "assistant",
                "content": "cvxFileDescriptionGet\nName [in] ZW3D or VX file name (Name[0]=0 or NULL for active file)\nDescription [out] object description\n\nGets the description of specified file. \n\n The file description here is different from the attribute \"Description\" of root object. To get the attribute \"Description\" of root object, you can use the attribute getting functions, such as cvxPartAtItemGet and cvxPartAtItemGetInFile."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the description of a ZW3D or VX file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileDescriptionGet\nName [in] ZW3D or VX file name (Name[0]=0 or NULL for active file)\nDescription [out] object description\n\nGets the description of specified file. \n\n The file description here is different from the attribute \"Description\" of root object. To get the attribute \"Description\" of root object, you can use the attribute getting functions, such as cvxPartAtItemGet and cvxPartAtItemGetInFile."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set user custom data to an existing ZW3D or VX file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileCustomDataSet\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\ndata [in] customization data\ndataLength [in] length of customization data\n\nSet user custom data to an existing ZW3D or VX file. Program will overwrite existing custom data if file already has custom data."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to overwrite existing custom data in a ZW3D or VX file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileCustomDataSet\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\ndata [in] customization data\ndataLength [in] length of customization data\n\nSet user custom data to an existing ZW3D or VX file. Program will overwrite existing custom data if file already has custom data."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to set customization data to a file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileCustomDataSet\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\ndata [in] customization data\ndataLength [in] length of customization data\n\nSet user custom data to an existing ZW3D or VX file. Program will overwrite existing custom data if file already has custom data."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get user custom data from an existing ZW3D or VX file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileCustomDataGet\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\ndata [out] customization data\ndataLength [out] length of customization data\n\nGet user custom data from an existing ZW3D or VX file. \n\n The list referenced by \"**data\" is allocated by this function and must \n\n be deallocated by the calling procedure by cvxMemFree() function. \n\n A NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any function to retrieve customization data from a ZW3D or VX file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileCustomDataGet\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\ndata [out] customization data\ndataLength [out] length of customization data\n\nGet user custom data from an existing ZW3D or VX file. \n\n The list referenced by \"**data\" is allocated by this function and must \n\n be deallocated by the calling procedure by cvxMemFree() function. \n\n A NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the memory allocated for customization data?"
            },
            {
                "role": "assistant",
                "content": "cvxFileCustomDataGet\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\ndata [out] customization data\ndataLength [out] length of customization data\n\nGet user custom data from an existing ZW3D or VX file. \n\n The list referenced by \"**data\" is allocated by this function and must \n\n be deallocated by the calling procedure by cvxMemFree() function. \n\n A NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the length of customization data in a ZW3D or VX file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileCustomDataGet\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\ndata [out] customization data\ndataLength [out] length of customization data\n\nGet user custom data from an existing ZW3D or VX file. \n\n The list referenced by \"**data\" is allocated by this function and must \n\n be deallocated by the calling procedure by cvxMemFree() function. \n\n A NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete user custom data from an existing ZW3D or VX file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileCustomDataDel\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\n\nDelete user custom data from an existing ZW3D or VX file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to remove custom data from a ZW3D or VX file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileCustomDataDel\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\n\nDelete user custom data from an existing ZW3D or VX file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to clear user custom data from a ZW3D or VX file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileCustomDataDel\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\n\nDelete user custom data from an existing ZW3D or VX file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a file directory to the list of search paths?"
            },
            {
                "role": "assistant",
                "content": "cvxPathAdd\nSearchDirectory [in] directory pathname\n\nAdds the specified file directory to the list of search paths. \n\n These paths are used to find files specified by name only. \n\n The search path added by this interface is used to search resource files\nOnly when the file path is found through the interface cvxPathFindByFileName(), \n\n the file will be searched from these search directories.\nUse interface cvxPathCheck to judge whether the input path is correct.\nsee:\ncvxPathSet() can be used to search drawing files(.Z3,.Z3PRT,.Z3DRW...)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the interface to judge whether the input path is correct?"
            },
            {
                "role": "assistant",
                "content": "cvxPathAdd\nSearchDirectory [in] directory pathname\n\nAdds the specified file directory to the list of search paths. \n\n These paths are used to find files specified by name only. \n\n The search path added by this interface is used to search resource files\nOnly when the file path is found through the interface cvxPathFindByFileName(), \n\n the file will be searched from these search directories.\nUse interface cvxPathCheck to judge whether the input path is correct.\nsee:\ncvxPathSet() can be used to search drawing files(.Z3,.Z3PRT,.Z3DRW...)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to search for drawing files using this API function?"
            },
            {
                "role": "assistant",
                "content": "cvxPathAdd\nSearchDirectory [in] directory pathname\n\nAdds the specified file directory to the list of search paths. \n\n These paths are used to find files specified by name only. \n\n The search path added by this interface is used to search resource files\nOnly when the file path is found through the interface cvxPathFindByFileName(), \n\n the file will be searched from these search directories.\nUse interface cvxPathCheck to judge whether the input path is correct.\nsee:\ncvxPathSet() can be used to search drawing files(.Z3,.Z3PRT,.Z3DRW...)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a file directory to the list of search paths?"
            },
            {
                "role": "assistant",
                "content": "cvxPathSearchBeginAdd\nSearchDirectory [in] directory pathname\n\nAdds the specified file directory to the begin of list of search paths. These paths are used to find files specified by name only. The search path added by this interface is used to search resource files\nOnly when the file path is found through the interface cvxPathFindByFileName(), the file will be searched from these search directories.\nUse interface cvxPathCheck to judge whether the input path is correct.\nsee:\ncvxPathSet() can be used to search drawing files(.Z3,.Z3PRT,.Z3DRW...)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What interface can be used to judge whether the input path is correct?"
            },
            {
                "role": "assistant",
                "content": "cvxPathSearchBeginAdd\nSearchDirectory [in] directory pathname\n\nAdds the specified file directory to the begin of list of search paths. These paths are used to find files specified by name only. The search path added by this interface is used to search resource files\nOnly when the file path is found through the interface cvxPathFindByFileName(), the file will be searched from these search directories.\nUse interface cvxPathCheck to judge whether the input path is correct.\nsee:\ncvxPathSet() can be used to search drawing files(.Z3,.Z3PRT,.Z3DRW...)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to search for drawing files using a specific file extension?"
            },
            {
                "role": "assistant",
                "content": "cvxPathSearchBeginAdd\nSearchDirectory [in] directory pathname\n\nAdds the specified file directory to the begin of list of search paths. These paths are used to find files specified by name only. The search path added by this interface is used to search resource files\nOnly when the file path is found through the interface cvxPathFindByFileName(), the file will be searched from these search directories.\nUse interface cvxPathCheck to judge whether the input path is correct.\nsee:\ncvxPathSet() can be used to search drawing files(.Z3,.Z3PRT,.Z3DRW...)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a library to ZW3D search paths?"
            },
            {
                "role": "assistant",
                "content": "cvxPathAddApiPath\nLibName [in] library name (without .dll extension)\nSubFolder [in] sub-folder name or path (NULL if undefined)\n\nLogs the specified sub-folder of the \"apilibs\" directory that contains the specified DLL (LibName) to the list of ZW3D search paths. \n\n It is assumed that the sub-folder name or path is defined relative to the \"apilibs\" directory.\nIf \"SubFolder\" is input as NULL, the path to \"apilibs\" is added to the ZW3D search paths. \n\n \"SubFolder\" should not begin with a path delimiter."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to log a sub-folder of the apilibs directory to ZW3D search paths?"
            },
            {
                "role": "assistant",
                "content": "cvxPathAddApiPath\nLibName [in] library name (without .dll extension)\nSubFolder [in] sub-folder name or path (NULL if undefined)\n\nLogs the specified sub-folder of the \"apilibs\" directory that contains the specified DLL (LibName) to the list of ZW3D search paths. \n\n It is assumed that the sub-folder name or path is defined relative to the \"apilibs\" directory.\nIf \"SubFolder\" is input as NULL, the path to \"apilibs\" is added to the ZW3D search paths. \n\n \"SubFolder\" should not begin with a path delimiter."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to add a DLL to the ZW3D search paths?"
            },
            {
                "role": "assistant",
                "content": "cvxPathAddApiPath\nLibName [in] library name (without .dll extension)\nSubFolder [in] sub-folder name or path (NULL if undefined)\n\nLogs the specified sub-folder of the \"apilibs\" directory that contains the specified DLL (LibName) to the list of ZW3D search paths. \n\n It is assumed that the sub-folder name or path is defined relative to the \"apilibs\" directory.\nIf \"SubFolder\" is input as NULL, the path to \"apilibs\" is added to the ZW3D search paths. \n\n \"SubFolder\" should not begin with a path delimiter."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to define a sub-folder relative to the apilibs directory in ZW3D?"
            },
            {
                "role": "assistant",
                "content": "cvxPathAddApiPath\nLibName [in] library name (without .dll extension)\nSubFolder [in] sub-folder name or path (NULL if undefined)\n\nLogs the specified sub-folder of the \"apilibs\" directory that contains the specified DLL (LibName) to the list of ZW3D search paths. \n\n It is assumed that the sub-folder name or path is defined relative to the \"apilibs\" directory.\nIf \"SubFolder\" is input as NULL, the path to \"apilibs\" is added to the ZW3D search paths. \n\n \"SubFolder\" should not begin with a path delimiter."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if the SubFolder input is NULL when adding a library to ZW3D search paths?"
            },
            {
                "role": "assistant",
                "content": "cvxPathAddApiPath\nLibName [in] library name (without .dll extension)\nSubFolder [in] sub-folder name or path (NULL if undefined)\n\nLogs the specified sub-folder of the \"apilibs\" directory that contains the specified DLL (LibName) to the list of ZW3D search paths. \n\n It is assumed that the sub-folder name or path is defined relative to the \"apilibs\" directory.\nIf \"SubFolder\" is input as NULL, the path to \"apilibs\" is added to the ZW3D search paths. \n\n \"SubFolder\" should not begin with a path delimiter."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to combine directory and file name using cvxPathCompose?"
            },
            {
                "role": "assistant",
                "content": "cvxPathCompose\nPath [inout] directory where file is located output directory/file path\nName [in] filename\n\nCombines the input directory name (Path) and file name (Name). Outputs the result via \"Path\".\nsee:\ncvxPathCheck() can check whether the path is correct. \nsee:\ncvxFileExits() can determine whether a file exists."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if the path is correct using cvxPathCompose?"
            },
            {
                "role": "assistant",
                "content": "cvxPathCompose\nPath [inout] directory where file is located output directory/file path\nName [in] filename\n\nCombines the input directory name (Path) and file name (Name). Outputs the result via \"Path\".\nsee:\ncvxPathCheck() can check whether the path is correct. \nsee:\ncvxFileExits() can determine whether a file exists."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if a file exists using cvxPathCompose?"
            },
            {
                "role": "assistant",
                "content": "cvxPathCompose\nPath [inout] directory where file is located output directory/file path\nName [in] filename\n\nCombines the input directory name (Path) and file name (Name). Outputs the result via \"Path\".\nsee:\ncvxPathCheck() can check whether the path is correct. \nsee:\ncvxFileExits() can determine whether a file exists."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to combine directory name and file name?"
            },
            {
                "role": "assistant",
                "content": "cvxPathComposeByLongPath\nPath [inout] directory where file is located output directory/file path\nsizePath [in] Maximum memory space for \"Path\".\nName [in] filename\n\nCombines the input directory name (Path) and file name (Name). Outputs the result via \"Path\".\nsee:\ncvxPathCheck() can check whether the path is correct. \nsee:\ncvxFileExits() can determine whether a file exists."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the output directory/file path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathComposeByLongPath\nPath [inout] directory where file is located output directory/file path\nsizePath [in] Maximum memory space for \"Path\".\nName [in] filename\n\nCombines the input directory name (Path) and file name (Name). Outputs the result via \"Path\".\nsee:\ncvxPathCheck() can check whether the path is correct. \nsee:\ncvxFileExits() can determine whether a file exists."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check if the path is correct?"
            },
            {
                "role": "assistant",
                "content": "cvxPathComposeByLongPath\nPath [inout] directory where file is located output directory/file path\nsizePath [in] Maximum memory space for \"Path\".\nName [in] filename\n\nCombines the input directory name (Path) and file name (Name). Outputs the result via \"Path\".\nsee:\ncvxPathCheck() can check whether the path is correct. \nsee:\ncvxFileExits() can determine whether a file exists."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if a file exists?"
            },
            {
                "role": "assistant",
                "content": "cvxPathComposeByLongPath\nPath [inout] directory where file is located output directory/file path\nsizePath [in] Maximum memory space for \"Path\".\nName [in] filename\n\nCombines the input directory name (Path) and file name (Name). Outputs the result via \"Path\".\nsee:\ncvxPathCheck() can check whether the path is correct. \nsee:\ncvxFileExits() can determine whether a file exists."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if the input path is properly formatted for the target OS?"
            },
            {
                "role": "assistant",
                "content": "cvxPathCheck\nsrcPath [in] path to a file or directory\ndesPath [out] directory part of srcPath\nsizedes [unknown] sizedes max size of desPath\n\n1. Check the input path to see if it is properly formatted for the target OS.\n   Forward or backward slashes are replaced with the appropriate path delimiter for the operating system.\n   D:/aa/bb <==> D:\\aa\\bb\n\n2. If the file name containing the path is passed in, the file path is output.\n   D:\\aa\\bb\\cc.Z3PRT  ==> D:\\aa\\bb\n\n3. Occurrences of ~ expand to the current user's home directory path, and\noccurrences of ~user expand to the current user's profile directory path.\n   ~user\\aa  ==>  %USERPROFILE%\\aa\n   ~\\aa  ==>  %HOME%\\aa\n   $path\\bb  ==> (the directory represented by the system environment variable \"path\")\\bb  <==> %path%\\bb\n\n4. The directory is verified to exist and to be accessible. If srcPath specifies the path to a file,\nthe file is also required to exist and to be accessible.\n\nA desPath that is too long (longer than \"sizedes\") is truncated.\n\nIt is assumed that the input \"desPath\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to output the file path if the file name containing the path is passed in?"
            },
            {
                "role": "assistant",
                "content": "cvxPathCheck\nsrcPath [in] path to a file or directory\ndesPath [out] directory part of srcPath\nsizedes [unknown] sizedes max size of desPath\n\n1. Check the input path to see if it is properly formatted for the target OS.\n   Forward or backward slashes are replaced with the appropriate path delimiter for the operating system.\n   D:/aa/bb <==> D:\\aa\\bb\n\n2. If the file name containing the path is passed in, the file path is output.\n   D:\\aa\\bb\\cc.Z3PRT  ==> D:\\aa\\bb\n\n3. Occurrences of ~ expand to the current user's home directory path, and\noccurrences of ~user expand to the current user's profile directory path.\n   ~user\\aa  ==>  %USERPROFILE%\\aa\n   ~\\aa  ==>  %HOME%\\aa\n   $path\\bb  ==> (the directory represented by the system environment variable \"path\")\\bb  <==> %path%\\bb\n\n4. The directory is verified to exist and to be accessible. If srcPath specifies the path to a file,\nthe file is also required to exist and to be accessible.\n\nA desPath that is too long (longer than \"sizedes\") is truncated.\n\nIt is assumed that the input \"desPath\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle occurrences of ~ and ~user in the input path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathCheck\nsrcPath [in] path to a file or directory\ndesPath [out] directory part of srcPath\nsizedes [unknown] sizedes max size of desPath\n\n1. Check the input path to see if it is properly formatted for the target OS.\n   Forward or backward slashes are replaced with the appropriate path delimiter for the operating system.\n   D:/aa/bb <==> D:\\aa\\bb\n\n2. If the file name containing the path is passed in, the file path is output.\n   D:\\aa\\bb\\cc.Z3PRT  ==> D:\\aa\\bb\n\n3. Occurrences of ~ expand to the current user's home directory path, and\noccurrences of ~user expand to the current user's profile directory path.\n   ~user\\aa  ==>  %USERPROFILE%\\aa\n   ~\\aa  ==>  %HOME%\\aa\n   $path\\bb  ==> (the directory represented by the system environment variable \"path\")\\bb  <==> %path%\\bb\n\n4. The directory is verified to exist and to be accessible. If srcPath specifies the path to a file,\nthe file is also required to exist and to be accessible.\n\nA desPath that is too long (longer than \"sizedes\") is truncated.\n\nIt is assumed that the input \"desPath\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to verify if the directory exists and is accessible?"
            },
            {
                "role": "assistant",
                "content": "cvxPathCheck\nsrcPath [in] path to a file or directory\ndesPath [out] directory part of srcPath\nsizedes [unknown] sizedes max size of desPath\n\n1. Check the input path to see if it is properly formatted for the target OS.\n   Forward or backward slashes are replaced with the appropriate path delimiter for the operating system.\n   D:/aa/bb <==> D:\\aa\\bb\n\n2. If the file name containing the path is passed in, the file path is output.\n   D:\\aa\\bb\\cc.Z3PRT  ==> D:\\aa\\bb\n\n3. Occurrences of ~ expand to the current user's home directory path, and\noccurrences of ~user expand to the current user's profile directory path.\n   ~user\\aa  ==>  %USERPROFILE%\\aa\n   ~\\aa  ==>  %HOME%\\aa\n   $path\\bb  ==> (the directory represented by the system environment variable \"path\")\\bb  <==> %path%\\bb\n\n4. The directory is verified to exist and to be accessible. If srcPath specifies the path to a file,\nthe file is also required to exist and to be accessible.\n\nA desPath that is too long (longer than \"sizedes\") is truncated.\n\nIt is assumed that the input \"desPath\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to handle a desPath that is too long?"
            },
            {
                "role": "assistant",
                "content": "cvxPathCheck\nsrcPath [in] path to a file or directory\ndesPath [out] directory part of srcPath\nsizedes [unknown] sizedes max size of desPath\n\n1. Check the input path to see if it is properly formatted for the target OS.\n   Forward or backward slashes are replaced with the appropriate path delimiter for the operating system.\n   D:/aa/bb <==> D:\\aa\\bb\n\n2. If the file name containing the path is passed in, the file path is output.\n   D:\\aa\\bb\\cc.Z3PRT  ==> D:\\aa\\bb\n\n3. Occurrences of ~ expand to the current user's home directory path, and\noccurrences of ~user expand to the current user's profile directory path.\n   ~user\\aa  ==>  %USERPROFILE%\\aa\n   ~\\aa  ==>  %HOME%\\aa\n   $path\\bb  ==> (the directory represented by the system environment variable \"path\")\\bb  <==> %path%\\bb\n\n4. The directory is verified to exist and to be accessible. If srcPath specifies the path to a file,\nthe file is also required to exist and to be accessible.\n\nA desPath that is too long (longer than \"sizedes\") is truncated.\n\nIt is assumed that the input \"desPath\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a specified path to directory search?"
            },
            {
                "role": "assistant",
                "content": "cvxPathSet\npath [in] pathname\n\nAdd specified path to directory search conducted by DmPathFind and resave search paths.\nThis interface corresponds to the file->search paths... function of the platform.\nnote:\nWhen option(Vx.AutoRecordPaths=1) is checked, the interface can add a search path. \n\n Otherwise, the function of the interface is the same as that of the interface cvxPathSearchFirst(). \n\n Use interface cvxPathCheck to judge whether the input path is correct."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to resave search paths?"
            },
            {
                "role": "assistant",
                "content": "cvxPathSet\npath [in] pathname\n\nAdd specified path to directory search conducted by DmPathFind and resave search paths.\nThis interface corresponds to the file->search paths... function of the platform.\nnote:\nWhen option(Vx.AutoRecordPaths=1) is checked, the interface can add a search path. \n\n Otherwise, the function of the interface is the same as that of the interface cvxPathSearchFirst(). \n\n Use interface cvxPathCheck to judge whether the input path is correct."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if the input path is correct?"
            },
            {
                "role": "assistant",
                "content": "cvxPathSet\npath [in] pathname\n\nAdd specified path to directory search conducted by DmPathFind and resave search paths.\nThis interface corresponds to the file->search paths... function of the platform.\nnote:\nWhen option(Vx.AutoRecordPaths=1) is checked, the interface can add a search path. \n\n Otherwise, the function of the interface is the same as that of the interface cvxPathSearchFirst(). \n\n Use interface cvxPathCheck to judge whether the input path is correct."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the search path temporarily?"
            },
            {
                "role": "assistant",
                "content": "cvxPathSearchFirst\nDirectory [in] directory pathname\n\nCauses ZW3D to search the input directory before searching the directories listed in \"vxpaths\".\nsee:\ncvxPathSet: The search path of the format file supported by ZW3D. \n\n cvxPathAdd: Add search paths for some resource files. Customers are not recommended to use this interface. \n\n cvxPathSearchFirst: Set the search path temporarily. The path set through this interface is easy to be overwritten.Therefore, the path set by this interface is recommended to be used only once."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to prioritize a specific directory for searching?"
            },
            {
                "role": "assistant",
                "content": "cvxPathSearchFirst\nDirectory [in] directory pathname\n\nCauses ZW3D to search the input directory before searching the directories listed in \"vxpaths\".\nsee:\ncvxPathSet: The search path of the format file supported by ZW3D. \n\n cvxPathAdd: Add search paths for some resource files. Customers are not recommended to use this interface. \n\n cvxPathSearchFirst: Set the search path temporarily. The path set through this interface is easy to be overwritten.Therefore, the path set by this interface is recommended to be used only once."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I make ZW3D search a specific directory before others?"
            },
            {
                "role": "assistant",
                "content": "cvxPathSearchFirst\nDirectory [in] directory pathname\n\nCauses ZW3D to search the input directory before searching the directories listed in \"vxpaths\".\nsee:\ncvxPathSet: The search path of the format file supported by ZW3D. \n\n cvxPathAdd: Add search paths for some resource files. Customers are not recommended to use this interface. \n\n cvxPathSearchFirst: Set the search path temporarily. The path set through this interface is easy to be overwritten.Therefore, the path set by this interface is recommended to be used only once."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a specified path from the current list of search paths?"
            },
            {
                "role": "assistant",
                "content": "cvxPathDel\nPath [in] file search pathname\n\nDeletes the specified path from the current list of search paths. No error is logged if the path doesn't exist."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove a path from the search paths list?"
            },
            {
                "role": "assistant",
                "content": "cvxPathDel\nPath [in] file search pathname\n\nDeletes the specified path from the current list of search paths. No error is logged if the path doesn't exist."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I delete a path from the search paths?"
            },
            {
                "role": "assistant",
                "content": "cvxPathDel\nPath [in] file search pathname\n\nDeletes the specified path from the current list of search paths. No error is logged if the path doesn't exist."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete all paths from the current list of search paths?"
            },
            {
                "role": "assistant",
                "content": "cvxPathDelAll\n\nDeletes all paths from the current list of search paths."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to remove all paths from the search list?"
            },
            {
                "role": "assistant",
                "content": "cvxPathDelAll\n\nDeletes all paths from the current list of search paths."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to clear the current list of search paths?"
            },
            {
                "role": "assistant",
                "content": "cvxPathDelAll\n\nDeletes all paths from the current list of search paths."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to append path delimiter to a file pathname?"
            },
            {
                "role": "assistant",
                "content": "cvxPathDelim\nPath [inout] file pathname\n\nIf \"Path\" does not end with the path delimiter, appends the delimiter. \n\n It is assumed that the memory referenced by \"Path\" is sufficient to accommodate addition of another character."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check if a file pathname ends with path delimiter?"
            },
            {
                "role": "assistant",
                "content": "cvxPathDelim\nPath [inout] file pathname\n\nIf \"Path\" does not end with the path delimiter, appends the delimiter. \n\n It is assumed that the memory referenced by \"Path\" is sufficient to accommodate addition of another character."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to ensure a file pathname ends with path delimiter?"
            },
            {
                "role": "assistant",
                "content": "cvxPathDelim\nPath [inout] file pathname\n\nIf \"Path\" does not end with the path delimiter, appends the delimiter. \n\n It is assumed that the memory referenced by \"Path\" is sufficient to accommodate addition of another character."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to append path delimiter to a file pathname?"
            },
            {
                "role": "assistant",
                "content": "cvxPathDelimByLongPath\nPath [inout] file pathname\nsizePath [in] Maximum memory space for \"Path\".\n\nIf \"Path\" does not end with the path delimiter, appends the delimiter. It is assumed that the memory referenced by \"Path\" is sufficient to accommodate addition of another character."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check if a file pathname ends with a path delimiter?"
            },
            {
                "role": "assistant",
                "content": "cvxPathDelimByLongPath\nPath [inout] file pathname\nsizePath [in] Maximum memory space for \"Path\".\n\nIf \"Path\" does not end with the path delimiter, appends the delimiter. It is assumed that the memory referenced by \"Path\" is sufficient to accommodate addition of another character."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to ensure a file pathname ends with a path delimiter?"
            },
            {
                "role": "assistant",
                "content": "cvxPathDelimByLongPath\nPath [inout] file pathname\nsizePath [in] Maximum memory space for \"Path\".\n\nIf \"Path\" does not end with the path delimiter, appends the delimiter. It is assumed that the memory referenced by \"Path\" is sufficient to accommodate addition of another character."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the path of the directory containing a specific API library?"
            },
            {
                "role": "assistant",
                "content": "cvxPathApiLib\nLibName [in] library name (without .dll extension)\nLibDirectory [out] path of directory that contains the library\n\nGets the path of the \"apilibs\" directory that contains the specified API library. \n\n It is assumed the library resides in a sub-directory named \"apilibs\" either in the runtime user directory or in the ZW3D installation directory. \n\n The local \"apilibs\" is checked first, then the \"apilibs\" in the installation directory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the directory path of a specific API library?"
            },
            {
                "role": "assistant",
                "content": "cvxPathApiLib\nLibName [in] library name (without .dll extension)\nLibDirectory [out] path of directory that contains the library\n\nGets the path of the \"apilibs\" directory that contains the specified API library. \n\n It is assumed the library resides in a sub-directory named \"apilibs\" either in the runtime user directory or in the ZW3D installation directory. \n\n The local \"apilibs\" is checked first, then the \"apilibs\" in the installation directory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the directory path of a specific API library?"
            },
            {
                "role": "assistant",
                "content": "cvxPathApiLib\nLibName [in] library name (without .dll extension)\nLibDirectory [out] path of directory that contains the library\n\nGets the path of the \"apilibs\" directory that contains the specified API library. \n\n It is assumed the library resides in a sub-directory named \"apilibs\" either in the runtime user directory or in the ZW3D installation directory. \n\n The local \"apilibs\" is checked first, then the \"apilibs\" in the installation directory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get the directory path of a specific API library using a function?"
            },
            {
                "role": "assistant",
                "content": "cvxPathApiLib\nLibName [in] library name (without .dll extension)\nLibDirectory [out] path of directory that contains the library\n\nGets the path of the \"apilibs\" directory that contains the specified API library. \n\n It is assumed the library resides in a sub-directory named \"apilibs\" either in the runtime user directory or in the ZW3D installation directory. \n\n The local \"apilibs\" is checked first, then the \"apilibs\" in the installation directory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the path of the directory containing the specified API library?"
            },
            {
                "role": "assistant",
                "content": "cvxPathApiLibByLongPath\nLibName [in] library name (without .dll extension)\nLibDirectory [out] path of directory that contains the library\nsizeLib [in] max size of LibDirectory\n\nGets the path of the \"apilibs\" directory that contains the specified API library. It is assumed the library resides in a sub-directory named \"apilibs\" either in the runtime user directory or in the ZW3D installation directory. The local \"apilibs\" is checked first, then the \"apilibs\" in the installation directory.\nA LibDirectory that is too long (longer than \"sizeLib\") is truncated.\nIt is assumed that the input \"LibDirectory\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the path of the API library directory?"
            },
            {
                "role": "assistant",
                "content": "cvxPathApiLibByLongPath\nLibName [in] library name (without .dll extension)\nLibDirectory [out] path of directory that contains the library\nsizeLib [in] max size of LibDirectory\n\nGets the path of the \"apilibs\" directory that contains the specified API library. It is assumed the library resides in a sub-directory named \"apilibs\" either in the runtime user directory or in the ZW3D installation directory. The local \"apilibs\" is checked first, then the \"apilibs\" in the installation directory.\nA LibDirectory that is too long (longer than \"sizeLib\") is truncated.\nIt is assumed that the input \"LibDirectory\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check the path of the directory containing the specified API library?"
            },
            {
                "role": "assistant",
                "content": "cvxPathApiLibByLongPath\nLibName [in] library name (without .dll extension)\nLibDirectory [out] path of directory that contains the library\nsizeLib [in] max size of LibDirectory\n\nGets the path of the \"apilibs\" directory that contains the specified API library. It is assumed the library resides in a sub-directory named \"apilibs\" either in the runtime user directory or in the ZW3D installation directory. The local \"apilibs\" is checked first, then the \"apilibs\" in the installation directory.\nA LibDirectory that is too long (longer than \"sizeLib\") is truncated.\nIt is assumed that the input \"LibDirectory\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle a long path for the directory containing the API library?"
            },
            {
                "role": "assistant",
                "content": "cvxPathApiLibByLongPath\nLibName [in] library name (without .dll extension)\nLibDirectory [out] path of directory that contains the library\nsizeLib [in] max size of LibDirectory\n\nGets the path of the \"apilibs\" directory that contains the specified API library. It is assumed the library resides in a sub-directory named \"apilibs\" either in the runtime user directory or in the ZW3D installation directory. The local \"apilibs\" is checked first, then the \"apilibs\" in the installation directory.\nA LibDirectory that is too long (longer than \"sizeLib\") is truncated.\nIt is assumed that the input \"LibDirectory\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to extract the directory portion of a specified physical path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathDir\nFullPath [in] full path/file name\nDirectory [out] directory portion of \"FullPath\"\n\nExtracts the directory portion of the specified physical path. \n\n If there is no directory specified, outputs \"./\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the directory portion of a full path or file name?"
            },
            {
                "role": "assistant",
                "content": "cvxPathDir\nFullPath [in] full path/file name\nDirectory [out] directory portion of \"FullPath\"\n\nExtracts the directory portion of the specified physical path. \n\n If there is no directory specified, outputs \"./\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the directory portion of a specified path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathDir\nFullPath [in] full path/file name\nDirectory [out] directory portion of \"FullPath\"\n\nExtracts the directory portion of the specified physical path. \n\n If there is no directory specified, outputs \"./\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to extract the directory portion of a specified physical path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathDirByLongPath\nFullPath [in] full path/file name\nDirectory [out] directory portion of \"FullPath\"\nsizeDir [in] max size of Directory\n\nExtracts the directory portion of the specified physical path. If there is no directory specified, outputs \"./\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the directory portion of a full path or file name?"
            },
            {
                "role": "assistant",
                "content": "cvxPathDirByLongPath\nFullPath [in] full path/file name\nDirectory [out] directory portion of \"FullPath\"\nsizeDir [in] max size of Directory\n\nExtracts the directory portion of the specified physical path. If there is no directory specified, outputs \"./\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle cases where there is no directory specified in the path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathDirByLongPath\nFullPath [in] full path/file name\nDirectory [out] directory portion of \"FullPath\"\nsizeDir [in] max size of Directory\n\nExtracts the directory portion of the specified physical path. If there is no directory specified, outputs \"./\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to extract the filename portion of a specified physical path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathFile\nFullPath [in] full path/file name\nFileName [out] filename portion of \"FullPath\"\n\nExtracts the filename portion of the specified physical path. \n\n The filename may include an extension, if there is one.\nOutputs FileName[0]=0 if a filename could not be extracted or if its length exceeds the size of a \"vxPath\" string.\nUse cvxPathFile2() to extract a file name that may be longer than \"vxName\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the filename from a full path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathFile\nFullPath [in] full path/file name\nFileName [out] filename portion of \"FullPath\"\n\nExtracts the filename portion of the specified physical path. \n\n The filename may include an extension, if there is one.\nOutputs FileName[0]=0 if a filename could not be extracted or if its length exceeds the size of a \"vxPath\" string.\nUse cvxPathFile2() to extract a file name that may be longer than \"vxName\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle cases where the filename length exceeds the size of a 'vxPath' string?"
            },
            {
                "role": "assistant",
                "content": "cvxPathFile\nFullPath [in] full path/file name\nFileName [out] filename portion of \"FullPath\"\n\nExtracts the filename portion of the specified physical path. \n\n The filename may include an extension, if there is one.\nOutputs FileName[0]=0 if a filename could not be extracted or if its length exceeds the size of a \"vxPath\" string.\nUse cvxPathFile2() to extract a file name that may be longer than \"vxName\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to extract the filename portion of a specified physical path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathFileByLongPath\nFullPath [in] full path/file name\nFileName [out] filename portion of \"FullPath\"\nsizeFile [in] max size of filename\n\nExtracts the filename portion of the specified physical path. \n\n The filename may include an extension, if there is one.\nOutputs FileName[0]=0 if a filename could not be extracted\nA FileName that is too long (longer than \"sizeFile\") is truncated.\nIt is assumed that the input \"FileName\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the filename from a full path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathFileByLongPath\nFullPath [in] full path/file name\nFileName [out] filename portion of \"FullPath\"\nsizeFile [in] max size of filename\n\nExtracts the filename portion of the specified physical path. \n\n The filename may include an extension, if there is one.\nOutputs FileName[0]=0 if a filename could not be extracted\nA FileName that is too long (longer than \"sizeFile\") is truncated.\nIt is assumed that the input \"FileName\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle a filename that is too long?"
            },
            {
                "role": "assistant",
                "content": "cvxPathFileByLongPath\nFullPath [in] full path/file name\nFileName [out] filename portion of \"FullPath\"\nsizeFile [in] max size of filename\n\nExtracts the filename portion of the specified physical path. \n\n The filename may include an extension, if there is one.\nOutputs FileName[0]=0 if a filename could not be extracted\nA FileName that is too long (longer than \"sizeFile\") is truncated.\nIt is assumed that the input \"FileName\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to extract the filename portion of a specified physical path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathFile2\nFullPath [in] full path/file name\nMaxNameLen [in] maximum name length in bytes (including null-terminator)\nFileName [out] filename portion of \"FullPath\"\n\nExtracts the filename portion of the specified physical path. \n\n The filename may include an extension, if there is one.\nOutputs FileName[0]=0 if a filename could not be extracted or if its length (including the null-terminator) exceeds the size of \"MaxNameLen\".\nIt is assumed \"FileName\" references at least \"MaxNameLen\" bytes of memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to get the filename from a full path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathFile2\nFullPath [in] full path/file name\nMaxNameLen [in] maximum name length in bytes (including null-terminator)\nFileName [out] filename portion of \"FullPath\"\n\nExtracts the filename portion of the specified physical path. \n\n The filename may include an extension, if there is one.\nOutputs FileName[0]=0 if a filename could not be extracted or if its length (including the null-terminator) exceeds the size of \"MaxNameLen\".\nIt is assumed \"FileName\" references at least \"MaxNameLen\" bytes of memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to limit the maximum length of the filename extracted from a path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathFile2\nFullPath [in] full path/file name\nMaxNameLen [in] maximum name length in bytes (including null-terminator)\nFileName [out] filename portion of \"FullPath\"\n\nExtracts the filename portion of the specified physical path. \n\n The filename may include an extension, if there is one.\nOutputs FileName[0]=0 if a filename could not be extracted or if its length (including the null-terminator) exceeds the size of \"MaxNameLen\".\nIt is assumed \"FileName\" references at least \"MaxNameLen\" bytes of memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the full path of a specified file?"
            },
            {
                "role": "assistant",
                "content": "cvxPathFind\nFileName [in] file name\nFullPath [out] full path to the specified file\n\nGiven a filename without any directory path (FileName), this function searches default paths for the file and outputs a complete pathname to the file.\nnote:\nWhen the ZW3D filename exceeds 32bytes,using this function causes ZW3D crashed. \n\n Therefore,this function will be deprecated in the future and is not recommended for use by customers. \n\n User can replace this function with the cvxPathFindByFileName()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any function to search for a file in default paths?"
            },
            {
                "role": "assistant",
                "content": "cvxPathFind\nFileName [in] file name\nFullPath [out] full path to the specified file\n\nGiven a filename without any directory path (FileName), this function searches default paths for the file and outputs a complete pathname to the file.\nnote:\nWhen the ZW3D filename exceeds 32bytes,using this function causes ZW3D crashed. \n\n Therefore,this function will be deprecated in the future and is not recommended for use by customers. \n\n User can replace this function with the cvxPathFindByFileName()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the alternative to cvxPathFind function?"
            },
            {
                "role": "assistant",
                "content": "cvxPathFind\nFileName [in] file name\nFullPath [out] full path to the specified file\n\nGiven a filename without any directory path (FileName), this function searches default paths for the file and outputs a complete pathname to the file.\nnote:\nWhen the ZW3D filename exceeds 32bytes,using this function causes ZW3D crashed. \n\n Therefore,this function will be deprecated in the future and is not recommended for use by customers. \n\n User can replace this function with the cvxPathFindByFileName()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the full path of a specified file?"
            },
            {
                "role": "assistant",
                "content": "cvxPathFindByLongPath\nFileName [in] file name\nFullPath [out] full path to the specified file\nsizeFull undocumented\n\nGiven a filename without any directory path (FileName), this function searches default paths for the file and outputs a complete pathname to the file.\nnote:\nWhen the ZW3D filename exceeds 32bytes,using this function causes ZW3D crashed. \n\n Therefore,this function will be deprecated in the future and is not recommended for use by customers. \n\n User can replace this function with the cvxPathFindByFileName()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any function to search for a file in default paths?"
            },
            {
                "role": "assistant",
                "content": "cvxPathFindByLongPath\nFileName [in] file name\nFullPath [out] full path to the specified file\nsizeFull undocumented\n\nGiven a filename without any directory path (FileName), this function searches default paths for the file and outputs a complete pathname to the file.\nnote:\nWhen the ZW3D filename exceeds 32bytes,using this function causes ZW3D crashed. \n\n Therefore,this function will be deprecated in the future and is not recommended for use by customers. \n\n User can replace this function with the cvxPathFindByFileName()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the full path of a file by its name?"
            },
            {
                "role": "assistant",
                "content": "cvxPathFindByLongPath\nFileName [in] file name\nFullPath [out] full path to the specified file\nsizeFull undocumented\n\nGiven a filename without any directory path (FileName), this function searches default paths for the file and outputs a complete pathname to the file.\nnote:\nWhen the ZW3D filename exceeds 32bytes,using this function causes ZW3D crashed. \n\n Therefore,this function will be deprecated in the future and is not recommended for use by customers. \n\n User can replace this function with the cvxPathFindByFileName()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the full path of a file by its name?"
            },
            {
                "role": "assistant",
                "content": "cvxPathFindByFileName\nfileName [in] file name\nfullPath [out] full path to the specified file\nsizeFullPath [in] max size of fullPath\n\nGiven a filename without any directory path (FileName), this function searches default paths for the file and outputs a complete pathname to the file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to search for a file in default paths and get its full path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathFindByFileName\nfileName [in] file name\nfullPath [out] full path to the specified file\nsizeFullPath [in] max size of fullPath\n\nGiven a filename without any directory path (FileName), this function searches default paths for the file and outputs a complete pathname to the file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to limit the size of the full path for a specified file?"
            },
            {
                "role": "assistant",
                "content": "cvxPathFindByFileName\nfileName [in] file name\nfullPath [out] full path to the specified file\nsizeFullPath [in] max size of fullPath\n\nGiven a filename without any directory path (FileName), this function searches default paths for the file and outputs a complete pathname to the file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the installation directory of ZW3D?"
            },
            {
                "role": "assistant",
                "content": "cvxPathInstall\nInstallDirectory [out] installation directory\n\nOutputs the path of the ZW3D installation directory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the ZW3D installation directory?"
            },
            {
                "role": "assistant",
                "content": "cvxPathInstall\nInstallDirectory [out] installation directory\n\nOutputs the path of the ZW3D installation directory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the path of ZW3D installation directory?"
            },
            {
                "role": "assistant",
                "content": "cvxPathInstall\nInstallDirectory [out] installation directory\n\nOutputs the path of the ZW3D installation directory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the installation directory path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathInstallByLongPath\nInstallDirectory [out] installation directory\nsizeIns [unknown] sizeIns max size of InstallDirectory\n\nOutputs the path of the ZW3D installation directory.\nA InstallDirectory that is too long (longer than \"sizeIns\") is truncated.\nIt is assumed that the input \"InstallDirectory\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the ZW3D installation directory path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathInstallByLongPath\nInstallDirectory [out] installation directory\nsizeIns [unknown] sizeIns max size of InstallDirectory\n\nOutputs the path of the ZW3D installation directory.\nA InstallDirectory that is too long (longer than \"sizeIns\") is truncated.\nIt is assumed that the input \"InstallDirectory\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle a long installation directory path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathInstallByLongPath\nInstallDirectory [out] installation directory\nsizeIns [unknown] sizeIns max size of InstallDirectory\n\nOutputs the path of the ZW3D installation directory.\nA InstallDirectory that is too long (longer than \"sizeIns\") is truncated.\nIt is assumed that the input \"InstallDirectory\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the ZW3D temp directory path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathTemp\nDirectory [out] ZW3D temp directory\n\nOutputs the path of the ZW3D \"temp\" directory for the active session."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the ZW3D temp directory path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathTemp\nDirectory [out] ZW3D temp directory\n\nOutputs the path of the ZW3D \"temp\" directory for the active session."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to access the ZW3D temp directory for the active session?"
            },
            {
                "role": "assistant",
                "content": "cvxPathTemp\nDirectory [out] ZW3D temp directory\n\nOutputs the path of the ZW3D \"temp\" directory for the active session."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the ZW3D temp directory path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathTempByLongPath\nDirectory [out] ZW3D temp directory\nsizeDir [in] max size of Directory\n\nOutputs the path of the ZW3D \"temp\" directory for the active session.\nA Directory that is too long (longer than \"sizeDir\") is truncated.\nIt is assumed that the input \"Directory\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the ZW3D temp directory?"
            },
            {
                "role": "assistant",
                "content": "cvxPathTempByLongPath\nDirectory [out] ZW3D temp directory\nsizeDir [in] max size of Directory\n\nOutputs the path of the ZW3D \"temp\" directory for the active session.\nA Directory that is too long (longer than \"sizeDir\") is truncated.\nIt is assumed that the input \"Directory\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle a Directory that is longer than the specified max size?"
            },
            {
                "role": "assistant",
                "content": "cvxPathTempByLongPath\nDirectory [out] ZW3D temp directory\nsizeDir [in] max size of Directory\n\nOutputs the path of the ZW3D \"temp\" directory for the active session.\nA Directory that is too long (longer than \"sizeDir\") is truncated.\nIt is assumed that the input \"Directory\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the user folder path of ZW3D?"
            },
            {
                "role": "assistant",
                "content": "cvxPathUserFolder\nDirectory [out] user path\n\nGet user folder path of ZW3D."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the user directory in ZW3D?"
            },
            {
                "role": "assistant",
                "content": "cvxPathUserFolder\nDirectory [out] user path\n\nGet user folder path of ZW3D."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I obtain the user path of ZW3D using a specific function?"
            },
            {
                "role": "assistant",
                "content": "cvxPathUserFolder\nDirectory [out] user path\n\nGet user folder path of ZW3D."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the user folder path in ZW3D?"
            },
            {
                "role": "assistant",
                "content": "cvxPathUserFolderByLongPath\nDirectory [out] user path\nsizeDir [in] max size of Directory\n\nGet user folder path of ZW3D.\nA Directory that is too long (longer than \"sizeDir\") is truncated.\nIt is assumed that the input \"Directory\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to limit the size of the user folder path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathUserFolderByLongPath\nDirectory [out] user path\nsizeDir [in] max size of Directory\n\nGet user folder path of ZW3D.\nA Directory that is too long (longer than \"sizeDir\") is truncated.\nIt is assumed that the input \"Directory\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the maximum size for the user folder path in ZW3D?"
            },
            {
                "role": "assistant",
                "content": "cvxPathUserFolderByLongPath\nDirectory [out] user path\nsizeDir [in] max size of Directory\n\nGet user folder path of ZW3D.\nA Directory that is too long (longer than \"sizeDir\") is truncated.\nIt is assumed that the input \"Directory\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if the current environment is in debug mode?"
            },
            {
                "role": "assistant",
                "content": "cvxPathIsDebug\nFolderName [in] name of folder where zw3d.exe resides in\n\nCheck whether current environment is debug/release based on the name of folder where zw3d.exe resides in."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if the environment is in release mode?"
            },
            {
                "role": "assistant",
                "content": "cvxPathIsDebug\nFolderName [in] name of folder where zw3d.exe resides in\n\nCheck whether current environment is debug/release based on the name of folder where zw3d.exe resides in."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to identify the environment mode based on the folder name where zw3d.exe resides?"
            },
            {
                "role": "assistant",
                "content": "cvxPathIsDebug\nFolderName [in] name of folder where zw3d.exe resides in\n\nCheck whether current environment is debug/release based on the name of folder where zw3d.exe resides in."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the VgSearchPath?"
            },
            {
                "role": "assistant",
                "content": "cvxPathSearchSet\nValue undocumented\n\nSet the VgSearchPath."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the VgSearchPath?"
            },
            {
                "role": "assistant",
                "content": "cvxPathSearchSet\nValue undocumented\n\nSet the VgSearchPath."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to update the VgSearchPath?"
            },
            {
                "role": "assistant",
                "content": "cvxPathSearchSet\nValue undocumented\n\nSet the VgSearchPath."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the VgSearchPath?"
            },
            {
                "role": "assistant",
                "content": "cvxPathSearchGet\n\nGet the VgSearchPath."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the VgSearchPath?"
            },
            {
                "role": "assistant",
                "content": "cvxPathSearchGet\n\nGet the VgSearchPath."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to obtain the VgSearchPath?"
            },
            {
                "role": "assistant",
                "content": "cvxPathSearchGet\n\nGet the VgSearchPath."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the VgCheckActivePathOnly?"
            },
            {
                "role": "assistant",
                "content": "cvxPathCheckActiveOnlySet\nValue undocumented\n\nSet the VgCheckActivePathOnly."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check if VgCheckActivePathOnly is active?"
            },
            {
                "role": "assistant",
                "content": "cvxPathCheckActiveOnlySet\nValue undocumented\n\nSet the VgCheckActivePathOnly."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the VgCheckActivePathOnly setting?"
            },
            {
                "role": "assistant",
                "content": "cvxPathCheckActiveOnlySet\nValue undocumented\n\nSet the VgCheckActivePathOnly."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if the active path is the only one?"
            },
            {
                "role": "assistant",
                "content": "cvxPathCheckActiveOnlyGet\n\nGet the VgCheckActivePathOnly."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the active path only?"
            },
            {
                "role": "assistant",
                "content": "cvxPathCheckActiveOnlyGet\n\nGet the VgCheckActivePathOnly."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the VgCheckActivePathOnly?"
            },
            {
                "role": "assistant",
                "content": "cvxPathCheckActiveOnlyGet\n\nGet the VgCheckActivePathOnly."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if the length of a file name is over the range?"
            },
            {
                "role": "assistant",
                "content": "cvxFileNameLenIsOverrange\nfile_name [in] name to check\n\nCheck if the length of file name is over ranging."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to determine if a file name length is within a specific range?"
            },
            {
                "role": "assistant",
                "content": "cvxFileNameLenIsOverrange\nfile_name [in] name to check\n\nCheck if the length of file name is over ranging."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to validate the length of a file name?"
            },
            {
                "role": "assistant",
                "content": "cvxFileNameLenIsOverrange\nfile_name [in] name to check\n\nCheck if the length of file name is over ranging."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if the length of a file path is over the range?"
            },
            {
                "role": "assistant",
                "content": "cvxFilePathLenIsOverrange\nfile_path [in] path to check\n\nCheck if the length of file path is over ranging."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a file path length is within a certain range?"
            },
            {
                "role": "assistant",
                "content": "cvxFilePathLenIsOverrange\nfile_path [in] path to check\n\nCheck if the length of file path is over ranging."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to validate the length of a file path?"
            },
            {
                "role": "assistant",
                "content": "cvxFilePathLenIsOverrange\nfile_path [in] path to check\n\nCheck if the length of file path is over ranging."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the last created point entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntNew\nStartOp [in] starting operation number ( >= 0 )\nType [in] entity type\n\nReturns the id of the last entity of the specified type created since the specified operation (StartOp) of the current transaction. \n\n Use cvxOpCount() to get the current number of operations in the current transaction.\nnote:\nAll values of evxEntType can be used in this function. \n\n If \"Type > 0\", the specified entity is flagged. \n\n If \"Type = 0\", to signal all entity are valid. \n\n If \"Type = -1\", curve entity (e.g. line,circle, arc,curve) are flagged. \n\n If \"Type = -2\", point entity are flagged. \n\n If \"Type = -3\", history entity (e.g. feature, sketch, datum) are flagged. \n\n If \"Type = -4\", b-rep entity are flagged."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the id of the last created feature entity since a specific operation?"
            },
            {
                "role": "assistant",
                "content": "cvxEntNew\nStartOp [in] starting operation number ( >= 0 )\nType [in] entity type\n\nReturns the id of the last entity of the specified type created since the specified operation (StartOp) of the current transaction. \n\n Use cvxOpCount() to get the current number of operations in the current transaction.\nnote:\nAll values of evxEntType can be used in this function. \n\n If \"Type > 0\", the specified entity is flagged. \n\n If \"Type = 0\", to signal all entity are valid. \n\n If \"Type = -1\", curve entity (e.g. line,circle, arc,curve) are flagged. \n\n If \"Type = -2\", point entity are flagged. \n\n If \"Type = -3\", history entity (e.g. feature, sketch, datum) are flagged. \n\n If \"Type = -4\", b-rep entity are flagged."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I get the id of the last created curve entity since a certain operation?"
            },
            {
                "role": "assistant",
                "content": "cvxEntNew\nStartOp [in] starting operation number ( >= 0 )\nType [in] entity type\n\nReturns the id of the last entity of the specified type created since the specified operation (StartOp) of the current transaction. \n\n Use cvxOpCount() to get the current number of operations in the current transaction.\nnote:\nAll values of evxEntType can be used in this function. \n\n If \"Type > 0\", the specified entity is flagged. \n\n If \"Type = 0\", to signal all entity are valid. \n\n If \"Type = -1\", curve entity (e.g. line,circle, arc,curve) are flagged. \n\n If \"Type = -2\", point entity are flagged. \n\n If \"Type = -3\", history entity (e.g. feature, sketch, datum) are flagged. \n\n If \"Type = -4\", b-rep entity are flagged."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of newly created entities by type?"
            },
            {
                "role": "assistant",
                "content": "cvxEntNewList\nStartOp [in] starting operation number ( >= 0)\nType [in] entity type\nCount [out] number of new entities\nidEnts [out] list of new entities (by id)\n\nReturns a list of the id's of the entities of the specified type created since the specified operation (StartOp) of the current transaction.\nUse cvxOpCount() to get the current number of operations in the current transaction.\nnote:\nThis interface can only get the new ID on the feature tree. cvxEntNewAll() can get all newly generated IDs. \n\n All values of evxEntType can be used in this function. \n\n If \"Type > 0\", the specified entity is flagged. \n\n If \"Type = 0\", to signal all entity are valid. \n\n If \"Type = -1\", curve entity (e.g. line,circle, arc,curve) are flagged. \n\n If \"Type = -2\", point entity are flagged. \n\n If \"Type = -3\", history entity (e.g. feature, sketch, datum) are flagged. \n\n If \"Type = -4\", b-rep entity are flagged."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of newly created entities?"
            },
            {
                "role": "assistant",
                "content": "cvxEntNewList\nStartOp [in] starting operation number ( >= 0)\nType [in] entity type\nCount [out] number of new entities\nidEnts [out] list of new entities (by id)\n\nReturns a list of the id's of the entities of the specified type created since the specified operation (StartOp) of the current transaction.\nUse cvxOpCount() to get the current number of operations in the current transaction.\nnote:\nThis interface can only get the new ID on the feature tree. cvxEntNewAll() can get all newly generated IDs. \n\n All values of evxEntType can be used in this function. \n\n If \"Type > 0\", the specified entity is flagged. \n\n If \"Type = 0\", to signal all entity are valid. \n\n If \"Type = -1\", curve entity (e.g. line,circle, arc,curve) are flagged. \n\n If \"Type = -2\", point entity are flagged. \n\n If \"Type = -3\", history entity (e.g. feature, sketch, datum) are flagged. \n\n If \"Type = -4\", b-rep entity are flagged."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the new entity IDs since a specific operation?"
            },
            {
                "role": "assistant",
                "content": "cvxEntNewList\nStartOp [in] starting operation number ( >= 0)\nType [in] entity type\nCount [out] number of new entities\nidEnts [out] list of new entities (by id)\n\nReturns a list of the id's of the entities of the specified type created since the specified operation (StartOp) of the current transaction.\nUse cvxOpCount() to get the current number of operations in the current transaction.\nnote:\nThis interface can only get the new ID on the feature tree. cvxEntNewAll() can get all newly generated IDs. \n\n All values of evxEntType can be used in this function. \n\n If \"Type > 0\", the specified entity is flagged. \n\n If \"Type = 0\", to signal all entity are valid. \n\n If \"Type = -1\", curve entity (e.g. line,circle, arc,curve) are flagged. \n\n If \"Type = -2\", point entity are flagged. \n\n If \"Type = -3\", history entity (e.g. feature, sketch, datum) are flagged. \n\n If \"Type = -4\", b-rep entity are flagged."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of newly created entities of a specific type?"
            },
            {
                "role": "assistant",
                "content": "cvxEntNewAll\nstartOp [in] starting operation number ( >= 0)\ntype [in] entity type\ncount [out] number of new entities\nidEnts [out] list of new entities (by id)\n\nReturn a list of the id's of the entities of the specified type created since the specified operation (StartOp) of the current transaction.\nUse cvxOpCount() to get the current number of operations in the current transaction.\nnote:\nThis interface can get all newly generated IDs. \n\n cvxEntNewList() can only get the new ID on the feature tree. \n\n All values of evxEntType can be used in this function. \n\n If \"Type > 0\", the specified entity is flagged. \n\n If \"Type = 0\", to signal all entity are valid. \n\n If \"Type = -1\", curve entity (e.g. line,circle, arc,curve) are flagged. \n\n If \"Type = -2\", point entity are flagged. \n\n If \"Type = -3\", history entity (e.g. feature, sketch, datum) are flagged. \n\n If \"Type = -4\", b-rep entity are flagged."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the count of newly created entities of a specific type?"
            },
            {
                "role": "assistant",
                "content": "cvxEntNewAll\nstartOp [in] starting operation number ( >= 0)\ntype [in] entity type\ncount [out] number of new entities\nidEnts [out] list of new entities (by id)\n\nReturn a list of the id's of the entities of the specified type created since the specified operation (StartOp) of the current transaction.\nUse cvxOpCount() to get the current number of operations in the current transaction.\nnote:\nThis interface can get all newly generated IDs. \n\n cvxEntNewList() can only get the new ID on the feature tree. \n\n All values of evxEntType can be used in this function. \n\n If \"Type > 0\", the specified entity is flagged. \n\n If \"Type = 0\", to signal all entity are valid. \n\n If \"Type = -1\", curve entity (e.g. line,circle, arc,curve) are flagged. \n\n If \"Type = -2\", point entity are flagged. \n\n If \"Type = -3\", history entity (e.g. feature, sketch, datum) are flagged. \n\n If \"Type = -4\", b-rep entity are flagged."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the IDs of newly created entities since a specified operation?"
            },
            {
                "role": "assistant",
                "content": "cvxEntNewAll\nstartOp [in] starting operation number ( >= 0)\ntype [in] entity type\ncount [out] number of new entities\nidEnts [out] list of new entities (by id)\n\nReturn a list of the id's of the entities of the specified type created since the specified operation (StartOp) of the current transaction.\nUse cvxOpCount() to get the current number of operations in the current transaction.\nnote:\nThis interface can get all newly generated IDs. \n\n cvxEntNewList() can only get the new ID on the feature tree. \n\n All values of evxEntType can be used in this function. \n\n If \"Type > 0\", the specified entity is flagged. \n\n If \"Type = 0\", to signal all entity are valid. \n\n If \"Type = -1\", curve entity (e.g. line,circle, arc,curve) are flagged. \n\n If \"Type = -2\", point entity are flagged. \n\n If \"Type = -3\", history entity (e.g. feature, sketch, datum) are flagged. \n\n If \"Type = -4\", b-rep entity are flagged."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of tag names for the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqTagNames\nCount [out] number of tag names\nNames [out] list of tag names\n\nOutputs a list of tag names that belong to the current active part. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the list of tag names for the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqTagNames\nCount [out] number of tag names\nNames [out] list of tag names\n\nOutputs a list of tag names that belong to the current active part. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to deallocate the output list of tag names after retrieval?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqTagNames\nCount [out] number of tag names\nNames [out] list of tag names\n\nOutputs a list of tag names that belong to the current active part. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to blank or unblank specified entities?"
            },
            {
                "role": "assistant",
                "content": "cvxEntBlank\nShow [in] 1 to unblank entities; 0 to blank\nCount [in] number of entities\nidEnts [in] entity id's\n\nBlanks or unblanks the specified entities.\nCall this function during echoing will not log any blank/unblank operation to the history, for example:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to unblank entities without logging the operation to the history?"
            },
            {
                "role": "assistant",
                "content": "cvxEntBlank\nShow [in] 1 to unblank entities; 0 to blank\nCount [in] number of entities\nidEnts [in] entity id's\n\nBlanks or unblanks the specified entities.\nCall this function during echoing will not log any blank/unblank operation to the history, for example:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of entities to be blanked or unblanked?"
            },
            {
                "role": "assistant",
                "content": "cvxEntBlank\nShow [in] 1 to unblank entities; 0 to blank\nCount [in] number of entities\nidEnts [in] entity id's\n\nBlanks or unblanks the specified entities.\nCall this function during echoing will not log any blank/unblank operation to the history, for example:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a specific entity is blanked?"
            },
            {
                "role": "assistant",
                "content": "cvxEntIsBlanked\nidEntity [in] entity id (in active file)\n\nDetermine whether the specific entity is blanked."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if an entity is blanked?"
            },
            {
                "role": "assistant",
                "content": "cvxEntIsBlanked\nidEntity [in] entity id (in active file)\n\nDetermine whether the specific entity is blanked."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to check if an entity is blanked?"
            },
            {
                "role": "assistant",
                "content": "cvxEntIsBlanked\nidEntity [in] entity id (in active file)\n\nDetermine whether the specific entity is blanked."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to highlight a specific entity in the active root object?"
            },
            {
                "role": "assistant",
                "content": "cvxEntHighlight\nidEntity [in] entity id (in active file)\n\nHighlights the specified entity in the active root object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to highlight an entity by its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxEntHighlight\nidEntity [in] entity id (in active file)\n\nHighlights the specified entity in the active root object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to highlight an entity in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxEntHighlight\nidEntity [in] entity id (in active file)\n\nHighlights the specified entity in the active root object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to un-highlight a specified entity in the active root object?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUnHighlight\nidEntity [in] entity id (in active file)\n\nUn-Highlight the specified entity in the active root object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to remove highlight from a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUnHighlight\nidEntity [in] entity id (in active file)\n\nUn-Highlight the specified entity in the active root object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to un-highlight an entity by its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUnHighlight\nidEntity [in] entity id (in active file)\n\nUn-Highlight the specified entity in the active root object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to unhighlight all entities?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUnhighlightAll\n\nUnhighlights all entities."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to unhighlight all entities?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUnhighlightAll\n\nUnhighlights all entities."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove highlight from all entities?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUnhighlightAll\n\nUnhighlights all entities."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a valid entity of a specific type exists in the active root?"
            },
            {
                "role": "assistant",
                "content": "cvxEntExists\nidEntity [in] entity id\nEntType [in] entity type\n\nDetermine whether a valid entity with the specified type exists in the active root.\nnote:\nSome of evxEntType(VX_ENT_BREP, VX_ENT_OP, VX_ENT_POINT, VX_ENT_WIRE) are banned in this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine the existence of a specific type of entity in the active root?"
            },
            {
                "role": "assistant",
                "content": "cvxEntExists\nidEntity [in] entity id\nEntType [in] entity type\n\nDetermine whether a valid entity with the specified type exists in the active root.\nnote:\nSome of evxEntType(VX_ENT_BREP, VX_ENT_OP, VX_ENT_POINT, VX_ENT_WIRE) are banned in this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I verify the presence of a certain type of entity in the active root?"
            },
            {
                "role": "assistant",
                "content": "cvxEntExists\nidEntity [in] entity id\nEntType [in] entity type\n\nDetermine whether a valid entity with the specified type exists in the active root.\nnote:\nSome of evxEntType(VX_ENT_BREP, VX_ENT_OP, VX_ENT_POINT, VX_ENT_WIRE) are banned in this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of selected entities?"
            },
            {
                "role": "assistant",
                "content": "cvxEntInqSelected\nCount [out] number of entities\nEnts [out] list of the entity IDs\n\nOutputs a list of the selected entity IDs. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of selected entity IDs?"
            },
            {
                "role": "assistant",
                "content": "cvxEntInqSelected\nCount [out] number of entities\nEnts [out] list of the entity IDs\n\nOutputs a list of the selected entity IDs. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to deallocate the output list after getting the selected entity IDs?"
            },
            {
                "role": "assistant",
                "content": "cvxEntInqSelected\nCount [out] number of entities\nEnts [out] list of the entity IDs\n\nOutputs a list of the selected entity IDs. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of picked entities?"
            },
            {
                "role": "assistant",
                "content": "cvxEntInqPicked\nCount [out] number of entities\nEnts [out] list of the entity IDs\n\nOutputs a list of the Picked entity IDs. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of entity IDs that are picked?"
            },
            {
                "role": "assistant",
                "content": "cvxEntInqPicked\nCount [out] number of entities\nEnts [out] list of the entity IDs\n\nOutputs a list of the Picked entity IDs. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to deallocate the output list after using cvxEntInqPicked?"
            },
            {
                "role": "assistant",
                "content": "cvxEntInqPicked\nCount [out] number of entities\nEnts [out] list of the entity IDs\n\nOutputs a list of the Picked entity IDs. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of selected entity paths?"
            },
            {
                "role": "assistant",
                "content": "cvxEntInqPathSelected\nCount [out] number of entity path\nPaths [out] list of the entity path\n\nOutputs a list of the selected entity path. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the list of selected entity paths?"
            },
            {
                "role": "assistant",
                "content": "cvxEntInqPathSelected\nCount [out] number of entity path\nPaths [out] list of the entity path\n\nOutputs a list of the selected entity path. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to deallocate the output list of selected entity paths?"
            },
            {
                "role": "assistant",
                "content": "cvxEntInqPathSelected\nCount [out] number of entity path\nPaths [out] list of the entity path\n\nOutputs a list of the selected entity path. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of picked entity paths?"
            },
            {
                "role": "assistant",
                "content": "cvxEntInqPathPicked\nCount [out] number of entity path\nPaths [out] list of the entity path\n\nOutputs a list of the picked entity path. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of entity paths that have been picked?"
            },
            {
                "role": "assistant",
                "content": "cvxEntInqPathPicked\nCount [out] number of entity path\nPaths [out] list of the entity path\n\nOutputs a list of the picked entity path. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list of picked entity paths?"
            },
            {
                "role": "assistant",
                "content": "cvxEntInqPathPicked\nCount [out] number of entity path\nPaths [out] list of the entity path\n\nOutputs a list of the picked entity path. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to unpick all entities in the active field?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUnPickAll\n\nUnpick the entity list in active field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to clear the entity selection in the active field?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUnPickAll\n\nUnpick the entity list in active field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to unselect all entities in the active field?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUnPickAll\n\nUnpick the entity list in active field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to unpick the last entity in the active field?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUnPickLast\n\nUnpick the last entity in active field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to undo the picking of the last entity in the active field?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUnPickLast\n\nUnpick the last entity in active field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function can be used to remove the last picked entity in the active field?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUnPickLast\n\nUnpick the last entity in active field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to unpick the entity list in the active field?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUnPickByPath\npath [in] pick path\n\nUnpick the entity list in active field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to unpick entities by providing a pick path?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUnPickByPath\npath [in] pick path\n\nUnpick the entity list in active field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I unpick entities in the active field using a specific path?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUnPickByPath\npath [in] pick path\n\nUnpick the entity list in active field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add an entity to the pick list?"
            },
            {
                "role": "assistant",
                "content": "cvxEntAddPick\nidx_ent [in] index of entity\n\nAdd the specified entity to the pick list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to specify an entity to be added to the pick list?"
            },
            {
                "role": "assistant",
                "content": "cvxEntAddPick\nidx_ent [in] index of entity\n\nAdd the specified entity to the pick list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to add an entity by index to the pick list?"
            },
            {
                "role": "assistant",
                "content": "cvxEntAddPick\nidx_ent [in] index of entity\n\nAdd the specified entity to the pick list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add an entity to the pick list?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathAddPick\nentPath [in] pick path of entity\n\nAdd the specified entity to the pick list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to specify the pick path of an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathAddPick\nentPath [in] pick path of entity\n\nAdd the specified entity to the pick list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I add a specified entity to the pick list?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathAddPick\nentPath [in] pick path of entity\n\nAdd the specified entity to the pick list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxPickDataClear\n\nClear the pick data for ray casting"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxPickDataClear\n\nClear the pick data for ray casting"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxPickDataClear\n\nClear the pick data for ray casting"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve attribute data from a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUserAtGet\nidEnt [in] the entity index\ncount [out] number of user attributes\nAt [out] list of user attributes\n\nRetrieves attribute data from the specified entity in the active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the number of user attributes for a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUserAtGet\nidEnt [in] the entity index\ncount [out] number of user attributes\nAt [out] list of user attributes\n\nRetrieves attribute data from the specified entity in the active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I get a list of user attributes for a particular entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUserAtGet\nidEnt [in] the entity index\ncount [out] number of user attributes\nAt [out] list of user attributes\n\nRetrieves attribute data from the specified entity in the active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set user attribute for a specific shape, face or edge entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUserAtSet\nidEnt [in] the entity(ONLY SHAPE, FACE and EDGE) index\ncount [in] number of user attributes\nAt [in] list of user attributes\n\nSets the user attribute for the specified entity(only shape, face and edge) in the current active part. \n\nA new user attribute is inserted if the user attribute for the specified label does not exist."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to insert a new user attribute for a specified label if it does not exist?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUserAtSet\nidEnt [in] the entity(ONLY SHAPE, FACE and EDGE) index\ncount [in] number of user attributes\nAt [in] list of user attributes\n\nSets the user attribute for the specified entity(only shape, face and edge) in the current active part. \n\nA new user attribute is inserted if the user attribute for the specified label does not exist."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I set multiple user attributes for a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUserAtSet\nidEnt [in] the entity(ONLY SHAPE, FACE and EDGE) index\ncount [in] number of user attributes\nAt [in] list of user attributes\n\nSets the user attribute for the specified entity(only shape, face and edge) in the current active part. \n\nA new user attribute is inserted if the user attribute for the specified label does not exist."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete user attributes of a specific shell, face, or edge entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUserAtDel\nidEnt [in] the entity(ONLY SHELL, FACE and EDGE) index\ncount [in] number of user attributes (0 to delete all user attributes)\nAt [in] list of user attributes (NULL to delete all user attributes)\n\nDelete user attribute of the specified entity(ONLY SHELL, FACE and EDGE) in the current active part. \n\n the function does not delete any attributes if the specified label is an empty string or the attribute specified label is not found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to delete all user attributes of a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUserAtDel\nidEnt [in] the entity(ONLY SHELL, FACE and EDGE) index\ncount [in] number of user attributes (0 to delete all user attributes)\nAt [in] list of user attributes (NULL to delete all user attributes)\n\nDelete user attribute of the specified entity(ONLY SHELL, FACE and EDGE) in the current active part. \n\n the function does not delete any attributes if the specified label is an empty string or the attribute specified label is not found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a specific user attribute of a shell, face, or edge entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUserAtDel\nidEnt [in] the entity(ONLY SHELL, FACE and EDGE) index\ncount [in] number of user attributes (0 to delete all user attributes)\nAt [in] list of user attributes (NULL to delete all user attributes)\n\nDelete user attribute of the specified entity(ONLY SHELL, FACE and EDGE) in the current active part. \n\n the function does not delete any attributes if the specified label is an empty string or the attribute specified label is not found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the color of an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntColorGet\nidEntity [in] entity id (in active file)\nColor [out] entity color\n\nGets the standard color number assigned to \"idEntity\".\nsee:\ncvxEntRgbGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the standard color number of an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntColorGet\nidEntity [in] entity id (in active file)\nColor [out] entity color\n\nGets the standard color number assigned to \"idEntity\".\nsee:\ncvxEntRgbGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the color assigned to a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntColorGet\nidEntity [in] entity id (in active file)\nColor [out] entity color\n\nGets the standard color number assigned to \"idEntity\".\nsee:\ncvxEntRgbGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set color for multiple entities?"
            },
            {
                "role": "assistant",
                "content": "cvxEntColorSet\nColor [in] entity color\nCount [in] number of entities\nidEnts [in] entity id's\n\nAssigns the specified color to the specified entities in the active object.\nsee:\ncvxEntRgbSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to assign color to specific entities?"
            },
            {
                "role": "assistant",
                "content": "cvxEntColorSet\nColor [in] entity color\nCount [in] number of entities\nidEnts [in] entity id's\n\nAssigns the specified color to the specified entities in the active object.\nsee:\ncvxEntRgbSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the color of entities in the active object?"
            },
            {
                "role": "assistant",
                "content": "cvxEntColorSet\nColor [in] entity color\nCount [in] number of entities\nidEnts [in] entity id's\n\nAssigns the specified color to the specified entities in the active object.\nsee:\ncvxEntRgbSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I set color for entities using their ids?"
            },
            {
                "role": "assistant",
                "content": "cvxEntColorSet\nColor [in] entity color\nCount [in] number of entities\nidEnts [in] entity id's\n\nAssigns the specified color to the specified entities in the active object.\nsee:\ncvxEntRgbSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the RGB color of an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntRgbGet\nidEntity [in] entity id (in active file)\nColor [out] entity RGB color\n\nGets the color assigned to \"idEntity\" in RGB format.\nsee:\ncvxEntColorGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the RGB color of an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntRgbGet\nidEntity [in] entity id (in active file)\nColor [out] entity RGB color\n\nGets the color assigned to \"idEntity\" in RGB format.\nsee:\ncvxEntColorGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the RGB color of a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntRgbGet\nidEntity [in] entity id (in active file)\nColor [out] entity RGB color\n\nGets the color assigned to \"idEntity\" in RGB format.\nsee:\ncvxEntColorGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign RGB color to entities in the active object?"
            },
            {
                "role": "assistant",
                "content": "cvxEntRgbSet\nColor [in] entity RGB color\nCount [in] number of entities\nidEnts [in] entity id's\n\nAssigns the specified RGB color to the specified entities in the active object. \n\n Presently, only face entities support true RGB color. \n\n For other entities, the specified RGB color is mapped to the closest standard color (evxColor).\nsee:\ncvxEntColorSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set RGB color for face entities?"
            },
            {
                "role": "assistant",
                "content": "cvxEntRgbSet\nColor [in] entity RGB color\nCount [in] number of entities\nidEnts [in] entity id's\n\nAssigns the specified RGB color to the specified entities in the active object. \n\n Presently, only face entities support true RGB color. \n\n For other entities, the specified RGB color is mapped to the closest standard color (evxColor).\nsee:\ncvxEntColorSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to map RGB color to the closest standard color for non-face entities?"
            },
            {
                "role": "assistant",
                "content": "cvxEntRgbSet\nColor [in] entity RGB color\nCount [in] number of entities\nidEnts [in] entity id's\n\nAssigns the specified RGB color to the specified entities in the active object. \n\n Presently, only face entities support true RGB color. \n\n For other entities, the specified RGB color is mapped to the closest standard color (evxColor).\nsee:\ncvxEntColorSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set RGB color for multiple entities without creating display attribute?"
            },
            {
                "role": "assistant",
                "content": "cvxEntRgbSetNoAt\nColor [in] entity RGB color\nCount [in] number of entities\nidEnts [in] entity id's\n\nSame as cvxEntRgbSet() except that no display attribute created."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set RGB color for entities without creating display attribute?"
            },
            {
                "role": "assistant",
                "content": "cvxEntRgbSetNoAt\nColor [in] entity RGB color\nCount [in] number of entities\nidEnts [in] entity id's\n\nSame as cvxEntRgbSet() except that no display attribute created."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set RGB color for a specific number of entities without creating display attribute?"
            },
            {
                "role": "assistant",
                "content": "cvxEntRgbSetNoAt\nColor [in] entity RGB color\nCount [in] number of entities\nidEnts [in] entity id's\n\nSame as cvxEntRgbSet() except that no display attribute created."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set transparency for multiple entities?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTransSet\niTrans [in] Entity transparency value, from 0 to 100, both ends included\nCount [in] number of entities\nidEnts [in] entity id's\n\nAssigns the specified transparency to the specified entities in the active object.\nIf the input transparency value exceeds 0-100, this function will fail."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to assign transparency to specific entities?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTransSet\niTrans [in] Entity transparency value, from 0 to 100, both ends included\nCount [in] number of entities\nidEnts [in] entity id's\n\nAssigns the specified transparency to the specified entities in the active object.\nIf the input transparency value exceeds 0-100, this function will fail."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the range of transparency value that can be assigned to entities?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTransSet\niTrans [in] Entity transparency value, from 0 to 100, both ends included\nCount [in] number of entities\nidEnts [in] entity id's\n\nAssigns the specified transparency to the specified entities in the active object.\nIf the input transparency value exceeds 0-100, this function will fail."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the attributes of a specified line?"
            },
            {
                "role": "assistant",
                "content": "cvxEntLineAtGet\nidLine [in] index of entity\nAt [out] line attribute\n\nGet the attributes of specified line."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve line attributes by its index?"
            },
            {
                "role": "assistant",
                "content": "cvxEntLineAtGet\nidLine [in] index of entity\nAt [out] line attribute\n\nGet the attributes of specified line."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the attributes of a specific line entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntLineAtGet\nidLine [in] index of entity\nAt [out] line attribute\n\nGet the attributes of specified line."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set attributes of specified lines?"
            },
            {
                "role": "assistant",
                "content": "cvxEntLineAtSet\nAt [in] line attribute\nCount [in] number of entities\nidEnts [in] entity id's\n\nSets the attributes of specified lines.if you only need to update some of the attributes,you can first get the original attributes through cvxEntLineAtGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to update some of the attributes of lines?"
            },
            {
                "role": "assistant",
                "content": "cvxEntLineAtSet\nAt [in] line attribute\nCount [in] number of entities\nidEnts [in] entity id's\n\nSets the attributes of specified lines.if you only need to update some of the attributes,you can first get the original attributes through cvxEntLineAtGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I update line attributes using cvxEntLineAtSet()?"
            },
            {
                "role": "assistant",
                "content": "cvxEntLineAtSet\nAt [in] line attribute\nCount [in] number of entities\nidEnts [in] entity id's\n\nSets the attributes of specified lines.if you only need to update some of the attributes,you can first get the original attributes through cvxEntLineAtGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the unique identifier of a specified entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUidGet\nidEntity [in] entity id\nUid [out] unique id for the specified entity\n\nOutput the unique identifier of the specified entity. \n\n The unique identifier is a tuple of three numbers that, taken together, identify the entity in a persistent way across sessions. \n\n In contrast to \"idEntity\" (the entity ID), which usually changes from session to session, \"Uid\" (the unique ID) does not change between sessions and can be used to identify the entity in any session.\nA unique ID is unique in the sense that no other entity in the same root object should have the same unique ID, but it is possible for two entities in different root objects to have the same unique ID.\nsee:\ncvxRootCopy()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to obtain the unique ID for a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUidGet\nidEntity [in] entity id\nUid [out] unique id for the specified entity\n\nOutput the unique identifier of the specified entity. \n\n The unique identifier is a tuple of three numbers that, taken together, identify the entity in a persistent way across sessions. \n\n In contrast to \"idEntity\" (the entity ID), which usually changes from session to session, \"Uid\" (the unique ID) does not change between sessions and can be used to identify the entity in any session.\nA unique ID is unique in the sense that no other entity in the same root object should have the same unique ID, but it is possible for two entities in different root objects to have the same unique ID.\nsee:\ncvxRootCopy()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the unique ID for an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUidGet\nidEntity [in] entity id\nUid [out] unique id for the specified entity\n\nOutput the unique identifier of the specified entity. \n\n The unique identifier is a tuple of three numbers that, taken together, identify the entity in a persistent way across sessions. \n\n In contrast to \"idEntity\" (the entity ID), which usually changes from session to session, \"Uid\" (the unique ID) does not change between sessions and can be used to identify the entity in any session.\nA unique ID is unique in the sense that no other entity in the same root object should have the same unique ID, but it is possible for two entities in different root objects to have the same unique ID.\nsee:\ncvxRootCopy()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign a unique identifier to a specified entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUidSet\nidEntity [in] entity id\nUid [in] unique id to assign to the specified entity\n\nAssign a unique identifier to the specified entity. \n\n Refer to cvxEntUidGet() for a description of unique identifiers and how the entity ID differs from the entity's unique ID.\nA unique ID should be unique in the sense that no other entity in the same root object should have the same unique ID, although it is possible for two entities in different root objects to have the same unique ID.\nsee:\ncvxRootCopy()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to set a unique ID for an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUidSet\nidEntity [in] entity id\nUid [in] unique id to assign to the specified entity\n\nAssign a unique identifier to the specified entity. \n\n Refer to cvxEntUidGet() for a description of unique identifiers and how the entity ID differs from the entity's unique ID.\nA unique ID should be unique in the sense that no other entity in the same root object should have the same unique ID, although it is possible for two entities in different root objects to have the same unique ID.\nsee:\ncvxRootCopy()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to assign a unique ID to an entity in the CAD software?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUidSet\nidEntity [in] entity id\nUid [in] unique id to assign to the specified entity\n\nAssign a unique identifier to the specified entity. \n\n Refer to cvxEntUidGet() for a description of unique identifiers and how the entity ID differs from the entity's unique ID.\nA unique ID should be unique in the sense that no other entity in the same root object should have the same unique ID, although it is possible for two entities in different root objects to have the same unique ID.\nsee:\ncvxRootCopy()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the persistent label of a specific entity in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntLabel\nidEntity [in] entity id\nLabel [out] persistent label as null-terminated array of integers\n\nOutputs the persistent label of the specified entity in the active part.\nThe label is a null-terminated list of integers.\nThe calling procedure is responsible for deallocating the memory out via \"Label\".\nsee:\ncvxLabelSame() and cvxPartInqEntByLabel()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the label of an entity in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntLabel\nidEntity [in] entity id\nLabel [out] persistent label as null-terminated array of integers\n\nOutputs the persistent label of the specified entity in the active part.\nThe label is a null-terminated list of integers.\nThe calling procedure is responsible for deallocating the memory out via \"Label\".\nsee:\ncvxLabelSame() and cvxPartInqEntByLabel()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to obtain the persistent label of a specified entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntLabel\nidEntity [in] entity id\nLabel [out] persistent label as null-terminated array of integers\n\nOutputs the persistent label of the specified entity in the active part.\nThe label is a null-terminated list of integers.\nThe calling procedure is responsible for deallocating the memory out via \"Label\".\nsee:\ncvxLabelSame() and cvxPartInqEntByLabel()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the persistent label of a specified entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntLabelGet\nidEntity [in] entity id\nLabel [out] persistent label as null-terminated array of integers\n\nOutputs the persistent label of the specified entity in the active file, or a NULL pointer if the entity does not have a label. \n\n Currently, only entities generated by a part history have persistent labels.\nThe label is a null-terminated list of integers.\nThe calling procedure is responsible for deallocating the memory out via \"Label\" as shown below:\nsee:\ncvxLabelMatch() and cvxEntByLabel()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if an entity has a persistent label?"
            },
            {
                "role": "assistant",
                "content": "cvxEntLabelGet\nidEntity [in] entity id\nLabel [out] persistent label as null-terminated array of integers\n\nOutputs the persistent label of the specified entity in the active file, or a NULL pointer if the entity does not have a label. \n\n Currently, only entities generated by a part history have persistent labels.\nThe label is a null-terminated list of integers.\nThe calling procedure is responsible for deallocating the memory out via \"Label\" as shown below:\nsee:\ncvxLabelMatch() and cvxEntByLabel()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can you provide a null-terminated list of integers for the label of a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntLabelGet\nidEntity [in] entity id\nLabel [out] persistent label as null-terminated array of integers\n\nOutputs the persistent label of the specified entity in the active file, or a NULL pointer if the entity does not have a label. \n\n Currently, only entities generated by a part history have persistent labels.\nThe label is a null-terminated list of integers.\nThe calling procedure is responsible for deallocating the memory out via \"Label\" as shown below:\nsee:\ncvxLabelMatch() and cvxEntByLabel()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign a label to a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntLabelSet\nidEntity [in] entity id\nLabel [in] persistent label as null-terminated array of integers\n\nAssigns a copy of the input label (i.e. integer null-terminated list of integers) to the specified object. If the object already has a label, the existing label is overwritten. If \"label=NULL\", this function returns without doing anything (no error)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to overwrite an existing label of an object?"
            },
            {
                "role": "assistant",
                "content": "cvxEntLabelSet\nidEntity [in] entity id\nLabel [in] persistent label as null-terminated array of integers\n\nAssigns a copy of the input label (i.e. integer null-terminated list of integers) to the specified object. If the object already has a label, the existing label is overwritten. If \"label=NULL\", this function returns without doing anything (no error)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if the label input is null?"
            },
            {
                "role": "assistant",
                "content": "cvxEntLabelSet\nidEntity [in] entity id\nLabel [in] persistent label as null-terminated array of integers\n\nAssigns a copy of the input label (i.e. integer null-terminated list of integers) to the specified object. If the object already has a label, the existing label is overwritten. If \"label=NULL\", this function returns without doing anything (no error)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name of a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntName\nidEntity [in] entity id\nName [out] entity name\nnBytes [in] string max size of entity name\n\nOutputs the name of the specified entity. \n\n It is assumed the entity resides in the active file. \n\n A blank string is output if the entity doesn't have a name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the name of an entity in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxEntName\nidEntity [in] entity id\nName [out] entity name\nnBytes [in] string max size of entity name\n\nOutputs the name of the specified entity. \n\n It is assumed the entity resides in the active file. \n\n A blank string is output if the entity doesn't have a name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I find out the name of an entity using its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxEntName\nidEntity [in] entity id\nName [out] entity name\nnBytes [in] string max size of entity name\n\nOutputs the name of the specified entity. \n\n It is assumed the entity resides in the active file. \n\n A blank string is output if the entity doesn't have a name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign a name to a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntNameSet\nidEntity [in] entity id\nName [in] entity name\n\nAssigns the specified name to the specified entity. \n\n It is assumed the entity resides in the active file. \n\n It is assumed the entity has a \"name\" field.\nThis function is often used to set the name of dimension/datum/texture/block/config/sheet/equation... \n\n You can use function \"cvxEntSetNameTag()\" to set the name tag of shell/face..."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the name of a dimension entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntNameSet\nidEntity [in] entity id\nName [in] entity name\n\nAssigns the specified name to the specified entity. \n\n It is assumed the entity resides in the active file. \n\n It is assumed the entity has a \"name\" field.\nThis function is often used to set the name of dimension/datum/texture/block/config/sheet/equation... \n\n You can use function \"cvxEntSetNameTag()\" to set the name tag of shell/face..."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the name of a block entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntNameSet\nidEntity [in] entity id\nName [in] entity name\n\nAssigns the specified name to the specified entity. \n\n It is assumed the entity resides in the active file. \n\n It is assumed the entity has a \"name\" field.\nThis function is often used to set the name of dimension/datum/texture/block/config/sheet/equation... \n\n You can use function \"cvxEntSetNameTag()\" to set the name tag of shell/face..."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I use this function to set the name of a sheet entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntNameSet\nidEntity [in] entity id\nName [in] entity name\n\nAssigns the specified name to the specified entity. \n\n It is assumed the entity resides in the active file. \n\n It is assumed the entity has a \"name\" field.\nThis function is often used to set the name of dimension/datum/texture/block/config/sheet/equation... \n\n You can use function \"cvxEntSetNameTag()\" to set the name tag of shell/face..."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign a name tag to a specified entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntSetNameTag\nidx_ent [in] index of entity\nname [in] name tag\n\nAssign the input name tag to the specified entity. \n\n name:empty-delete the name tag, else add the name tag."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to delete the name tag of an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntSetNameTag\nidx_ent [in] index of entity\nname [in] name tag\n\nAssign the input name tag to the specified entity. \n\n name:empty-delete the name tag, else add the name tag."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a name tag to an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntSetNameTag\nidx_ent [in] index of entity\nname [in] name tag\n\nAssign the input name tag to the specified entity. \n\n name:empty-delete the name tag, else add the name tag."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the layer name of a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntLayer\nidEntity [in] entity id\nLayer [out] layer name\n\nOutputs the name of the specified entity's layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find out which layer an entity belongs to?"
            },
            {
                "role": "assistant",
                "content": "cvxEntLayer\nidEntity [in] entity id\nLayer [out] layer name\n\nOutputs the name of the specified entity's layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the layer name of a particular entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntLayer\nidEntity [in] entity id\nLayer [out] layer name\n\nOutputs the name of the specified entity's layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the layer id of a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntLayerId\nidEntity [in] entity id\nLayerId [out] layer id\n\nOutputs the id of the specified entity's layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find out the layer id of an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntLayerId\nidEntity [in] entity id\nLayerId [out] layer id\n\nOutputs the id of the specified entity's layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the layer id of a particular entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntLayerId\nidEntity [in] entity id\nLayerId [out] layer id\n\nOutputs the id of the specified entity's layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the transformation matrix of a specified entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntMatrix\nidEntity [in] entity id\nMatrix [out] transformation matrix\n\nOutputs the transformation matrix associated with the specified entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the transformation matrix of an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntMatrix\nidEntity [in] entity id\nMatrix [out] transformation matrix\n\nOutputs the transformation matrix associated with the specified entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the transformation matrix of a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntMatrix\nidEntity [in] entity id\nMatrix [out] transformation matrix\n\nOutputs the transformation matrix associated with the specified entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the transformation matrix of a specified entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntMatrix2\nEntity [in] entity pick path\nMatrix [out] transformation matrix\n\nOutputs the transformation matrix of the specified entity as defined by the input pick-path. \n\n The transformation locates the entity relative to the path's root object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to obtain the transformation matrix of an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntMatrix2\nEntity [in] entity pick path\nMatrix [out] transformation matrix\n\nOutputs the transformation matrix of the specified entity as defined by the input pick-path. \n\n The transformation locates the entity relative to the path's root object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to locate an entity relative to the path's root object?"
            },
            {
                "role": "assistant",
                "content": "cvxEntMatrix2\nEntity [in] entity pick path\nMatrix [out] transformation matrix\n\nOutputs the transformation matrix of the specified entity as defined by the input pick-path. \n\n The transformation locates the entity relative to the path's root object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the transformation matrix for a specified entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntMatrixSet\nidEntity [in] entity id\nMatrix [in] transformation matrix\n\nSets the transformation matrix associated with the specified entity in the active file. \n\n If the entity does not support a transformation matrix, nothing is done."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to update the transformation matrix of an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntMatrixSet\nidEntity [in] entity id\nMatrix [in] transformation matrix\n\nSets the transformation matrix associated with the specified entity in the active file. \n\n If the entity does not support a transformation matrix, nothing is done."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I change the transformation matrix of an entity in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxEntMatrixSet\nidEntity [in] entity id\nMatrix [in] transformation matrix\n\nSets the transformation matrix associated with the specified entity in the active file. \n\n If the entity does not support a transformation matrix, nothing is done."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the parent feature id of a specified entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntFtr\nidEntity [in] entity id\nidFeature [out] parent feature id (0 if undefined)\n\nOutputs the id of the parent feature of the specified entity in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the parent feature id of an entity in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntFtr\nidEntity [in] entity id\nidFeature [out] parent feature id (0 if undefined)\n\nOutputs the id of the parent feature of the specified entity in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if the parent feature of a specific entity is defined?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntFtr\nidEntity [in] entity id\nidFeature [out] parent feature id (0 if undefined)\n\nOutputs the id of the parent feature of the specified entity in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the bounding box of a specified entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntBndBox\nidEntity [in] entity id\nBox [out] bounding box of specified entity\n\nThis function gets the bounding box of the specified entity in the target file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the bounding box of an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntBndBox\nidEntity [in] entity id\nBox [out] bounding box of specified entity\n\nThis function gets the bounding box of the specified entity in the target file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the bounding box of a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntBndBox\nidEntity [in] entity id\nBox [out] bounding box of specified entity\n\nThis function gets the bounding box of the specified entity in the target file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the bounding box of a specified entity in the pick path?"
            },
            {
                "role": "assistant",
                "content": "cvxEntBndBoxByPath\npath [in] entity pick path\nfTartCord [in] the boundary box in target coordinate(1 or 0)\nbndBox [out] bounding box of specified entity\n\nThis function gets the bounding box of the specified entity in the pick path.\nInterface cvxBndBoxTransform can convert envelope boxes to different matrices. \n\n Interface cvxBndBoxPnts can convert the envelope box to the coordinate value under the current world coordinate system. \n\n Interface cvxPntTransform can convert points under different coordinate systems.\nnote:\nWhen the matrix of the specified entity is not orthogonal to the matrix of the current world coordinate system, it is recommended that fTartCord=0, otherwise fTartCord=1. \n\n When fTartCord=1, the envelope box output from the interface can be directly converted to points. The envelope box drawn according to the coordinates of these points is correct. \n\n When fTartCord=0, you need to convert the envelope box to the point coordinates first, and then convert the point to the point coordinates under the current coordinate system. At this time, the envelope box drawn according to the point coordinates is correct."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to convert envelope boxes to different matrices?"
            },
            {
                "role": "assistant",
                "content": "cvxEntBndBoxByPath\npath [in] entity pick path\nfTartCord [in] the boundary box in target coordinate(1 or 0)\nbndBox [out] bounding box of specified entity\n\nThis function gets the bounding box of the specified entity in the pick path.\nInterface cvxBndBoxTransform can convert envelope boxes to different matrices. \n\n Interface cvxBndBoxPnts can convert the envelope box to the coordinate value under the current world coordinate system. \n\n Interface cvxPntTransform can convert points under different coordinate systems.\nnote:\nWhen the matrix of the specified entity is not orthogonal to the matrix of the current world coordinate system, it is recommended that fTartCord=0, otherwise fTartCord=1. \n\n When fTartCord=1, the envelope box output from the interface can be directly converted to points. The envelope box drawn according to the coordinates of these points is correct. \n\n When fTartCord=0, you need to convert the envelope box to the point coordinates first, and then convert the point to the point coordinates under the current coordinate system. At this time, the envelope box drawn according to the point coordinates is correct."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the recommended value for fTartCord when the matrix of the specified entity is not orthogonal to the matrix of the current world coordinate system?"
            },
            {
                "role": "assistant",
                "content": "cvxEntBndBoxByPath\npath [in] entity pick path\nfTartCord [in] the boundary box in target coordinate(1 or 0)\nbndBox [out] bounding box of specified entity\n\nThis function gets the bounding box of the specified entity in the pick path.\nInterface cvxBndBoxTransform can convert envelope boxes to different matrices. \n\n Interface cvxBndBoxPnts can convert the envelope box to the coordinate value under the current world coordinate system. \n\n Interface cvxPntTransform can convert points under different coordinate systems.\nnote:\nWhen the matrix of the specified entity is not orthogonal to the matrix of the current world coordinate system, it is recommended that fTartCord=0, otherwise fTartCord=1. \n\n When fTartCord=1, the envelope box output from the interface can be directly converted to points. The envelope box drawn according to the coordinates of these points is correct. \n\n When fTartCord=0, you need to convert the envelope box to the point coordinates first, and then convert the point to the point coordinates under the current coordinate system. At this time, the envelope box drawn according to the point coordinates is correct."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the bounding box of a shape in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntBox\nidEnt [in] entity id (supported entity: shape,face,component)\nMat [in] optional local frame (or NULL)\nBox [out] shape bounding box\n\nGets the bounding box of the specified entity in the active part. \n\n currently, only shape, face and component are support. If \"*Mat = NULL\", initializes \"Mat\" to the identity matrix. \n\n a bounding box relative to the specified local coordinate frame is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the bounding box of a face in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntBox\nidEnt [in] entity id (supported entity: shape,face,component)\nMat [in] optional local frame (or NULL)\nBox [out] shape bounding box\n\nGets the bounding box of the specified entity in the active part. \n\n currently, only shape, face and component are support. If \"*Mat = NULL\", initializes \"Mat\" to the identity matrix. \n\n a bounding box relative to the specified local coordinate frame is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the bounding box of a component in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntBox\nidEnt [in] entity id (supported entity: shape,face,component)\nMat [in] optional local frame (or NULL)\nBox [out] shape bounding box\n\nGets the bounding box of the specified entity in the active part. \n\n currently, only shape, face and component are support. If \"*Mat = NULL\", initializes \"Mat\" to the identity matrix. \n\n a bounding box relative to the specified local coordinate frame is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize the local frame to the identity matrix if it is NULL?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntBox\nidEnt [in] entity id (supported entity: shape,face,component)\nMat [in] optional local frame (or NULL)\nBox [out] shape bounding box\n\nGets the bounding box of the specified entity in the active part. \n\n currently, only shape, face and component are support. If \"*Mat = NULL\", initializes \"Mat\" to the identity matrix. \n\n a bounding box relative to the specified local coordinate frame is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to output a bounding box relative to a specified local coordinate frame?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntBox\nidEnt [in] entity id (supported entity: shape,face,component)\nMat [in] optional local frame (or NULL)\nBox [out] shape bounding box\n\nGets the bounding box of the specified entity in the active part. \n\n currently, only shape, face and component are support. If \"*Mat = NULL\", initializes \"Mat\" to the identity matrix. \n\n a bounding box relative to the specified local coordinate frame is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to search for an entity with a specific label in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxEntByLabel\nLabel [in] persistent label as null-terminated array of integers\nExact [in] 1 for exact match; 0 if partial match is okay\nidEntity [out] entity id (0 is output if no entity is found)\n\nSearches the active part for an entity with the specified label."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find an entity by its label?"
            },
            {
                "role": "assistant",
                "content": "cvxEntByLabel\nLabel [in] persistent label as null-terminated array of integers\nExact [in] 1 for exact match; 0 if partial match is okay\nidEntity [out] entity id (0 is output if no entity is found)\n\nSearches the active part for an entity with the specified label."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to perform a partial match search for an entity label?"
            },
            {
                "role": "assistant",
                "content": "cvxEntByLabel\nLabel [in] persistent label as null-terminated array of integers\nExact [in] 1 for exact match; 0 if partial match is okay\nidEntity [out] entity id (0 is output if no entity is found)\n\nSearches the active part for an entity with the specified label."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to search for an entity with a specific label in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntByLabel\nLabel [in] persistent label as null-terminated array of integers\nflag [in] 1 for exact match; 0 if partial match is okay\nidEntity [out] entity id (0 is output if no entity is found)\n\nSearches the active part for an entity with the specified label."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find an entity by label in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntByLabel\nLabel [in] persistent label as null-terminated array of integers\nflag [in] 1 for exact match; 0 if partial match is okay\nidEntity [out] entity id (0 is output if no entity is found)\n\nSearches the active part for an entity with the specified label."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if an entity with a specific label exists in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntByLabel\nLabel [in] persistent label as null-terminated array of integers\nflag [in] 1 for exact match; 0 if partial match is okay\nidEntity [out] entity id (0 is output if no entity is found)\n\nSearches the active part for an entity with the specified label."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to search for an entity by name?"
            },
            {
                "role": "assistant",
                "content": "cvxEntByName\nName [in] entity name\nidEntity [out] entity id (0 if undefined)\n\nSearches the active object for the entity with the specified name. \n\n If it is found, its id is output via \"idEntity\". If it is not found, \"idEntity = 0\" is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the id of an entity by its name?"
            },
            {
                "role": "assistant",
                "content": "cvxEntByName\nName [in] entity name\nidEntity [out] entity id (0 if undefined)\n\nSearches the active object for the entity with the specified name. \n\n If it is found, its id is output via \"idEntity\". If it is not found, \"idEntity = 0\" is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I check if an entity with a specific name exists?"
            },
            {
                "role": "assistant",
                "content": "cvxEntByName\nName [in] entity name\nidEntity [out] entity id (0 if undefined)\n\nSearches the active object for the entity with the specified name. \n\n If it is found, its id is output via \"idEntity\". If it is not found, \"idEntity = 0\" is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to search for an entity by name in a specific file and root object?"
            },
            {
                "role": "assistant",
                "content": "cvxEntByName2\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nName [in] entity name\nidEntity [out] entity id (0 if undefined)\n\nSearches the specified root object in the specified file for the entity with the specified name. \n\n If it is found, its id is output via \"idEntity\". \n\n If it is not found, \"idEntity = 0\" is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the id of an entity by its name in a particular file and root object?"
            },
            {
                "role": "assistant",
                "content": "cvxEntByName2\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nName [in] entity name\nidEntity [out] entity id (0 if undefined)\n\nSearches the specified root object in the specified file for the entity with the specified name. \n\n If it is found, its id is output via \"idEntity\". \n\n If it is not found, \"idEntity = 0\" is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if an entity with a specific name exists in a certain file and root object?"
            },
            {
                "role": "assistant",
                "content": "cvxEntByName2\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nName [in] entity name\nidEntity [out] entity id (0 if undefined)\n\nSearches the specified root object in the specified file for the entity with the specified name. \n\n If it is found, its id is output via \"idEntity\". \n\n If it is not found, \"idEntity = 0\" is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name of an entity by pick path?"
            },
            {
                "role": "assistant",
                "content": "cvxEntNameByPath\nPath [in] entity pick path\nName [out] entity name\n\nThis function gets the name of the entity specified by a pick path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the entity name using pick path?"
            },
            {
                "role": "assistant",
                "content": "cvxEntNameByPath\nPath [in] entity pick path\nName [out] entity name\n\nThis function gets the name of the entity specified by a pick path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function can be used to obtain the name of an entity specified by pick path?"
            },
            {
                "role": "assistant",
                "content": "cvxEntNameByPath\nPath [in] entity pick path\nName [out] entity name\n\nThis function gets the name of the entity specified by a pick path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find an entity by its unique identifier?"
            },
            {
                "role": "assistant",
                "content": "cvxEntByUid\nUid [in] unique id of entity to find\nidEntity [out] entity id (0 is output if no entity is found)\n\nSearches the active target for an entity with the specified unique identifier."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to search for an entity using its unique identifier?"
            },
            {
                "role": "assistant",
                "content": "cvxEntByUid\nUid [in] unique id of entity to find\nidEntity [out] entity id (0 is output if no entity is found)\n\nSearches the active target for an entity with the specified unique identifier."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I get the entity id by its unique identifier?"
            },
            {
                "role": "assistant",
                "content": "cvxEntByUid\nUid [in] unique id of entity to find\nidEntity [out] entity id (0 is output if no entity is found)\n\nSearches the active target for an entity with the specified unique identifier."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the closest entity of a specified type?"
            },
            {
                "role": "assistant",
                "content": "cvxEntFind\nEntType [in] type of entity to search for\nRefPnt [in] reference point\nidEntity [out] entity id (0 if undefined)\nPnt [out] point on entity (or NULL to ignore)\nDist [out] distance (mm) from RefPnt (NULL to ignore)\n\nFinds the closest entity of the specified type to \"RefPnt\" and outputs its index via \"idEntity\" (0 is output if no entity is found). \n\n If \"Pnt\" is not NULL, the coordinates of \"RefPnt\" projected onto the entity are output via \"Pnt\". \n\n If \"Dist\" is not NULL, the shortest distance between the entity and \"RefPnt\" is output via \"Dist\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the entity id of the closest entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntFind\nEntType [in] type of entity to search for\nRefPnt [in] reference point\nidEntity [out] entity id (0 if undefined)\nPnt [out] point on entity (or NULL to ignore)\nDist [out] distance (mm) from RefPnt (NULL to ignore)\n\nFinds the closest entity of the specified type to \"RefPnt\" and outputs its index via \"idEntity\" (0 is output if no entity is found). \n\n If \"Pnt\" is not NULL, the coordinates of \"RefPnt\" projected onto the entity are output via \"Pnt\". \n\n If \"Dist\" is not NULL, the shortest distance between the entity and \"RefPnt\" is output via \"Dist\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the point on the closest entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntFind\nEntType [in] type of entity to search for\nRefPnt [in] reference point\nidEntity [out] entity id (0 if undefined)\nPnt [out] point on entity (or NULL to ignore)\nDist [out] distance (mm) from RefPnt (NULL to ignore)\n\nFinds the closest entity of the specified type to \"RefPnt\" and outputs its index via \"idEntity\" (0 is output if no entity is found). \n\n If \"Pnt\" is not NULL, the coordinates of \"RefPnt\" projected onto the entity are output via \"Pnt\". \n\n If \"Dist\" is not NULL, the shortest distance between the entity and \"RefPnt\" is output via \"Dist\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate the distance from a reference point to the closest entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntFind\nEntType [in] type of entity to search for\nRefPnt [in] reference point\nidEntity [out] entity id (0 if undefined)\nPnt [out] point on entity (or NULL to ignore)\nDist [out] distance (mm) from RefPnt (NULL to ignore)\n\nFinds the closest entity of the specified type to \"RefPnt\" and outputs its index via \"idEntity\" (0 is output if no entity is found). \n\n If \"Pnt\" is not NULL, the coordinates of \"RefPnt\" projected onto the entity are output via \"Pnt\". \n\n If \"Dist\" is not NULL, the shortest distance between the entity and \"RefPnt\" is output via \"Dist\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the closest entity to a reference point?"
            },
            {
                "role": "assistant",
                "content": "cvxEntFind2\nData [inout] entity search data (input and output)\n\nFinds the closest entity of the type specified in \"Data\" to a reference point specified in \"Data\" using filtering parameters specified in \"Data\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to search for entities based on filtering parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxEntFind2\nData [inout] entity search data (input and output)\n\nFinds the closest entity of the type specified in \"Data\" to a reference point specified in \"Data\" using filtering parameters specified in \"Data\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the type of entity to search for?"
            },
            {
                "role": "assistant",
                "content": "cvxEntFind2\nData [inout] entity search data (input and output)\n\nFinds the closest entity of the type specified in \"Data\" to a reference point specified in \"Data\" using filtering parameters specified in \"Data\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the class name of an entity by class number?"
            },
            {
                "role": "assistant",
                "content": "cvxEntClassName\nClassNumber [in] entity class number\nClassName [out] class name\n\nOutputs an ascii text string describing the entity class identified by \"ClassNumber\". \n\n The string is stored in the memory referenced by \"ClassName\", which is assumed to be sufficient (min = 64 bytes)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to identify the entity class by its number?"
            },
            {
                "role": "assistant",
                "content": "cvxEntClassName\nClassNumber [in] entity class number\nClassName [out] class name\n\nOutputs an ascii text string describing the entity class identified by \"ClassNumber\". \n\n The string is stored in the memory referenced by \"ClassName\", which is assumed to be sufficient (min = 64 bytes)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the class name of an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntClassName\nClassNumber [in] entity class number\nClassName [out] class name\n\nOutputs an ascii text string describing the entity class identified by \"ClassNumber\". \n\n The string is stored in the memory referenced by \"ClassName\", which is assumed to be sufficient (min = 64 bytes)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the class number of a specified entity in the active object?"
            },
            {
                "role": "assistant",
                "content": "cvxEntClassNum\nidEntity [in] entity id\n\nReturns the class number of the specified entity in the active object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the class number of an entity in the active object?"
            },
            {
                "role": "assistant",
                "content": "cvxEntClassNum\nidEntity [in] entity id\n\nReturns the class number of the specified entity in the active object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to obtain the class number of a specific entity in the active object?"
            },
            {
                "role": "assistant",
                "content": "cvxEntClassNum\nidEntity [in] entity id\n\nReturns the class number of the specified entity in the active object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the class number of a specific entity in the active object?"
            },
            {
                "role": "assistant",
                "content": "cvxEntClassNumByPath\nentPath [in] entity path\n\nReturns the class number of the specified entity in the active object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the class number of an entity using its path?"
            },
            {
                "role": "assistant",
                "content": "cvxEntClassNumByPath\nentPath [in] entity path\n\nReturns the class number of the specified entity in the active object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to obtain the class number of an entity in the active object?"
            },
            {
                "role": "assistant",
                "content": "cvxEntClassNumByPath\nentPath [in] entity path\n\nReturns the class number of the specified entity in the active object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if an entity is a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxEntIsCurve\nidEntity [in] entity id (in active file)\n\nDetermine whether an entity is curve(includes edges and parting lines)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if an entity is a parting line?"
            },
            {
                "role": "assistant",
                "content": "cvxEntIsCurve\nidEntity [in] entity id (in active file)\n\nDetermine whether an entity is curve(includes edges and parting lines)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I determine if an entity is an edge?"
            },
            {
                "role": "assistant",
                "content": "cvxEntIsCurve\nidEntity [in] entity id (in active file)\n\nDetermine whether an entity is curve(includes edges and parting lines)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if an entity is an electrode?"
            },
            {
                "role": "assistant",
                "content": "cvxEntIsElectrode\nidEntity [in] entity id (in active file)\n\nDetermine whether an entity is electrode."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if an entity is an electrode?"
            },
            {
                "role": "assistant",
                "content": "cvxEntIsElectrode\nidEntity [in] entity id (in active file)\n\nDetermine whether an entity is electrode."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to identify if an entity is an electrode?"
            },
            {
                "role": "assistant",
                "content": "cvxEntIsElectrode\nidEntity [in] entity id (in active file)\n\nDetermine whether an entity is electrode."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the coordinates of the first critical point for a specified entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPnt\nidEntity [in] entity id (in active file)\nPnt [out] point coordinates\n\nGets the coordinates of the first \"critical\" point for the specified entity. \n\n For a point entity, it is the entity's coordinates. \n\n For a line, edge or interpolated curve, it is the start point. \n\n For a circle or arc, it is the center point. \n\n For a control-point-defined curve, it is the first control point. \n\n For a shape, it is the center of the shape's bounding box. \n\n For a datum plane, it is the origin. For a dimension, it is the first point of display data. \n\n For a symbol, it is the insertion point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to obtain the start point for a line, edge, or interpolated curve?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPnt\nidEntity [in] entity id (in active file)\nPnt [out] point coordinates\n\nGets the coordinates of the first \"critical\" point for the specified entity. \n\n For a point entity, it is the entity's coordinates. \n\n For a line, edge or interpolated curve, it is the start point. \n\n For a circle or arc, it is the center point. \n\n For a control-point-defined curve, it is the first control point. \n\n For a shape, it is the center of the shape's bounding box. \n\n For a datum plane, it is the origin. For a dimension, it is the first point of display data. \n\n For a symbol, it is the insertion point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the center point for a circle or arc?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPnt\nidEntity [in] entity id (in active file)\nPnt [out] point coordinates\n\nGets the coordinates of the first \"critical\" point for the specified entity. \n\n For a point entity, it is the entity's coordinates. \n\n For a line, edge or interpolated curve, it is the start point. \n\n For a circle or arc, it is the center point. \n\n For a control-point-defined curve, it is the first control point. \n\n For a shape, it is the center of the shape's bounding box. \n\n For a datum plane, it is the origin. For a dimension, it is the first point of display data. \n\n For a symbol, it is the insertion point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the end points of a curve entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntEndPnt\nidEntity [in] entity id (in active file)\nStart [out] start point\nEnd [out] end point\n\nOutputs the end points of the specified curve entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the start point of a curve entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntEndPnt\nidEntity [in] entity id (in active file)\nStart [out] start point\nEnd [out] end point\n\nOutputs the end points of the specified curve entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the end point of a specified curve entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntEndPnt\nidEntity [in] entity id (in active file)\nStart [out] start point\nEnd [out] end point\n\nOutputs the end points of the specified curve entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the parent sketch of a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntSketch\nidEntity [in] entity id\nidSketch [out] id of entity's parent sketch (0 if undefined)\n\nSearches sketches within the active part for the specified entity (idEntity). \n\n If the entity is found within a sketch, the id of the sketch is output. \n\n If the entity is not found inside a sketch, \"idSketch\" is output as zero."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if an entity is inside a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxEntSketch\nidEntity [in] entity id\nidSketch [out] id of entity's parent sketch (0 if undefined)\n\nSearches sketches within the active part for the specified entity (idEntity). \n\n If the entity is found within a sketch, the id of the sketch is output. \n\n If the entity is not found inside a sketch, \"idSketch\" is output as zero."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the sketch containing a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntSketch\nidEntity [in] entity id\nidSketch [out] id of entity's parent sketch (0 if undefined)\n\nSearches sketches within the active part for the specified entity (idEntity). \n\n If the entity is found within a sketch, the id of the sketch is output. \n\n If the entity is not found inside a sketch, \"idSketch\" is output as zero."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the parent feature of a specified entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntParent\nidEntity [in] entity id\nidParent [out] parent feature id (0 if undefined)\n\nOutputs the id of the parent feature of the specified entity in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the parent feature id of an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntParent\nidEntity [in] entity id\nidParent [out] parent feature id (0 if undefined)\n\nOutputs the id of the parent feature of the specified entity in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if an entity has a parent feature?"
            },
            {
                "role": "assistant",
                "content": "cvxEntParent\nidEntity [in] entity id\nidParent [out] parent feature id (0 if undefined)\n\nOutputs the id of the parent feature of the specified entity in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the entity id defined by a reference entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntRefEnt\nidRefEnt [in] parametric reference entity id\nidEnt [out] id of entity defined by reference entity\n\nIf \"idRefEnt\" is a valid parametric reference entity (i.e. reference geometry) in the active file, this function outputs the database id of the entity (i.e. geometry) that it defines.\n\"idEnt\" is output as zero if it is undefined for \"idRefEnt\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the entity id defined by a reference entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntRefEnt\nidRefEnt [in] parametric reference entity id\nidEnt [out] id of entity defined by reference entity\n\nIf \"idRefEnt\" is a valid parametric reference entity (i.e. reference geometry) in the active file, this function outputs the database id of the entity (i.e. geometry) that it defines.\n\"idEnt\" is output as zero if it is undefined for \"idRefEnt\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a reference entity defines any entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntRefEnt\nidRefEnt [in] parametric reference entity id\nidEnt [out] id of entity defined by reference entity\n\nIf \"idRefEnt\" is a valid parametric reference entity (i.e. reference geometry) in the active file, this function outputs the database id of the entity (i.e. geometry) that it defines.\n\"idEnt\" is output as zero if it is undefined for \"idRefEnt\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of inherited object by entity index?"
            },
            {
                "role": "assistant",
                "content": "cvxEntGetInhSubIdx\nidx_ent [in] index of entity\nklass [in] object class\nsub_class [in] object sub-class\nsubIdx [out] index of inherited object\n\nThis function get the index of the first object inherited by \"idx_ent\" with the specified class and sub-class."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the inherited object index by class and sub-class?"
            },
            {
                "role": "assistant",
                "content": "cvxEntGetInhSubIdx\nidx_ent [in] index of entity\nklass [in] object class\nsub_class [in] object sub-class\nsubIdx [out] index of inherited object\n\nThis function get the index of the first object inherited by \"idx_ent\" with the specified class and sub-class."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the first inherited object index with specified class and sub-class?"
            },
            {
                "role": "assistant",
                "content": "cvxEntGetInhSubIdx\nidx_ent [in] index of entity\nklass [in] object class\nsub_class [in] object sub-class\nsubIdx [out] index of inherited object\n\nThis function get the index of the first object inherited by \"idx_ent\" with the specified class and sub-class."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the assembly component associated with a specified entity in a 2D drawing view layout from a 3D assembly?"
            },
            {
                "role": "assistant",
                "content": "cvxEntComp\nidEntity [in] entity id\nidComp [out] component id\nFile [out] if not NULL, output name of component's parent file\nnFileBytes [in] string size of file name\nParent [out] if not NULL, output name of component's parent object\nnParentBytes [in] string size of parent object name\n\nOutputs the id of the assembly component associated with the specified entity in a 2D drawing view layout from a 3D assembly.\nAssumes that \"idEntity\" resides in the active target file.\nOutputs \"idComp = 0\" if no assembly component is found.\nOutputs the names of the component's parent file and object (i.e. part) if non-NULL pointers are input to the \"char *\" variables for \"File\" and \"Parent\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the assembly component?"
            },
            {
                "role": "assistant",
                "content": "cvxEntComp\nidEntity [in] entity id\nidComp [out] component id\nFile [out] if not NULL, output name of component's parent file\nnFileBytes [in] string size of file name\nParent [out] if not NULL, output name of component's parent object\nnParentBytes [in] string size of parent object name\n\nOutputs the id of the assembly component associated with the specified entity in a 2D drawing view layout from a 3D assembly.\nAssumes that \"idEntity\" resides in the active target file.\nOutputs \"idComp = 0\" if no assembly component is found.\nOutputs the names of the component's parent file and object (i.e. part) if non-NULL pointers are input to the \"char *\" variables for \"File\" and \"Parent\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the names of the component's parent file and object?"
            },
            {
                "role": "assistant",
                "content": "cvxEntComp\nidEntity [in] entity id\nidComp [out] component id\nFile [out] if not NULL, output name of component's parent file\nnFileBytes [in] string size of file name\nParent [out] if not NULL, output name of component's parent object\nnParentBytes [in] string size of parent object name\n\nOutputs the id of the assembly component associated with the specified entity in a 2D drawing view layout from a 3D assembly.\nAssumes that \"idEntity\" resides in the active target file.\nOutputs \"idComp = 0\" if no assembly component is found.\nOutputs the names of the component's parent file and object (i.e. part) if non-NULL pointers are input to the \"char *\" variables for \"File\" and \"Parent\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete an entity in the active root object?"
            },
            {
                "role": "assistant",
                "content": "cvxEntErase\nEnt [in] path to entity to erase\n\nErase the specified entity in the active root object (part, sketch or drawing sheet)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to erase a specified entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntErase\nEnt [in] path to entity to erase\n\nErase the specified entity in the active root object (part, sketch or drawing sheet)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove an entity from the active part, sketch or drawing sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxEntErase\nEnt [in] path to entity to erase\n\nErase the specified entity in the active root object (part, sketch or drawing sheet)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to activate the last target object in a specified path?"
            },
            {
                "role": "assistant",
                "content": "cvxEntActivate\nNewPath [in] path into new target object\nUpdateGUI [in] 1 to update GUI, else 0\nidEntity [out] entity id(input NULL to ignore)\nOldPath [out] path of original target(input NULL to ignore)\n\nActivates the last target object in the specified path (NewPath) and outputs the path of the active target object (OldPath). \n\n If \"OldPath\" is input as a NULL point, the active target path is not output. \n\n After activating a new target object with this function, you can pass \"OldPath\" back into this function as \"NewPath\" in order to re-activate the original target object.\nIf \"UpdateGUI\" is non-zero, this function updates the GUI menus to reflect a change in the target object. \n\n Otherwise, the menus of the original target object remain active.\nThe id of the entity referenced by \"NewPath\" is output via \"idEntity\". \n\n This id can be used to query the entity once its parent object is activated by this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the GUI menus to reflect a change in the target object?"
            },
            {
                "role": "assistant",
                "content": "cvxEntActivate\nNewPath [in] path into new target object\nUpdateGUI [in] 1 to update GUI, else 0\nidEntity [out] entity id(input NULL to ignore)\nOldPath [out] path of original target(input NULL to ignore)\n\nActivates the last target object in the specified path (NewPath) and outputs the path of the active target object (OldPath). \n\n If \"OldPath\" is input as a NULL point, the active target path is not output. \n\n After activating a new target object with this function, you can pass \"OldPath\" back into this function as \"NewPath\" in order to re-activate the original target object.\nIf \"UpdateGUI\" is non-zero, this function updates the GUI menus to reflect a change in the target object. \n\n Otherwise, the menus of the original target object remain active.\nThe id of the entity referenced by \"NewPath\" is output via \"idEntity\". \n\n This id can be used to query the entity once its parent object is activated by this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to re-activate the original target object after activating a new one?"
            },
            {
                "role": "assistant",
                "content": "cvxEntActivate\nNewPath [in] path into new target object\nUpdateGUI [in] 1 to update GUI, else 0\nidEntity [out] entity id(input NULL to ignore)\nOldPath [out] path of original target(input NULL to ignore)\n\nActivates the last target object in the specified path (NewPath) and outputs the path of the active target object (OldPath). \n\n If \"OldPath\" is input as a NULL point, the active target path is not output. \n\n After activating a new target object with this function, you can pass \"OldPath\" back into this function as \"NewPath\" in order to re-activate the original target object.\nIf \"UpdateGUI\" is non-zero, this function updates the GUI menus to reflect a change in the target object. \n\n Otherwise, the menus of the original target object remain active.\nThe id of the entity referenced by \"NewPath\" is output via \"idEntity\". \n\n This id can be used to query the entity once its parent object is activated by this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the entity id referenced by a specific path?"
            },
            {
                "role": "assistant",
                "content": "cvxEntActivate\nNewPath [in] path into new target object\nUpdateGUI [in] 1 to update GUI, else 0\nidEntity [out] entity id(input NULL to ignore)\nOldPath [out] path of original target(input NULL to ignore)\n\nActivates the last target object in the specified path (NewPath) and outputs the path of the active target object (OldPath). \n\n If \"OldPath\" is input as a NULL point, the active target path is not output. \n\n After activating a new target object with this function, you can pass \"OldPath\" back into this function as \"NewPath\" in order to re-activate the original target object.\nIf \"UpdateGUI\" is non-zero, this function updates the GUI menus to reflect a change in the target object. \n\n Otherwise, the menus of the original target object remain active.\nThe id of the entity referenced by \"NewPath\" is output via \"idEntity\". \n\n This id can be used to query the entity once its parent object is activated by this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the area property of a planar area bounded by curves in 3D space?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntsArea\ncnt [in] count of curves/face (only one face)\ncrvList [in] id list of curves/face\nareaProp [out] area property\n\nInquires a planar area bounded by curves in 3d space.\nThe input boundaries may consist of 3d-curves, edges, sketch profiles, and curve lists.\nThe input just support one plane face.\nnote:\nThe calling procedure MUST deallocate the output(pAreaRef and pAreaCA) with cvxMemFree(). \n\n Use cvxPartInqEntsAreaByPath() to inquire the area of the entities of sketch/component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the area of a plane face bounded by curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntsArea\ncnt [in] count of curves/face (only one face)\ncrvList [in] id list of curves/face\nareaProp [out] area property\n\nInquires a planar area bounded by curves in 3d space.\nThe input boundaries may consist of 3d-curves, edges, sketch profiles, and curve lists.\nThe input just support one plane face.\nnote:\nThe calling procedure MUST deallocate the output(pAreaRef and pAreaCA) with cvxMemFree(). \n\n Use cvxPartInqEntsAreaByPath() to inquire the area of the entities of sketch/component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output after inquiring the area property?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntsArea\ncnt [in] count of curves/face (only one face)\ncrvList [in] id list of curves/face\nareaProp [out] area property\n\nInquires a planar area bounded by curves in 3d space.\nThe input boundaries may consist of 3d-curves, edges, sketch profiles, and curve lists.\nThe input just support one plane face.\nnote:\nThe calling procedure MUST deallocate the output(pAreaRef and pAreaCA) with cvxMemFree(). \n\n Use cvxPartInqEntsAreaByPath() to inquire the area of the entities of sketch/component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the value of a specific global setting?"
            },
            {
                "role": "assistant",
                "content": "cvxGlobalGet\nGlobal [in] global setting to modify\nData [out] data to assign to global setting\n\nRetrieves the value of the specified setting. To accommodate different data types, \"Data\" is a void pointer. Make sure it references the appropriate storage type. Look at \"enum evxGlobal\" to see what type of storage is required for each setting."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the data assigned to a global setting?"
            },
            {
                "role": "assistant",
                "content": "cvxGlobalGet\nGlobal [in] global setting to modify\nData [out] data to assign to global setting\n\nRetrieves the value of the specified setting. To accommodate different data types, \"Data\" is a void pointer. Make sure it references the appropriate storage type. Look at \"enum evxGlobal\" to see what type of storage is required for each setting."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to retrieve the value of a specified setting?"
            },
            {
                "role": "assistant",
                "content": "cvxGlobalGet\nGlobal [in] global setting to modify\nData [out] data to assign to global setting\n\nRetrieves the value of the specified setting. To accommodate different data types, \"Data\" is a void pointer. Make sure it references the appropriate storage type. Look at \"enum evxGlobal\" to see what type of storage is required for each setting."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxGlobalSet\nGlobal [in] global setting to modify\nData [in] data to assign to global setting\n\nAssigns the specified data to the specified setting. To accommodate different data types, \"Data\" is a void pointer. Make sure it references the appropriate data type. Look at \"enum evxGlobal\" to see what type of data is required for each setting.\nBe careful using this function to change global settings. It is only meant for temporary modification of a setting while an API function is executing. Always restore the original setting when your function is done."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxGlobalSet\nGlobal [in] global setting to modify\nData [in] data to assign to global setting\n\nAssigns the specified data to the specified setting. To accommodate different data types, \"Data\" is a void pointer. Make sure it references the appropriate data type. Look at \"enum evxGlobal\" to see what type of data is required for each setting.\nBe careful using this function to change global settings. It is only meant for temporary modification of a setting while an API function is executing. Always restore the original setting when your function is done."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxGlobalSet\nGlobal [in] global setting to modify\nData [in] data to assign to global setting\n\nAssigns the specified data to the specified setting. To accommodate different data types, \"Data\" is a void pointer. Make sure it references the appropriate data type. Look at \"enum evxGlobal\" to see what type of data is required for each setting.\nBe careful using this function to change global settings. It is only meant for temporary modification of a setting while an API function is executing. Always restore the original setting when your function is done."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the notes associated with the active root object?"
            },
            {
                "role": "assistant",
                "content": "cvxNoteGet\nNote [out] null-terminated text string\n\nRetrieves the \"Notes\" associated with the active root object (or the active file if no root is active) and outputs them via \"Notes\". The memory referenced by \"Note\" is allocated by this function and must be deallocated by the calling procedure.\nIf there are not any notes, no memory is allocated by this function, and \"*Note\" is set to NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the notes of the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxNoteGet\nNote [out] null-terminated text string\n\nRetrieves the \"Notes\" associated with the active root object (or the active file if no root is active) and outputs them via \"Notes\". The memory referenced by \"Note\" is allocated by this function and must be deallocated by the calling procedure.\nIf there are not any notes, no memory is allocated by this function, and \"*Note\" is set to NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the memory referenced by the retrieved notes?"
            },
            {
                "role": "assistant",
                "content": "cvxNoteGet\nNote [out] null-terminated text string\n\nRetrieves the \"Notes\" associated with the active root object (or the active file if no root is active) and outputs them via \"Notes\". The memory referenced by \"Note\" is allocated by this function and must be deallocated by the calling procedure.\nIf there are not any notes, no memory is allocated by this function, and \"*Note\" is set to NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign text to the 'Notes' of the active root object?"
            },
            {
                "role": "assistant",
                "content": "cvxNoteSet\nNote [in] null-terminated text string\n\nAssigns the specified text to the \"Notes\" associated with the active root object"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set notes for the active root object?"
            },
            {
                "role": "assistant",
                "content": "cvxNoteSet\nNote [in] null-terminated text string\n\nAssigns the specified text to the \"Notes\" associated with the active root object"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I specify text for the 'Notes' of the active root object?"
            },
            {
                "role": "assistant",
                "content": "cvxNoteSet\nNote [in] null-terminated text string\n\nAssigns the specified text to the \"Notes\" associated with the active root object"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if the 'auto regen' is ON or OFF?"
            },
            {
                "role": "assistant",
                "content": "cvxAutoRegenGet\nStatus [out] 1 if \"auto regen\" is ON; 0 if OFF\n\nGets the status of part \"auto regen\" (1=ON; 0=OFF)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the status of 'auto regen' for a part?"
            },
            {
                "role": "assistant",
                "content": "cvxAutoRegenGet\nStatus [out] 1 if \"auto regen\" is ON; 0 if OFF\n\nGets the status of part \"auto regen\" (1=ON; 0=OFF)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I retrieve the status of 'auto regen' using a function?"
            },
            {
                "role": "assistant",
                "content": "cvxAutoRegenGet\nStatus [out] 1 if \"auto regen\" is ON; 0 if OFF\n\nGets the status of part \"auto regen\" (1=ON; 0=OFF)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the status of 'auto regen' for a part?"
            },
            {
                "role": "assistant",
                "content": "cvxAutoRegenSet\nStatus [in] 1 if \"auto regen\" is ON; 0 if OFF\n\nSets the status of part \"auto regen\" (1=ON; 0=OFF)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to turn 'auto regen' on or off?"
            },
            {
                "role": "assistant",
                "content": "cvxAutoRegenSet\nStatus [in] 1 if \"auto regen\" is ON; 0 if OFF\n\nSets the status of part \"auto regen\" (1=ON; 0=OFF)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the status of 'auto regen' for a part?"
            },
            {
                "role": "assistant",
                "content": "cvxAutoRegenSet\nStatus [in] 1 if \"auto regen\" is ON; 0 if OFF\n\nSets the status of part \"auto regen\" (1=ON; 0=OFF)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name of the active language?"
            },
            {
                "role": "assistant",
                "content": "cvxLangGet\nLanguage [out] name of active language\n\nOutputs the name of the active language. The following are supported language names: Danish, Dutch, English, French, German, Italian, Japanese, Korean, Portuguese, Spanish, Chinese-simplified.936, Chinese-traditional.950, Chinese.936, Thai.874, Greek.1253, Finnish"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the active language name?"
            },
            {
                "role": "assistant",
                "content": "cvxLangGet\nLanguage [out] name of active language\n\nOutputs the name of the active language. The following are supported language names: Danish, Dutch, English, French, German, Italian, Japanese, Korean, Portuguese, Spanish, Chinese-simplified.936, Chinese-traditional.950, Chinese.936, Thai.874, Greek.1253, Finnish"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the supported language names for the active language?"
            },
            {
                "role": "assistant",
                "content": "cvxLangGet\nLanguage [out] name of active language\n\nOutputs the name of the active language. The following are supported language names: Danish, Dutch, English, French, German, Italian, Japanese, Korean, Portuguese, Spanish, Chinese-simplified.936, Chinese-traditional.950, Chinese.936, Thai.874, Greek.1253, Finnish"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to map the zw3d font name to a general font?"
            },
            {
                "role": "assistant",
                "content": "cvxFontMap\nzw3dFont [in] font name of zw3d\nmapFont [out] mapped font name\n\nMap the zw3d font name to the general font.\nSuch as:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to map the font name of zw3d to a general font?"
            },
            {
                "role": "assistant",
                "content": "cvxFontMap\nzw3dFont [in] font name of zw3d\nmapFont [out] mapped font name\n\nMap the zw3d font name to the general font.\nSuch as:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the mapped font name from the zw3d font name?"
            },
            {
                "role": "assistant",
                "content": "cvxFontMap\nzw3dFont [in] font name of zw3d\nmapFont [out] mapped font name\n\nMap the zw3d font name to the general font.\nSuch as:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the active linear units type?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitGet\nType [out] active linear units type\nName [out] abbreviation for active units (NULL to ignore)\n\nOutputs an integer id that identifies the active user units for linear measure (0-microns, 1-millimeters, 2-centimeters, 3-meters, 4-inches, 5-feet).\nIf \"Name\" is not NULL, it is used to output an abbreviation for the name of the active units."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the abbreviation for active linear units?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitGet\nType [out] active linear units type\nName [out] abbreviation for active units (NULL to ignore)\n\nOutputs an integer id that identifies the active user units for linear measure (0-microns, 1-millimeters, 2-centimeters, 3-meters, 4-inches, 5-feet).\nIf \"Name\" is not NULL, it is used to output an abbreviation for the name of the active units."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get the integer id for the active linear units?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitGet\nType [out] active linear units type\nName [out] abbreviation for active units (NULL to ignore)\n\nOutputs an integer id that identifies the active user units for linear measure (0-microns, 1-millimeters, 2-centimeters, 3-meters, 4-inches, 5-feet).\nIf \"Name\" is not NULL, it is used to output an abbreviation for the name of the active units."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the sub type of a specified unit string?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitTypeGet\nunit_str [in] the string of unit\nsub_type [out] the string of sub type,0/1/2:Constant/Length/Angle\nunit_type [out] the string of unit type,Length(1~9):mic/mm/cm/dm/m/mil/in/ft/yd;Angle(1~2):radians/degrees\n\nGet the unit type and sub type for the specified unit string ."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the unit type of a specified unit string?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitTypeGet\nunit_str [in] the string of unit\nsub_type [out] the string of sub type,0/1/2:Constant/Length/Angle\nunit_type [out] the string of unit type,Length(1~9):mic/mm/cm/dm/m/mil/in/ft/yd;Angle(1~2):radians/degrees\n\nGet the unit type and sub type for the specified unit string ."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the unit type and sub type for a given unit string?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitTypeGet\nunit_str [in] the string of unit\nsub_type [out] the string of sub type,0/1/2:Constant/Length/Angle\nunit_type [out] the string of unit type,Length(1~9):mic/mm/cm/dm/m/mil/in/ft/yd;Angle(1~2):radians/degrees\n\nGet the unit type and sub type for the specified unit string ."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the active user units for linear measure?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitSet\nType [in] linear unit type\n\nSets the active user units for linear measure based on the input \"Type\" (0-microns, 1-millimeters, 2-centimeters, 3-meters, 4-inches, 5-feet)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to change the linear unit type?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitSet\nType [in] linear unit type\n\nSets the active user units for linear measure based on the input \"Type\" (0-microns, 1-millimeters, 2-centimeters, 3-meters, 4-inches, 5-feet)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the linear unit type to microns, millimeters, centimeters, meters, inches, or feet?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitSet\nType [in] linear unit type\n\nSets the active user units for linear measure based on the input \"Type\" (0-microns, 1-millimeters, 2-centimeters, 3-meters, 4-inches, 5-feet)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to convert distance from user units to millimeters?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitToSys\nDistance [inout] distance\n\nConverts specified distance from the active user units to system units (millimeters)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to convert distance to system units?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitToSys\nDistance [inout] distance\n\nConverts specified distance from the active user units to system units (millimeters)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to convert distance using cvxUnitToSys?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitToSys\nDistance [inout] distance\n\nConverts specified distance from the active user units to system units (millimeters)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to convert distance from millimeters to user units?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitToUser\nDistance [inout] distance\n\nConverts the specified distance from system units (millimeters) to the active user units."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to convert distance to user units?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitToUser\nDistance [inout] distance\n\nConverts the specified distance from system units (millimeters) to the active user units."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I convert a distance to the active user units?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitToUser\nDistance [inout] distance\n\nConverts the specified distance from system units (millimeters) to the active user units."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the active mass units type?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitMassGet\ntype [out] active mass units type\nname [out] abbreviation for active mass units (NULL to ignore)\n\nOutputs an integer id that identifies the active user units for linear measure.\nIf \"name\" is not NULL, it is used to output an abbreviation for the name of the active units."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the abbreviation for active mass units?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitMassGet\ntype [out] active mass units type\nname [out] abbreviation for active mass units (NULL to ignore)\n\nOutputs an integer id that identifies the active user units for linear measure.\nIf \"name\" is not NULL, it is used to output an abbreviation for the name of the active units."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get the integer id for the active user units for linear measure?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitMassGet\ntype [out] active mass units type\nname [out] abbreviation for active mass units (NULL to ignore)\n\nOutputs an integer id that identifies the active user units for linear measure.\nIf \"name\" is not NULL, it is used to output an abbreviation for the name of the active units."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the active user units for mass measure?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitMassSet\ntype [in] mass unit type\n\nSets the active user units for mass measure based on the input \"type\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the mass unit type?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitMassSet\ntype [in] mass unit type\n\nSets the active user units for mass measure based on the input \"type\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the mass unit type?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitMassSet\ntype [in] mass unit type\n\nSets the active user units for mass measure based on the input \"type\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the grid spacing?"
            },
            {
                "role": "assistant",
                "content": "cvxSkGridSpacingGet\nspacing [out] grid spacing\n\nOutput grid spacing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the grid spacing?"
            },
            {
                "role": "assistant",
                "content": "cvxSkGridSpacingGet\nspacing [out] grid spacing\n\nOutput grid spacing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the grid spacing?"
            },
            {
                "role": "assistant",
                "content": "cvxSkGridSpacingGet\nspacing [out] grid spacing\n\nOutput grid spacing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the grid spacing?"
            },
            {
                "role": "assistant",
                "content": "cvxSkGridSpacingSet\nspacing [in] grid spacing\n\nSet grid spacing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the grid spacing?"
            },
            {
                "role": "assistant",
                "content": "cvxSkGridSpacingSet\nspacing [in] grid spacing\n\nSet grid spacing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to update the grid spacing?"
            },
            {
                "role": "assistant",
                "content": "cvxSkGridSpacingSet\nspacing [in] grid spacing\n\nSet grid spacing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to convert input color from floating point values to integer values?"
            },
            {
                "role": "assistant",
                "content": "cvxColorfToColor\nrgbf [in] input color (each float component defined over 0.0 to 1.0)\nrgb [out] output color (each component defined over 0 to 255)\n\nThis function copies the input svxColorf structure, in which the color components are floating point values defined over 0.0 to 1.0, to the output svxColor structure, where the color component values are defined over 0 to 255.\nsee:\ncvxColorToColorf() to copy svxColor to svxColorf."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to copy svxColorf to svxColor?"
            },
            {
                "role": "assistant",
                "content": "cvxColorfToColor\nrgbf [in] input color (each float component defined over 0.0 to 1.0)\nrgb [out] output color (each component defined over 0 to 255)\n\nThis function copies the input svxColorf structure, in which the color components are floating point values defined over 0.0 to 1.0, to the output svxColor structure, where the color component values are defined over 0 to 255.\nsee:\ncvxColorToColorf() to copy svxColor to svxColorf."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the output color with components defined over 0 to 255?"
            },
            {
                "role": "assistant",
                "content": "cvxColorfToColor\nrgbf [in] input color (each float component defined over 0.0 to 1.0)\nrgb [out] output color (each component defined over 0 to 255)\n\nThis function copies the input svxColorf structure, in which the color components are floating point values defined over 0.0 to 1.0, to the output svxColor structure, where the color component values are defined over 0 to 255.\nsee:\ncvxColorToColorf() to copy svxColor to svxColorf."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to convert color components from integer to float values?"
            },
            {
                "role": "assistant",
                "content": "cvxColorToColorf\nrgb [in] input color (each component defined over 0 to 255)\nrgbf [out] output color (each float component defined over 0.0 to 1.0)\n\nThis function copies the input svxColor structure, in which the color component values are defined over 0 to 255, to the output svxColorf structure, where the color components are floating point values defined over 0.0 to 1.0.\nsee:\ncvxColorfToColor() to copy svxColorf to svxColor."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to convert color from 0 to 255 range to 0.0 to 1.0 range?"
            },
            {
                "role": "assistant",
                "content": "cvxColorToColorf\nrgb [in] input color (each component defined over 0 to 255)\nrgbf [out] output color (each float component defined over 0.0 to 1.0)\n\nThis function copies the input svxColor structure, in which the color component values are defined over 0 to 255, to the output svxColorf structure, where the color components are floating point values defined over 0.0 to 1.0.\nsee:\ncvxColorfToColor() to copy svxColorf to svxColor."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to copy svxColor to svxColorf?"
            },
            {
                "role": "assistant",
                "content": "cvxColorToColorf\nrgb [in] input color (each component defined over 0 to 255)\nrgbf [out] output color (each float component defined over 0.0 to 1.0)\n\nThis function copies the input svxColor structure, in which the color component values are defined over 0 to 255, to the output svxColorf structure, where the color components are floating point values defined over 0.0 to 1.0.\nsee:\ncvxColorfToColor() to copy svxColorf to svxColor."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get RGB components of a standard color?"
            },
            {
                "role": "assistant",
                "content": "cvxColorRGB\ncolor [in] one of the evxColor values for a standard color or an index color\nrgb [out] RGB components for the input color\n\nOutput the RGB components of a standard color or an index color.\nsee:\ncvxColorNear() for a function that finds the evxColor value of the nearest standard color when given a color's RGB components."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get RGB components of an index color?"
            },
            {
                "role": "assistant",
                "content": "cvxColorRGB\ncolor [in] one of the evxColor values for a standard color or an index color\nrgb [out] RGB components for the input color\n\nOutput the RGB components of a standard color or an index color.\nsee:\ncvxColorNear() for a function that finds the evxColor value of the nearest standard color when given a color's RGB components."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to find the nearest standard color based on RGB components?"
            },
            {
                "role": "assistant",
                "content": "cvxColorRGB\ncolor [in] one of the evxColor values for a standard color or an index color\nrgb [out] RGB components for the input color\n\nOutput the RGB components of a standard color or an index color.\nsee:\ncvxColorNear() for a function that finds the evxColor value of the nearest standard color when given a color's RGB components."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the nearest match to a standard color based on RGB components?"
            },
            {
                "role": "assistant",
                "content": "cvxColorNear\nrgb [in] RGB components of a color to match to a standard color or an index color\n\nThis function returns the color defined by evxColor type that is the nearest match to the input RGB components. The return value is never VX_COLOR_NULL or VX_COLOR_RGB.\nsee:\ncvxColorRGB() for a function that outputs RGB components when given a standard color's evxColor value."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to match RGB components to a standard color?"
            },
            {
                "role": "assistant",
                "content": "cvxColorNear\nrgb [in] RGB components of a color to match to a standard color or an index color\n\nThis function returns the color defined by evxColor type that is the nearest match to the input RGB components. The return value is never VX_COLOR_NULL or VX_COLOR_RGB.\nsee:\ncvxColorRGB() for a function that outputs RGB components when given a standard color's evxColor value."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the color defined by evxColor type based on RGB components?"
            },
            {
                "role": "assistant",
                "content": "cvxColorNear\nrgb [in] RGB components of a color to match to a standard color or an index color\n\nThis function returns the color defined by evxColor type that is the nearest match to the input RGB components. The return value is never VX_COLOR_NULL or VX_COLOR_RGB.\nsee:\ncvxColorRGB() for a function that outputs RGB components when given a standard color's evxColor value."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if the user has pressed the <Esc> key?"
            },
            {
                "role": "assistant",
                "content": "cvxEscCheck\n\nWhen escape checking has been enabled using cvxEscStart(), this function returns a non-zero value if the user has pressed the <Esc> key or other menu item that generates and \"Escape\" event with the intention of terminating execution of the active command.\nIf no \"Escape\" event has been triggered by the user, this function returns 0."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to detect if the user has triggered an 'Escape' event?"
            },
            {
                "role": "assistant",
                "content": "cvxEscCheck\n\nWhen escape checking has been enabled using cvxEscStart(), this function returns a non-zero value if the user has pressed the <Esc> key or other menu item that generates and \"Escape\" event with the intention of terminating execution of the active command.\nIf no \"Escape\" event has been triggered by the user, this function returns 0."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to enable escape checking using cvxEscStart()?"
            },
            {
                "role": "assistant",
                "content": "cvxEscCheck\n\nWhen escape checking has been enabled using cvxEscStart(), this function returns a non-zero value if the user has pressed the <Esc> key or other menu item that generates and \"Escape\" event with the intention of terminating execution of the active command.\nIf no \"Escape\" event has been triggered by the user, this function returns 0."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxEscDisable\nEscapeState [out] current escape checking state\n\nDisables checking for \"Escape\" events overriding cvxEscStart(). This function MUST ALWAYS be paired with a subsequent call to cvxEscRestore(). The \"integer\" value output by this function (EscapeState) must be passed to the corresponding call to cvxEscRestore()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxEscDisable\nEscapeState [out] current escape checking state\n\nDisables checking for \"Escape\" events overriding cvxEscStart(). This function MUST ALWAYS be paired with a subsequent call to cvxEscRestore(). The \"integer\" value output by this function (EscapeState) must be passed to the corresponding call to cvxEscRestore()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxEscDisable\nEscapeState [out] current escape checking state\n\nDisables checking for \"Escape\" events overriding cvxEscStart(). This function MUST ALWAYS be paired with a subsequent call to cvxEscRestore(). The \"integer\" value output by this function (EscapeState) must be passed to the corresponding call to cvxEscRestore()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to re-enable checking for 'Escape' events?"
            },
            {
                "role": "assistant",
                "content": "cvxEscRestore\nEscapeState [in] original escape checking state\n\nRe-enables checking for \"Escape\" events after cvxEscDisable() has been called. \"EscapeState\" should be the value output by a previous call to cvxEscDisable(). This function MUST ALWAYS be paired with a prior call to cvxEscDisable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What should be the value of 'EscapeState' to re-enable checking for 'Escape' events?"
            },
            {
                "role": "assistant",
                "content": "cvxEscRestore\nEscapeState [in] original escape checking state\n\nRe-enables checking for \"Escape\" events after cvxEscDisable() has been called. \"EscapeState\" should be the value output by a previous call to cvxEscDisable(). This function MUST ALWAYS be paired with a prior call to cvxEscDisable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to pair with cvxEscDisable() to re-enable checking for 'Escape' events?"
            },
            {
                "role": "assistant",
                "content": "cvxEscRestore\nEscapeState [in] original escape checking state\n\nRe-enables checking for \"Escape\" events after cvxEscDisable() has been called. \"EscapeState\" should be the value output by a previous call to cvxEscDisable(). This function MUST ALWAYS be paired with a prior call to cvxEscDisable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to start 'Escape' checking?"
            },
            {
                "role": "assistant",
                "content": "cvxEscStart\n\nThis function is used to start \"Escape\" checking, whereby execution of a command is aborted if the user presses the <Esc> button or other menu item that generates an \"Escape\" event. This presumes that the currently executing code is calling cvxEscCheck() periodically to allow escape events to be processed.\nTHE CALLING PROCEDURE MUST PAIR A CALL TO cvxEscStart() WITH A SUBSEQUENT CALL TO cvxEscEnd().\nYou should put escape checking in a callback function or other code that could take a long time to execute, but that you want to abort if the user tries to initiate a new input or action through the user interface. Put cvxEscStart() at the beginning of your function and cvxEscEnd() at the end. Add calls to cvxEscCheck() between cvxEscStart() and cvxEscEnd(). If a call to cvxEscCheck() returns a non-zero value, clean up whatever your function has started (including all dynamically allocated memory), call cvxEscEnd() and exit your function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should I pair a call to cvxEscStart() with a subsequent call to cvxEscEnd()?"
            },
            {
                "role": "assistant",
                "content": "cvxEscStart\n\nThis function is used to start \"Escape\" checking, whereby execution of a command is aborted if the user presses the <Esc> button or other menu item that generates an \"Escape\" event. This presumes that the currently executing code is calling cvxEscCheck() periodically to allow escape events to be processed.\nTHE CALLING PROCEDURE MUST PAIR A CALL TO cvxEscStart() WITH A SUBSEQUENT CALL TO cvxEscEnd().\nYou should put escape checking in a callback function or other code that could take a long time to execute, but that you want to abort if the user tries to initiate a new input or action through the user interface. Put cvxEscStart() at the beginning of your function and cvxEscEnd() at the end. Add calls to cvxEscCheck() between cvxEscStart() and cvxEscEnd(). If a call to cvxEscCheck() returns a non-zero value, clean up whatever your function has started (including all dynamically allocated memory), call cvxEscEnd() and exit your function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Where should I put escape checking in a callback function?"
            },
            {
                "role": "assistant",
                "content": "cvxEscStart\n\nThis function is used to start \"Escape\" checking, whereby execution of a command is aborted if the user presses the <Esc> button or other menu item that generates an \"Escape\" event. This presumes that the currently executing code is calling cvxEscCheck() periodically to allow escape events to be processed.\nTHE CALLING PROCEDURE MUST PAIR A CALL TO cvxEscStart() WITH A SUBSEQUENT CALL TO cvxEscEnd().\nYou should put escape checking in a callback function or other code that could take a long time to execute, but that you want to abort if the user tries to initiate a new input or action through the user interface. Put cvxEscStart() at the beginning of your function and cvxEscEnd() at the end. Add calls to cvxEscCheck() between cvxEscStart() and cvxEscEnd(). If a call to cvxEscCheck() returns a non-zero value, clean up whatever your function has started (including all dynamically allocated memory), call cvxEscEnd() and exit your function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What should I do if a call to cvxEscCheck() returns a non-zero value?"
            },
            {
                "role": "assistant",
                "content": "cvxEscStart\n\nThis function is used to start \"Escape\" checking, whereby execution of a command is aborted if the user presses the <Esc> button or other menu item that generates an \"Escape\" event. This presumes that the currently executing code is calling cvxEscCheck() periodically to allow escape events to be processed.\nTHE CALLING PROCEDURE MUST PAIR A CALL TO cvxEscStart() WITH A SUBSEQUENT CALL TO cvxEscEnd().\nYou should put escape checking in a callback function or other code that could take a long time to execute, but that you want to abort if the user tries to initiate a new input or action through the user interface. Put cvxEscStart() at the beginning of your function and cvxEscEnd() at the end. Add calls to cvxEscCheck() between cvxEscStart() and cvxEscEnd(). If a call to cvxEscCheck() returns a non-zero value, clean up whatever your function has started (including all dynamically allocated memory), call cvxEscEnd() and exit your function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to end 'Escape' checking after initialization with CdEscStart()?"
            },
            {
                "role": "assistant",
                "content": "cvxEscEnd\n\nThis function is used to end \"Escape\" checking after it has been previously initialized with CdEscStart(). Calls to CdEscStart() MUST ALWAYS be paired with a call to CdEscEnd()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should CdEscEnd() be called?"
            },
            {
                "role": "assistant",
                "content": "cvxEscEnd\n\nThis function is used to end \"Escape\" checking after it has been previously initialized with CdEscStart(). Calls to CdEscStart() MUST ALWAYS be paired with a call to CdEscEnd()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of CdEscEnd() function?"
            },
            {
                "role": "assistant",
                "content": "cvxEscEnd\n\nThis function is used to end \"Escape\" checking after it has been previously initialized with CdEscStart(). Calls to CdEscStart() MUST ALWAYS be paired with a call to CdEscEnd()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check the active ZW3D version number?"
            },
            {
                "role": "assistant",
                "content": "cvxVersion\nvxStatus [out] status\n\nReturns the active ZW3D version number as an integer (one-hundreths). If \"vxStatus\" is not NULL, a string describing the version is output that indicates whether it is Alpha or Beta along with a revision number. If \"vxStatus\" is not NULL, it should point to at least 80 bytes of memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the status of the ZW3D version?"
            },
            {
                "role": "assistant",
                "content": "cvxVersion\nvxStatus [out] status\n\nReturns the active ZW3D version number as an integer (one-hundreths). If \"vxStatus\" is not NULL, a string describing the version is output that indicates whether it is Alpha or Beta along with a revision number. If \"vxStatus\" is not NULL, it should point to at least 80 bytes of memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if the ZW3D version is Alpha or Beta?"
            },
            {
                "role": "assistant",
                "content": "cvxVersion\nvxStatus [out] status\n\nReturns the active ZW3D version number as an integer (one-hundreths). If \"vxStatus\" is not NULL, a string describing the version is output that indicates whether it is Alpha or Beta along with a revision number. If \"vxStatus\" is not NULL, it should point to at least 80 bytes of memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the version number of ZW3D?"
            },
            {
                "role": "assistant",
                "content": "cvxVersionNum\nverNum [out] version number\n\nGet version number string of ZW3D. This is the VERNUM date and internal version number that ZW3D displays in its \"About\" box to identify a specify build of ZW3D.\nsee:\ncvxVersion() to get the current release number for the version of ZW3D that is in use."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the version number of ZW3D?"
            },
            {
                "role": "assistant",
                "content": "cvxVersionNum\nverNum [out] version number\n\nGet version number string of ZW3D. This is the VERNUM date and internal version number that ZW3D displays in its \"About\" box to identify a specify build of ZW3D.\nsee:\ncvxVersion() to get the current release number for the version of ZW3D that is in use."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the version number of ZW3D?"
            },
            {
                "role": "assistant",
                "content": "cvxVersionNum\nverNum [out] version number\n\nGet version number string of ZW3D. This is the VERNUM date and internal version number that ZW3D displays in its \"About\" box to identify a specify build of ZW3D.\nsee:\ncvxVersion() to get the current release number for the version of ZW3D that is in use."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of filters?"
            },
            {
                "role": "assistant",
                "content": "cvxFilterListGet\ncount [out] the count of filters\nfilterList [out] list of filters' names, request vxName[30]\n\nGet a list of filters' names."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of filters' names?"
            },
            {
                "role": "assistant",
                "content": "cvxFilterListGet\ncount [out] the count of filters\nfilterList [out] list of filters' names, request vxName[30]\n\nGet a list of filters' names."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the names of filters?"
            },
            {
                "role": "assistant",
                "content": "cvxFilterListGet\ncount [out] the count of filters\nfilterList [out] list of filters' names, request vxName[30]\n\nGet a list of filters' names."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the color filter based on the color index?"
            },
            {
                "role": "assistant",
                "content": "cvxColorFilter\ncolorIdx [in] the index of color filter\n\nSet the color filter according to color index, this value is the index of color picker in ZW3D, and it should in the range of V_COLOR_NULL ~ V_COLOR_LAST, it will reset the filter to pick all if index is out of this range."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the range of color index for setting the color filter?"
            },
            {
                "role": "assistant",
                "content": "cvxColorFilter\ncolorIdx [in] the index of color filter\n\nSet the color filter according to color index, this value is the index of color picker in ZW3D, and it should in the range of V_COLOR_NULL ~ V_COLOR_LAST, it will reset the filter to pick all if index is out of this range."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if the color index is out of range when setting the color filter?"
            },
            {
                "role": "assistant",
                "content": "cvxColorFilter\ncolorIdx [in] the index of color filter\n\nSet the color filter according to color index, this value is the index of color picker in ZW3D, and it should in the range of V_COLOR_NULL ~ V_COLOR_LAST, it will reset the filter to pick all if index is out of this range."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name of the current active filter?"
            },
            {
                "role": "assistant",
                "content": "cvxFilterActiveGet\nFilter [out] the name of current active filter\n\nGet current active filter name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the name of the active filter?"
            },
            {
                "role": "assistant",
                "content": "cvxFilterActiveGet\nFilter [out] the name of current active filter\n\nGet current active filter name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to obtain the name of the currently active filter?"
            },
            {
                "role": "assistant",
                "content": "cvxFilterActiveGet\nFilter [out] the name of current active filter\n\nGet current active filter name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if two labels are matched?"
            },
            {
                "role": "assistant",
                "content": "cvxLabelMatch\nLabel1 [in] first persistent label (null-terminated integer array)\nLabel2 [in] second persistent label (null-terminated integer array)\n\nDetermine whether label are matched."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check if two labels match?"
            },
            {
                "role": "assistant",
                "content": "cvxLabelMatch\nLabel1 [in] first persistent label (null-terminated integer array)\nLabel2 [in] second persistent label (null-terminated integer array)\n\nDetermine whether label are matched."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to compare two persistent labels?"
            },
            {
                "role": "assistant",
                "content": "cvxLabelMatch\nLabel1 [in] first persistent label (null-terminated integer array)\nLabel2 [in] second persistent label (null-terminated integer array)\n\nDetermine whether label are matched."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check and fix a name without warning messages?"
            },
            {
                "role": "assistant",
                "content": "cvxNameIsOkay\nname [inout] name to check\nsize [in] max size (bytes) of a valid name\noption [in] -2 - check and fix name without warning messages -1 - check and fix name with warning messages 0 - check name without fixes and messages 1 - check name with messages indicating problems\n\nLeading and trailing blank spaces are removed from \"name\".\nIf an positive integer number (4 digits or less) is input as name\", it is padded with zero's until it is 4 digits long.\n\nA name that is too long (longer than \"size\") is truncated.\n\nIt is assumed that the input \"name\" is no longer than 512 bytes.\nInvalid characters are replaced with underscores."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check a name without fixes and messages?"
            },
            {
                "role": "assistant",
                "content": "cvxNameIsOkay\nname [inout] name to check\nsize [in] max size (bytes) of a valid name\noption [in] -2 - check and fix name without warning messages -1 - check and fix name with warning messages 0 - check name without fixes and messages 1 - check name with messages indicating problems\n\nLeading and trailing blank spaces are removed from \"name\".\nIf an positive integer number (4 digits or less) is input as name\", it is padded with zero's until it is 4 digits long.\n\nA name that is too long (longer than \"size\") is truncated.\n\nIt is assumed that the input \"name\" is no longer than 512 bytes.\nInvalid characters are replaced with underscores."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to pad a number with zeros until it is 4 digits long?"
            },
            {
                "role": "assistant",
                "content": "cvxNameIsOkay\nname [inout] name to check\nsize [in] max size (bytes) of a valid name\noption [in] -2 - check and fix name without warning messages -1 - check and fix name with warning messages 0 - check name without fixes and messages 1 - check name with messages indicating problems\n\nLeading and trailing blank spaces are removed from \"name\".\nIf an positive integer number (4 digits or less) is input as name\", it is padded with zero's until it is 4 digits long.\n\nA name that is too long (longer than \"size\") is truncated.\n\nIt is assumed that the input \"name\" is no longer than 512 bytes.\nInvalid characters are replaced with underscores."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle invalid characters in a name?"
            },
            {
                "role": "assistant",
                "content": "cvxNameIsOkay\nname [inout] name to check\nsize [in] max size (bytes) of a valid name\noption [in] -2 - check and fix name without warning messages -1 - check and fix name with warning messages 0 - check name without fixes and messages 1 - check name with messages indicating problems\n\nLeading and trailing blank spaces are removed from \"name\".\nIf an positive integer number (4 digits or less) is input as name\", it is padded with zero's until it is 4 digits long.\n\nA name that is too long (longer than \"size\") is truncated.\n\nIt is assumed that the input \"name\" is no longer than 512 bytes.\nInvalid characters are replaced with underscores."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the network card id of the host computer?"
            },
            {
                "role": "assistant",
                "content": "cvxHostId\nidNetwork [out] decimal encoded network id\nidDongle [out] decimal encoded dongle id\n\nOutputs the network card id and/or dongle id of the host computer for the instance of ZW3D currently executing.\nnote:\nDongle id is not supported from version 14.6 onward."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the dongle id of the host computer?"
            },
            {
                "role": "assistant",
                "content": "cvxHostId\nidNetwork [out] decimal encoded network id\nidDongle [out] decimal encoded dongle id\n\nOutputs the network card id and/or dongle id of the host computer for the instance of ZW3D currently executing.\nnote:\nDongle id is not supported from version 14.6 onward."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the decimal encoded network id?"
            },
            {
                "role": "assistant",
                "content": "cvxHostId\nidNetwork [out] decimal encoded network id\nidDongle [out] decimal encoded dongle id\n\nOutputs the network card id and/or dongle id of the host computer for the instance of ZW3D currently executing.\nnote:\nDongle id is not supported from version 14.6 onward."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is the dongle id retrieval supported in version 14.6 onward?"
            },
            {
                "role": "assistant",
                "content": "cvxHostId\nidNetwork [out] decimal encoded network id\nidDongle [out] decimal encoded dongle id\n\nOutputs the network card id and/or dongle id of the host computer for the instance of ZW3D currently executing.\nnote:\nDongle id is not supported from version 14.6 onward."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to notify Zw3d to exit?"
            },
            {
                "role": "assistant",
                "content": "cvxNotifyExit\nopt [in] whether inform the user that zw3d will exit. 0-no, 1-yes\n\nNotify zw3d to exit."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to inform the user about Zw3d exiting?"
            },
            {
                "role": "assistant",
                "content": "cvxNotifyExit\nopt [in] whether inform the user that zw3d will exit. 0-no, 1-yes\n\nNotify zw3d to exit."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to indicate Zw3d to exit?"
            },
            {
                "role": "assistant",
                "content": "cvxNotifyExit\nopt [in] whether inform the user that zw3d will exit. 0-no, 1-yes\n\nNotify zw3d to exit."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the value of Misumi Mold installed mark?"
            },
            {
                "role": "assistant",
                "content": "cvxSetMSMMoldInstalled\nIsInstalled [in] 1 if Misumi Mold is installed, 0 otherwise\n\nSet the value of the Misumi Mold installed mark \"VgMoldInstalled\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check if Misumi Mold is installed?"
            },
            {
                "role": "assistant",
                "content": "cvxSetMSMMoldInstalled\nIsInstalled [in] 1 if Misumi Mold is installed, 0 otherwise\n\nSet the value of the Misumi Mold installed mark \"VgMoldInstalled\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to indicate if Misumi Mold is installed?"
            },
            {
                "role": "assistant",
                "content": "cvxSetMSMMoldInstalled\nIsInstalled [in] 1 if Misumi Mold is installed, 0 otherwise\n\nSet the value of the Misumi Mold installed mark \"VgMoldInstalled\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the value of Misumi Press installed mark?"
            },
            {
                "role": "assistant",
                "content": "cvxSetMSMPressInstalled\nIsInstalled [in] 1 if Misumi Press is installed, 0 otherwise\n\nSet the value of the Misumi Press installed mark \"VgPressInstalled\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check if Misumi Press is installed?"
            },
            {
                "role": "assistant",
                "content": "cvxSetMSMPressInstalled\nIsInstalled [in] 1 if Misumi Press is installed, 0 otherwise\n\nSet the value of the Misumi Press installed mark \"VgPressInstalled\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxSetMSMPressInstalled to indicate Misumi Press installation?"
            },
            {
                "role": "assistant",
                "content": "cvxSetMSMPressInstalled\nIsInstalled [in] 1 if Misumi Press is installed, 0 otherwise\n\nSet the value of the Misumi Press installed mark \"VgPressInstalled\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the plugin path of ZW3D in regedit?"
            },
            {
                "role": "assistant",
                "content": "cvxPluginRegPathGet\npathList [out] plugin path, an array\npCnt [out] count of pathList\nis64 [in] if 0, paths of 32-bit plugin are acquired, else 64-bit plugin path\n\nGet plugin path of ZW3D in regedit.\nnote:\nRelease memory of pathList is the caller's responsibility. There is an example named 'DllRegister' in ApiExample."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to acquire paths of 32-bit plugin?"
            },
            {
                "role": "assistant",
                "content": "cvxPluginRegPathGet\npathList [out] plugin path, an array\npCnt [out] count of pathList\nis64 [in] if 0, paths of 32-bit plugin are acquired, else 64-bit plugin path\n\nGet plugin path of ZW3D in regedit.\nnote:\nRelease memory of pathList is the caller's responsibility. There is an example named 'DllRegister' in ApiExample."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to acquire paths of 64-bit plugin?"
            },
            {
                "role": "assistant",
                "content": "cvxPluginRegPathGet\npathList [out] plugin path, an array\npCnt [out] count of pathList\nis64 [in] if 0, paths of 32-bit plugin are acquired, else 64-bit plugin path\n\nGet plugin path of ZW3D in regedit.\nnote:\nRelease memory of pathList is the caller's responsibility. There is an example named 'DllRegister' in ApiExample."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the plugin path of ZW3D in regedit?"
            },
            {
                "role": "assistant",
                "content": "cvxPluginRegPathGetByLongPath\npathList [out] plugin path, an array\npCnt [out] count of pathList\nis64 [in] if 0, paths of 32-bit plugin are acquired, else 64-bit plugin path\n\nGet plugin path of ZW3D in regedit.\nnote:\nRelease memory of pathList is the caller's responsibility. There is an example named 'DllRegister' in ApiExample."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to acquire paths of 32-bit plugin?"
            },
            {
                "role": "assistant",
                "content": "cvxPluginRegPathGetByLongPath\npathList [out] plugin path, an array\npCnt [out] count of pathList\nis64 [in] if 0, paths of 32-bit plugin are acquired, else 64-bit plugin path\n\nGet plugin path of ZW3D in regedit.\nnote:\nRelease memory of pathList is the caller's responsibility. There is an example named 'DllRegister' in ApiExample."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to acquire paths of 64-bit plugin?"
            },
            {
                "role": "assistant",
                "content": "cvxPluginRegPathGetByLongPath\npathList [out] plugin path, an array\npCnt [out] count of pathList\nis64 [in] if 0, paths of 32-bit plugin are acquired, else 64-bit plugin path\n\nGet plugin path of ZW3D in regedit.\nnote:\nRelease memory of pathList is the caller's responsibility. There is an example named 'DllRegister' in ApiExample."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to load the context file associated with a help chm file?"
            },
            {
                "role": "assistant",
                "content": "cvxHelpDocLoad\nfilePath [in] the context file path\n\nLoad the context file associated with help chm file in memory.\nnote:\nThere are two files should be prepared. The first one is a context file and the second is a help document file with 'chm' format. These two files should be put in the same directory. The content of context file should be like as below: Line 1: Line 2: CommandNameA xx.html Line 3: CommandNameB xx.html Line 4: FormNameA xx.html ..."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the required files to be prepared for loading the context file?"
            },
            {
                "role": "assistant",
                "content": "cvxHelpDocLoad\nfilePath [in] the context file path\n\nLoad the context file associated with help chm file in memory.\nnote:\nThere are two files should be prepared. The first one is a context file and the second is a help document file with 'chm' format. These two files should be put in the same directory. The content of context file should be like as below: Line 1: Line 2: CommandNameA xx.html Line 3: CommandNameB xx.html Line 4: FormNameA xx.html ..."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Where should the context file and help document file be placed?"
            },
            {
                "role": "assistant",
                "content": "cvxHelpDocLoad\nfilePath [in] the context file path\n\nLoad the context file associated with help chm file in memory.\nnote:\nThere are two files should be prepared. The first one is a context file and the second is a help document file with 'chm' format. These two files should be put in the same directory. The content of context file should be like as below: Line 1: Line 2: CommandNameA xx.html Line 3: CommandNameB xx.html Line 4: FormNameA xx.html ..."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set a callback function for processing the target application option?"
            },
            {
                "role": "assistant",
                "content": "cvxAppAction\ntype [in] action type\nparam [in] callback function\n\nSet a callback function. When processing the target application option, the callback function will be called.\nIf this function called many times with the same 'type', only the last will take effect.\nIf param->pfn is null, the original callback function, if there exists, will be removed.\nnote:\nIf one call this function to register a callback in a dll module, he must call this function again, with argument param set as NULL, to unregister the callback for each action before the dll module exit. Usually we can do this in the exit function of the dll module."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if the function is called multiple times with the same 'type'?"
            },
            {
                "role": "assistant",
                "content": "cvxAppAction\ntype [in] action type\nparam [in] callback function\n\nSet a callback function. When processing the target application option, the callback function will be called.\nIf this function called many times with the same 'type', only the last will take effect.\nIf param->pfn is null, the original callback function, if there exists, will be removed.\nnote:\nIf one call this function to register a callback in a dll module, he must call this function again, with argument param set as NULL, to unregister the callback for each action before the dll module exit. Usually we can do this in the exit function of the dll module."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove the original callback function?"
            },
            {
                "role": "assistant",
                "content": "cvxAppAction\ntype [in] action type\nparam [in] callback function\n\nSet a callback function. When processing the target application option, the callback function will be called.\nIf this function called many times with the same 'type', only the last will take effect.\nIf param->pfn is null, the original callback function, if there exists, will be removed.\nnote:\nIf one call this function to register a callback in a dll module, he must call this function again, with argument param set as NULL, to unregister the callback for each action before the dll module exit. Usually we can do this in the exit function of the dll module."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to unregister the callback for each action before the dll module exit?"
            },
            {
                "role": "assistant",
                "content": "cvxAppAction\ntype [in] action type\nparam [in] callback function\n\nSet a callback function. When processing the target application option, the callback function will be called.\nIf this function called many times with the same 'type', only the last will take effect.\nIf param->pfn is null, the original callback function, if there exists, will be removed.\nnote:\nIf one call this function to register a callback in a dll module, he must call this function again, with argument param set as NULL, to unregister the callback for each action before the dll module exit. Usually we can do this in the exit function of the dll module."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a new layer with a specific name?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerAdd\nName [in] layer name\n\nCreates a new layer with the specified name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a new layer by name?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerAdd\nName [in] layer name\n\nCreates a new layer with the specified name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I add a layer with a custom name?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerAdd\nName [in] layer name\n\nCreates a new layer with the specified name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a layer entity with layer info?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerAdd2\npsLayerInfo [in] layer info\nNumber [out] layer number (0-255)\n\nCreate a layer entity with layer info."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a layer with specific layer info?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerAdd2\npsLayerInfo [in] layer info\nNumber [out] layer number (0-255)\n\nCreate a layer entity with layer info."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the layer number after creating a layer entity?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerAdd2\npsLayerInfo [in] layer info\nNumber [out] layer number (0-255)\n\nCreate a layer entity with layer info."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a specific layer?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerDel\nName [in] layer name\n\nDeletes the specified layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to remove a layer by name?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerDel\nName [in] layer name\n\nDeletes the specified layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I delete a layer in the CAD software?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerDel\nName [in] layer name\n\nDeletes the specified layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a layer by its number?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerDel2\nNumber [in] layer number (0-255)\n\nDelete a layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to remove a specific layer?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerDel2\nNumber [in] layer number (0-255)\n\nDelete a layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I delete a layer in the CAD software?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerDel2\nNumber [in] layer number (0-255)\n\nDelete a layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to activate a specific layer?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerActivate\nName [in] layer name\n\nActivates the specified layer so that newly-created entities are automatically assigned to it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to automatically assign newly-created entities to a specified layer?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerActivate\nName [in] layer name\n\nActivates the specified layer so that newly-created entities are automatically assigned to it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I activate a layer so that it becomes the default for new entities?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerActivate\nName [in] layer name\n\nActivates the specified layer so that newly-created entities are automatically assigned to it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to synchronize entity visibility with layer visibility?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerSync\n\nSynchronizes entity visibility with layer visibility."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to sync layer visibility with entity visibility?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerSync\n\nSynchronizes entity visibility with layer visibility."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to manage entity visibility based on layer visibility?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerSync\n\nSynchronizes entity visibility with layer visibility."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to show all layers at once?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerShowAll\n\nMakes all layers visible."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to make all layers visible?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerShowAll\n\nMakes all layers visible."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display all layers in the CAD software?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerShowAll\n\nMakes all layers visible."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the layer id of a specific layer?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerIdModify\nsrcNumber [in] source layer id\ntarNumber [in] target layer id\n\nModify the layer id of layer and related objects, source layer id and target layer id must be 0-255.\nnote:\nThe function does not allow layer id 0 to be modified."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is it possible to change the layer id of related objects?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerIdModify\nsrcNumber [in] source layer id\ntarNumber [in] target layer id\n\nModify the layer id of layer and related objects, source layer id and target layer id must be 0-255.\nnote:\nThe function does not allow layer id 0 to be modified."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the constraints for the source and target layer ids?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerIdModify\nsrcNumber [in] source layer id\ntarNumber [in] target layer id\n\nModify the layer id of layer and related objects, source layer id and target layer id must be 0-255.\nnote:\nThe function does not allow layer id 0 to be modified."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can layer id 0 be modified using this function?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerIdModify\nsrcNumber [in] source layer id\ntarNumber [in] target layer id\n\nModify the layer id of layer and related objects, source layer id and target layer id must be 0-255.\nnote:\nThe function does not allow layer id 0 to be modified."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name of the active layer?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerInqActive\nName [out] active layer name\n\nOutputs the name of the active layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about the active layer name?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerInqActive\nName [out] active layer name\n\nOutputs the name of the active layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the name of the currently active layer?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerInqActive\nName [out] active layer name\n\nOutputs the name of the active layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a layer exists in the active target object?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerExists\nName [in] layer name\n\nDetermine whether the layer exists in the active target object by name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine the existence of a layer by its name?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerExists\nName [in] layer name\n\nDetermine whether the layer exists in the active target object by name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I verify if a layer exists in the active target object?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerExists\nName [in] layer name\n\nDetermine whether the layer exists in the active target object by name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a layer exists with a specific layer id?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerExists2\nNumber [in] layer id\n\nThe number(layer id) must be 0-255."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to verify the existence of a layer using its id?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerExists2\nNumber [in] layer id\n\nThe number(layer id) must be 0-255."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I determine if a layer exists based on its id?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerExists2\nNumber [in] layer id\n\nThe number(layer id) must be 0-255."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the layer id of a specific name?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerId\nname [in] name\nid [out] layer id\n\nOutput the layer id of a specified name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the layer id based on the layer name?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerId\nname [in] name\nid [out] layer id\n\nOutput the layer id of a specified name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to obtain the id of a layer by specifying its name?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerId\nname [in] name\nid [out] layer id\n\nOutput the layer id of a specified name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of entities on a specific layer?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerInqEnts\nNumber [in] layer number (0-255)\nnumEnt [out] no. of entities on the specified layer\nPaths [out] pick-path list of entities on the specified layer\n\nGet all entities on the specified layer.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve a list of entities on a specific layer?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerInqEnts\nNumber [in] layer number (0-255)\nnumEnt [out] no. of entities on the specified layer\nPaths [out] pick-path list of entities on the specified layer\n\nGet all entities on the specified layer.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list after getting entities on a specific layer?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerInqEnts\nNumber [in] layer number (0-255)\nnumEnt [out] no. of entities on the specified layer\nPaths [out] pick-path list of entities on the specified layer\n\nGet all entities on the specified layer.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign entities to a specific layer?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerAssign\nName [in] layer name\nnumEnt [in] no. of entities to assign to layer\nidEnts [in] list of id's of entities to assign to layer\n\nAssigns the specified entities to the specified layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to assign multiple entities to a layer at once?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerAssign\nName [in] layer name\nnumEnt [in] no. of entities to assign to layer\nidEnts [in] list of id's of entities to assign to layer\n\nAssigns the specified entities to the specified layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to assign entities to a layer by name?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerAssign\nName [in] layer name\nnumEnt [in] no. of entities to assign to layer\nidEnts [in] list of id's of entities to assign to layer\n\nAssigns the specified entities to the specified layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of layers in the active part or sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerList\nCount [out] layer count\nNames [out] list of layers\n\nOutputs a list of all layers in the active part or sheet. \n\n The calling procedure must deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of all layers in the active part or sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerList\nCount [out] layer count\nNames [out] list of layers\n\nOutputs a list of all layers in the active part or sheet. \n\n The calling procedure must deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the names of all layers in the active part or sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerList\nCount [out] layer count\nNames [out] list of layers\n\nOutputs a list of all layers in the active part or sheet. \n\n The calling procedure must deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name of a layer by its number?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerName\nNumber [in] layer number (0-255)\nName [out] layer name\n\nOutputs the name of the layer with the specified number."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the name of a layer using its number?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerName\nNumber [in] layer number (0-255)\nName [out] layer name\n\nOutputs the name of the layer with the specified number."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I find the name of a layer based on its number?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerName\nNumber [in] layer number (0-255)\nName [out] layer name\n\nOutputs the name of the layer with the specified number."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the number of a specific layer?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerNum\nName [in] layer name\nNumber [out] layer number (0-255)\n\nOutputs the number of the layer with the specified name. Outputs \"Number = -1\" if the layer is not found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the layer number by its name?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerNum\nName [in] layer name\nNumber [out] layer number (0-255)\n\nOutputs the number of the layer with the specified name. Outputs \"Number = -1\" if the layer is not found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to retrieve the number of a layer?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerNum\nName [in] layer name\nNumber [out] layer number (0-255)\n\nOutputs the number of the layer with the specified name. Outputs \"Number = -1\" if the layer is not found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve all categories from the layer manager?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerGetAllCategory\nnumCate [out] number of categories\ncategories [out] name of categories\n\nGet all categories in layer manager.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the number of categories in the layer manager?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerGetAllCategory\nnumCate [out] number of categories\ncategories [out] name of categories\n\nGet all categories in layer manager.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the names of all categories in the layer manager?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerGetAllCategory\nnumCate [out] number of categories\ncategories [out] name of categories\n\nGet all categories in layer manager.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the active layer number?"
            },
            {
                "role": "assistant",
                "content": "cvxActiveLayerNumGet\nNumber [out] layer number (0-255)\n\nGet the activate layer number."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the active layer number?"
            },
            {
                "role": "assistant",
                "content": "cvxActiveLayerNumGet\nNumber [out] layer number (0-255)\n\nGet the activate layer number."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to obtain the active layer number?"
            },
            {
                "role": "assistant",
                "content": "cvxActiveLayerNumGet\nNumber [out] layer number (0-255)\n\nGet the activate layer number."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the active layer number?"
            },
            {
                "role": "assistant",
                "content": "cvxActiveLayerNumSet\nNumber [in] layer number (0-255)\n\nSet the activate layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the active layer?"
            },
            {
                "role": "assistant",
                "content": "cvxActiveLayerNumSet\nNumber [in] layer number (0-255)\n\nSet the activate layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the layer number to be active?"
            },
            {
                "role": "assistant",
                "content": "cvxActiveLayerNumSet\nNumber [in] layer number (0-255)\n\nSet the activate layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a specific layer is visible?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerStateGet\nName [in] layer name\nisVisible [out] 1 = visible; 0 = blanked\nisFrozen [out] 1 = frozen, 0 = not frozen\n\nGets the state of the specified layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if a layer is frozen?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerStateGet\nName [in] layer name\nisVisible [out] 1 = visible; 0 = blanked\nisFrozen [out] 1 = frozen, 0 = not frozen\n\nGets the state of the specified layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the state of a particular layer?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerStateGet\nName [in] layer name\nisVisible [out] 1 = visible; 0 = blanked\nisFrozen [out] 1 = frozen, 0 = not frozen\n\nGets the state of the specified layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the state of a specific layer?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerStateSet\nName [in] layer name\nisVisible [in] 1 = visible, 0 = blanked, -1 = leave the same\nisFrozen [in] 1 = frozen, 0 = not frozen, -1 = leave the same\n\nSets the state of the specified layer.\nThe input argument \"isFrozen\" can be overloaded (set it to -2) to prevent this function from logging a \"LayerState\" history operation to record a change in layer visibility if a part is active. \n\n In this case, the frozen status of the specified layer remains the same.\nnote:\nSome history and entity selection operations are only applied to visible entities, so be careful using \"isFrozen = -2\". \n\n This function will redraw the screen, if you will call this function many times, you can call cvxDispState() to disable the display and update the display later."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the options for setting the visibility of a layer?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerStateSet\nName [in] layer name\nisVisible [in] 1 = visible, 0 = blanked, -1 = leave the same\nisFrozen [in] 1 = frozen, 0 = not frozen, -1 = leave the same\n\nSets the state of the specified layer.\nThe input argument \"isFrozen\" can be overloaded (set it to -2) to prevent this function from logging a \"LayerState\" history operation to record a change in layer visibility if a part is active. \n\n In this case, the frozen status of the specified layer remains the same.\nnote:\nSome history and entity selection operations are only applied to visible entities, so be careful using \"isFrozen = -2\". \n\n This function will redraw the screen, if you will call this function many times, you can call cvxDispState() to disable the display and update the display later."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to prevent logging a 'LayerState' history operation when setting the frozen status of a layer?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerStateSet\nName [in] layer name\nisVisible [in] 1 = visible, 0 = blanked, -1 = leave the same\nisFrozen [in] 1 = frozen, 0 = not frozen, -1 = leave the same\n\nSets the state of the specified layer.\nThe input argument \"isFrozen\" can be overloaded (set it to -2) to prevent this function from logging a \"LayerState\" history operation to record a change in layer visibility if a part is active. \n\n In this case, the frozen status of the specified layer remains the same.\nnote:\nSome history and entity selection operations are only applied to visible entities, so be careful using \"isFrozen = -2\". \n\n This function will redraw the screen, if you will call this function many times, you can call cvxDispState() to disable the display and update the display later."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should I be careful using 'isFrozen = -2' when setting the frozen status of a layer?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerStateSet\nName [in] layer name\nisVisible [in] 1 = visible, 0 = blanked, -1 = leave the same\nisFrozen [in] 1 = frozen, 0 = not frozen, -1 = leave the same\n\nSets the state of the specified layer.\nThe input argument \"isFrozen\" can be overloaded (set it to -2) to prevent this function from logging a \"LayerState\" history operation to record a change in layer visibility if a part is active. \n\n In this case, the frozen status of the specified layer remains the same.\nnote:\nSome history and entity selection operations are only applied to visible entities, so be careful using \"isFrozen = -2\". \n\n This function will redraw the screen, if you will call this function many times, you can call cvxDispState() to disable the display and update the display later."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to disable the display and update it later after calling 'cvxLayerStateSet' function multiple times?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerStateSet\nName [in] layer name\nisVisible [in] 1 = visible, 0 = blanked, -1 = leave the same\nisFrozen [in] 1 = frozen, 0 = not frozen, -1 = leave the same\n\nSets the state of the specified layer.\nThe input argument \"isFrozen\" can be overloaded (set it to -2) to prevent this function from logging a \"LayerState\" history operation to record a change in layer visibility if a part is active. \n\n In this case, the frozen status of the specified layer remains the same.\nnote:\nSome history and entity selection operations are only applied to visible entities, so be careful using \"isFrozen = -2\". \n\n This function will redraw the screen, if you will call this function many times, you can call cvxDispState() to disable the display and update the display later."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get layer info for a specific layer number?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerInfoGet\nNumber [in] layer number (0-255)\npLayerInfo [inout] layer info\n\nGet the layer info.\nYou should initialze the 'mask' of 'pLayerInfo' to get the specified information of the input layer. If pLayerInfo->mask = 0, it will be set to VX_LAYER_INFOR_ALL in this function to get all information."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the mask of pLayerInfo to get specific information of the input layer?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerInfoGet\nNumber [in] layer number (0-255)\npLayerInfo [inout] layer info\n\nGet the layer info.\nYou should initialze the 'mask' of 'pLayerInfo' to get the specified information of the input layer. If pLayerInfo->mask = 0, it will be set to VX_LAYER_INFOR_ALL in this function to get all information."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get all information of a layer using this function?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerInfoGet\nNumber [in] layer number (0-255)\npLayerInfo [inout] layer info\n\nGet the layer info.\nYou should initialze the 'mask' of 'pLayerInfo' to get the specified information of the input layer. If pLayerInfo->mask = 0, it will be set to VX_LAYER_INFOR_ALL in this function to get all information."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the layer info?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerInfoSet\nNumber [in] layer number (0-255)\npLayerInfo [in] layer info\n\nSet the layer info.\nnote:\nThis function will redraw the screen, if you will call this function many times, you can call cvxDispState() to disable the display and update the display later."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the range of layer number for input?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerInfoSet\nNumber [in] layer number (0-255)\npLayerInfo [in] layer info\n\nSet the layer info.\nnote:\nThis function will redraw the screen, if you will call this function many times, you can call cvxDispState() to disable the display and update the display later."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to disable display update after calling this function multiple times?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerInfoSet\nNumber [in] layer number (0-255)\npLayerInfo [in] layer info\n\nSet the layer info.\nnote:\nThis function will redraw the screen, if you will call this function many times, you can call cvxDispState() to disable the display and update the display later."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to export layers information to a specified file?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerInfoExport\nfile [in] export target file full path with extension \"zwlyr\"\n\nExport layers information to specified file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to export layers information?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerInfoExport\nfile [in] export target file full path with extension \"zwlyr\"\n\nExport layers information to specified file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to export layers information to a file with a specific extension?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerInfoExport\nfile [in] export target file full path with extension \"zwlyr\"\n\nExport layers information to specified file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to import layers information from a specified file?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerInfoImport\nfile [in] import target file full path with extension \"zwlyr\"\noverWrite [in] 1 to overwrite existing layers; 0 to append existing layers\n\nImport layers information from specified file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to append existing layers while importing layer information?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerInfoImport\nfile [in] import target file full path with extension \"zwlyr\"\noverWrite [in] 1 to overwrite existing layers; 0 to append existing layers\n\nImport layers information from specified file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the parameter to overwrite existing layers while importing layer information?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerInfoImport\nfile [in] import target file full path with extension \"zwlyr\"\noverWrite [in] 1 to overwrite existing layers; 0 to append existing layers\n\nImport layers information from specified file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to refresh the display of the layer manager form?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerRefresh\n\nRefreshes display of the layer manager form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to update the layer manager form?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerRefresh\n\nRefreshes display of the layer manager form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to trigger a refresh of the layer manager display?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerRefresh\n\nRefreshes display of the layer manager form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the current authorized module list?"
            },
            {
                "role": "assistant",
                "content": "cvxLicModulesGet\nszModules [out] the module name list to be return.(e.g. \"ZW3D_BASE_MODULES\\nZW3D_2AXIS_TURNING\\nZW3D_3AXIS_TURNING\").\n\nGet current authorized module list, the \"szModules\" is split by '\n\n', e.g. \"ZW3D_BASE_MODULES\\nZW3D_2AXIS_TURNING\\nZW3D_3AXIS_TURNING\". If fail to check current license, the license is trial(szModules will be set to \"Trial\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check the current license?"
            },
            {
                "role": "assistant",
                "content": "cvxLicModulesGet\nszModules [out] the module name list to be return.(e.g. \"ZW3D_BASE_MODULES\\nZW3D_2AXIS_TURNING\\nZW3D_3AXIS_TURNING\").\n\nGet current authorized module list, the \"szModules\" is split by '\n\n', e.g. \"ZW3D_BASE_MODULES\\nZW3D_2AXIS_TURNING\\nZW3D_3AXIS_TURNING\". If fail to check current license, the license is trial(szModules will be set to \"Trial\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle the case when the license is on trial?"
            },
            {
                "role": "assistant",
                "content": "cvxLicModulesGet\nszModules [out] the module name list to be return.(e.g. \"ZW3D_BASE_MODULES\\nZW3D_2AXIS_TURNING\\nZW3D_3AXIS_TURNING\").\n\nGet current authorized module list, the \"szModules\" is split by '\n\n', e.g. \"ZW3D_BASE_MODULES\\nZW3D_2AXIS_TURNING\\nZW3D_3AXIS_TURNING\". If fail to check current license, the license is trial(szModules will be set to \"Trial\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the current valid license identifier string?"
            },
            {
                "role": "assistant",
                "content": "cvxLicIdentifierGet\nszIdentifier [out] the license identifier string.\n\nGet current valid license identifier string."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the license identifier string?"
            },
            {
                "role": "assistant",
                "content": "cvxLicIdentifierGet\nszIdentifier [out] the license identifier string.\n\nGet current valid license identifier string."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the valid license identifier?"
            },
            {
                "role": "assistant",
                "content": "cvxLicIdentifierGet\nszIdentifier [out] the license identifier string.\n\nGet current valid license identifier string."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the days before trial license expires?"
            },
            {
                "role": "assistant",
                "content": "cvxLicEvaluationGet\nszEvaluation [out] currently not used, leave it as NULL\n\nGet days before trial license expired. \n\n cvxLicStandaloneEvaluationGet() has the similar function as well."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check the trial license expiration date?"
            },
            {
                "role": "assistant",
                "content": "cvxLicEvaluationGet\nszEvaluation [out] currently not used, leave it as NULL\n\nGet days before trial license expired. \n\n cvxLicStandaloneEvaluationGet() has the similar function as well."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxLicStandaloneEvaluationGet() to get the trial license expiration information?"
            },
            {
                "role": "assistant",
                "content": "cvxLicEvaluationGet\nszEvaluation [out] currently not used, leave it as NULL\n\nGet days before trial license expired. \n\n cvxLicStandaloneEvaluationGet() has the similar function as well."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the days before standalone license expires?"
            },
            {
                "role": "assistant",
                "content": "cvxLicStandaloneEvaluationGet\n\nGet days before standalone license expired. \n\n cvxLicEvaluationGet() has the similar function as well."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check the expiration of standalone license?"
            },
            {
                "role": "assistant",
                "content": "cvxLicStandaloneEvaluationGet\n\nGet days before standalone license expired. \n\n cvxLicEvaluationGet() has the similar function as well."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxLicEvaluationGet() to get the days before license expiration?"
            },
            {
                "role": "assistant",
                "content": "cvxLicStandaloneEvaluationGet\n\nGet days before standalone license expired. \n\n cvxLicEvaluationGet() has the similar function as well."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to activate a license by entitlement?"
            },
            {
                "role": "assistant",
                "content": "cvxLicActivate\npzEntitlement [in] the license entitlement.\n\nActivate license by entitlement. \n\n See cvxLicRemove() to remove the license for the current ZW3D session."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to activate a license with a specific entitlement?"
            },
            {
                "role": "assistant",
                "content": "cvxLicActivate\npzEntitlement [in] the license entitlement.\n\nActivate license by entitlement. \n\n See cvxLicRemove() to remove the license for the current ZW3D session."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to activate a license using an entitlement?"
            },
            {
                "role": "assistant",
                "content": "cvxLicActivate\npzEntitlement [in] the license entitlement.\n\nActivate license by entitlement. \n\n See cvxLicRemove() to remove the license for the current ZW3D session."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove a license by entitlement?"
            },
            {
                "role": "assistant",
                "content": "cvxLicRemove\npzEntitlement [in] the license entitlement.\n\nRemove license by entitlement. \n\n See cvxLicActivate() to activate the license for the current ZW3D session."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to deactivate a license by entitlement?"
            },
            {
                "role": "assistant",
                "content": "cvxLicRemove\npzEntitlement [in] the license entitlement.\n\nRemove license by entitlement. \n\n See cvxLicActivate() to activate the license for the current ZW3D session."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to revoke a license using entitlement?"
            },
            {
                "role": "assistant",
                "content": "cvxLicRemove\npzEntitlement [in] the license entitlement.\n\nRemove license by entitlement. \n\n See cvxLicActivate() to activate the license for the current ZW3D session."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxLicTypeCheck\n\nCheck the current authorization type. \n\n It can check the type except when using trial license."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxLicTypeCheck\n\nCheck the current authorization type. \n\n It can check the type except when using trial license."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxLicTypeCheck\n\nCheck the current authorization type. \n\n It can check the type except when using trial license."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to round a number to the nearest whole-number multiple of a specified step size?"
            },
            {
                "role": "assistant",
                "content": "cvxRoundNumber\nNum [in] Number to round.\nStep [in] Incremental step size, may be 0.\nTol [in] Tolerance for two values to be the same.\nDir [in] Rounding direction (0 nearest, -1 down, +1 up).\n\nReturn rounded number. \n\n \"Rounding\" in this case means the number is adjusted to a value that is a whole-number multiple of the incremental step size Step. \n\n For example, if Step is 0.25, this function returns values such as -0.5, -0.25, 0.0, 0.25, 0.5, 0.75, 1.0, and so on. \n\n To round a number to the nearest integer value, set Step to 1.\nIf Step is effectively 0 or negative, the incremental step size is so small that no rounding occurs and the return value is Num.\nIf the rounding direction Dir is 0, Num is rounded to the nearest whole-number multiple of Step, which may be greater or less than Num. \n\n For example, if Step is 1, an input value of 3.4 is rounded down to 3.0, and an input value of 3.6 is rounded up to 4.0.\nIf Dir is +1, the magnitude of Num is rounded up. For example, if Step is 1, an input value of 3.4 is rounded to 4.0, and an input value of -3.4 is rounded to -4.0.\nIf Dir is -1, the magnitude of Num is rounded down. For example, if Step is 1, an input value of 3.6 is rounded to 3.0, and an input value of -3.6 is rounded to -3.0.\nThe tolerance Tol helps to avoid unintended rounding. \n\n If Num is within Tol of a whole-number multiple of Step, Num is rounded to the latter value regardless of the rounding direction specified by Dir. \n\n For example, suppose Step is 1 and Dir is -1, but Num is 3.99999 when Tol is 0.01. \n\n The result will be rounded up to 4.0 because Num is is effectively the same as 4.0 within the given tolerance, despite Dir indicating that Num should be rounded down.\nThe step size Step should be much larger than the tolerance Tol.\nIf Num is a value that represents a distance or an angle, all three inputs Num, Step and Tol should have the same units."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to round a number up to the next whole-number multiple of a specified step size?"
            },
            {
                "role": "assistant",
                "content": "cvxRoundNumber\nNum [in] Number to round.\nStep [in] Incremental step size, may be 0.\nTol [in] Tolerance for two values to be the same.\nDir [in] Rounding direction (0 nearest, -1 down, +1 up).\n\nReturn rounded number. \n\n \"Rounding\" in this case means the number is adjusted to a value that is a whole-number multiple of the incremental step size Step. \n\n For example, if Step is 0.25, this function returns values such as -0.5, -0.25, 0.0, 0.25, 0.5, 0.75, 1.0, and so on. \n\n To round a number to the nearest integer value, set Step to 1.\nIf Step is effectively 0 or negative, the incremental step size is so small that no rounding occurs and the return value is Num.\nIf the rounding direction Dir is 0, Num is rounded to the nearest whole-number multiple of Step, which may be greater or less than Num. \n\n For example, if Step is 1, an input value of 3.4 is rounded down to 3.0, and an input value of 3.6 is rounded up to 4.0.\nIf Dir is +1, the magnitude of Num is rounded up. For example, if Step is 1, an input value of 3.4 is rounded to 4.0, and an input value of -3.4 is rounded to -4.0.\nIf Dir is -1, the magnitude of Num is rounded down. For example, if Step is 1, an input value of 3.6 is rounded to 3.0, and an input value of -3.6 is rounded to -3.0.\nThe tolerance Tol helps to avoid unintended rounding. \n\n If Num is within Tol of a whole-number multiple of Step, Num is rounded to the latter value regardless of the rounding direction specified by Dir. \n\n For example, suppose Step is 1 and Dir is -1, but Num is 3.99999 when Tol is 0.01. \n\n The result will be rounded up to 4.0 because Num is is effectively the same as 4.0 within the given tolerance, despite Dir indicating that Num should be rounded down.\nThe step size Step should be much larger than the tolerance Tol.\nIf Num is a value that represents a distance or an angle, all three inputs Num, Step and Tol should have the same units."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to round a number down to the previous whole-number multiple of a specified step size?"
            },
            {
                "role": "assistant",
                "content": "cvxRoundNumber\nNum [in] Number to round.\nStep [in] Incremental step size, may be 0.\nTol [in] Tolerance for two values to be the same.\nDir [in] Rounding direction (0 nearest, -1 down, +1 up).\n\nReturn rounded number. \n\n \"Rounding\" in this case means the number is adjusted to a value that is a whole-number multiple of the incremental step size Step. \n\n For example, if Step is 0.25, this function returns values such as -0.5, -0.25, 0.0, 0.25, 0.5, 0.75, 1.0, and so on. \n\n To round a number to the nearest integer value, set Step to 1.\nIf Step is effectively 0 or negative, the incremental step size is so small that no rounding occurs and the return value is Num.\nIf the rounding direction Dir is 0, Num is rounded to the nearest whole-number multiple of Step, which may be greater or less than Num. \n\n For example, if Step is 1, an input value of 3.4 is rounded down to 3.0, and an input value of 3.6 is rounded up to 4.0.\nIf Dir is +1, the magnitude of Num is rounded up. For example, if Step is 1, an input value of 3.4 is rounded to 4.0, and an input value of -3.4 is rounded to -4.0.\nIf Dir is -1, the magnitude of Num is rounded down. For example, if Step is 1, an input value of 3.6 is rounded to 3.0, and an input value of -3.6 is rounded to -3.0.\nThe tolerance Tol helps to avoid unintended rounding. \n\n If Num is within Tol of a whole-number multiple of Step, Num is rounded to the latter value regardless of the rounding direction specified by Dir. \n\n For example, suppose Step is 1 and Dir is -1, but Num is 3.99999 when Tol is 0.01. \n\n The result will be rounded up to 4.0 because Num is is effectively the same as 4.0 within the given tolerance, despite Dir indicating that Num should be rounded down.\nThe step size Step should be much larger than the tolerance Tol.\nIf Num is a value that represents a distance or an angle, all three inputs Num, Step and Tol should have the same units."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to avoid unintended rounding when rounding a number to a specified step size?"
            },
            {
                "role": "assistant",
                "content": "cvxRoundNumber\nNum [in] Number to round.\nStep [in] Incremental step size, may be 0.\nTol [in] Tolerance for two values to be the same.\nDir [in] Rounding direction (0 nearest, -1 down, +1 up).\n\nReturn rounded number. \n\n \"Rounding\" in this case means the number is adjusted to a value that is a whole-number multiple of the incremental step size Step. \n\n For example, if Step is 0.25, this function returns values such as -0.5, -0.25, 0.0, 0.25, 0.5, 0.75, 1.0, and so on. \n\n To round a number to the nearest integer value, set Step to 1.\nIf Step is effectively 0 or negative, the incremental step size is so small that no rounding occurs and the return value is Num.\nIf the rounding direction Dir is 0, Num is rounded to the nearest whole-number multiple of Step, which may be greater or less than Num. \n\n For example, if Step is 1, an input value of 3.4 is rounded down to 3.0, and an input value of 3.6 is rounded up to 4.0.\nIf Dir is +1, the magnitude of Num is rounded up. For example, if Step is 1, an input value of 3.4 is rounded to 4.0, and an input value of -3.4 is rounded to -4.0.\nIf Dir is -1, the magnitude of Num is rounded down. For example, if Step is 1, an input value of 3.6 is rounded to 3.0, and an input value of -3.6 is rounded to -3.0.\nThe tolerance Tol helps to avoid unintended rounding. \n\n If Num is within Tol of a whole-number multiple of Step, Num is rounded to the latter value regardless of the rounding direction specified by Dir. \n\n For example, suppose Step is 1 and Dir is -1, but Num is 3.99999 when Tol is 0.01. \n\n The result will be rounded up to 4.0 because Num is is effectively the same as 4.0 within the given tolerance, despite Dir indicating that Num should be rounded down.\nThe step size Step should be much larger than the tolerance Tol.\nIf Num is a value that represents a distance or an angle, all three inputs Num, Step and Tol should have the same units."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a curve lies on a plane?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvPlaneParallelChk\nplnPnt [in] point on check plane\nplnNormal [in] normal of check plane\nCrv [in] curve to check for parallelism\ntol [in] 3D proximity tolerance(mm) (0.0 for default)\nisParallel [out] flag (1: parallel; 0: NOT parallel)\nDistance [out] the distance between curve and plane, valid output only if parallel flag is true (NULL to ignore) \n\n +: curve is on side of plane pointed to by normal \n\n -: curve is on the opposite side of plane pointed to by normal\n\nCheck if curve lies on a plane parallel to the specified plane. if so output the distance between the curve and the plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to determine if a curve is parallel to a plane?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvPlaneParallelChk\nplnPnt [in] point on check plane\nplnNormal [in] normal of check plane\nCrv [in] curve to check for parallelism\ntol [in] 3D proximity tolerance(mm) (0.0 for default)\nisParallel [out] flag (1: parallel; 0: NOT parallel)\nDistance [out] the distance between curve and plane, valid output only if parallel flag is true (NULL to ignore) \n\n +: curve is on side of plane pointed to by normal \n\n -: curve is on the opposite side of plane pointed to by normal\n\nCheck if curve lies on a plane parallel to the specified plane. if so output the distance between the curve and the plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the distance between a curve and a specified plane?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvPlaneParallelChk\nplnPnt [in] point on check plane\nplnNormal [in] normal of check plane\nCrv [in] curve to check for parallelism\ntol [in] 3D proximity tolerance(mm) (0.0 for default)\nisParallel [out] flag (1: parallel; 0: NOT parallel)\nDistance [out] the distance between curve and plane, valid output only if parallel flag is true (NULL to ignore) \n\n +: curve is on side of plane pointed to by normal \n\n -: curve is on the opposite side of plane pointed to by normal\n\nCheck if curve lies on a plane parallel to the specified plane. if so output the distance between the curve and the plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to compute the closest point between two 3D axes?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisDistance\nAxis1 [in] the first axis\nAxis2 [in] the second axis\nPntOnAxis1 [out] the parameter of the closet point on the first axis (NULL to ignore)\nPntOnAxis2 [out] the parameter of the closet point on the second axis (NULL to ignore)\nFlag [out] flag of the two axes position relationship (NULL to ignore) \n\n 0: axes intersect \n\n 1: axes are parallel \n\n 2: axes are not parallel(no intersection and not coplanar)\n\nComputes the closest point between two 3D axes.\nIf the axes intersect (Flag is 0), ParamOnAxis1 & ParamOnAxis1 define parametric locations of intersection point on the two axes.\nIf the axes are parallel (Flag is 1), ParamOnAxis1 & ParamOnAxis1 are undefined.\nIf the axes are not co-planar and they do not intersect (Flag is 2), ParamOnAxis1 & ParamOnAxis1 define the parametric locations of the closest points."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if two axes intersect?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisDistance\nAxis1 [in] the first axis\nAxis2 [in] the second axis\nPntOnAxis1 [out] the parameter of the closet point on the first axis (NULL to ignore)\nPntOnAxis2 [out] the parameter of the closet point on the second axis (NULL to ignore)\nFlag [out] flag of the two axes position relationship (NULL to ignore) \n\n 0: axes intersect \n\n 1: axes are parallel \n\n 2: axes are not parallel(no intersection and not coplanar)\n\nComputes the closest point between two 3D axes.\nIf the axes intersect (Flag is 0), ParamOnAxis1 & ParamOnAxis1 define parametric locations of intersection point on the two axes.\nIf the axes are parallel (Flag is 1), ParamOnAxis1 & ParamOnAxis1 are undefined.\nIf the axes are not co-planar and they do not intersect (Flag is 2), ParamOnAxis1 & ParamOnAxis1 define the parametric locations of the closest points."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the parametric locations of the closest points between two axes?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisDistance\nAxis1 [in] the first axis\nAxis2 [in] the second axis\nPntOnAxis1 [out] the parameter of the closet point on the first axis (NULL to ignore)\nPntOnAxis2 [out] the parameter of the closet point on the second axis (NULL to ignore)\nFlag [out] flag of the two axes position relationship (NULL to ignore) \n\n 0: axes intersect \n\n 1: axes are parallel \n\n 2: axes are not parallel(no intersection and not coplanar)\n\nComputes the closest point between two 3D axes.\nIf the axes intersect (Flag is 0), ParamOnAxis1 & ParamOnAxis1 define parametric locations of intersection point on the two axes.\nIf the axes are parallel (Flag is 1), ParamOnAxis1 & ParamOnAxis1 are undefined.\nIf the axes are not co-planar and they do not intersect (Flag is 2), ParamOnAxis1 & ParamOnAxis1 define the parametric locations of the closest points."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I check if two axes are parallel using this function?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisDistance\nAxis1 [in] the first axis\nAxis2 [in] the second axis\nPntOnAxis1 [out] the parameter of the closet point on the first axis (NULL to ignore)\nPntOnAxis2 [out] the parameter of the closet point on the second axis (NULL to ignore)\nFlag [out] flag of the two axes position relationship (NULL to ignore) \n\n 0: axes intersect \n\n 1: axes are parallel \n\n 2: axes are not parallel(no intersection and not coplanar)\n\nComputes the closest point between two 3D axes.\nIf the axes intersect (Flag is 0), ParamOnAxis1 & ParamOnAxis1 define parametric locations of intersection point on the two axes.\nIf the axes are parallel (Flag is 1), ParamOnAxis1 & ParamOnAxis1 are undefined.\nIf the axes are not co-planar and they do not intersect (Flag is 2), ParamOnAxis1 & ParamOnAxis1 define the parametric locations of the closest points."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the distance between two infinite planes?"
            },
            {
                "role": "assistant",
                "content": "cvxPlaneDistance\nPntOnPln1 [in] point on plane1\nNormalOfPln1 [in] normal of plane1\nPntOnPln2 [in] point on plane2\nNormalOfPln2 [in] normal of plane2\nDistance [out] the distance\n\nGets the distance between two infinite planes and outputs 0.0 if the two planes intersect or coincide."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to calculate the distance between two planes?"
            },
            {
                "role": "assistant",
                "content": "cvxPlaneDistance\nPntOnPln1 [in] point on plane1\nNormalOfPln1 [in] normal of plane1\nPntOnPln2 [in] point on plane2\nNormalOfPln2 [in] normal of plane2\nDistance [out] the distance\n\nGets the distance between two infinite planes and outputs 0.0 if the two planes intersect or coincide."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if two planes intersect or coincide?"
            },
            {
                "role": "assistant",
                "content": "cvxPlaneDistance\nPntOnPln1 [in] point on plane1\nNormalOfPln1 [in] normal of plane1\nPntOnPln2 [in] point on plane2\nNormalOfPln2 [in] normal of plane2\nDistance [out] the distance\n\nGets the distance between two infinite planes and outputs 0.0 if the two planes intersect or coincide."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the distance between two entities in the part environment?"
            },
            {
                "role": "assistant",
                "content": "cvxEntGetDistance\nent1 [in] index of entity 1\nent2 [in] index of entity 2\np1 [out] point on entity 1 (NULL to ignore)\np2 [out] point on entity 2 (NULL to ignore)\ndist [out] distance of p1 and p2\n\nGet the distance between 2 entities in part environment, the entity type includes face, curve, edge, datum plane, point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to find the distance between two points on different entities?"
            },
            {
                "role": "assistant",
                "content": "cvxEntGetDistance\nent1 [in] index of entity 1\nent2 [in] index of entity 2\np1 [out] point on entity 1 (NULL to ignore)\np2 [out] point on entity 2 (NULL to ignore)\ndist [out] distance of p1 and p2\n\nGet the distance between 2 entities in part environment, the entity type includes face, curve, edge, datum plane, point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the points on two entities and calculate the distance between them?"
            },
            {
                "role": "assistant",
                "content": "cvxEntGetDistance\nent1 [in] index of entity 1\nent2 [in] index of entity 2\np1 [out] point on entity 1 (NULL to ignore)\np2 [out] point on entity 2 (NULL to ignore)\ndist [out] distance of p1 and p2\n\nGet the distance between 2 entities in part environment, the entity type includes face, curve, edge, datum plane, point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the minimum distance between two entities in the part environment?"
            },
            {
                "role": "assistant",
                "content": "cvxEntGetDistanceByPath\nEntPath1 [in] the pick path of the first entity\nEntPath2 [in] the pick path of the second entity\nPoint1 [out] Location on second entity at point of closest contact.(NULL to ignore)\nPoint2 [out] Location on second entity at point of closest contact.(NULL to ignore)\nMinDistance [out] the minimum distance.(NULL to ignore)\n\nGet the minimum distance between 2 entities in part environment, the entity type includes shape and component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the location on the second entity at the point of closest contact?"
            },
            {
                "role": "assistant",
                "content": "cvxEntGetDistanceByPath\nEntPath1 [in] the pick path of the first entity\nEntPath2 [in] the pick path of the second entity\nPoint1 [out] Location on second entity at point of closest contact.(NULL to ignore)\nPoint2 [out] Location on second entity at point of closest contact.(NULL to ignore)\nMinDistance [out] the minimum distance.(NULL to ignore)\n\nGet the minimum distance between 2 entities in part environment, the entity type includes shape and component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the minimum distance between two entities of different types?"
            },
            {
                "role": "assistant",
                "content": "cvxEntGetDistanceByPath\nEntPath1 [in] the pick path of the first entity\nEntPath2 [in] the pick path of the second entity\nPoint1 [out] Location on second entity at point of closest contact.(NULL to ignore)\nPoint2 [out] Location on second entity at point of closest contact.(NULL to ignore)\nMinDistance [out] the minimum distance.(NULL to ignore)\n\nGet the minimum distance between 2 entities in part environment, the entity type includes shape and component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the minimum distance between a curve and an axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisCrvDistance\nAxis [in] axis defined by a point and a direction\nCrv [in] curve to measure distance to\npntOnAxis [out] the closest point on the axis (NULL to ignore)\npntOnCrv [out] the closest point on the curve (NULL to ignore)\nDistance [out] the minimum distance (NULL to ignore)\n\nGets the minimum distance from curve to an infinite line defined by point and direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to measure the distance between a curve and an axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisCrvDistance\nAxis [in] axis defined by a point and a direction\nCrv [in] curve to measure distance to\npntOnAxis [out] the closest point on the axis (NULL to ignore)\npntOnCrv [out] the closest point on the curve (NULL to ignore)\nDistance [out] the minimum distance (NULL to ignore)\n\nGets the minimum distance from curve to an infinite line defined by point and direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the closest point on the curve to a given axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisCrvDistance\nAxis [in] axis defined by a point and a direction\nCrv [in] curve to measure distance to\npntOnAxis [out] the closest point on the axis (NULL to ignore)\npntOnCrv [out] the closest point on the curve (NULL to ignore)\nDistance [out] the minimum distance (NULL to ignore)\n\nGets the minimum distance from curve to an infinite line defined by point and direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the angle between two entities?"
            },
            {
                "role": "assistant",
                "content": "cvxEntGetAngle\nent1 [in] index of entity 1\nent2 [in] index of entity 2\nangle [out] angle (radians) between entities\n\nGet the angle between 2 entities.the entity type includes line, curve, edge, datum plane, planar face, sketch.\nnote:\nent1 and ent2 must are defined as \"curve-curve\" or \"planar face-planar face\". when entities are curve, the angle between the tangent direction of the starting point of the line is calculated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to calculate the angle between two planar faces?"
            },
            {
                "role": "assistant",
                "content": "cvxEntGetAngle\nent1 [in] index of entity 1\nent2 [in] index of entity 2\nangle [out] angle (radians) between entities\n\nGet the angle between 2 entities.the entity type includes line, curve, edge, datum plane, planar face, sketch.\nnote:\nent1 and ent2 must are defined as \"curve-curve\" or \"planar face-planar face\". when entities are curve, the angle between the tangent direction of the starting point of the line is calculated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the angle between two curves?"
            },
            {
                "role": "assistant",
                "content": "cvxEntGetAngle\nent1 [in] index of entity 1\nent2 [in] index of entity 2\nangle [out] angle (radians) between entities\n\nGet the angle between 2 entities.the entity type includes line, curve, edge, datum plane, planar face, sketch.\nnote:\nent1 and ent2 must are defined as \"curve-curve\" or \"planar face-planar face\". when entities are curve, the angle between the tangent direction of the starting point of the line is calculated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get the angle between two datum planes?"
            },
            {
                "role": "assistant",
                "content": "cvxEntGetAngle\nent1 [in] index of entity 1\nent2 [in] index of entity 2\nangle [out] angle (radians) between entities\n\nGet the angle between 2 entities.the entity type includes line, curve, edge, datum plane, planar face, sketch.\nnote:\nent1 and ent2 must are defined as \"curve-curve\" or \"planar face-planar face\". when entities are curve, the angle between the tangent direction of the starting point of the line is calculated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate the angle between two sketch entities?"
            },
            {
                "role": "assistant",
                "content": "cvxEntGetAngle\nent1 [in] index of entity 1\nent2 [in] index of entity 2\nangle [out] angle (radians) between entities\n\nGet the angle between 2 entities.the entity type includes line, curve, edge, datum plane, planar face, sketch.\nnote:\nent1 and ent2 must are defined as \"curve-curve\" or \"planar face-planar face\". when entities are curve, the angle between the tangent direction of the starting point of the line is calculated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the planar area bounded by curves in 3D space?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntsAreaByPath\ncnt [in] count of curves/face (only one face)\ncrvList [in] entity path list of curves/face\nareaProp [out] area property\n\nInquires a planar area bounded by curves in 3d space.\nThe input boundaries may consist of 3d-curves, 2d-curves, edges, and all of them in the component.\nThe input just support one plane face.\nnote:\nThe calling procedure MUST deallocate the output(pAreaRef and pAreaCA) with cvxMemFree(). \n\n Use cvxPartInqEntsArea() to inquire the area of the entities of current part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the area property of a planar area bounded by curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntsAreaByPath\ncnt [in] count of curves/face (only one face)\ncrvList [in] entity path list of curves/face\nareaProp [out] area property\n\nInquires a planar area bounded by curves in 3d space.\nThe input boundaries may consist of 3d-curves, 2d-curves, edges, and all of them in the component.\nThe input just support one plane face.\nnote:\nThe calling procedure MUST deallocate the output(pAreaRef and pAreaCA) with cvxMemFree(). \n\n Use cvxPartInqEntsArea() to inquire the area of the entities of current part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output after inquiring the area property?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntsAreaByPath\ncnt [in] count of curves/face (only one face)\ncrvList [in] entity path list of curves/face\nareaProp [out] area property\n\nInquires a planar area bounded by curves in 3d space.\nThe input boundaries may consist of 3d-curves, 2d-curves, edges, and all of them in the component.\nThe input just support one plane face.\nnote:\nThe calling procedure MUST deallocate the output(pAreaRef and pAreaCA) with cvxMemFree(). \n\n Use cvxPartInqEntsArea() to inquire the area of the entities of current part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize a bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxInit\nBox [inout] pointer to bounding box data\n\nInitializes the specified bounding box to all values set to zero."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set all values of a bounding box to zero?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxInit\nBox [inout] pointer to bounding box data\n\nInitializes the specified bounding box to all values set to zero."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to reset a bounding box to zero values?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxInit\nBox [inout] pointer to bounding box data\n\nInitializes the specified bounding box to all values set to zero."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize a bounding box with positive infinity and negative infinity values?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxInit2\nBox [inout] pointer to bounding box data\n\nInitializes the specified bounding box \"min\" values to \"positive infinity\" and \"max\" values to \"negative infinity\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the minimum and maximum values of a bounding box to positive and negative infinity?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxInit2\nBox [inout] pointer to bounding box data\n\nInitializes the specified bounding box \"min\" values to \"positive infinity\" and \"max\" values to \"negative infinity\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize a bounding box with specific min and max values?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxInit2\nBox [inout] pointer to bounding box data\n\nInitializes the specified bounding box \"min\" values to \"positive infinity\" and \"max\" values to \"negative infinity\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the corner points of a specified bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxPnts\nBox [in] pointer to bounding box data\nPnts [inout] pointer to array of 8 point structures\n\nOutputs the corner points of the specified bounding box to the array referenced by \"Pnts\". \n\n Memory for the array must be allocated by the calling procedure. \n\n \"Pnts\" is a pointer to the start of the memory and must reference at least enough memory for 8 svxPoint structures.\nThe corners are assigned to \"Pnts\" as follows, where \"min\" and \"max\" refer to the bounding box's minimum and maximum limits in the specified coordinate direction: \n\n\nPnts[0] = Xmin,Ymin,Zmin \n\n Pnts[1] = Xmax,Ymin,Zmin \n\n Pnts[2] = Xmax,Ymax,Zmin \n\n Pnts[3] = Xmin,Ymax,Zmin \n\n Pnts[4] = Xmin,Ymin,Zmax \n\n Pnts[5] = Xmax,Ymin,Zmax \n\n Pnts[6] = Xmax,Ymax,Zmax \n\n Pnts[7] = Xmin,Ymax,Zmax"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to output the corner points of a bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxPnts\nBox [in] pointer to bounding box data\nPnts [inout] pointer to array of 8 point structures\n\nOutputs the corner points of the specified bounding box to the array referenced by \"Pnts\". \n\n Memory for the array must be allocated by the calling procedure. \n\n \"Pnts\" is a pointer to the start of the memory and must reference at least enough memory for 8 svxPoint structures.\nThe corners are assigned to \"Pnts\" as follows, where \"min\" and \"max\" refer to the bounding box's minimum and maximum limits in the specified coordinate direction: \n\n\nPnts[0] = Xmin,Ymin,Zmin \n\n Pnts[1] = Xmax,Ymin,Zmin \n\n Pnts[2] = Xmax,Ymax,Zmin \n\n Pnts[3] = Xmin,Ymax,Zmin \n\n Pnts[4] = Xmin,Ymin,Zmax \n\n Pnts[5] = Xmax,Ymin,Zmax \n\n Pnts[6] = Xmax,Ymax,Zmax \n\n Pnts[7] = Xmin,Ymax,Zmax"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to allocate memory for the array of corner points?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxPnts\nBox [in] pointer to bounding box data\nPnts [inout] pointer to array of 8 point structures\n\nOutputs the corner points of the specified bounding box to the array referenced by \"Pnts\". \n\n Memory for the array must be allocated by the calling procedure. \n\n \"Pnts\" is a pointer to the start of the memory and must reference at least enough memory for 8 svxPoint structures.\nThe corners are assigned to \"Pnts\" as follows, where \"min\" and \"max\" refer to the bounding box's minimum and maximum limits in the specified coordinate direction: \n\n\nPnts[0] = Xmin,Ymin,Zmin \n\n Pnts[1] = Xmax,Ymin,Zmin \n\n Pnts[2] = Xmax,Ymax,Zmin \n\n Pnts[3] = Xmin,Ymax,Zmin \n\n Pnts[4] = Xmin,Ymin,Zmax \n\n Pnts[5] = Xmax,Ymin,Zmax \n\n Pnts[6] = Xmax,Ymax,Zmax \n\n Pnts[7] = Xmin,Ymax,Zmax"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the center point of a bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxCenter\nBox [in] the bounding box\nCenterPnt [out] the center point of bounding box\n\nGets the center of the specified bounding box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the center of a specified bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxCenter\nBox [in] the bounding box\nCenterPnt [out] the center point of bounding box\n\nGets the center of the specified bounding box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the center point of a bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxCenter\nBox [in] the bounding box\nCenterPnt [out] the center point of bounding box\n\nGets the center of the specified bounding box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if a point lies inside a bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxPntLoc\nBox [in] the bounding box\nPoint [in] point to measure distance to\nPntLoc [out] returned status of the point on the bounding box\n\nDetermine whether a given point lies inside, outside or on the specified bounding box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check if a point is outside a bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxPntLoc\nBox [in] the bounding box\nPoint [in] point to measure distance to\nPntLoc [out] returned status of the point on the bounding box\n\nDetermine whether a given point lies inside, outside or on the specified bounding box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the status of a point on a bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxPntLoc\nBox [in] the bounding box\nPoint [in] point to measure distance to\nPntLoc [out] returned status of the point on the bounding box\n\nDetermine whether a given point lies inside, outside or on the specified bounding box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a point to a bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxAdd\nBox [inout] pointer to bounding box data\nPnt [in] point to add to bounding box\n\n\"Grows\" the specified bounding box to envelop the specified point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to grow a bounding box to envelop a point?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxAdd\nBox [inout] pointer to bounding box data\nPnt [in] point to add to bounding box\n\n\"Grows\" the specified bounding box to envelop the specified point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify a bounding box to include a specific point?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxAdd\nBox [inout] pointer to bounding box data\nPnt [in] point to add to bounding box\n\n\"Grows\" the specified bounding box to envelop the specified point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to merge two bounding boxes?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxMerge\nBox1 [in] the first bounding box\nBox2 [inout] the second bounding box\n\nMerge two bounding boxes and output results to the second bounding box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to combine bounding boxes?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxMerge\nBox1 [in] the first bounding box\nBox2 [inout] the second bounding box\n\nMerge two bounding boxes and output results to the second bounding box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to output the merged result to the second bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxMerge\nBox1 [in] the first bounding box\nBox2 [inout] the second bounding box\n\nMerge two bounding boxes and output results to the second bounding box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the size of a bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxSize\nBox [in] pointer to bounding box data\n\nReturns the \"size\" of the specified bounding box"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to return the size of a specified bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxSize\nBox [in] pointer to bounding box data\n\nReturns the \"size\" of the specified bounding box"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the size of a bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxSize\nBox [in] pointer to bounding box data\n\nReturns the \"size\" of the specified bounding box"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate the volume of a bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxVolume\nBox [in] pointer to bounding box data\n\nReturns the volume of the specified bounding box. the volume will be set to 0.0 if there is an error in the function such as Box is NULL or something."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the volume of a specified bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxVolume\nBox [in] pointer to bounding box data\n\nReturns the volume of the specified bounding box. the volume will be set to 0.0 if there is an error in the function such as Box is NULL or something."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if there is an error in the bounding box volume function?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxVolume\nBox [in] pointer to bounding box data\n\nReturns the volume of the specified bounding box. the volume will be set to 0.0 if there is an error in the function such as Box is NULL or something."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if one bounding box completely contains another?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxContain\nBaseBox [in] the base bounding box\nOtherBox [in] the other bounding box\n\nCheck whether the base bounding box is completely containing an other bounding box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to determine if a bounding box contains another?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxContain\nBaseBox [in] the base bounding box\nOtherBox [in] the other bounding box\n\nCheck whether the base bounding box is completely containing an other bounding box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a bounding box fully encloses another bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxContain\nBaseBox [in] the base bounding box\nOtherBox [in] the other bounding box\n\nCheck whether the base bounding box is completely containing an other bounding box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to compute the maximum distance between a point and a 3D bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxPntDist\nBox [in] the bounding box\nPoint [in] point to measure distance to\nDistMin [out] minimum distance, 0 if overlap (NULL to ignore)\nDistMax [out] maximum distance (NULL to ignore)\n\nCompute the maximum and minimum distance between a point and a 3D bounding boxes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to compute the minimum distance between a point and a 3D bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxPntDist\nBox [in] the bounding box\nPoint [in] point to measure distance to\nDistMin [out] minimum distance, 0 if overlap (NULL to ignore)\nDistMax [out] maximum distance (NULL to ignore)\n\nCompute the maximum and minimum distance between a point and a 3D bounding boxes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to measure the distance between a point and a 3D bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxPntDist\nBox [in] the bounding box\nPoint [in] point to measure distance to\nDistMin [out] minimum distance, 0 if overlap (NULL to ignore)\nDistMax [out] maximum distance (NULL to ignore)\n\nCompute the maximum and minimum distance between a point and a 3D bounding boxes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to compute the maximum distance between two 3D bounding boxes?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxDist\nBox1 [in] the first bounding box\nBox2 [in] the second bounding box\nDistMin [out] minimum distance between boxes, 0 if overlap (NULL to ignore)\nDistMax [out] maximum distance between boxes (NULL to ignore)\n\nCompute the maximum and minimum distance between a point and a 3D bounding boxes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the minimum distance between two bounding boxes?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxDist\nBox1 [in] the first bounding box\nBox2 [in] the second bounding box\nDistMin [out] minimum distance between boxes, 0 if overlap (NULL to ignore)\nDistMax [out] maximum distance between boxes (NULL to ignore)\n\nCompute the maximum and minimum distance between a point and a 3D bounding boxes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to calculate the distance between two 3D bounding boxes?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxDist\nBox1 [in] the first bounding box\nBox2 [in] the second bounding box\nDistMin [out] minimum distance between boxes, 0 if overlap (NULL to ignore)\nDistMax [out] maximum distance between boxes (NULL to ignore)\n\nCompute the maximum and minimum distance between a point and a 3D bounding boxes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find intersection points of two curves?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectCrvCrv\nidCurve1 [in] first curve\nidCurve2 [in] second curve\nTangentOk [in] 1 to include points of tangency; else 0\nCount [out] number of intersection points\nPoints [out] list of intersection points\n\nOutputs a list of the points where the two input curves intersect. The calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the number of intersection points between two curves?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectCrvCrv\nidCurve1 [in] first curve\nidCurve2 [in] second curve\nTangentOk [in] 1 to include points of tangency; else 0\nCount [out] number of intersection points\nPoints [out] list of intersection points\n\nOutputs a list of the points where the two input curves intersect. The calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to include points of tangency when finding intersection points of two curves?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectCrvCrv\nidCurve1 [in] first curve\nidCurve2 [in] second curve\nTangentOk [in] 1 to include points of tangency; else 0\nCount [out] number of intersection points\nPoints [out] list of intersection points\n\nOutputs a list of the points where the two input curves intersect. The calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find intersection points between a curve and a face?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectCrvFace\nidCurve [in] id of curve entity in active file\nidFace [in] id of face entity in active file\nTrim [in] 1 to intersect trimmed face; 0 to intersect entire untrimmed surface\nTangentOk [in] 1 to include points of tangency; else 0\nCount [out] number of intersection points\nPoints [out] list of intersection points\n\nOutputs a list of the points where the input curve and face intersect. \n\n The calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to include points of tangency when finding intersection points?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectCrvFace\nidCurve [in] id of curve entity in active file\nidFace [in] id of face entity in active file\nTrim [in] 1 to intersect trimmed face; 0 to intersect entire untrimmed surface\nTangentOk [in] 1 to include points of tangency; else 0\nCount [out] number of intersection points\nPoints [out] list of intersection points\n\nOutputs a list of the points where the input curve and face intersect. \n\n The calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to intersect an entire untrimmed surface with a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectCrvFace\nidCurve [in] id of curve entity in active file\nidFace [in] id of face entity in active file\nTrim [in] 1 to intersect trimmed face; 0 to intersect entire untrimmed surface\nTangentOk [in] 1 to include points of tangency; else 0\nCount [out] number of intersection points\nPoints [out] list of intersection points\n\nOutputs a list of the points where the input curve and face intersect. \n\n The calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find intersection curves between two face entities?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectFaceFace\nidFace1 [in] id of the first face entity in active file\nidFace2 [in] id of the second face entity in active file\nTrim [in] face trim-curve option\nTangentOk [in] 1 to include curves of tangency; else 0\nCount [out] number of intersection curves\nCurves [out] list of intersection curves\n\nOutputs a list of curves where the two input faces intersect. \n\n the output Curves data can be added to the active part with the cvxPartCurve() function.\nThe calling procedure MUST deallocate the internal data in each element of the output list by calling cvxCurveFree(), after which the output list MUST be deallocated using cvxMemFree((void**)Curves)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the number of intersection curves between two faces?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectFaceFace\nidFace1 [in] id of the first face entity in active file\nidFace2 [in] id of the second face entity in active file\nTrim [in] face trim-curve option\nTangentOk [in] 1 to include curves of tangency; else 0\nCount [out] number of intersection curves\nCurves [out] list of intersection curves\n\nOutputs a list of curves where the two input faces intersect. \n\n the output Curves data can be added to the active part with the cvxPartCurve() function.\nThe calling procedure MUST deallocate the internal data in each element of the output list by calling cvxCurveFree(), after which the output list MUST be deallocated using cvxMemFree((void**)Curves)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to include tangency curves in the intersection result?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectFaceFace\nidFace1 [in] id of the first face entity in active file\nidFace2 [in] id of the second face entity in active file\nTrim [in] face trim-curve option\nTangentOk [in] 1 to include curves of tangency; else 0\nCount [out] number of intersection curves\nCurves [out] list of intersection curves\n\nOutputs a list of curves where the two input faces intersect. \n\n the output Curves data can be added to the active part with the cvxPartCurve() function.\nThe calling procedure MUST deallocate the internal data in each element of the output list by calling cvxCurveFree(), after which the output list MUST be deallocated using cvxMemFree((void**)Curves)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can the intersection curves be added to the active part using cvxPartCurve() function?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectFaceFace\nidFace1 [in] id of the first face entity in active file\nidFace2 [in] id of the second face entity in active file\nTrim [in] face trim-curve option\nTangentOk [in] 1 to include curves of tangency; else 0\nCount [out] number of intersection curves\nCurves [out] list of intersection curves\n\nOutputs a list of curves where the two input faces intersect. \n\n the output Curves data can be added to the active part with the cvxPartCurve() function.\nThe calling procedure MUST deallocate the internal data in each element of the output list by calling cvxCurveFree(), after which the output list MUST be deallocated using cvxMemFree((void**)Curves)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the procedure to deallocate the internal data in each element of the output list?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectFaceFace\nidFace1 [in] id of the first face entity in active file\nidFace2 [in] id of the second face entity in active file\nTrim [in] face trim-curve option\nTangentOk [in] 1 to include curves of tangency; else 0\nCount [out] number of intersection curves\nCurves [out] list of intersection curves\n\nOutputs a list of curves where the two input faces intersect. \n\n the output Curves data can be added to the active part with the cvxPartCurve() function.\nThe calling procedure MUST deallocate the internal data in each element of the output list by calling cvxCurveFree(), after which the output list MUST be deallocated using cvxMemFree((void**)Curves)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find intersection points between a ray and a curve entity?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayCrv\nRay [in] ray defined by a point and a direction\nidCurve [in] curve entity\nTangentOk [in] 1 to include points of tangency; else 0\nCount [out] number of intersection points\nPoints [out] list of intersection points\n\nOutputs a list of the points where the input ray and curve intersect. \n\n The calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the list of intersection points between a ray and a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayCrv\nRay [in] ray defined by a point and a direction\nidCurve [in] curve entity\nTangentOk [in] 1 to include points of tangency; else 0\nCount [out] number of intersection points\nPoints [out] list of intersection points\n\nOutputs a list of the points where the input ray and curve intersect. \n\n The calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to include points of tangency when finding intersection points between a ray and a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayCrv\nRay [in] ray defined by a point and a direction\nidCurve [in] curve entity\nTangentOk [in] 1 to include points of tangency; else 0\nCount [out] number of intersection points\nPoints [out] list of intersection points\n\nOutputs a list of the points where the input ray and curve intersect. \n\n The calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the intersection point of a ray with a face?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayFace\nidFace [in] id of face in active file\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nPoint [out] intersection point (NULL to ignore)\nUV [out] U,V coordinates (NULL to ignore)\n\nIntersects the input ray with the input face and outputs the point closest to the ray startpoint (Ray->Pnt).\nnote:\nThe ray only extends in the specified direction from the startpoint. Intersections in the other direction are not considered. \n\n The \"Trim\" option is used to determine what portions of the face are checked against the ray."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the U,V coordinates of the intersection point?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayFace\nidFace [in] id of face in active file\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nPoint [out] intersection point (NULL to ignore)\nUV [out] U,V coordinates (NULL to ignore)\n\nIntersects the input ray with the input face and outputs the point closest to the ray startpoint (Ray->Pnt).\nnote:\nThe ray only extends in the specified direction from the startpoint. Intersections in the other direction are not considered. \n\n The \"Trim\" option is used to determine what portions of the face are checked against the ray."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of the 'Trim' option in the intersection of a ray with a face?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayFace\nidFace [in] id of face in active file\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nPoint [out] intersection point (NULL to ignore)\nUV [out] U,V coordinates (NULL to ignore)\n\nIntersects the input ray with the input face and outputs the point closest to the ray startpoint (Ray->Pnt).\nnote:\nThe ray only extends in the specified direction from the startpoint. Intersections in the other direction are not considered. \n\n The \"Trim\" option is used to determine what portions of the face are checked against the ray."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find intersection points of a ray with a face in both directions?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayFaceInfinite\nidFace [in] id of shape in active part\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nInfinite [in] 1 to check both directions of ray, 0 to check positive direction of ray only\nNumber [out] number of points\nPnts [out] list of intersection points (NULL to ignore)\nUVs [out] list of U,V coordinates (NULL to ignore)\n\nIntersects the input ray with the input face and outputs all intersection points to the ray start point (Ray->Pnt).\nThe \"Trim\" option is used to determine what portions of the face are checked against the ray.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine what portions of the face are checked against the ray?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayFaceInfinite\nidFace [in] id of shape in active part\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nInfinite [in] 1 to check both directions of ray, 0 to check positive direction of ray only\nNumber [out] number of points\nPnts [out] list of intersection points (NULL to ignore)\nUVs [out] list of U,V coordinates (NULL to ignore)\n\nIntersects the input ray with the input face and outputs all intersection points to the ray start point (Ray->Pnt).\nThe \"Trim\" option is used to determine what portions of the face are checked against the ray.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of intersection points of a ray with a face?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayFaceInfinite\nidFace [in] id of shape in active part\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nInfinite [in] 1 to check both directions of ray, 0 to check positive direction of ray only\nNumber [out] number of points\nPnts [out] list of intersection points (NULL to ignore)\nUVs [out] list of U,V coordinates (NULL to ignore)\n\nIntersects the input ray with the input face and outputs all intersection points to the ray start point (Ray->Pnt).\nThe \"Trim\" option is used to determine what portions of the face are checked against the ray.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the intersection point of a ray with the XY plane?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayPlane\nRay [in] ray defined by a point and a direction\nPlane [in] plane transformation matrix (XY plane)\nPoint [out] intersection point\n\nIntersects the input ray with the XY plane of the specified transformation matrix and outputs the point of intersection."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to calculate the intersection point of a ray with a specific plane?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayPlane\nRay [in] ray defined by a point and a direction\nPlane [in] plane transformation matrix (XY plane)\nPoint [out] intersection point\n\nIntersects the input ray with the XY plane of the specified transformation matrix and outputs the point of intersection."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the transformation matrix to find the intersection point of a ray with the XY plane?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayPlane\nRay [in] ray defined by a point and a direction\nPlane [in] plane transformation matrix (XY plane)\nPoint [out] intersection point\n\nIntersects the input ray with the XY plane of the specified transformation matrix and outputs the point of intersection."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the closest intersection point of a ray with a shape?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayShape\nidShape [in] id of shape in active part\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nPoint [out] closest intersection point (NULL to ignore)\nidFace [out] id of face that intersection point lies on (input NULL to ignore this output)\n\nIntersects the input ray with the input shape and outputs the point closest to the ray start point (Ray->Pnt).\nnote:\nThe ray only extends in the specified direction from the start point. Intersections in the other direction are not considered. \n\n If an intersection is found, the id of the intersected face is optionally output. \n\n The \"Trim\" option is used to determine what portions of the shapes' faces are checked against the ray."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the id of the face that the intersection point lies on?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayShape\nidShape [in] id of shape in active part\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nPoint [out] closest intersection point (NULL to ignore)\nidFace [out] id of face that intersection point lies on (input NULL to ignore this output)\n\nIntersects the input ray with the input shape and outputs the point closest to the ray start point (Ray->Pnt).\nnote:\nThe ray only extends in the specified direction from the start point. Intersections in the other direction are not considered. \n\n If an intersection is found, the id of the intersected face is optionally output. \n\n The \"Trim\" option is used to determine what portions of the shapes' faces are checked against the ray."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of the 'Trim' option in intersecting a ray with a shape?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayShape\nidShape [in] id of shape in active part\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nPoint [out] closest intersection point (NULL to ignore)\nidFace [out] id of face that intersection point lies on (input NULL to ignore this output)\n\nIntersects the input ray with the input shape and outputs the point closest to the ray start point (Ray->Pnt).\nnote:\nThe ray only extends in the specified direction from the start point. Intersections in the other direction are not considered. \n\n If an intersection is found, the id of the intersected face is optionally output. \n\n The \"Trim\" option is used to determine what portions of the shapes' faces are checked against the ray."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find intersection points of a ray with shapes?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayShapes\nnShapes [in] number of shapes\nidShapes [in] index of shapes\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nNumber [out] number of intersection point\nPoints [out] list of intersection points (NULL to ignore)\nidFaces [out] list of face ids that intersection point lies (NULL to ignore)\n\nIntersects the input ray with the input shapes and outputs the intersection points.\nnote:\nThe positive and negative directions of the ray will be involved in the calculation. \n\n The \"Trim\" option is used to determine what portions of the shape's faces are checked against the ray. \n\n This function allocates memory for the array output via \"Points\" and \"FacePaths\". \n\n The calling procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to determine what portions of the shape's faces are checked against the ray?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayShapes\nnShapes [in] number of shapes\nidShapes [in] index of shapes\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nNumber [out] number of intersection point\nPoints [out] list of intersection points (NULL to ignore)\nidFaces [out] list of face ids that intersection point lies (NULL to ignore)\n\nIntersects the input ray with the input shapes and outputs the intersection points.\nnote:\nThe positive and negative directions of the ray will be involved in the calculation. \n\n The \"Trim\" option is used to determine what portions of the shape's faces are checked against the ray. \n\n This function allocates memory for the array output via \"Points\" and \"FacePaths\". \n\n The calling procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of intersection points?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayShapes\nnShapes [in] number of shapes\nidShapes [in] index of shapes\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nNumber [out] number of intersection point\nPoints [out] list of intersection points (NULL to ignore)\nidFaces [out] list of face ids that intersection point lies (NULL to ignore)\n\nIntersects the input ray with the input shapes and outputs the intersection points.\nnote:\nThe positive and negative directions of the ray will be involved in the calculation. \n\n The \"Trim\" option is used to determine what portions of the shape's faces are checked against the ray. \n\n This function allocates memory for the array output via \"Points\" and \"FacePaths\". \n\n The calling procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of intersection points?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayShapes\nnShapes [in] number of shapes\nidShapes [in] index of shapes\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nNumber [out] number of intersection point\nPoints [out] list of intersection points (NULL to ignore)\nidFaces [out] list of face ids that intersection point lies (NULL to ignore)\n\nIntersects the input ray with the input shapes and outputs the intersection points.\nnote:\nThe positive and negative directions of the ray will be involved in the calculation. \n\n The \"Trim\" option is used to determine what portions of the shape's faces are checked against the ray. \n\n This function allocates memory for the array output via \"Points\" and \"FacePaths\". \n\n The calling procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of face ids that intersection point lies?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayShapes\nnShapes [in] number of shapes\nidShapes [in] index of shapes\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nNumber [out] number of intersection point\nPoints [out] list of intersection points (NULL to ignore)\nidFaces [out] list of face ids that intersection point lies (NULL to ignore)\n\nIntersects the input ray with the input shapes and outputs the intersection points.\nnote:\nThe positive and negative directions of the ray will be involved in the calculation. \n\n The \"Trim\" option is used to determine what portions of the shape's faces are checked against the ray. \n\n This function allocates memory for the array output via \"Points\" and \"FacePaths\". \n\n The calling procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the closest intersection point of a ray with the active part's faces?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayPart\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nPoint [out] closest intersection point (NULL to ignore)\nidFace [out] id of face that intersection point lies on (input NULL to ignore this output)\n\nIntersects the input ray with all faces of the active part and outputs the point closest to the ray startpoint (Ray->Pnt).\nnote:\nThe ray only extends in the specified direction from the startpoint. \n\n Intersections in the other direction are not considered. \n\n If an intersection is found, the id of the intersected face is optionally output. \n\n Use cvxPartInqFaceShape() to get the id of the face's parent shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to ignore the intersection point and only get the id of the intersected face?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayPart\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nPoint [out] closest intersection point (NULL to ignore)\nidFace [out] id of face that intersection point lies on (input NULL to ignore this output)\n\nIntersects the input ray with all faces of the active part and outputs the point closest to the ray startpoint (Ray->Pnt).\nnote:\nThe ray only extends in the specified direction from the startpoint. \n\n Intersections in the other direction are not considered. \n\n If an intersection is found, the id of the intersected face is optionally output. \n\n Use cvxPartInqFaceShape() to get the id of the face's parent shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get the id of the face that the intersection point lies on?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayPart\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nPoint [out] closest intersection point (NULL to ignore)\nidFace [out] id of face that intersection point lies on (input NULL to ignore this output)\n\nIntersects the input ray with all faces of the active part and outputs the point closest to the ray startpoint (Ray->Pnt).\nnote:\nThe ray only extends in the specified direction from the startpoint. \n\n Intersections in the other direction are not considered. \n\n If an intersection is found, the id of the intersected face is optionally output. \n\n Use cvxPartInqFaceShape() to get the id of the face's parent shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the closest intersection point of a ray with visible faces?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayPartVis\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nPoint [out] closest intersection point (NULL to ignore)\nidFace [out] id of face that intersection point lies on (input NULL to ignore this output)\n\nThis function is the same as cvxIsectRayPart(), except that it only considers visible faces. \n\n That is, it ignores faces that belong to blanked shapes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to ignore faces that belong to blanked shapes when finding intersection points?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayPartVis\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nPoint [out] closest intersection point (NULL to ignore)\nidFace [out] id of face that intersection point lies on (input NULL to ignore this output)\n\nThis function is the same as cvxIsectRayPart(), except that it only considers visible faces. \n\n That is, it ignores faces that belong to blanked shapes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the face that the intersection point lies on?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayPartVis\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nPoint [out] closest intersection point (NULL to ignore)\nidFace [out] id of face that intersection point lies on (input NULL to ignore this output)\n\nThis function is the same as cvxIsectRayPart(), except that it only considers visible faces. \n\n That is, it ignores faces that belong to blanked shapes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the closest intersection point of a ray with a component?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayComp\nidComp [in] component id\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nPoint [out] closest intersection point (NULL to ignore)\n\nIntersects the input ray with the specified component in the active part and outputs the point closest to the ray startpoint (Ray->Pnt). \n\n The output point coordinates are given in the space of the active part.\nnote:\nThe ray only extends in the specified direction from the startpoint. \n\n Intersections in the other direction are not considered. \n\n The \"Trim\" option is used to determine what portions of the component's faces are checked against the ray."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine what portions of the component's faces are checked against the ray?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayComp\nidComp [in] component id\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nPoint [out] closest intersection point (NULL to ignore)\n\nIntersects the input ray with the specified component in the active part and outputs the point closest to the ray startpoint (Ray->Pnt). \n\n The output point coordinates are given in the space of the active part.\nnote:\nThe ray only extends in the specified direction from the startpoint. \n\n Intersections in the other direction are not considered. \n\n The \"Trim\" option is used to determine what portions of the component's faces are checked against the ray."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I ignore the closest intersection point and get other intersection points?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayComp\nidComp [in] component id\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nPoint [out] closest intersection point (NULL to ignore)\n\nIntersects the input ray with the specified component in the active part and outputs the point closest to the ray startpoint (Ray->Pnt). \n\n The output point coordinates are given in the space of the active part.\nnote:\nThe ray only extends in the specified direction from the startpoint. \n\n Intersections in the other direction are not considered. \n\n The \"Trim\" option is used to determine what portions of the component's faces are checked against the ray."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find intersection points of a ray with components?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayComps\nnComps [in] number of components\nCompPaths [in] pick path of components\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nNumber [out] number of intersection point\nPoints [out] list of intersection points (NULL to ignore)\nFacePaths [out] list of face pick paths that intersection point lies (NULL to ignore)\n\nIntersects the input ray with the input components and outputs the intersection points.\n\n\n The calling procedure is responsible for deallocating the memory.\nnote:\nThe positive and negative directions of the ray will be involved in the calculation. \n\n The \"Trim\" option is used to determine what portions of the shape's faces are checked against the ray."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the number of intersection points with a ray?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayComps\nnComps [in] number of components\nCompPaths [in] pick path of components\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nNumber [out] number of intersection point\nPoints [out] list of intersection points (NULL to ignore)\nFacePaths [out] list of face pick paths that intersection point lies (NULL to ignore)\n\nIntersects the input ray with the input components and outputs the intersection points.\n\n\n The calling procedure is responsible for deallocating the memory.\nnote:\nThe positive and negative directions of the ray will be involved in the calculation. \n\n The \"Trim\" option is used to determine what portions of the shape's faces are checked against the ray."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine the face pick paths that intersection point lies on?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayComps\nnComps [in] number of components\nCompPaths [in] pick path of components\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nNumber [out] number of intersection point\nPoints [out] list of intersection points (NULL to ignore)\nFacePaths [out] list of face pick paths that intersection point lies (NULL to ignore)\n\nIntersects the input ray with the input components and outputs the intersection points.\n\n\n The calling procedure is responsible for deallocating the memory.\nnote:\nThe positive and negative directions of the ray will be involved in the calculation. \n\n The \"Trim\" option is used to determine what portions of the shape's faces are checked against the ray."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the use of the 'Trim' option in intersecting a ray with components?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayComps\nnComps [in] number of components\nCompPaths [in] pick path of components\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nNumber [out] number of intersection point\nPoints [out] list of intersection points (NULL to ignore)\nFacePaths [out] list of face pick paths that intersection point lies (NULL to ignore)\n\nIntersects the input ray with the input components and outputs the intersection points.\n\n\n The calling procedure is responsible for deallocating the memory.\nnote:\nThe positive and negative directions of the ray will be involved in the calculation. \n\n The \"Trim\" option is used to determine what portions of the shape's faces are checked against the ray."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find components intersected by a specified ray?"
            },
            {
                "role": "assistant",
                "content": "cvxCompFind\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nDist [in] distance from start of ray along direction of ray\nSkipBlank [in] 1 to skip blanked components; else 0\nCount [out] number of components\nComps [out] list of component id's\n\nOutputs a list of indices of the components that belong the active part and are intersected by the specified ray. \n\n Only intersections within \"Dist\" of the ray's start point (Ray->Pnt) are considered.\nThe \"Trim\" option is used to determine what portions of the component faces are checked against the ray.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine portions of the component faces checked against the ray?"
            },
            {
                "role": "assistant",
                "content": "cvxCompFind\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nDist [in] distance from start of ray along direction of ray\nSkipBlank [in] 1 to skip blanked components; else 0\nCount [out] number of components\nComps [out] list of component id's\n\nOutputs a list of indices of the components that belong the active part and are intersected by the specified ray. \n\n Only intersections within \"Dist\" of the ray's start point (Ray->Pnt) are considered.\nThe \"Trim\" option is used to determine what portions of the component faces are checked against the ray.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to skip blanked components while finding intersected components?"
            },
            {
                "role": "assistant",
                "content": "cvxCompFind\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nDist [in] distance from start of ray along direction of ray\nSkipBlank [in] 1 to skip blanked components; else 0\nCount [out] number of components\nComps [out] list of component id's\n\nOutputs a list of indices of the components that belong the active part and are intersected by the specified ray. \n\n Only intersections within \"Dist\" of the ray's start point (Ray->Pnt) are considered.\nThe \"Trim\" option is used to determine what portions of the component faces are checked against the ray.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the intersection point of a ray with a bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayBndBox\nRay [in] ray defined by a point and a direction\nBox [in] the bounding box\nIsectPnt [out] the intersection point (NULL to ignore)\n\nIntersect an infinite line with a bounding box. \n\n the intersection point given is the farthest point on the ray along the opposite direction of the ray."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to calculate the intersection of an infinite line with a bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayBndBox\nRay [in] ray defined by a point and a direction\nBox [in] the bounding box\nIsectPnt [out] the intersection point (NULL to ignore)\n\nIntersect an infinite line with a bounding box. \n\n the intersection point given is the farthest point on the ray along the opposite direction of the ray."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine the farthest intersection point on a ray with a bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayBndBox\nRay [in] ray defined by a point and a direction\nBox [in] the bounding box\nIsectPnt [out] the intersection point (NULL to ignore)\n\nIntersect an infinite line with a bounding box. \n\n the intersection point given is the farthest point on the ray along the opposite direction of the ray."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if there is an intersection between two shapes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIsectShpChk\nidBaseShape [in] the need check intersection shape 1\nidOpShape [in] the need check intersection shape 2\n\nDetermine exist or not exist intersection between the input two shapes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to determine if two shapes intersect?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIsectShpChk\nidBaseShape [in] the need check intersection shape 1\nidOpShape [in] the need check intersection shape 2\n\nDetermine exist or not exist intersection between the input two shapes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find out if there is an intersection between two specified shapes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIsectShpChk\nidBaseShape [in] the need check intersection shape 1\nidOpShape [in] the need check intersection shape 2\n\nDetermine exist or not exist intersection between the input two shapes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if there is an intersection between two shapes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIsectShpChk2\nidBaseShape [in] the need check intersection shape 1\nidOpShape [in] the need check intersection shape 2\nfClosedChk [in] option to control whether check the open shell 1 is excluding the open shell. otherwise is 0\n\nDetermine exist or not exist intersection between the input two shapes. \n\n If should check the two shapes are closed, it will return 0 if any shape of them is not closed."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check if two shapes intersect?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIsectShpChk2\nidBaseShape [in] the need check intersection shape 1\nidOpShape [in] the need check intersection shape 2\nfClosedChk [in] option to control whether check the open shell 1 is excluding the open shell. otherwise is 0\n\nDetermine exist or not exist intersection between the input two shapes. \n\n If should check the two shapes are closed, it will return 0 if any shape of them is not closed."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if two shapes are closed?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIsectShpChk2\nidBaseShape [in] the need check intersection shape 1\nidOpShape [in] the need check intersection shape 2\nfClosedChk [in] option to control whether check the open shell 1 is excluding the open shell. otherwise is 0\n\nDetermine exist or not exist intersection between the input two shapes. \n\n If should check the two shapes are closed, it will return 0 if any shape of them is not closed."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsectShpShp\nbasePath [in] path of the first shape\nopPath [in] path of the second shape\ntrim [in] face trim option\ncount [out] count of \"curves\"\ncurves [out] list of intersection curves\n\nGets the intersecting curves of two shapes(comps)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsectShpShp\nbasePath [in] path of the first shape\nopPath [in] path of the second shape\ntrim [in] face trim option\ncount [out] count of \"curves\"\ncurves [out] list of intersection curves\n\nGets the intersecting curves of two shapes(comps)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsectShpShp\nbasePath [in] path of the first shape\nopPath [in] path of the second shape\ntrim [in] face trim option\ncount [out] count of \"curves\"\ncurves [out] list of intersection curves\n\nGets the intersecting curves of two shapes(comps)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if two bounding boxes intersect?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectBndBoxBndBox\nBox1 [in] the first bounding box\nBox2 [in] the second bounding box\n\nCheck whether two bounding boxes intersect."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to determine if two bounding boxes intersect?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectBndBoxBndBox\nBox1 [in] the first bounding box\nBox2 [in] the second bounding box\n\nCheck whether two bounding boxes intersect."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxIsectBndBoxBndBox to check for intersection of two bounding boxes?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectBndBoxBndBox\nBox1 [in] the first bounding box\nBox2 [in] the second bounding box\n\nCheck whether two bounding boxes intersect."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a bounding box intersects with a plane?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectBndBoxPlane\nBox [in] the bounding box\nPntOnPln [in] point on plane\nNormalOfPln [in] normal of plane\n\nCheck whether two bounding boxes intersect."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to determine if a bounding box intersects with a plane?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectBndBoxPlane\nBox [in] the bounding box\nPntOnPln [in] point on plane\nNormalOfPln [in] normal of plane\n\nCheck whether two bounding boxes intersect."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the cvxIsectBndBoxPlane function to check for intersection?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectBndBoxPlane\nBox [in] the bounding box\nPntOnPln [in] point on plane\nNormalOfPln [in] normal of plane\n\nCheck whether two bounding boxes intersect."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the intersection line of two planes?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectPlanePlane\nPntOnPln1 [in] the bounding box\nNormalOfPln1 [in] point on plane\nPntOnPln2 [in] normal of plane\nNormalOfPln2 [in] normal of plane2\nIsectLine [out] intersection line\n\nGets the intersection line of two planes both defined by a point and normal."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the intersection line of two planes?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectPlanePlane\nPntOnPln1 [in] the bounding box\nNormalOfPln1 [in] point on plane\nPntOnPln2 [in] normal of plane\nNormalOfPln2 [in] normal of plane2\nIsectLine [out] intersection line\n\nGets the intersection line of two planes both defined by a point and normal."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to define a point and normal to find the intersection line of two planes?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectPlanePlane\nPntOnPln1 [in] the bounding box\nNormalOfPln1 [in] point on plane\nPntOnPln2 [in] normal of plane\nNormalOfPln2 [in] normal of plane2\nIsectLine [out] intersection line\n\nGets the intersection line of two planes both defined by a point and normal."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate eigenvalues and eigenvectors of a 3x3 matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatEigen\nMat3x3 [in] matrix\nValues [out] three real-valued eigenvalues (or NULL)\nVectors [out] three eigenvectors for the eigenvalues (or NULL)\n\nCalculates the eigenvalues and eigenvectors of a 3x3 matrix.\nThree real-valued eigenvalues are output in Values, which is an array that must be provided by the caller and must be dimensioned large enough to hold at least 3 double precision numbers. \n\n The caller may pass NULL for the Values argument if the eigenvalues are not wanted. \n\n This function always computes three eigenvalues, repeating values in the Values array if necessary.\nThe eigenvectors corresponding to the eigenvalues are output in Vectors, which is an array that must be provided by the caller and must be dimensioned large enough to hold at least 3 svxVector structures. \n\n The caller may pass NULL for the Vectors argument if the eigenvectors are not wanted.\nVectors[i] is the eigenvector corresponding to the eigenvalue Values[i], but the eigenvalues are not sorted. \n\n The largest or smallest eigenvalue may be in any element of the Values array."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the eigenvalues of a matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatEigen\nMat3x3 [in] matrix\nValues [out] three real-valued eigenvalues (or NULL)\nVectors [out] three eigenvectors for the eigenvalues (or NULL)\n\nCalculates the eigenvalues and eigenvectors of a 3x3 matrix.\nThree real-valued eigenvalues are output in Values, which is an array that must be provided by the caller and must be dimensioned large enough to hold at least 3 double precision numbers. \n\n The caller may pass NULL for the Values argument if the eigenvalues are not wanted. \n\n This function always computes three eigenvalues, repeating values in the Values array if necessary.\nThe eigenvectors corresponding to the eigenvalues are output in Vectors, which is an array that must be provided by the caller and must be dimensioned large enough to hold at least 3 svxVector structures. \n\n The caller may pass NULL for the Vectors argument if the eigenvectors are not wanted.\nVectors[i] is the eigenvector corresponding to the eigenvalue Values[i], but the eigenvalues are not sorted. \n\n The largest or smallest eigenvalue may be in any element of the Values array."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain eigenvectors for a given matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatEigen\nMat3x3 [in] matrix\nValues [out] three real-valued eigenvalues (or NULL)\nVectors [out] three eigenvectors for the eigenvalues (or NULL)\n\nCalculates the eigenvalues and eigenvectors of a 3x3 matrix.\nThree real-valued eigenvalues are output in Values, which is an array that must be provided by the caller and must be dimensioned large enough to hold at least 3 double precision numbers. \n\n The caller may pass NULL for the Values argument if the eigenvalues are not wanted. \n\n This function always computes three eigenvalues, repeating values in the Values array if necessary.\nThe eigenvectors corresponding to the eigenvalues are output in Vectors, which is an array that must be provided by the caller and must be dimensioned large enough to hold at least 3 svxVector structures. \n\n The caller may pass NULL for the Vectors argument if the eigenvectors are not wanted.\nVectors[i] is the eigenvector corresponding to the eigenvalue Values[i], but the eigenvalues are not sorted. \n\n The largest or smallest eigenvalue may be in any element of the Values array."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I compute eigenvalues without storing them in an array?"
            },
            {
                "role": "assistant",
                "content": "cvxMatEigen\nMat3x3 [in] matrix\nValues [out] three real-valued eigenvalues (or NULL)\nVectors [out] three eigenvectors for the eigenvalues (or NULL)\n\nCalculates the eigenvalues and eigenvectors of a 3x3 matrix.\nThree real-valued eigenvalues are output in Values, which is an array that must be provided by the caller and must be dimensioned large enough to hold at least 3 double precision numbers. \n\n The caller may pass NULL for the Values argument if the eigenvalues are not wanted. \n\n This function always computes three eigenvalues, repeating values in the Values array if necessary.\nThe eigenvectors corresponding to the eigenvalues are output in Vectors, which is an array that must be provided by the caller and must be dimensioned large enough to hold at least 3 svxVector structures. \n\n The caller may pass NULL for the Vectors argument if the eigenvectors are not wanted.\nVectors[i] is the eigenvector corresponding to the eigenvalue Values[i], but the eigenvalues are not sorted. \n\n The largest or smallest eigenvalue may be in any element of the Values array."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize a transformation matrix to the identity matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatInit\nMat [out] transformation matrix\n\nInitializes \"Mat\" to the identity matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set a matrix to the identity matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatInit\nMat [out] transformation matrix\n\nInitializes \"Mat\" to the identity matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize a matrix in the identity form?"
            },
            {
                "role": "assistant",
                "content": "cvxMatInit\nMat [out] transformation matrix\n\nInitializes \"Mat\" to the identity matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to invert a transformation matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatInvert\nMat [in] transformation matrix\nInvMat [out] inverted transformation matrix\n\nOutput an inverted version of \"Mat\" via \"InvMat\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the inverted version of a transformation matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatInvert\nMat [in] transformation matrix\nInvMat [out] inverted transformation matrix\n\nOutput an inverted version of \"Mat\" via \"InvMat\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the inverted transformation matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatInvert\nMat [in] transformation matrix\nInvMat [out] inverted transformation matrix\n\nOutput an inverted version of \"Mat\" via \"InvMat\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to multiply two transformation matrices?"
            },
            {
                "role": "assistant",
                "content": "cvxMatMult\nMat1 [in] first transformation matrix\nMat2 [in] second transformation matrix\nMat3 [out] resulting matrix\n\nMatrix multiply (Mat3 = Mat1 * Mat2)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to perform matrix multiplication for transformation matrices?"
            },
            {
                "role": "assistant",
                "content": "cvxMatMult\nMat1 [in] first transformation matrix\nMat2 [in] second transformation matrix\nMat3 [out] resulting matrix\n\nMatrix multiply (Mat3 = Mat1 * Mat2)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the resulting matrix by multiplying two transformation matrices?"
            },
            {
                "role": "assistant",
                "content": "cvxMatMult\nMat1 [in] first transformation matrix\nMat2 [in] second transformation matrix\nMat3 [out] resulting matrix\n\nMatrix multiply (Mat3 = Mat1 * Mat2)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to compose a transformation matrix with a specified origin and Z axis direction?"
            },
            {
                "role": "assistant",
                "content": "cvxMatPntVec\nOrigin [in] origin\nzAxis [in] direction of Z axis\nMat [out] transformation matrix\n\nComposes a transformation matrix that defines a reference frame whose origin coincides with \"Origin\", whose Z axis points in the direction of \"zAxis\", with arbitrary X and Y axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to define a reference frame with arbitrary X and Y axis based on origin and Z axis direction?"
            },
            {
                "role": "assistant",
                "content": "cvxMatPntVec\nOrigin [in] origin\nzAxis [in] direction of Z axis\nMat [out] transformation matrix\n\nComposes a transformation matrix that defines a reference frame whose origin coincides with \"Origin\", whose Z axis points in the direction of \"zAxis\", with arbitrary X and Y axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the transformation matrix for a specific reference frame?"
            },
            {
                "role": "assistant",
                "content": "cvxMatPntVec\nOrigin [in] origin\nzAxis [in] direction of Z axis\nMat [out] transformation matrix\n\nComposes a transformation matrix that defines a reference frame whose origin coincides with \"Origin\", whose Z axis points in the direction of \"zAxis\", with arbitrary X and Y axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to compose a transformation matrix with a specified origin and axes directions?"
            },
            {
                "role": "assistant",
                "content": "cvxMatPntVecs\nOrigin [in] origin, optional\nxAxis [in] direction of x axis\nyAxis [in] direction of y axis\nMat [out] transformation matrix\n\nCompose a transformation matrix that defines a reference frame with an origin coinciding with \"Origin\" and X and Y axes being aligned to the directions given by \"xAxis\" and \"yAxis\", respectively. \n\n The \"xAxis\" and \"yAxis\" inputs need not be unit vectors, and as long as they are not parallel, they do not have to be perpendicular."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to define a reference frame using origin, x-axis, and y-axis?"
            },
            {
                "role": "assistant",
                "content": "cvxMatPntVecs\nOrigin [in] origin, optional\nxAxis [in] direction of x axis\nyAxis [in] direction of y axis\nMat [out] transformation matrix\n\nCompose a transformation matrix that defines a reference frame with an origin coinciding with \"Origin\" and X and Y axes being aligned to the directions given by \"xAxis\" and \"yAxis\", respectively. \n\n The \"xAxis\" and \"yAxis\" inputs need not be unit vectors, and as long as they are not parallel, they do not have to be perpendicular."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a transformation matrix based on given origin and axis directions?"
            },
            {
                "role": "assistant",
                "content": "cvxMatPntVecs\nOrigin [in] origin, optional\nxAxis [in] direction of x axis\nyAxis [in] direction of y axis\nMat [out] transformation matrix\n\nCompose a transformation matrix that defines a reference frame with an origin coinciding with \"Origin\" and X and Y axes being aligned to the directions given by \"xAxis\" and \"yAxis\", respectively. \n\n The \"xAxis\" and \"yAxis\" inputs need not be unit vectors, and as long as they are not parallel, they do not have to be perpendicular."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the origin of a matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatGetPntVecs\nMat [in] origin, optional\nOrigin [out] origin (NULL to ignore)\nxAxis [out] x direction (NULL to ignore)\nyAxis [out] y direction (NULL to ignore)\nzAxis [out] z direction (NULL to ignore)\n\nGets the origin, x-direction, y-direction and z-direction of matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the x-direction of a matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatGetPntVecs\nMat [in] origin, optional\nOrigin [out] origin (NULL to ignore)\nxAxis [out] x direction (NULL to ignore)\nyAxis [out] y direction (NULL to ignore)\nzAxis [out] z direction (NULL to ignore)\n\nGets the origin, x-direction, y-direction and z-direction of matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the y-direction of a matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatGetPntVecs\nMat [in] origin, optional\nOrigin [out] origin (NULL to ignore)\nxAxis [out] x direction (NULL to ignore)\nyAxis [out] y direction (NULL to ignore)\nzAxis [out] z direction (NULL to ignore)\n\nGets the origin, x-direction, y-direction and z-direction of matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the z-direction of a matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatGetPntVecs\nMat [in] origin, optional\nOrigin [out] origin (NULL to ignore)\nxAxis [out] x direction (NULL to ignore)\nyAxis [out] y direction (NULL to ignore)\nzAxis [out] z direction (NULL to ignore)\n\nGets the origin, x-direction, y-direction and z-direction of matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize a transformation matrix for rotation?"
            },
            {
                "role": "assistant",
                "content": "cvxMatRotate\nMat [inout] transformation matrix\nAngle [in] rotation angle (deg)\nAxis [in] axis of rotation\n\nInitializes a transformation matrix \"Mat\" to perform rotations by the specified angle about the specified axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to perform rotation by a specified angle?"
            },
            {
                "role": "assistant",
                "content": "cvxMatRotate\nMat [inout] transformation matrix\nAngle [in] rotation angle (deg)\nAxis [in] axis of rotation\n\nInitializes a transformation matrix \"Mat\" to perform rotations by the specified angle about the specified axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the axis of rotation for a transformation matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatRotate\nMat [inout] transformation matrix\nAngle [in] rotation angle (deg)\nAxis [in] axis of rotation\n\nInitializes a transformation matrix \"Mat\" to perform rotations by the specified angle about the specified axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize a transformation matrix for scaling points?"
            },
            {
                "role": "assistant",
                "content": "cvxMatScale\nMat [inout] transformation matrix\nPoint [in] reference point\nsX [in] X scale\nsY [in] Y scale\nsZ [in] Z scale\n\nInitializes \"Mat\" so that it will scale points by sX, sY, sZ relative to \"Point\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to scale points relative to a reference point using a transformation matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatScale\nMat [inout] transformation matrix\nPoint [in] reference point\nsX [in] X scale\nsY [in] Y scale\nsZ [in] Z scale\n\nInitializes \"Mat\" so that it will scale points by sX, sY, sZ relative to \"Point\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to scale points by different factors in X, Y, and Z directions?"
            },
            {
                "role": "assistant",
                "content": "cvxMatScale\nMat [inout] transformation matrix\nPoint [in] reference point\nsX [in] X scale\nsY [in] Y scale\nsZ [in] Z scale\n\nInitializes \"Mat\" so that it will scale points by sX, sY, sZ relative to \"Point\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the identity flag for a transformation matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatSetIdentity\nMat [inout] transformation matrix\n\nMake sure \"identity\" flag associated with \"Mat\" is set correctly."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to ensure the identity flag is correctly set for a transformation matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatSetIdentity\nMat [inout] transformation matrix\n\nMake sure \"identity\" flag associated with \"Mat\" is set correctly."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if the identity flag is correctly set for a transformation matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatSetIdentity\nMat [inout] transformation matrix\n\nMake sure \"identity\" flag associated with \"Mat\" is set correctly."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to apply transformation matrix to a coordinate frame?"
            },
            {
                "role": "assistant",
                "content": "cvxMatTransform\nMat [in] transformation matrix\nFrame [inout] coordinate frame (i.e. transform)\n\nApplies transformation matrix \"Mat\" to \"Frame\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to transform a coordinate frame using a transformation matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatTransform\nMat [in] transformation matrix\nFrame [inout] coordinate frame (i.e. transform)\n\nApplies transformation matrix \"Mat\" to \"Frame\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use transformation matrix to transform a coordinate frame?"
            },
            {
                "role": "assistant",
                "content": "cvxMatTransform\nMat [in] transformation matrix\nFrame [inout] coordinate frame (i.e. transform)\n\nApplies transformation matrix \"Mat\" to \"Frame\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize a transformation matrix for translation?"
            },
            {
                "role": "assistant",
                "content": "cvxMatTranslate\nMat [inout] transformation matrix\ndX [in] X distance\ndY [in] Y distance\ndZ [in] Z distance\n\nInitializes \"Mat\" so that it will translate points by dX, dY, dZ."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to translate points by a specified distance in X, Y, and Z directions?"
            },
            {
                "role": "assistant",
                "content": "cvxMatTranslate\nMat [inout] transformation matrix\ndX [in] X distance\ndY [in] Y distance\ndZ [in] Z distance\n\nInitializes \"Mat\" so that it will translate points by dX, dY, dZ."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to apply translation to a transformation matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatTranslate\nMat [inout] transformation matrix\ndX [in] X distance\ndY [in] Y distance\ndZ [in] Z distance\n\nInitializes \"Mat\" so that it will translate points by dX, dY, dZ."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize transformation matrix to a specified standard view?"
            },
            {
                "role": "assistant",
                "content": "cvxMatView\nMat [out] transformation matrix\nType [in] standard view type\n\nInitializes \"Mat\" to the specified standard view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set transformation matrix to a standard view type?"
            },
            {
                "role": "assistant",
                "content": "cvxMatView\nMat [out] transformation matrix\nType [in] standard view type\n\nInitializes \"Mat\" to the specified standard view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxMatView to specify a standard view?"
            },
            {
                "role": "assistant",
                "content": "cvxMatView\nMat [out] transformation matrix\nType [in] standard view type\n\nInitializes \"Mat\" to the specified standard view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to convert transformation matrix to Euler angles?"
            },
            {
                "role": "assistant",
                "content": "cvxMatToEuler\nSeq [in] rotation sequence type, see description\npMat [in] transformation matrix\npzMatEuler [out] Euler angles and translate vector\n\nConversion Transform Matrix to Euler Angles. Two categories of rotation sequence:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the categories of rotation sequence for transformation matrix to Euler angles conversion?"
            },
            {
                "role": "assistant",
                "content": "cvxMatToEuler\nSeq [in] rotation sequence type, see description\npMat [in] transformation matrix\npzMatEuler [out] Euler angles and translate vector\n\nConversion Transform Matrix to Euler Angles. Two categories of rotation sequence:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get Euler angles and translate vector from transformation matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatToEuler\nSeq [in] rotation sequence type, see description\npMat [in] transformation matrix\npzMatEuler [out] Euler angles and translate vector\n\nConversion Transform Matrix to Euler Angles. Two categories of rotation sequence:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to convert Euler angles to a transformation matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatFromEuler\nSeq [in] rotation sequence type, see description\npzMatEuler [in] Euler angles and translate vector\npMat [out] transformation matrix\n\nConversion from Euler Angles to Transform Matrix. Two categories of rotation sequence:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a transformation matrix from Euler angles?"
            },
            {
                "role": "assistant",
                "content": "cvxMatFromEuler\nSeq [in] rotation sequence type, see description\npzMatEuler [in] Euler angles and translate vector\npMat [out] transformation matrix\n\nConversion from Euler Angles to Transform Matrix. Two categories of rotation sequence:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the categories of rotation sequences for converting Euler angles to a transformation matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatFromEuler\nSeq [in] rotation sequence type, see description\npzMatEuler [in] Euler angles and translate vector\npMat [out] transformation matrix\n\nConversion from Euler Angles to Transform Matrix. Two categories of rotation sequence:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to apply a transformation matrix to a point?"
            },
            {
                "role": "assistant",
                "content": "cvxPntTransform\nMat [in] transformation matrix\nPoint [inout] point\n\nApplies transformation matrix \"Mat\" to \"Point\".\nTransform point from local to world space, if *Mat is a local matrix. \n\n Transform point form world to local space. if *Mat is the inverse of a local matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to transform a point from local to world space?"
            },
            {
                "role": "assistant",
                "content": "cvxPntTransform\nMat [in] transformation matrix\nPoint [inout] point\n\nApplies transformation matrix \"Mat\" to \"Point\".\nTransform point from local to world space, if *Mat is a local matrix. \n\n Transform point form world to local space. if *Mat is the inverse of a local matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to transform a point from world to local space?"
            },
            {
                "role": "assistant",
                "content": "cvxPntTransform\nMat [in] transformation matrix\nPoint [inout] point\n\nApplies transformation matrix \"Mat\" to \"Point\".\nTransform point from local to world space, if *Mat is a local matrix. \n\n Transform point form world to local space. if *Mat is the inverse of a local matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to apply a transformation matrix to a list of points?"
            },
            {
                "role": "assistant",
                "content": "cvxPntTransformList\nMat [in] transformation matrix\nCount [in] number of points to transform\nPoints [in] list of points to transform\n\nApplies transformation matrix \"Mat\" to \"Point\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to transform multiple points using a transformation matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxPntTransformList\nMat [in] transformation matrix\nCount [in] number of points to transform\nPoints [in] list of points to transform\n\nApplies transformation matrix \"Mat\" to \"Point\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to transform a list of points using a given transformation matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxPntTransformList\nMat [in] transformation matrix\nCount [in] number of points to transform\nPoints [in] list of points to transform\n\nApplies transformation matrix \"Mat\" to \"Point\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to apply transformation matrix to an axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisTransform\nMat [in] transformation matrix\nAxis [inout] axis\n\nApplies transformation matrix \"Mat\" to \"Axis\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to transform an axis using a matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisTransform\nMat [in] transformation matrix\nAxis [inout] axis\n\nApplies transformation matrix \"Mat\" to \"Axis\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use transformation matrix to modify an axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisTransform\nMat [in] transformation matrix\nAxis [inout] axis\n\nApplies transformation matrix \"Mat\" to \"Axis\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to apply transformation matrix to a vector?"
            },
            {
                "role": "assistant",
                "content": "cvxVecTransform\nMat [in] transformation matrix\nVector [inout] vector\n\nApplies transformation matrix \"Mat\" to \"Vector\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to transform a vector using a transformation matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxVecTransform\nMat [in] transformation matrix\nVector [inout] vector\n\nApplies transformation matrix \"Mat\" to \"Vector\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use transformation matrix to transform a vector?"
            },
            {
                "role": "assistant",
                "content": "cvxVecTransform\nMat [in] transformation matrix\nVector [inout] vector\n\nApplies transformation matrix \"Mat\" to \"Vector\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to apply a transformation matrix to a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvTransform\nMat [in] transformation matrix\nCrv [inout] curve\n\nApplies transformation matrix \"Mat\" to \"Crv\". \n\n Assumes \"Mat\" is an affine transform."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to transform a curve using a matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvTransform\nMat [in] transformation matrix\nCrv [inout] curve\n\nApplies transformation matrix \"Mat\" to \"Crv\". \n\n Assumes \"Mat\" is an affine transform."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use an affine transform to modify a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvTransform\nMat [in] transformation matrix\nCrv [inout] curve\n\nApplies transformation matrix \"Mat\" to \"Crv\". \n\n Assumes \"Mat\" is an affine transform."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to apply a transformation matrix to a surface?"
            },
            {
                "role": "assistant",
                "content": "cvxSrfTransform\nMat [in] transformation matrix\nSrf [inout] surface\n\nApplies transformation matrix \"Mat\" to \"Srf\". \n\n Assumes \"Mat\" is an affine transform."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to transform a surface using a matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxSrfTransform\nMat [in] transformation matrix\nSrf [inout] surface\n\nApplies transformation matrix \"Mat\" to \"Srf\". \n\n Assumes \"Mat\" is an affine transform."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use an affine transform to modify a surface?"
            },
            {
                "role": "assistant",
                "content": "cvxSrfTransform\nMat [in] transformation matrix\nSrf [inout] surface\n\nApplies transformation matrix \"Mat\" to \"Srf\". \n\n Assumes \"Mat\" is an affine transform."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxTransform\nMat [in] transformation matrix\nBox [inout] bounding box\n\nApply the specified transform to the specified bounding box.\nIf the bounding box has not been modified since initialized, do nothing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxTransform\nMat [in] transformation matrix\nBox [inout] bounding box\n\nApply the specified transform to the specified bounding box.\nIf the bounding box has not been modified since initialized, do nothing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxTransform\nMat [in] transformation matrix\nBox [inout] bounding box\n\nApply the specified transform to the specified bounding box.\nIf the bounding box has not been modified since initialized, do nothing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any function to get the nurbs by curve entity?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvEval\nidCurve [in] curve entity id\nT [in] t parameter value on curve\nPoint [out] point on curve\nNormal [out] normal at point on curve\n\nEvaluates the NURBS representation of the curve entity specified by \"idCurve\". Outputs the point coordinates (Point) and normal direction (Normal) at the specified \"t\" parameter value. \n\n Use cvxCrvParam() to get the curve's parameter limits. \n\n The \"Normal\" output is an arbitrary direction that is perpendicular to the curve at \"t\" and is not the same as the normal direction that is a function of curvature at \"t\".\nsee:\ncvxCrvEvalCrvtr() if you need the normal that points toward the curve's center of curvature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to evaluate a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvEval\nidCurve [in] curve entity id\nT [in] t parameter value on curve\nPoint [out] point on curve\nNormal [out] normal at point on curve\n\nEvaluates the NURBS representation of the curve entity specified by \"idCurve\". Outputs the point coordinates (Point) and normal direction (Normal) at the specified \"t\" parameter value. \n\n Use cvxCrvParam() to get the curve's parameter limits. \n\n The \"Normal\" output is an arbitrary direction that is perpendicular to the curve at \"t\" and is not the same as the normal direction that is a function of curvature at \"t\".\nsee:\ncvxCrvEvalCrvtr() if you need the normal that points toward the curve's center of curvature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get point and normal of a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvEval\nidCurve [in] curve entity id\nT [in] t parameter value on curve\nPoint [out] point on curve\nNormal [out] normal at point on curve\n\nEvaluates the NURBS representation of the curve entity specified by \"idCurve\". Outputs the point coordinates (Point) and normal direction (Normal) at the specified \"t\" parameter value. \n\n Use cvxCrvParam() to get the curve's parameter limits. \n\n The \"Normal\" output is an arbitrary direction that is perpendicular to the curve at \"t\" and is not the same as the normal direction that is a function of curvature at \"t\".\nsee:\ncvxCrvEvalCrvtr() if you need the normal that points toward the curve's center of curvature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxCrvParam() to get the curve's parameter limits?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvEval\nidCurve [in] curve entity id\nT [in] t parameter value on curve\nPoint [out] point on curve\nNormal [out] normal at point on curve\n\nEvaluates the NURBS representation of the curve entity specified by \"idCurve\". Outputs the point coordinates (Point) and normal direction (Normal) at the specified \"t\" parameter value. \n\n Use cvxCrvParam() to get the curve's parameter limits. \n\n The \"Normal\" output is an arbitrary direction that is perpendicular to the curve at \"t\" and is not the same as the normal direction that is a function of curvature at \"t\".\nsee:\ncvxCrvEvalCrvtr() if you need the normal that points toward the curve's center of curvature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should I use cvxCrvEvalCrvtr() to get the normal that points toward the curve's center of curvature?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvEval\nidCurve [in] curve entity id\nT [in] t parameter value on curve\nPoint [out] point on curve\nNormal [out] normal at point on curve\n\nEvaluates the NURBS representation of the curve entity specified by \"idCurve\". Outputs the point coordinates (Point) and normal direction (Normal) at the specified \"t\" parameter value. \n\n Use cvxCrvParam() to get the curve's parameter limits. \n\n The \"Normal\" output is an arbitrary direction that is perpendicular to the curve at \"t\" and is not the same as the normal direction that is a function of curvature at \"t\".\nsee:\ncvxCrvEvalCrvtr() if you need the normal that points toward the curve's center of curvature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to evaluate a curve at a specific parameter value?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvEval2\nidCurve [in] curve entity id\nt [in] t parameter value on curve\nlevel [in] level of evaluation(0 ~ 3), See description below\neval [out] Result\n\nEvaluates a curve at a specified parameter value.\n\"level\" specifies the level of evaluation. The higher the level, more data gets returned (at the expense of greater computation).\n                     level\n      |  0  |     1     |     2      |    3\n      +-----+-----------+------------+--------\n      | pnt |  deriv_1  |  deriv_2   | deriv_3"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What does the 'level' parameter do in curve evaluation?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvEval2\nidCurve [in] curve entity id\nt [in] t parameter value on curve\nlevel [in] level of evaluation(0 ~ 3), See description below\neval [out] Result\n\nEvaluates a curve at a specified parameter value.\n\"level\" specifies the level of evaluation. The higher the level, more data gets returned (at the expense of greater computation).\n                     level\n      |  0  |     1     |     2      |    3\n      +-----+-----------+------------+--------\n      | pnt |  deriv_1  |  deriv_2   | deriv_3"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I get the first derivative of a curve at a specified parameter value?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvEval2\nidCurve [in] curve entity id\nt [in] t parameter value on curve\nlevel [in] level of evaluation(0 ~ 3), See description below\neval [out] Result\n\nEvaluates a curve at a specified parameter value.\n\"level\" specifies the level of evaluation. The higher the level, more data gets returned (at the expense of greater computation).\n                     level\n      |  0  |     1     |     2      |    3\n      +-----+-----------+------------+--------\n      | pnt |  deriv_1  |  deriv_2   | deriv_3"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the second derivative of a curve at a specific parameter value?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvEval2\nidCurve [in] curve entity id\nt [in] t parameter value on curve\nlevel [in] level of evaluation(0 ~ 3), See description below\neval [out] Result\n\nEvaluates a curve at a specified parameter value.\n\"level\" specifies the level of evaluation. The higher the level, more data gets returned (at the expense of greater computation).\n                     level\n      |  0  |     1     |     2      |    3\n      +-----+-----------+------------+--------\n      | pnt |  deriv_1  |  deriv_2   | deriv_3"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to compute the third derivative of a curve at a given parameter value?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvEval2\nidCurve [in] curve entity id\nt [in] t parameter value on curve\nlevel [in] level of evaluation(0 ~ 3), See description below\neval [out] Result\n\nEvaluates a curve at a specified parameter value.\n\"level\" specifies the level of evaluation. The higher the level, more data gets returned (at the expense of greater computation).\n                     level\n      |  0  |     1     |     2      |    3\n      +-----+-----------+------------+--------\n      | pnt |  deriv_1  |  deriv_2   | deriv_3"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to evaluate a pre-edge at a specified parameter value?"
            },
            {
                "role": "assistant",
                "content": "cvxPreEdgeEval\nidPreEdge [in] index of pre-edge\nt [in] t parameter value on curve\nlevel [in] level of evaluation(0 ~ 3). See description below\neval [out] Result\n\nEvaluates a pre-edge at a specified parameter value. the difference between the function \n\n and cvxCrvEval2() is that cvxCrvEval2() simply evaluates point on a curve, the function computes \n\n directional and point on the surface from the UV curve.\n\"level\" specifies the level of evaluation. The higher the level, more data gets returned (at the expense of greater computation).\n                     level\n      |  0  |     1     |     2      |    3\n      +-----+-----------+------------+--------\n      | pnt |  deriv_1  |  deriv_2   | deriv_3"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the difference between cvxPreEdgeEval and cvxCrvEval2?"
            },
            {
                "role": "assistant",
                "content": "cvxPreEdgeEval\nidPreEdge [in] index of pre-edge\nt [in] t parameter value on curve\nlevel [in] level of evaluation(0 ~ 3). See description below\neval [out] Result\n\nEvaluates a pre-edge at a specified parameter value. the difference between the function \n\n and cvxCrvEval2() is that cvxCrvEval2() simply evaluates point on a curve, the function computes \n\n directional and point on the surface from the UV curve.\n\"level\" specifies the level of evaluation. The higher the level, more data gets returned (at the expense of greater computation).\n                     level\n      |  0  |     1     |     2      |    3\n      +-----+-----------+------------+--------\n      | pnt |  deriv_1  |  deriv_2   | deriv_3"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to compute directional and point on the surface from the UV curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPreEdgeEval\nidPreEdge [in] index of pre-edge\nt [in] t parameter value on curve\nlevel [in] level of evaluation(0 ~ 3). See description below\neval [out] Result\n\nEvaluates a pre-edge at a specified parameter value. the difference between the function \n\n and cvxCrvEval2() is that cvxCrvEval2() simply evaluates point on a curve, the function computes \n\n directional and point on the surface from the UV curve.\n\"level\" specifies the level of evaluation. The higher the level, more data gets returned (at the expense of greater computation).\n                     level\n      |  0  |     1     |     2      |    3\n      +-----+-----------+------------+--------\n      | pnt |  deriv_1  |  deriv_2   | deriv_3"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What does the 'level' parameter specify in cvxPreEdgeEval?"
            },
            {
                "role": "assistant",
                "content": "cvxPreEdgeEval\nidPreEdge [in] index of pre-edge\nt [in] t parameter value on curve\nlevel [in] level of evaluation(0 ~ 3). See description below\neval [out] Result\n\nEvaluates a pre-edge at a specified parameter value. the difference between the function \n\n and cvxCrvEval2() is that cvxCrvEval2() simply evaluates point on a curve, the function computes \n\n directional and point on the surface from the UV curve.\n\"level\" specifies the level of evaluation. The higher the level, more data gets returned (at the expense of greater computation).\n                     level\n      |  0  |     1     |     2      |    3\n      +-----+-----------+------------+--------\n      | pnt |  deriv_1  |  deriv_2   | deriv_3"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How does the level of evaluation affect the data returned in cvxPreEdgeEval?"
            },
            {
                "role": "assistant",
                "content": "cvxPreEdgeEval\nidPreEdge [in] index of pre-edge\nt [in] t parameter value on curve\nlevel [in] level of evaluation(0 ~ 3). See description below\neval [out] Result\n\nEvaluates a pre-edge at a specified parameter value. the difference between the function \n\n and cvxCrvEval2() is that cvxCrvEval2() simply evaluates point on a curve, the function computes \n\n directional and point on the surface from the UV curve.\n\"level\" specifies the level of evaluation. The higher the level, more data gets returned (at the expense of greater computation).\n                     level\n      |  0  |     1     |     2      |    3\n      +-----+-----------+------------+--------\n      | pnt |  deriv_1  |  deriv_2   | deriv_3"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to evaluate the curvature of a curve at a specified parameter?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvEvalCrvtr\nidCurve [in] curve entity id\nt [in] parameter at which the curvature is evaluated\npoint [out] point at the specified parameter (input NULL to ignore).\nnormal [out] unit principal normal vector at the specified parameter (input NULL to ignore).\ncurvature [out] curvature at the specified parameter (input NULL to ignore).\n\nEvaluates curvature, point and unit principal normal vector of a given curve at the specified parameter.Use cvxCrvParam() to get the curve's parameter limits."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the point at a specified parameter on a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvEvalCrvtr\nidCurve [in] curve entity id\nt [in] parameter at which the curvature is evaluated\npoint [out] point at the specified parameter (input NULL to ignore).\nnormal [out] unit principal normal vector at the specified parameter (input NULL to ignore).\ncurvature [out] curvature at the specified parameter (input NULL to ignore).\n\nEvaluates curvature, point and unit principal normal vector of a given curve at the specified parameter.Use cvxCrvParam() to get the curve's parameter limits."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the unit principal normal vector at a specified parameter on a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvEvalCrvtr\nidCurve [in] curve entity id\nt [in] parameter at which the curvature is evaluated\npoint [out] point at the specified parameter (input NULL to ignore).\nnormal [out] unit principal normal vector at the specified parameter (input NULL to ignore).\ncurvature [out] curvature at the specified parameter (input NULL to ignore).\n\nEvaluates curvature, point and unit principal normal vector of a given curve at the specified parameter.Use cvxCrvParam() to get the curve's parameter limits."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a curve is a straight line?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvIsLine\nidCurve [in] index of curve\n\nCheck if the specified curve is a straight line."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to determine if a curve is a straight line?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvIsLine\nidCurve [in] index of curve\n\nCheck if the specified curve is a straight line."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to identify if a curve is a straight line?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvIsLine\nidCurve [in] index of curve\n\nCheck if the specified curve is a straight line."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the minimum and maximum t parameter values of a curve entity?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvParam\nidCurve [in] curve entity id\nT [out] min/max T values\n\nOutputs the minimum and maximum t parameter values of the NURBS representation of the specified curve entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the NURBS representation of a specified curve entity?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvParam\nidCurve [in] curve entity id\nT [out] min/max T values\n\nOutputs the minimum and maximum t parameter values of the NURBS representation of the specified curve entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the T values for a curve entity?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvParam\nidCurve [in] curve entity id\nT [out] min/max T values\n\nOutputs the minimum and maximum t parameter values of the NURBS representation of the specified curve entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the maximum and minimum radius of a spline curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvMinMaxRad\nidCurve [in] id of curve\nminRad [out] minimum radius(NULL to ignore)\nmaxRad [out] maximum radius(NULL to ignore)\nisFlat [out] 1 if the curve is flat, else 0(NULL to ignore)\n\nGet the maximum and minimum radius of the spline curve. \n\n If curvature of curve = 0, Rad = -1 (the radius of curvature is infinite)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check if a curve is flat?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvMinMaxRad\nidCurve [in] id of curve\nminRad [out] minimum radius(NULL to ignore)\nmaxRad [out] maximum radius(NULL to ignore)\nisFlat [out] 1 if the curve is flat, else 0(NULL to ignore)\n\nGet the maximum and minimum radius of the spline curve. \n\n If curvature of curve = 0, Rad = -1 (the radius of curvature is infinite)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle the case when the curvature of the curve is 0?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvMinMaxRad\nidCurve [in] id of curve\nminRad [out] minimum radius(NULL to ignore)\nmaxRad [out] maximum radius(NULL to ignore)\nisFlat [out] 1 if the curve is flat, else 0(NULL to ignore)\n\nGet the maximum and minimum radius of the spline curve. \n\n If curvature of curve = 0, Rad = -1 (the radius of curvature is infinite)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check the continuity flag of a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvInqContinuity\nCount [in] number of curves\nCurves [in] list of curves\nContinuity [out] continuity flag (0 to discontinuous; \n\n 1 to position continuous; \n\n 2 to tangent continuous)\n\nGet the flag of continuity of curves."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine the continuity of a list of curves?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvInqContinuity\nCount [in] number of curves\nCurves [in] list of curves\nContinuity [out] continuity flag (0 to discontinuous; \n\n 1 to position continuous; \n\n 2 to tangent continuous)\n\nGet the flag of continuity of curves."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I find out if a curve is position continuous, tangent continuous, or discontinuous?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvInqContinuity\nCount [in] number of curves\nCurves [in] list of curves\nContinuity [out] continuity flag (0 to discontinuous; \n\n 1 to position continuous; \n\n 2 to tangent continuous)\n\nGet the flag of continuity of curves."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxCrvContinuityTolListInit\ndata [out] \n\nInitialize the parameters of the cvxCrvInqMultiContinuity().\nnote:\nDo not assign a value to variable \"data\" before calling this function. \n\n The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxCrvContinuityTolListInit\ndata [out] \n\nInitialize the parameters of the cvxCrvInqMultiContinuity().\nnote:\nDo not assign a value to variable \"data\" before calling this function. \n\n The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxCrvContinuityTolListInit\ndata [out] \n\nInitialize the parameters of the cvxCrvInqMultiContinuity().\nnote:\nDo not assign a value to variable \"data\" before calling this function. \n\n The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to judge the continuity relationship between two lines?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvInqMultiContinuity\ncnt [in] count of curves\ncurves [in] list of curve id\ntols [in] list of curve continuity tolerance\ncntContinuity [out] count of data\ndata [out] list of continuity data\n\nFor all input lines, judge the continuity relationship between two lines.\ncntContinuity is the number of intersections between every two line segments.\ndata is the continuity of the two line segments represented by the intersection.\nUnlike the cvxCrvInqContinuity interface can only judge the overall continuity of all input line segments, and requires that the line segments are closed at last.\nThe cvxCrvInqMultiContinuity interface can judge the continuity between any two line segments, and there are no other use requirements.\nnote:\nInterface cvxCrvContinuityTolListInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to count the number of intersections between line segments?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvInqMultiContinuity\ncnt [in] count of curves\ncurves [in] list of curve id\ntols [in] list of curve continuity tolerance\ncntContinuity [out] count of data\ndata [out] list of continuity data\n\nFor all input lines, judge the continuity relationship between two lines.\ncntContinuity is the number of intersections between every two line segments.\ndata is the continuity of the two line segments represented by the intersection.\nUnlike the cvxCrvInqContinuity interface can only judge the overall continuity of all input line segments, and requires that the line segments are closed at last.\nThe cvxCrvInqMultiContinuity interface can judge the continuity between any two line segments, and there are no other use requirements.\nnote:\nInterface cvxCrvContinuityTolListInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the continuity data of two line segments?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvInqMultiContinuity\ncnt [in] count of curves\ncurves [in] list of curve id\ntols [in] list of curve continuity tolerance\ncntContinuity [out] count of data\ndata [out] list of continuity data\n\nFor all input lines, judge the continuity relationship between two lines.\ncntContinuity is the number of intersections between every two line segments.\ndata is the continuity of the two line segments represented by the intersection.\nUnlike the cvxCrvInqContinuity interface can only judge the overall continuity of all input line segments, and requires that the line segments are closed at last.\nThe cvxCrvInqMultiContinuity interface can judge the continuity between any two line segments, and there are no other use requirements.\nnote:\nInterface cvxCrvContinuityTolListInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find connected chain of curves or edges?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCurveChainFind\nnSeeds [in] number of seed edges or curves\nidSeeds [in] list of id of seed edges or curves\ntype [in] type of edges, only effects the find result of the seed edge \n\n 0: find continuously tangent edges that may be bound by any number of faces \n\n 1: find connected open edges \n\n 2: find continuously tangent manifold edges that are shared by exactly two \n\n faces or are seams having the same face on both sides\nCount [out] number of curves found\nidCrvs [out] list of curves found\n\nUse the function to find connected chain of curves or edges and output a list of indices of the edges or curves.\nIf the seed is a curve, the chain consists of curves that are connected end-to-end, but without any requirement for tangency between curve.\nIf the seed is an edge, the chain consists of edges that are tangent, i.e. smoothly \n\n connected end-to-end. If type is 0, an edge may bound any number of faces. If type \n\n is 1, only open edges are included in the chain, the requirement for tangency between \n\n edges is suspended, so a chain of open edges may continue around sharp corners. If \n\n type is 2, only manifold edges are included in the chain, i.e. edges that are shared \n\n by exactly two faces, or edges that have seams with the same face on both sides.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to output a list of indices of the edges or curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCurveChainFind\nnSeeds [in] number of seed edges or curves\nidSeeds [in] list of id of seed edges or curves\ntype [in] type of edges, only effects the find result of the seed edge \n\n 0: find continuously tangent edges that may be bound by any number of faces \n\n 1: find connected open edges \n\n 2: find continuously tangent manifold edges that are shared by exactly two \n\n faces or are seams having the same face on both sides\nCount [out] number of curves found\nidCrvs [out] list of curves found\n\nUse the function to find connected chain of curves or edges and output a list of indices of the edges or curves.\nIf the seed is a curve, the chain consists of curves that are connected end-to-end, but without any requirement for tangency between curve.\nIf the seed is an edge, the chain consists of edges that are tangent, i.e. smoothly \n\n connected end-to-end. If type is 0, an edge may bound any number of faces. If type \n\n is 1, only open edges are included in the chain, the requirement for tangency between \n\n edges is suspended, so a chain of open edges may continue around sharp corners. If \n\n type is 2, only manifold edges are included in the chain, i.e. edges that are shared \n\n by exactly two faces, or edges that have seams with the same face on both sides.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to find connected open edges?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCurveChainFind\nnSeeds [in] number of seed edges or curves\nidSeeds [in] list of id of seed edges or curves\ntype [in] type of edges, only effects the find result of the seed edge \n\n 0: find continuously tangent edges that may be bound by any number of faces \n\n 1: find connected open edges \n\n 2: find continuously tangent manifold edges that are shared by exactly two \n\n faces or are seams having the same face on both sides\nCount [out] number of curves found\nidCrvs [out] list of curves found\n\nUse the function to find connected chain of curves or edges and output a list of indices of the edges or curves.\nIf the seed is a curve, the chain consists of curves that are connected end-to-end, but without any requirement for tangency between curve.\nIf the seed is an edge, the chain consists of edges that are tangent, i.e. smoothly \n\n connected end-to-end. If type is 0, an edge may bound any number of faces. If type \n\n is 1, only open edges are included in the chain, the requirement for tangency between \n\n edges is suspended, so a chain of open edges may continue around sharp corners. If \n\n type is 2, only manifold edges are included in the chain, i.e. edges that are shared \n\n by exactly two faces, or edges that have seams with the same face on both sides.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find continuously tangent manifold edges shared by exactly two faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCurveChainFind\nnSeeds [in] number of seed edges or curves\nidSeeds [in] list of id of seed edges or curves\ntype [in] type of edges, only effects the find result of the seed edge \n\n 0: find continuously tangent edges that may be bound by any number of faces \n\n 1: find connected open edges \n\n 2: find continuously tangent manifold edges that are shared by exactly two \n\n faces or are seams having the same face on both sides\nCount [out] number of curves found\nidCrvs [out] list of curves found\n\nUse the function to find connected chain of curves or edges and output a list of indices of the edges or curves.\nIf the seed is a curve, the chain consists of curves that are connected end-to-end, but without any requirement for tangency between curve.\nIf the seed is an edge, the chain consists of edges that are tangent, i.e. smoothly \n\n connected end-to-end. If type is 0, an edge may bound any number of faces. If type \n\n is 1, only open edges are included in the chain, the requirement for tangency between \n\n edges is suspended, so a chain of open edges may continue around sharp corners. If \n\n type is 2, only manifold edges are included in the chain, i.e. edges that are shared \n\n by exactly two faces, or edges that have seams with the same face on both sides.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a point on a curve at a specific fraction of its length?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvGetPntAtLenFraction\nidCurve [in] curve entity id\nFraction [in] fraction of curve length (0.0 to 1.0)\nPoint [out] output point on curve\n\nGets point on a curve at a specified fraction of the curve's length. \n\n For example, to evaluate the curve at its minimum parameter value, \n\n set frac to 0.0; to evaluate the curve at its maximum parameter value, \n\n set frac to 1.0; and to evaluate the mid-point of the curve where the \n\n length from each end is the same, set frac to 0.5."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to evaluate a curve at its minimum parameter value?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvGetPntAtLenFraction\nidCurve [in] curve entity id\nFraction [in] fraction of curve length (0.0 to 1.0)\nPoint [out] output point on curve\n\nGets point on a curve at a specified fraction of the curve's length. \n\n For example, to evaluate the curve at its minimum parameter value, \n\n set frac to 0.0; to evaluate the curve at its maximum parameter value, \n\n set frac to 1.0; and to evaluate the mid-point of the curve where the \n\n length from each end is the same, set frac to 0.5."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the mid-point of a curve where the length from each end is the same?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvGetPntAtLenFraction\nidCurve [in] curve entity id\nFraction [in] fraction of curve length (0.0 to 1.0)\nPoint [out] output point on curve\n\nGets point on a curve at a specified fraction of the curve's length. \n\n For example, to evaluate the curve at its minimum parameter value, \n\n set frac to 0.0; to evaluate the curve at its maximum parameter value, \n\n set frac to 1.0; and to evaluate the mid-point of the curve where the \n\n length from each end is the same, set frac to 0.5."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to project a point onto a NURBS curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvPntProj\nidCurve [in] id of curve entity\nPnt [in] coordinates of point to project onto curve\nT [out] T parameter value of point-on-curve\nProjPnt [out] XYZ coordinates of projected point\n\nOutputs the T parameter value of the projection of the input XYZ \n\n point onto the NURBS representation of the specified curve. It \n\n is assumed that \"Pnt\" lies on or very close to the curve."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to find the parameter value of a point on a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvPntProj\nidCurve [in] id of curve entity\nPnt [in] coordinates of point to project onto curve\nT [out] T parameter value of point-on-curve\nProjPnt [out] XYZ coordinates of projected point\n\nOutputs the T parameter value of the projection of the input XYZ \n\n point onto the NURBS representation of the specified curve. It \n\n is assumed that \"Pnt\" lies on or very close to the curve."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the coordinates of a projected point on a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvPntProj\nidCurve [in] id of curve entity\nPnt [in] coordinates of point to project onto curve\nT [out] T parameter value of point-on-curve\nProjPnt [out] XYZ coordinates of projected point\n\nOutputs the T parameter value of the projection of the input XYZ \n\n point onto the NURBS representation of the specified curve. It \n\n is assumed that \"Pnt\" lies on or very close to the curve."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a point on a curve at a specified distance from the start point?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvGetPntAtDist\nidCurve [in] curve entity id\nStartT [in] T parameter value of starting point\nLength [in] Length of interval\nT [out] T parameter value of output point(NULL to ignore)\nPoint [out] output point on curve(NULL to ignore)\n\nGet point on a curve at a specified distance from the specified start point of the curve."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to find the point on a curve based on distance from the start point?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvGetPntAtDist\nidCurve [in] curve entity id\nStartT [in] T parameter value of starting point\nLength [in] Length of interval\nT [out] T parameter value of output point(NULL to ignore)\nPoint [out] output point on curve(NULL to ignore)\n\nGet point on a curve at a specified distance from the specified start point of the curve."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the point on a curve at a specific distance from the start?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvGetPntAtDist\nidCurve [in] curve entity id\nStartT [in] T parameter value of starting point\nLength [in] Length of interval\nT [out] T parameter value of output point(NULL to ignore)\nPoint [out] output point on curve(NULL to ignore)\n\nGet point on a curve at a specified distance from the specified start point of the curve."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate inflection points of a specified curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvGetInflections\nidCurve [in] id of curve in the active object\nCount [out] number of inflection points found\nT [out] T parameter value of each inflection points (NULL to ignore)\nInfPnts [out] the array of inflection points (NULL to ignore)\n\nCalculates inflection points of the specified curve and outputs the list of \n\n parameter value and coordinates of inflection points found.The calling \n\n procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of inflection points found?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvGetInflections\nidCurve [in] id of curve in the active object\nCount [out] number of inflection points found\nT [out] T parameter value of each inflection points (NULL to ignore)\nInfPnts [out] the array of inflection points (NULL to ignore)\n\nCalculates inflection points of the specified curve and outputs the list of \n\n parameter value and coordinates of inflection points found.The calling \n\n procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the parameter value of each inflection point?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvGetInflections\nidCurve [in] id of curve in the active object\nCount [out] number of inflection points found\nT [out] T parameter value of each inflection points (NULL to ignore)\nInfPnts [out] the array of inflection points (NULL to ignore)\n\nCalculates inflection points of the specified curve and outputs the list of \n\n parameter value and coordinates of inflection points found.The calling \n\n procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the extreme point of a curve in a specific direction?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvInqExtreme\nidCurve [in] id of curve in active part\nDir [in] direction\nisPerp [out] output 1 if the curve is on a plane perpendicular to direction, else 0\nPoint [out] extreme point\n\nGets the extreme point of curve in the specified direction. if the curve is \n\n on a plane perpendicular to direction, the extreme point output is start point \n\n of curve."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a curve is on a plane perpendicular to a given direction?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvInqExtreme\nidCurve [in] id of curve in active part\nDir [in] direction\nisPerp [out] output 1 if the curve is on a plane perpendicular to direction, else 0\nPoint [out] extreme point\n\nGets the extreme point of curve in the specified direction. if the curve is \n\n on a plane perpendicular to direction, the extreme point output is start point \n\n of curve."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the extreme point of a curve if it is on a plane perpendicular to a specific direction?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvInqExtreme\nidCurve [in] id of curve in active part\nDir [in] direction\nisPerp [out] output 1 if the curve is on a plane perpendicular to direction, else 0\nPoint [out] extreme point\n\nGets the extreme point of curve in the specified direction. if the curve is \n\n on a plane perpendicular to direction, the extreme point output is start point \n\n of curve."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find extremum points of a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvExtremum\nidCurve [in] id of curve entity\nCount [out] extremum point count\nPnts [out] list of extremum points\nBndBox [out] optional curve tight bounding box (or NULL)\n\nReturn the extremum points of specified curve and its bounding box.\nThe list of extremum points must be freed by caller."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the count of extremum points of a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvExtremum\nidCurve [in] id of curve entity\nCount [out] extremum point count\nPnts [out] list of extremum points\nBndBox [out] optional curve tight bounding box (or NULL)\n\nReturn the extremum points of specified curve and its bounding box.\nThe list of extremum points must be freed by caller."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the bounding box of a specified curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvExtremum\nidCurve [in] id of curve entity\nCount [out] extremum point count\nPnts [out] list of extremum points\nBndBox [out] optional curve tight bounding box (or NULL)\n\nReturn the extremum points of specified curve and its bounding box.\nThe list of extremum points must be freed by caller."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find cusps of a specified curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvGetCusps\nidCurve [in] id of curve in the active object\nCount [out] number of cusps found\nT [out] T parameter value of each cusps (NULL to ignore)\nCusps [out] the array of cusps found (NULL to ignore)\n\nFind cusps of the specified curve and outputs the list of \n\n parameter value and coordinates of cusps.The calling \n\n procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of cusps found?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvGetCusps\nidCurve [in] id of curve in the active object\nCount [out] number of cusps found\nT [out] T parameter value of each cusps (NULL to ignore)\nCusps [out] the array of cusps found (NULL to ignore)\n\nFind cusps of the specified curve and outputs the list of \n\n parameter value and coordinates of cusps.The calling \n\n procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the parameter value of each cusp?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvGetCusps\nidCurve [in] id of curve in the active object\nCount [out] number of cusps found\nT [out] T parameter value of each cusps (NULL to ignore)\nCusps [out] the array of cusps found (NULL to ignore)\n\nFind cusps of the specified curve and outputs the list of \n\n parameter value and coordinates of cusps.The calling \n\n procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate the length of a specified curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvLen\nidCurve [in] id of curve in the active object\nLen [out] curve length (mm)\n\nCalculates the length of the specified curve and outputs it via \"Len\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the length of a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvLen\nidCurve [in] id of curve in the active object\nLen [out] curve length (mm)\n\nCalculates the length of the specified curve and outputs it via \"Len\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to output the curve length?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvLen\nidCurve [in] id of curve in the active object\nLen [out] curve length (mm)\n\nCalculates the length of the specified curve and outputs it via \"Len\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate the length of a NURBS curve from a specific parameter value to another?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvLen2\nidCurve [in] curve entity id\nT1 [in] T parameter value of start point\nT2 [in] T parameter value of end point\nLength [out] length of a NURBS curve from T1 to T2\n\nCalculates the curve length of a NURBS curve from the parameter T1 to T2."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to find the length of a NURBS curve between two parameter values?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvLen2\nidCurve [in] curve entity id\nT1 [in] T parameter value of start point\nT2 [in] T parameter value of end point\nLength [out] length of a NURBS curve from T1 to T2\n\nCalculates the curve length of a NURBS curve from the parameter T1 to T2."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the curve length between two specific parameter values?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvLen2\nidCurve [in] curve entity id\nT1 [in] T parameter value of start point\nT2 [in] T parameter value of end point\nLength [out] length of a NURBS curve from T1 to T2\n\nCalculates the curve length of a NURBS curve from the parameter T1 to T2."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to match and sew free edges in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSew\nTol [in] 3D proximity tolerance (mm) (0.0 for default)\nOpenEdges [out] number of unmatched/open edges after sew (or NULL)\nMaxGap [out] maximum gap between all unmatched edges (or NULL)\n\nMatches and sews free edges in the active part using the input proximity \n\n tolerance. If \"Tol\" is input as 0.0, the active part's default proximity \n\n tolerance is used.\nInput NULL for \"OpenEdges\" and/or \"MaxGap\" if you are not interested in \n\n the information returned via those variables."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the default proximity tolerance for the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSew\nTol [in] 3D proximity tolerance (mm) (0.0 for default)\nOpenEdges [out] number of unmatched/open edges after sew (or NULL)\nMaxGap [out] maximum gap between all unmatched edges (or NULL)\n\nMatches and sews free edges in the active part using the input proximity \n\n tolerance. If \"Tol\" is input as 0.0, the active part's default proximity \n\n tolerance is used.\nInput NULL for \"OpenEdges\" and/or \"MaxGap\" if you are not interested in \n\n the information returned via those variables."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of unmatched/open edges after sewing?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSew\nTol [in] 3D proximity tolerance (mm) (0.0 for default)\nOpenEdges [out] number of unmatched/open edges after sew (or NULL)\nMaxGap [out] maximum gap between all unmatched edges (or NULL)\n\nMatches and sews free edges in the active part using the input proximity \n\n tolerance. If \"Tol\" is input as 0.0, the active part's default proximity \n\n tolerance is used.\nInput NULL for \"OpenEdges\" and/or \"MaxGap\" if you are not interested in \n\n the information returned via those variables."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the maximum gap between all unmatched edges?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSew\nTol [in] 3D proximity tolerance (mm) (0.0 for default)\nOpenEdges [out] number of unmatched/open edges after sew (or NULL)\nMaxGap [out] maximum gap between all unmatched edges (or NULL)\n\nMatches and sews free edges in the active part using the input proximity \n\n tolerance. If \"Tol\" is input as 0.0, the active part's default proximity \n\n tolerance is used.\nInput NULL for \"OpenEdges\" and/or \"MaxGap\" if you are not interested in \n\n the information returned via those variables."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a face to the active part using a specified surface and trim curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFace\nSrf [in] NURBS surface geometry\nNumCurves [in] number of trim curves\nTrimCurves [in] list of 2D NURBS UV trim curves\nCode [in] non-zero integer code for labeling the face\nSew [in] 1 to sew face to adjacent faces, else 0\nTol [in] 3D proximity tolerance (mm) (0.0 for default)\nidFace [out] database id of new face entity (or NULL)\n\nAdds a face to the active part using the specified surface and trim curves. \n\n The face is sewn to adjacent faces with matching edges.\nIt is assumed the trim curves are 2D NURBS curves defined in the UV space of \n\n the specified surface. If no trim curves are input (NumCurves=0), trim \n\n curves are automatically created around the \"rectangular\" surface boundary.\nThe input 3D proximity tolerance (Tol) is used to match the endpoints of \n\n trim curves when they are sorted into loops, and to match edges of the \n\n new face to edges to existing faces if the \"Sew\" option is enabled.\nIf \"Tol\" is input as 0.0, the active part's default proximity tolerance is used.\nIf \"idFace\" is not NULL, the database id of the new face entity is output.\nThis function copies data passed to it. The calling procedure is \n\n responsible for deallocating memory referenced by the input data structures.\ncvxPartHistStart(), which \n\n defines a \"static\" feature (i.e. history operation) for program-generated \n\n geometry (e.g. faces) to attach to. When you are done adding geometry, \n\n call cvxPartHistEnd(). This function will cause all existing part geometry \n\n and history to be bundled into a single static \"StartData\" history operation.\nnote:\nFaces will not add successfully to the active part unless there \n\n is an active feature (i.e. history operation) for them to link to. This is \n\n accomplished by putting your code inside the callback function associated \n\n with a command-template-defined custom history operation (see cvxTplInit()). \n\n When the history is regenerated, ZW3D will expect the input parameters defined \n\n by the command template to provide sufficient input to the callback function \n\n to re-create (i.e. regenerate) the original geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to automatically create trim curves around the rectangular surface boundary?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFace\nSrf [in] NURBS surface geometry\nNumCurves [in] number of trim curves\nTrimCurves [in] list of 2D NURBS UV trim curves\nCode [in] non-zero integer code for labeling the face\nSew [in] 1 to sew face to adjacent faces, else 0\nTol [in] 3D proximity tolerance (mm) (0.0 for default)\nidFace [out] database id of new face entity (or NULL)\n\nAdds a face to the active part using the specified surface and trim curves. \n\n The face is sewn to adjacent faces with matching edges.\nIt is assumed the trim curves are 2D NURBS curves defined in the UV space of \n\n the specified surface. If no trim curves are input (NumCurves=0), trim \n\n curves are automatically created around the \"rectangular\" surface boundary.\nThe input 3D proximity tolerance (Tol) is used to match the endpoints of \n\n trim curves when they are sorted into loops, and to match edges of the \n\n new face to edges to existing faces if the \"Sew\" option is enabled.\nIf \"Tol\" is input as 0.0, the active part's default proximity tolerance is used.\nIf \"idFace\" is not NULL, the database id of the new face entity is output.\nThis function copies data passed to it. The calling procedure is \n\n responsible for deallocating memory referenced by the input data structures.\ncvxPartHistStart(), which \n\n defines a \"static\" feature (i.e. history operation) for program-generated \n\n geometry (e.g. faces) to attach to. When you are done adding geometry, \n\n call cvxPartHistEnd(). This function will cause all existing part geometry \n\n and history to be bundled into a single static \"StartData\" history operation.\nnote:\nFaces will not add successfully to the active part unless there \n\n is an active feature (i.e. history operation) for them to link to. This is \n\n accomplished by putting your code inside the callback function associated \n\n with a command-template-defined custom history operation (see cvxTplInit()). \n\n When the history is regenerated, ZW3D will expect the input parameters defined \n\n by the command template to provide sufficient input to the callback function \n\n to re-create (i.e. regenerate) the original geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to match the endpoints of trim curves when they are sorted into loops?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFace\nSrf [in] NURBS surface geometry\nNumCurves [in] number of trim curves\nTrimCurves [in] list of 2D NURBS UV trim curves\nCode [in] non-zero integer code for labeling the face\nSew [in] 1 to sew face to adjacent faces, else 0\nTol [in] 3D proximity tolerance (mm) (0.0 for default)\nidFace [out] database id of new face entity (or NULL)\n\nAdds a face to the active part using the specified surface and trim curves. \n\n The face is sewn to adjacent faces with matching edges.\nIt is assumed the trim curves are 2D NURBS curves defined in the UV space of \n\n the specified surface. If no trim curves are input (NumCurves=0), trim \n\n curves are automatically created around the \"rectangular\" surface boundary.\nThe input 3D proximity tolerance (Tol) is used to match the endpoints of \n\n trim curves when they are sorted into loops, and to match edges of the \n\n new face to edges to existing faces if the \"Sew\" option is enabled.\nIf \"Tol\" is input as 0.0, the active part's default proximity tolerance is used.\nIf \"idFace\" is not NULL, the database id of the new face entity is output.\nThis function copies data passed to it. The calling procedure is \n\n responsible for deallocating memory referenced by the input data structures.\ncvxPartHistStart(), which \n\n defines a \"static\" feature (i.e. history operation) for program-generated \n\n geometry (e.g. faces) to attach to. When you are done adding geometry, \n\n call cvxPartHistEnd(). This function will cause all existing part geometry \n\n and history to be bundled into a single static \"StartData\" history operation.\nnote:\nFaces will not add successfully to the active part unless there \n\n is an active feature (i.e. history operation) for them to link to. This is \n\n accomplished by putting your code inside the callback function associated \n\n with a command-template-defined custom history operation (see cvxTplInit()). \n\n When the history is regenerated, ZW3D will expect the input parameters defined \n\n by the command template to provide sufficient input to the callback function \n\n to re-create (i.e. regenerate) the original geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to deallocate memory referenced by the input data structures after using this function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFace\nSrf [in] NURBS surface geometry\nNumCurves [in] number of trim curves\nTrimCurves [in] list of 2D NURBS UV trim curves\nCode [in] non-zero integer code for labeling the face\nSew [in] 1 to sew face to adjacent faces, else 0\nTol [in] 3D proximity tolerance (mm) (0.0 for default)\nidFace [out] database id of new face entity (or NULL)\n\nAdds a face to the active part using the specified surface and trim curves. \n\n The face is sewn to adjacent faces with matching edges.\nIt is assumed the trim curves are 2D NURBS curves defined in the UV space of \n\n the specified surface. If no trim curves are input (NumCurves=0), trim \n\n curves are automatically created around the \"rectangular\" surface boundary.\nThe input 3D proximity tolerance (Tol) is used to match the endpoints of \n\n trim curves when they are sorted into loops, and to match edges of the \n\n new face to edges to existing faces if the \"Sew\" option is enabled.\nIf \"Tol\" is input as 0.0, the active part's default proximity tolerance is used.\nIf \"idFace\" is not NULL, the database id of the new face entity is output.\nThis function copies data passed to it. The calling procedure is \n\n responsible for deallocating memory referenced by the input data structures.\ncvxPartHistStart(), which \n\n defines a \"static\" feature (i.e. history operation) for program-generated \n\n geometry (e.g. faces) to attach to. When you are done adding geometry, \n\n call cvxPartHistEnd(). This function will cause all existing part geometry \n\n and history to be bundled into a single static \"StartData\" history operation.\nnote:\nFaces will not add successfully to the active part unless there \n\n is an active feature (i.e. history operation) for them to link to. This is \n\n accomplished by putting your code inside the callback function associated \n\n with a command-template-defined custom history operation (see cvxTplInit()). \n\n When the history is regenerated, ZW3D will expect the input parameters defined \n\n by the command template to provide sufficient input to the callback function \n\n to re-create (i.e. regenerate) the original geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the significance of cvxPartHistStart() and cvxPartHistEnd() in relation to this function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFace\nSrf [in] NURBS surface geometry\nNumCurves [in] number of trim curves\nTrimCurves [in] list of 2D NURBS UV trim curves\nCode [in] non-zero integer code for labeling the face\nSew [in] 1 to sew face to adjacent faces, else 0\nTol [in] 3D proximity tolerance (mm) (0.0 for default)\nidFace [out] database id of new face entity (or NULL)\n\nAdds a face to the active part using the specified surface and trim curves. \n\n The face is sewn to adjacent faces with matching edges.\nIt is assumed the trim curves are 2D NURBS curves defined in the UV space of \n\n the specified surface. If no trim curves are input (NumCurves=0), trim \n\n curves are automatically created around the \"rectangular\" surface boundary.\nThe input 3D proximity tolerance (Tol) is used to match the endpoints of \n\n trim curves when they are sorted into loops, and to match edges of the \n\n new face to edges to existing faces if the \"Sew\" option is enabled.\nIf \"Tol\" is input as 0.0, the active part's default proximity tolerance is used.\nIf \"idFace\" is not NULL, the database id of the new face entity is output.\nThis function copies data passed to it. The calling procedure is \n\n responsible for deallocating memory referenced by the input data structures.\ncvxPartHistStart(), which \n\n defines a \"static\" feature (i.e. history operation) for program-generated \n\n geometry (e.g. faces) to attach to. When you are done adding geometry, \n\n call cvxPartHistEnd(). This function will cause all existing part geometry \n\n and history to be bundled into a single static \"StartData\" history operation.\nnote:\nFaces will not add successfully to the active part unless there \n\n is an active feature (i.e. history operation) for them to link to. This is \n\n accomplished by putting your code inside the callback function associated \n\n with a command-template-defined custom history operation (see cvxTplInit()). \n\n When the history is regenerated, ZW3D will expect the input parameters defined \n\n by the command template to provide sufficient input to the callback function \n\n to re-create (i.e. regenerate) the original geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify a face using specified surface and trim curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceMod\nidFace [in] index of face\nSrf [in] NURBS surface geometry\nNumCurves [in] number of trim curves\nTrimCurves [in] list of 2D NURBS UV trim curves\nSew [in] 1 to sew face to adjacent faces, else 0\nTol [in] 3D proximity tolerance (mm) (0.0 for default)\n\nModify a face to the active part using the specified surface and trim curves. \n\n The face is sewn to adjacent faces with matching edges.\nIt is assumed the trim curves are 2D NURBS curves defined in the UV space of \n\n the specified surface. If no trim curves are input (NumCurves=0), trim \n\n curves are automatically created around the \"rectangular\" surface boundary.\nThe input 3D proximity tolerance (Tol) is used to match the endpoints of \n\n trim curves when they are sorted into loops, and to match edges of the \n\n new face to edges to existing faces if the \"Sew\" option is enabled.\nIf \"Tol\" is input as 0.0, the active part's default proximity tolerance is used.\nThis function copies data passed to it. The calling procedure is \n\n responsible for deallocating memory referenced by the input data structures.\ncvxPartHistStart(), which \n\n defines a \"static\" feature (i.e. history operation) for program-generated \n\n geometry (e.g. faces) to attach to. When you are done adding geometry, \n\n call cvxPartHistEnd(). This function will cause all existing part geometry \n\n and history to be bundled into a single static \"StartData\" history operation.\nnote:\nFaces will not modify successfully to the active part unless there \n\n is an active feature (i.e. history operation) for them to link to. This is \n\n accomplished by putting your code inside the callback function associated \n\n with a command-template-defined custom history operation. When the history \n\n is regenerated, ZW3D will expect the input parameters defined by the command \n\n template to provide sufficient input to the callback function to re-create \n\n (i.e. regenerate) the original geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to sew a face to adjacent faces with matching edges?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceMod\nidFace [in] index of face\nSrf [in] NURBS surface geometry\nNumCurves [in] number of trim curves\nTrimCurves [in] list of 2D NURBS UV trim curves\nSew [in] 1 to sew face to adjacent faces, else 0\nTol [in] 3D proximity tolerance (mm) (0.0 for default)\n\nModify a face to the active part using the specified surface and trim curves. \n\n The face is sewn to adjacent faces with matching edges.\nIt is assumed the trim curves are 2D NURBS curves defined in the UV space of \n\n the specified surface. If no trim curves are input (NumCurves=0), trim \n\n curves are automatically created around the \"rectangular\" surface boundary.\nThe input 3D proximity tolerance (Tol) is used to match the endpoints of \n\n trim curves when they are sorted into loops, and to match edges of the \n\n new face to edges to existing faces if the \"Sew\" option is enabled.\nIf \"Tol\" is input as 0.0, the active part's default proximity tolerance is used.\nThis function copies data passed to it. The calling procedure is \n\n responsible for deallocating memory referenced by the input data structures.\ncvxPartHistStart(), which \n\n defines a \"static\" feature (i.e. history operation) for program-generated \n\n geometry (e.g. faces) to attach to. When you are done adding geometry, \n\n call cvxPartHistEnd(). This function will cause all existing part geometry \n\n and history to be bundled into a single static \"StartData\" history operation.\nnote:\nFaces will not modify successfully to the active part unless there \n\n is an active feature (i.e. history operation) for them to link to. This is \n\n accomplished by putting your code inside the callback function associated \n\n with a command-template-defined custom history operation. When the history \n\n is regenerated, ZW3D will expect the input parameters defined by the command \n\n template to provide sufficient input to the callback function to re-create \n\n (i.e. regenerate) the original geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to automatically create trim curves around the rectangular surface boundary?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceMod\nidFace [in] index of face\nSrf [in] NURBS surface geometry\nNumCurves [in] number of trim curves\nTrimCurves [in] list of 2D NURBS UV trim curves\nSew [in] 1 to sew face to adjacent faces, else 0\nTol [in] 3D proximity tolerance (mm) (0.0 for default)\n\nModify a face to the active part using the specified surface and trim curves. \n\n The face is sewn to adjacent faces with matching edges.\nIt is assumed the trim curves are 2D NURBS curves defined in the UV space of \n\n the specified surface. If no trim curves are input (NumCurves=0), trim \n\n curves are automatically created around the \"rectangular\" surface boundary.\nThe input 3D proximity tolerance (Tol) is used to match the endpoints of \n\n trim curves when they are sorted into loops, and to match edges of the \n\n new face to edges to existing faces if the \"Sew\" option is enabled.\nIf \"Tol\" is input as 0.0, the active part's default proximity tolerance is used.\nThis function copies data passed to it. The calling procedure is \n\n responsible for deallocating memory referenced by the input data structures.\ncvxPartHistStart(), which \n\n defines a \"static\" feature (i.e. history operation) for program-generated \n\n geometry (e.g. faces) to attach to. When you are done adding geometry, \n\n call cvxPartHistEnd(). This function will cause all existing part geometry \n\n and history to be bundled into a single static \"StartData\" history operation.\nnote:\nFaces will not modify successfully to the active part unless there \n\n is an active feature (i.e. history operation) for them to link to. This is \n\n accomplished by putting your code inside the callback function associated \n\n with a command-template-defined custom history operation. When the history \n\n is regenerated, ZW3D will expect the input parameters defined by the command \n\n template to provide sufficient input to the callback function to re-create \n\n (i.e. regenerate) the original geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of the 3D proximity tolerance parameter (Tol)?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceMod\nidFace [in] index of face\nSrf [in] NURBS surface geometry\nNumCurves [in] number of trim curves\nTrimCurves [in] list of 2D NURBS UV trim curves\nSew [in] 1 to sew face to adjacent faces, else 0\nTol [in] 3D proximity tolerance (mm) (0.0 for default)\n\nModify a face to the active part using the specified surface and trim curves. \n\n The face is sewn to adjacent faces with matching edges.\nIt is assumed the trim curves are 2D NURBS curves defined in the UV space of \n\n the specified surface. If no trim curves are input (NumCurves=0), trim \n\n curves are automatically created around the \"rectangular\" surface boundary.\nThe input 3D proximity tolerance (Tol) is used to match the endpoints of \n\n trim curves when they are sorted into loops, and to match edges of the \n\n new face to edges to existing faces if the \"Sew\" option is enabled.\nIf \"Tol\" is input as 0.0, the active part's default proximity tolerance is used.\nThis function copies data passed to it. The calling procedure is \n\n responsible for deallocating memory referenced by the input data structures.\ncvxPartHistStart(), which \n\n defines a \"static\" feature (i.e. history operation) for program-generated \n\n geometry (e.g. faces) to attach to. When you are done adding geometry, \n\n call cvxPartHistEnd(). This function will cause all existing part geometry \n\n and history to be bundled into a single static \"StartData\" history operation.\nnote:\nFaces will not modify successfully to the active part unless there \n\n is an active feature (i.e. history operation) for them to link to. This is \n\n accomplished by putting your code inside the callback function associated \n\n with a command-template-defined custom history operation. When the history \n\n is regenerated, ZW3D will expect the input parameters defined by the command \n\n template to provide sufficient input to the callback function to re-create \n\n (i.e. regenerate) the original geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate memory referenced by the input data structures after using this function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceMod\nidFace [in] index of face\nSrf [in] NURBS surface geometry\nNumCurves [in] number of trim curves\nTrimCurves [in] list of 2D NURBS UV trim curves\nSew [in] 1 to sew face to adjacent faces, else 0\nTol [in] 3D proximity tolerance (mm) (0.0 for default)\n\nModify a face to the active part using the specified surface and trim curves. \n\n The face is sewn to adjacent faces with matching edges.\nIt is assumed the trim curves are 2D NURBS curves defined in the UV space of \n\n the specified surface. If no trim curves are input (NumCurves=0), trim \n\n curves are automatically created around the \"rectangular\" surface boundary.\nThe input 3D proximity tolerance (Tol) is used to match the endpoints of \n\n trim curves when they are sorted into loops, and to match edges of the \n\n new face to edges to existing faces if the \"Sew\" option is enabled.\nIf \"Tol\" is input as 0.0, the active part's default proximity tolerance is used.\nThis function copies data passed to it. The calling procedure is \n\n responsible for deallocating memory referenced by the input data structures.\ncvxPartHistStart(), which \n\n defines a \"static\" feature (i.e. history operation) for program-generated \n\n geometry (e.g. faces) to attach to. When you are done adding geometry, \n\n call cvxPartHistEnd(). This function will cause all existing part geometry \n\n and history to be bundled into a single static \"StartData\" history operation.\nnote:\nFaces will not modify successfully to the active part unless there \n\n is an active feature (i.e. history operation) for them to link to. This is \n\n accomplished by putting your code inside the callback function associated \n\n with a command-template-defined custom history operation. When the history \n\n is regenerated, ZW3D will expect the input parameters defined by the command \n\n template to provide sufficient input to the callback function to re-create \n\n (i.e. regenerate) the original geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the significance of cvxPartHistStart() and cvxPartHistEnd() in relation to this function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceMod\nidFace [in] index of face\nSrf [in] NURBS surface geometry\nNumCurves [in] number of trim curves\nTrimCurves [in] list of 2D NURBS UV trim curves\nSew [in] 1 to sew face to adjacent faces, else 0\nTol [in] 3D proximity tolerance (mm) (0.0 for default)\n\nModify a face to the active part using the specified surface and trim curves. \n\n The face is sewn to adjacent faces with matching edges.\nIt is assumed the trim curves are 2D NURBS curves defined in the UV space of \n\n the specified surface. If no trim curves are input (NumCurves=0), trim \n\n curves are automatically created around the \"rectangular\" surface boundary.\nThe input 3D proximity tolerance (Tol) is used to match the endpoints of \n\n trim curves when they are sorted into loops, and to match edges of the \n\n new face to edges to existing faces if the \"Sew\" option is enabled.\nIf \"Tol\" is input as 0.0, the active part's default proximity tolerance is used.\nThis function copies data passed to it. The calling procedure is \n\n responsible for deallocating memory referenced by the input data structures.\ncvxPartHistStart(), which \n\n defines a \"static\" feature (i.e. history operation) for program-generated \n\n geometry (e.g. faces) to attach to. When you are done adding geometry, \n\n call cvxPartHistEnd(). This function will cause all existing part geometry \n\n and history to be bundled into a single static \"StartData\" history operation.\nnote:\nFaces will not modify successfully to the active part unless there \n\n is an active feature (i.e. history operation) for them to link to. This is \n\n accomplished by putting your code inside the callback function associated \n\n with a command-template-defined custom history operation. When the history \n\n is regenerated, ZW3D will expect the input parameters defined by the command \n\n template to provide sufficient input to the callback function to re-create \n\n (i.e. regenerate) the original geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to link a history operation to the active part for successful face modification?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceMod\nidFace [in] index of face\nSrf [in] NURBS surface geometry\nNumCurves [in] number of trim curves\nTrimCurves [in] list of 2D NURBS UV trim curves\nSew [in] 1 to sew face to adjacent faces, else 0\nTol [in] 3D proximity tolerance (mm) (0.0 for default)\n\nModify a face to the active part using the specified surface and trim curves. \n\n The face is sewn to adjacent faces with matching edges.\nIt is assumed the trim curves are 2D NURBS curves defined in the UV space of \n\n the specified surface. If no trim curves are input (NumCurves=0), trim \n\n curves are automatically created around the \"rectangular\" surface boundary.\nThe input 3D proximity tolerance (Tol) is used to match the endpoints of \n\n trim curves when they are sorted into loops, and to match edges of the \n\n new face to edges to existing faces if the \"Sew\" option is enabled.\nIf \"Tol\" is input as 0.0, the active part's default proximity tolerance is used.\nThis function copies data passed to it. The calling procedure is \n\n responsible for deallocating memory referenced by the input data structures.\ncvxPartHistStart(), which \n\n defines a \"static\" feature (i.e. history operation) for program-generated \n\n geometry (e.g. faces) to attach to. When you are done adding geometry, \n\n call cvxPartHistEnd(). This function will cause all existing part geometry \n\n and history to be bundled into a single static \"StartData\" history operation.\nnote:\nFaces will not modify successfully to the active part unless there \n\n is an active feature (i.e. history operation) for them to link to. This is \n\n accomplished by putting your code inside the callback function associated \n\n with a command-template-defined custom history operation. When the history \n\n is regenerated, ZW3D will expect the input parameters defined by the command \n\n template to provide sufficient input to the callback function to re-create \n\n (i.e. regenerate) the original geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to evaluate a point on a NURBS surface?"
            },
            {
                "role": "assistant",
                "content": "cvxSrfEval\nSrf [in] pointer to NURBS surface data structure\nU [in] U parameter value on face\nV [in] V parameter value on face\nPoint [out] point on face (input NULL to ignore)\nNormal [out] normal at point on face (input NULL to ignore)\nUtan [out] U tangent direction (input NULL to ignore)\nVtan [out] V tangent direction (input NULL to ignore)\n\nEvaluates a point in the space of the specified NURBS surface. Outputs \n\n the 3D point coordinates (Point), normal direction (Normal) and UV tangent \n\n directions at the specified U,V location on the surface.\n\n\n the face, call cvxVecReverse() to reverse the \"Normal\" if Srf->OutNormal=0.\nnote:\nThe direction of \"Normal\" is set to reflect the outward \n\n normal of the face, where \"outward\" means the direction that points \n\n towards the outside of the shape that the face is associated with. \n\n This may be opposite the natural normal of the NURBS surface associated \n\n with the face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the normal direction at a specified U,V location on a surface?"
            },
            {
                "role": "assistant",
                "content": "cvxSrfEval\nSrf [in] pointer to NURBS surface data structure\nU [in] U parameter value on face\nV [in] V parameter value on face\nPoint [out] point on face (input NULL to ignore)\nNormal [out] normal at point on face (input NULL to ignore)\nUtan [out] U tangent direction (input NULL to ignore)\nVtan [out] V tangent direction (input NULL to ignore)\n\nEvaluates a point in the space of the specified NURBS surface. Outputs \n\n the 3D point coordinates (Point), normal direction (Normal) and UV tangent \n\n directions at the specified U,V location on the surface.\n\n\n the face, call cvxVecReverse() to reverse the \"Normal\" if Srf->OutNormal=0.\nnote:\nThe direction of \"Normal\" is set to reflect the outward \n\n normal of the face, where \"outward\" means the direction that points \n\n towards the outside of the shape that the face is associated with. \n\n This may be opposite the natural normal of the NURBS surface associated \n\n with the face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the U and V tangent directions at a specific location on a NURBS surface?"
            },
            {
                "role": "assistant",
                "content": "cvxSrfEval\nSrf [in] pointer to NURBS surface data structure\nU [in] U parameter value on face\nV [in] V parameter value on face\nPoint [out] point on face (input NULL to ignore)\nNormal [out] normal at point on face (input NULL to ignore)\nUtan [out] U tangent direction (input NULL to ignore)\nVtan [out] V tangent direction (input NULL to ignore)\n\nEvaluates a point in the space of the specified NURBS surface. Outputs \n\n the 3D point coordinates (Point), normal direction (Normal) and UV tangent \n\n directions at the specified U,V location on the surface.\n\n\n the face, call cvxVecReverse() to reverse the \"Normal\" if Srf->OutNormal=0.\nnote:\nThe direction of \"Normal\" is set to reflect the outward \n\n normal of the face, where \"outward\" means the direction that points \n\n towards the outside of the shape that the face is associated with. \n\n This may be opposite the natural normal of the NURBS surface associated \n\n with the face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the diameter of a specified UV point on a NURB surface?"
            },
            {
                "role": "assistant",
                "content": "cvxSrfDiameterEval\nSrf [in] pointer to NURB surface data structure\nU [in] U parameter value on face\nV [in] V parameter value on face\nDiameter [out] diameter of specified point\n\nGet the surface diameter in the specified UV point. the surface type \n\n must be one of the following: \n\n 1.Cylinder: the cylinder diameter. \n\n 2.Torus: the distance of the point specified from the axis. \n\n 3.Cone: the distance of the point specified from the axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to find the diameter of a point on a cylinder surface?"
            },
            {
                "role": "assistant",
                "content": "cvxSrfDiameterEval\nSrf [in] pointer to NURB surface data structure\nU [in] U parameter value on face\nV [in] V parameter value on face\nDiameter [out] diameter of specified point\n\nGet the surface diameter in the specified UV point. the surface type \n\n must be one of the following: \n\n 1.Cylinder: the cylinder diameter. \n\n 2.Torus: the distance of the point specified from the axis. \n\n 3.Cone: the distance of the point specified from the axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine the distance from the axis for a specified point on a torus surface?"
            },
            {
                "role": "assistant",
                "content": "cvxSrfDiameterEval\nSrf [in] pointer to NURB surface data structure\nU [in] U parameter value on face\nV [in] V parameter value on face\nDiameter [out] diameter of specified point\n\nGet the surface diameter in the specified UV point. the surface type \n\n must be one of the following: \n\n 1.Cylinder: the cylinder diameter. \n\n 2.Torus: the distance of the point specified from the axis. \n\n 3.Cone: the distance of the point specified from the axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find connected groups of faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceFind\nfindData [in] face search data\nCount [out] number of faces found\nidFaces [out] list of faces found\n\nUse the function to find connected groups of faces and output a list \n\n of indices of the faces. the function provides several methods for \n\n finding faces that form certain kinds of features, such as bosses, \n\n pockets, holes and fillets. also support custom method, please refer \n\n to the description of input variables for details.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find faces that form certain kinds of features like bosses, pockets, holes, and fillets?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceFind\nfindData [in] face search data\nCount [out] number of faces found\nidFaces [out] list of faces found\n\nUse the function to find connected groups of faces and output a list \n\n of indices of the faces. the function provides several methods for \n\n finding faces that form certain kinds of features, such as bosses, \n\n pockets, holes and fillets. also support custom method, please refer \n\n to the description of input variables for details.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I use a custom method to find faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceFind\nfindData [in] face search data\nCount [out] number of faces found\nidFaces [out] list of faces found\n\nUse the function to find connected groups of faces and output a list \n\n of indices of the faces. the function provides several methods for \n\n finding faces that form certain kinds of features, such as bosses, \n\n pockets, holes and fillets. also support custom method, please refer \n\n to the description of input variables for details.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list after finding the faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceFind\nfindData [in] face search data\nCount [out] number of faces found\nidFaces [out] list of faces found\n\nUse the function to find connected groups of faces and output a list \n\n of indices of the faces. the function provides several methods for \n\n finding faces that form certain kinds of features, such as bosses, \n\n pockets, holes and fillets. also support custom method, please refer \n\n to the description of input variables for details.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find edges that bound seed faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceEdgesFind\nnSeeds [in] number of seed faces\nidSeeds [in] list of id of seed faces\ntype [in] type of boundary\nCount [out] number of edges found\nidEdges [out] list of edges found\n\nUse the function to find edges that bound one or more seed faces.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of edges found?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceEdgesFind\nnSeeds [in] number of seed faces\nidSeeds [in] list of id of seed faces\ntype [in] type of boundary\nCount [out] number of edges found\nidEdges [out] list of edges found\n\nUse the function to find edges that bound one or more seed faces.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of edges found by boundary type?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceEdgesFind\nnSeeds [in] number of seed faces\nidSeeds [in] list of id of seed faces\ntype [in] type of boundary\nCount [out] number of edges found\nidEdges [out] list of edges found\n\nUse the function to find edges that bound one or more seed faces.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxSrfAxis\nSrf [in] pointer to NURBS surface data structure\nstartPnt [out] start point of axis line\nendPnt [out] end point of axis line\n\nGet the axis of the specified surface. the surface type must be \n\n one of the following: Cylinder, Torus and Cone."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxSrfAxis\nSrf [in] pointer to NURBS surface data structure\nstartPnt [out] start point of axis line\nendPnt [out] end point of axis line\n\nGet the axis of the specified surface. the surface type must be \n\n one of the following: Cylinder, Torus and Cone."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxSrfAxis\nSrf [in] pointer to NURBS surface data structure\nstartPnt [out] start point of axis line\nendPnt [out] end point of axis line\n\nGet the axis of the specified surface. the surface type must be \n\n one of the following: Cylinder, Torus and Cone."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the pole point of a NURBS surface?"
            },
            {
                "role": "assistant",
                "content": "cvxSrfGetPole\nsrf [in] pointer to NURBS surface data structure\ndir [in] direction\npnt [out] pole point\n\nGet the pole point of the specified surface in a specified direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the pole point in a specific direction from a NURBS surface?"
            },
            {
                "role": "assistant",
                "content": "cvxSrfGetPole\nsrf [in] pointer to NURBS surface data structure\ndir [in] direction\npnt [out] pole point\n\nGet the pole point of the specified surface in a specified direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can you provide the method to obtain the pole point of a surface in a given direction?"
            },
            {
                "role": "assistant",
                "content": "cvxSrfGetPole\nsrf [in] pointer to NURBS surface data structure\ndir [in] direction\npnt [out] pole point\n\nGet the pole point of the specified surface in a specified direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if a boundary of a NURBS surface is a pole?"
            },
            {
                "role": "assistant",
                "content": "cvxSrfFindPoles\nsrf [in] pointer to NURBS surface data structure\ntol [in] the tolerance\npoles [out] poles[i] = 0 means the i-th boundary is not a pole. \n\n poles[i] = 1 means it is a pole. \n\n The boundaries are numbered counterclockwise, starting at \n\n the bottom (v=0). \n\n fPoles[0] -> pole at loV \n\n fPoles[1] -> pole at hiU \n\n fPoles[2] -> pole at hiV \n\n fPoles[3] -> pole at loU\n\nThis routine determines which, if any, boundaries of srf are poles. \n\n It sets the flags in the array poles appropriately."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find out which boundaries of a NURBS surface are poles?"
            },
            {
                "role": "assistant",
                "content": "cvxSrfFindPoles\nsrf [in] pointer to NURBS surface data structure\ntol [in] the tolerance\npoles [out] poles[i] = 0 means the i-th boundary is not a pole. \n\n poles[i] = 1 means it is a pole. \n\n The boundaries are numbered counterclockwise, starting at \n\n the bottom (v=0). \n\n fPoles[0] -> pole at loV \n\n fPoles[1] -> pole at hiU \n\n fPoles[2] -> pole at hiV \n\n fPoles[3] -> pole at loU\n\nThis routine determines which, if any, boundaries of srf are poles. \n\n It sets the flags in the array poles appropriately."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the flags to determine if a boundary of a NURBS surface is a pole?"
            },
            {
                "role": "assistant",
                "content": "cvxSrfFindPoles\nsrf [in] pointer to NURBS surface data structure\ntol [in] the tolerance\npoles [out] poles[i] = 0 means the i-th boundary is not a pole. \n\n poles[i] = 1 means it is a pole. \n\n The boundaries are numbered counterclockwise, starting at \n\n the bottom (v=0). \n\n fPoles[0] -> pole at loV \n\n fPoles[1] -> pole at hiU \n\n fPoles[2] -> pole at hiV \n\n fPoles[3] -> pole at loU\n\nThis routine determines which, if any, boundaries of srf are poles. \n\n It sets the flags in the array poles appropriately."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a point is a critical point of a 2D curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPntIsCritical\npnt [in] point\nidCurve [in] index of 2D curve\n\nThis function is to determine whether the pnt is the critical point of \n\n the 2D curve with index idCurve in Drawing Sheet.\nMeaning of critical point is the point with start, end, middle or center position \n\n of the curve."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a point is a critical point of a specific 2D curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPntIsCritical\npnt [in] point\nidCurve [in] index of 2D curve\n\nThis function is to determine whether the pnt is the critical point of \n\n the 2D curve with index idCurve in Drawing Sheet.\nMeaning of critical point is the point with start, end, middle or center position \n\n of the curve."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I find out if a point is a critical point of a 2D curve using the API function?"
            },
            {
                "role": "assistant",
                "content": "cvxPntIsCritical\npnt [in] point\nidCurve [in] index of 2D curve\n\nThis function is to determine whether the pnt is the critical point of \n\n the 2D curve with index idCurve in Drawing Sheet.\nMeaning of critical point is the point with start, end, middle or center position \n\n of the curve."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a point is on a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPntIsOn\nPnt [in] point\nidEntity [in] id of curve, edge, face or plane entity\n\n"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a point is on an edge?"
            },
            {
                "role": "assistant",
                "content": "cvxPntIsOn\nPnt [in] point\nidEntity [in] id of curve, edge, face or plane entity\n\n"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to verify if a point is on a face or plane entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPntIsOn\nPnt [in] point\nidEntity [in] id of curve, edge, face or plane entity\n\n"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate a 3D point on a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPntOnCrv\nidCurve [in] id of curve in the active object\nFraction [in] fraction of curve length (0.0 to 1.0)\nPoint [out] point on curve\n\nCalculates a 3D point on the specified curve entity \n\n (in the active object) at the input fraction of the \n\n curve's length from its startpoint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get a point on a curve at a specific fraction of its length?"
            },
            {
                "role": "assistant",
                "content": "cvxPntOnCrv\nidCurve [in] id of curve in the active object\nFraction [in] fraction of curve length (0.0 to 1.0)\nPoint [out] point on curve\n\nCalculates a 3D point on the specified curve entity \n\n (in the active object) at the input fraction of the \n\n curve's length from its startpoint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the point on a curve in the active object?"
            },
            {
                "role": "assistant",
                "content": "cvxPntOnCrv\nidCurve [in] id of curve in the active object\nFraction [in] fraction of curve length (0.0 to 1.0)\nPoint [out] point on curve\n\nCalculates a 3D point on the specified curve entity \n\n (in the active object) at the input fraction of the \n\n curve's length from its startpoint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate a point on a specified face?"
            },
            {
                "role": "assistant",
                "content": "cvxPntOnFace\nidComp [in] id of component that contains face (0 if undefined)\nidFace [in] id of face in active part or specified component\nParam [out] u,v parameter values\nPoint [out] point on face (NULL to ignore)\n\nCalculates a point on the specified face at the midpoint of \n\n the face's bounding box in UV parameter space. The 3D point \n\n coordinates are output in the space of the active part, even \n\n if the face belongs to a child component of the part (idComp > 0). \n\n The corresponding U,V parameters are output as Param[0] and Param[1]."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the UV parameter values of a point on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPntOnFace\nidComp [in] id of component that contains face (0 if undefined)\nidFace [in] id of face in active part or specified component\nParam [out] u,v parameter values\nPoint [out] point on face (NULL to ignore)\n\nCalculates a point on the specified face at the midpoint of \n\n the face's bounding box in UV parameter space. The 3D point \n\n coordinates are output in the space of the active part, even \n\n if the face belongs to a child component of the part (idComp > 0). \n\n The corresponding U,V parameters are output as Param[0] and Param[1]."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the midpoint of a face's bounding box in UV parameter space?"
            },
            {
                "role": "assistant",
                "content": "cvxPntOnFace\nidComp [in] id of component that contains face (0 if undefined)\nidFace [in] id of face in active part or specified component\nParam [out] u,v parameter values\nPoint [out] point on face (NULL to ignore)\n\nCalculates a point on the specified face at the midpoint of \n\n the face's bounding box in UV parameter space. The 3D point \n\n coordinates are output in the space of the active part, even \n\n if the face belongs to a child component of the part (idComp > 0). \n\n The corresponding U,V parameters are output as Param[0] and Param[1]."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to project a point onto a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPntProject\nPnt [in] point to project\nidEntity [in] id of curve, edge, face or plane entity\nProjPnt [out] projected point on entity\n\nProjects \"Pnt\" onto the specified curve, edge, face or plane \n\n and outputs the result as \"ProjPnt\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to project a point onto a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPntProject\nPnt [in] point to project\nidEntity [in] id of curve, edge, face or plane entity\nProjPnt [out] projected point on entity\n\nProjects \"Pnt\" onto the specified curve, edge, face or plane \n\n and outputs the result as \"ProjPnt\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the projected point on a specified entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPntProject\nPnt [in] point to project\nidEntity [in] id of curve, edge, face or plane entity\nProjPnt [out] projected point on entity\n\nProjects \"Pnt\" onto the specified curve, edge, face or plane \n\n and outputs the result as \"ProjPnt\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxPntEntLoc\nPnt [in] point coordinates of the inquiry\nidEntity [in] entity id (only curve, edge, face and shape are supported)\nPntLoc [out] returned status of the point on the entity\n\nDetermine if a given point lies inside, outside or on the boundary of a given curve, \n\n edge, face or shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxPntEntLoc\nPnt [in] point coordinates of the inquiry\nidEntity [in] entity id (only curve, edge, face and shape are supported)\nPntLoc [out] returned status of the point on the entity\n\nDetermine if a given point lies inside, outside or on the boundary of a given curve, \n\n edge, face or shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxPntEntLoc\nPnt [in] point coordinates of the inquiry\nidEntity [in] entity id (only curve, edge, face and shape are supported)\nPntLoc [out] returned status of the point on the entity\n\nDetermine if a given point lies inside, outside or on the boundary of a given curve, \n\n edge, face or shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to project a point onto an infinite line?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisPntProject\nAxis [in] axis defined by a point and a direction\nPnt [in] point to project\nProjPnt [out] point projected on axis\n\nProject point onto infinite line defined by point and direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to project a point onto an axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisPntProject\nAxis [in] axis defined by a point and a direction\nPnt [in] point to project\nProjPnt [out] point projected on axis\n\nProject point onto infinite line defined by point and direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the point projected on an axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisPntProject\nAxis [in] axis defined by a point and a direction\nPnt [in] point to project\nProjPnt [out] point projected on axis\n\nProject point onto infinite line defined by point and direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to project a point onto an infinite plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPlanePntProject\nPlnPnt [in] point on plane\nPlnNormal [in] normal of plane\nPoint [in] point to project\nProjectDir [in] projection direction (NULL to use normal of plane)\nProjPnt [out] point projected on plane\n\nProject point onto infinite plane by point and direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to project a point onto a plane using a specific direction?"
            },
            {
                "role": "assistant",
                "content": "cvxPlanePntProject\nPlnPnt [in] point on plane\nPlnNormal [in] normal of plane\nPoint [in] point to project\nProjectDir [in] projection direction (NULL to use normal of plane)\nProjPnt [out] point projected on plane\n\nProject point onto infinite plane by point and direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the cvxPlanePntProject function to project a point onto a plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPlanePntProject\nPlnPnt [in] point on plane\nPlnNormal [in] normal of plane\nPoint [in] point to project\nProjectDir [in] projection direction (NULL to use normal of plane)\nProjPnt [out] point projected on plane\n\nProject point onto infinite plane by point and direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to translate a point along a direction vector by a given distance?"
            },
            {
                "role": "assistant",
                "content": "cvxPntTranslate\nPoint [inout] point\nVector [in] direction vector\nDistance [in] distance\n\nTranslates \"Point\" along \"Vector\" by \"Distance\". \n\n This function assumes that \"Vector\" is normalized."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to move a point in a specific direction by a certain distance?"
            },
            {
                "role": "assistant",
                "content": "cvxPntTranslate\nPoint [inout] point\nVector [in] direction vector\nDistance [in] distance\n\nTranslates \"Point\" along \"Vector\" by \"Distance\". \n\n This function assumes that \"Vector\" is normalized."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use a normalized vector to move a point in a CAD model?"
            },
            {
                "role": "assistant",
                "content": "cvxPntTranslate\nPoint [inout] point\nVector [in] direction vector\nDistance [in] distance\n\nTranslates \"Point\" along \"Vector\" by \"Distance\". \n\n This function assumes that \"Vector\" is normalized."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate the distance between two points?"
            },
            {
                "role": "assistant",
                "content": "cvxPntDist\nPoint1 [in] first point\nPoint2 [in] second point\n\nReturns the distance between two points."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to find the distance between two given points?"
            },
            {
                "role": "assistant",
                "content": "cvxPntDist\nPoint1 [in] first point\nPoint2 [in] second point\n\nReturns the distance between two points."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I get the distance between two specified points?"
            },
            {
                "role": "assistant",
                "content": "cvxPntDist\nPoint1 [in] first point\nPoint2 [in] second point\n\nReturns the distance between two points."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the minimum distance between a point and a shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPntEntDist\nPoint [in] point coordinates of the inquiry\nidEntity [in] index of target entity\nTargetPnt [out] the closest point on target entity (NULL to ignore)\nDistance [out] the minimum distance (NULL to ignore)\n\nAcquire the minimum distance between the point and the target entity, \n\n the target entity type includes shape, face, curve, edge, datum plane, point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the closest point on a face to a given point?"
            },
            {
                "role": "assistant",
                "content": "cvxPntEntDist\nPoint [in] point coordinates of the inquiry\nidEntity [in] index of target entity\nTargetPnt [out] the closest point on target entity (NULL to ignore)\nDistance [out] the minimum distance (NULL to ignore)\n\nAcquire the minimum distance between the point and the target entity, \n\n the target entity type includes shape, face, curve, edge, datum plane, point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I acquire the minimum distance between a point and a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPntEntDist\nPoint [in] point coordinates of the inquiry\nidEntity [in] index of target entity\nTargetPnt [out] the closest point on target entity (NULL to ignore)\nDistance [out] the minimum distance (NULL to ignore)\n\nAcquire the minimum distance between the point and the target entity, \n\n the target entity type includes shape, face, curve, edge, datum plane, point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the minimum distance between a point and a curve on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPntPreEdgeDist\nPoint [in] point coordinates of the inquiry\nidPreEdge [in] index of pre-edge\nT [out] parameter value at closest point (NULL to ignore)\nTargetPnt [out] coordinates of closest point (NULL to ignore)\nDistance [out] the minimum distance (NULL to ignore)\n\nAcquire the minimum distance between the point and the curve on face, the difference \n\n from cvxPntEntDist() is that the function will be output the closest point on the UV line \n\n of the face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to acquire the closest point on the UV line of a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPntPreEdgeDist\nPoint [in] point coordinates of the inquiry\nidPreEdge [in] index of pre-edge\nT [out] parameter value at closest point (NULL to ignore)\nTargetPnt [out] coordinates of closest point (NULL to ignore)\nDistance [out] the minimum distance (NULL to ignore)\n\nAcquire the minimum distance between the point and the curve on face, the difference \n\n from cvxPntEntDist() is that the function will be output the closest point on the UV line \n\n of the face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the parameter value at the closest point between a point and a curve on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPntPreEdgeDist\nPoint [in] point coordinates of the inquiry\nidPreEdge [in] index of pre-edge\nT [out] parameter value at closest point (NULL to ignore)\nTargetPnt [out] coordinates of closest point (NULL to ignore)\nDistance [out] the minimum distance (NULL to ignore)\n\nAcquire the minimum distance between the point and the curve on face, the difference \n\n from cvxPntEntDist() is that the function will be output the closest point on the UV line \n\n of the face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to measure the minimum distance from a point to an infinite line?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisPntDistance\nAxis [in] axis defined by a point and a direction\nPnt [in] point to measure distance to\nDistance [out] the minimum distance\n\nGets the minimum distance from a point to an infinite line defined by point and direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the distance from a point to an axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisPntDistance\nAxis [in] axis defined by a point and a direction\nPnt [in] point to measure distance to\nDistance [out] the minimum distance\n\nGets the minimum distance from a point to an infinite line defined by point and direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the minimum distance from a point to a line?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisPntDistance\nAxis [in] axis defined by a point and a direction\nPnt [in] point to measure distance to\nDistance [out] the minimum distance\n\nGets the minimum distance from a point to an infinite line defined by point and direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the minimum distance from a point to an infinite plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPlanePntDistance\nPlnPnt [in] point on plane\nPlnNormal [in] normal of plane\nPoint [in] point to measure distance to\nDistance [out] the minimum distance\nProjPnt [out] point projected on plane (NULL to ignore)\n\nGet the minimum distance form a point to an infinite plane by point and direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to measure the distance between a point and a plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPlanePntDistance\nPlnPnt [in] point on plane\nPlnNormal [in] normal of plane\nPoint [in] point to measure distance to\nDistance [out] the minimum distance\nProjPnt [out] point projected on plane (NULL to ignore)\n\nGet the minimum distance form a point to an infinite plane by point and direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the point projected on a plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPlanePntDistance\nPlnPnt [in] point on plane\nPlnNormal [in] normal of plane\nPoint [in] point to measure distance to\nDistance [out] the minimum distance\nProjPnt [out] point projected on plane (NULL to ignore)\n\nGet the minimum distance form a point to an infinite plane by point and direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a point on an axis at a specified distance?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisEvalPoint\nAxis [in] axis defined by a point and a direction\nDistance [in] distance \n\n > 0: along direction of axis \n\n < 0: the opppsite direction of axis\nPoint [out] point on the axis at specified distance\n\nGet point on axis at a specified distance from origin of axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to find a point on an axis based on distance?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisEvalPoint\nAxis [in] axis defined by a point and a direction\nDistance [in] distance \n\n > 0: along direction of axis \n\n < 0: the opppsite direction of axis\nPoint [out] point on the axis at specified distance\n\nGet point on axis at a specified distance from origin of axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine the point on an axis given a distance from the origin?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisEvalPoint\nAxis [in] axis defined by a point and a direction\nDistance [in] distance \n\n > 0: along direction of axis \n\n < 0: the opppsite direction of axis\nPoint [out] point on the axis at specified distance\n\nGet point on axis at a specified distance from origin of axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a point on a plane by offsetting the origin in the x-direction and y-direction?"
            },
            {
                "role": "assistant",
                "content": "cvxPlaneEvalPoint\nOrigin [in] origin of plane\nxAxis [in] x-direction of plane\nyAxis [in] y-direction of plane\nxDist [in] distance of x-direction (> 0: in same direction; < 0: in opppsite direction)\nyDist [in] distance of y-direction (> 0: in same direction; < 0: in opppsite direction)\nPoint [out] point on the axis at specified distance\n\nGet point on plane that offset the origin by a specified distance in the x-direction and y-direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to find a point on a plane with specified distances in x and y directions?"
            },
            {
                "role": "assistant",
                "content": "cvxPlaneEvalPoint\nOrigin [in] origin of plane\nxAxis [in] x-direction of plane\nyAxis [in] y-direction of plane\nxDist [in] distance of x-direction (> 0: in same direction; < 0: in opppsite direction)\nyDist [in] distance of y-direction (> 0: in same direction; < 0: in opppsite direction)\nPoint [out] point on the axis at specified distance\n\nGet point on plane that offset the origin by a specified distance in the x-direction and y-direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate the point on a plane with given x and y distances from the origin?"
            },
            {
                "role": "assistant",
                "content": "cvxPlaneEvalPoint\nOrigin [in] origin of plane\nxAxis [in] x-direction of plane\nyAxis [in] y-direction of plane\nxDist [in] distance of x-direction (> 0: in same direction; < 0: in opppsite direction)\nyDist [in] distance of y-direction (> 0: in same direction; < 0: in opppsite direction)\nPoint [out] point on the axis at specified distance\n\nGet point on plane that offset the origin by a specified distance in the x-direction and y-direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to compute the least squares plane fitted through a list of points?"
            },
            {
                "role": "assistant",
                "content": "cvxPlnThruPnts\nPntCount [in] number of points in point list\nPntList [in] list of points\nNormal [out] unit length vector normal to the plane\nD [out] the last term in the plane equation (see description below)\n\nGiven \"PntCount\" points, this function computes the least squares plane \n\n fitted through these points. It then checks to see if the points are \n\n contained within this plane such that for any point (X,Y,Z) in the plane, \n\n the following equation holds true:\nNormal.x * X + Normal.y * Y + Normal.z * Z + D = 0"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check if points are contained within a plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPlnThruPnts\nPntCount [in] number of points in point list\nPntList [in] list of points\nNormal [out] unit length vector normal to the plane\nD [out] the last term in the plane equation (see description below)\n\nGiven \"PntCount\" points, this function computes the least squares plane \n\n fitted through these points. It then checks to see if the points are \n\n contained within this plane such that for any point (X,Y,Z) in the plane, \n\n the following equation holds true:\nNormal.x * X + Normal.y * Y + Normal.z * Z + D = 0"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the unit length vector normal to the plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPlnThruPnts\nPntCount [in] number of points in point list\nPntList [in] list of points\nNormal [out] unit length vector normal to the plane\nD [out] the last term in the plane equation (see description below)\n\nGiven \"PntCount\" points, this function computes the least squares plane \n\n fitted through these points. It then checks to see if the points are \n\n contained within this plane such that for any point (X,Y,Z) in the plane, \n\n the following equation holds true:\nNormal.x * X + Normal.y * Y + Normal.z * Z + D = 0"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the last term in the plane equation?"
            },
            {
                "role": "assistant",
                "content": "cvxPlnThruPnts\nPntCount [in] number of points in point list\nPntList [in] list of points\nNormal [out] unit length vector normal to the plane\nD [out] the last term in the plane equation (see description below)\n\nGiven \"PntCount\" points, this function computes the least squares plane \n\n fitted through these points. It then checks to see if the points are \n\n contained within this plane such that for any point (X,Y,Z) in the plane, \n\n the following equation holds true:\nNormal.x * X + Normal.y * Y + Normal.z * Z + D = 0"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to decompose a polygon into triangles?"
            },
            {
                "role": "assistant",
                "content": "cvxPolyToTri\nPntCount [in] number of points in point list\nPntList [in] point list of polygon vertex coordinates\nVtxCount [out] number of triangle vertex indices in vertex list\nVtxList [out] vertex list of triangle vertex indices (see description below)\n\nGiven an array of points \"PntList\" defining the coordinates of a \n\n polygon's vertices, this function decomposes the polygon into \n\n triangles. The triangles are defined by an array of vertex indices \n\n \"VtxList\", which is an int list of indices into the PntList array. \n\n Every three elements in the output list define one triangle, \n\n i.e. VtxList[0], VtxList[1] and VtxList[2] contain the PntList array \n\n indices of the first triangle's vertices, VtxList[3], VtxList[4] and \n\n VtxList[5] contain the PntList array indices of the second triangle, \n\n and so on. The total number of triangle vertices is output in \n\n VtxCount. The total number of triangles for the given polygon will be \n\n (*VtxCount)/3.\nThe points in PntList are assumed to be in vertex order around the \n\n perimeter of the polygon. The polygon may be concave.\nThis function allocates the output array VtxList. The caller is \n\n responsible for freeing VtxList using cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to convert a polygon to triangles?"
            },
            {
                "role": "assistant",
                "content": "cvxPolyToTri\nPntCount [in] number of points in point list\nPntList [in] point list of polygon vertex coordinates\nVtxCount [out] number of triangle vertex indices in vertex list\nVtxList [out] vertex list of triangle vertex indices (see description below)\n\nGiven an array of points \"PntList\" defining the coordinates of a \n\n polygon's vertices, this function decomposes the polygon into \n\n triangles. The triangles are defined by an array of vertex indices \n\n \"VtxList\", which is an int list of indices into the PntList array. \n\n Every three elements in the output list define one triangle, \n\n i.e. VtxList[0], VtxList[1] and VtxList[2] contain the PntList array \n\n indices of the first triangle's vertices, VtxList[3], VtxList[4] and \n\n VtxList[5] contain the PntList array indices of the second triangle, \n\n and so on. The total number of triangle vertices is output in \n\n VtxCount. The total number of triangles for the given polygon will be \n\n (*VtxCount)/3.\nThe points in PntList are assumed to be in vertex order around the \n\n perimeter of the polygon. The polygon may be concave.\nThis function allocates the output array VtxList. The caller is \n\n responsible for freeing VtxList using cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of triangle vertices in a polygon?"
            },
            {
                "role": "assistant",
                "content": "cvxPolyToTri\nPntCount [in] number of points in point list\nPntList [in] point list of polygon vertex coordinates\nVtxCount [out] number of triangle vertex indices in vertex list\nVtxList [out] vertex list of triangle vertex indices (see description below)\n\nGiven an array of points \"PntList\" defining the coordinates of a \n\n polygon's vertices, this function decomposes the polygon into \n\n triangles. The triangles are defined by an array of vertex indices \n\n \"VtxList\", which is an int list of indices into the PntList array. \n\n Every three elements in the output list define one triangle, \n\n i.e. VtxList[0], VtxList[1] and VtxList[2] contain the PntList array \n\n indices of the first triangle's vertices, VtxList[3], VtxList[4] and \n\n VtxList[5] contain the PntList array indices of the second triangle, \n\n and so on. The total number of triangle vertices is output in \n\n VtxCount. The total number of triangles for the given polygon will be \n\n (*VtxCount)/3.\nThe points in PntList are assumed to be in vertex order around the \n\n perimeter of the polygon. The polygon may be concave.\nThis function allocates the output array VtxList. The caller is \n\n responsible for freeing VtxList using cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the vertex list of triangle vertex indices from a polygon?"
            },
            {
                "role": "assistant",
                "content": "cvxPolyToTri\nPntCount [in] number of points in point list\nPntList [in] point list of polygon vertex coordinates\nVtxCount [out] number of triangle vertex indices in vertex list\nVtxList [out] vertex list of triangle vertex indices (see description below)\n\nGiven an array of points \"PntList\" defining the coordinates of a \n\n polygon's vertices, this function decomposes the polygon into \n\n triangles. The triangles are defined by an array of vertex indices \n\n \"VtxList\", which is an int list of indices into the PntList array. \n\n Every three elements in the output list define one triangle, \n\n i.e. VtxList[0], VtxList[1] and VtxList[2] contain the PntList array \n\n indices of the first triangle's vertices, VtxList[3], VtxList[4] and \n\n VtxList[5] contain the PntList array indices of the second triangle, \n\n and so on. The total number of triangle vertices is output in \n\n VtxCount. The total number of triangles for the given polygon will be \n\n (*VtxCount)/3.\nThe points in PntList are assumed to be in vertex order around the \n\n perimeter of the polygon. The polygon may be concave.\nThis function allocates the output array VtxList. The caller is \n\n responsible for freeing VtxList using cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize a direction vector from two points?"
            },
            {
                "role": "assistant",
                "content": "cvxVecInit\nPoint1 [in] first point\nPoint2 [in] second point\nVector [out] direction vector\n\nInitializes a normalized \"Vector\" that points along \n\n the direction from \"Point1\" to \"Point2\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a normalized vector from two points?"
            },
            {
                "role": "assistant",
                "content": "cvxVecInit\nPoint1 [in] first point\nPoint2 [in] second point\nVector [out] direction vector\n\nInitializes a normalized \"Vector\" that points along \n\n the direction from \"Point1\" to \"Point2\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the direction vector between two points?"
            },
            {
                "role": "assistant",
                "content": "cvxVecInit\nPoint1 [in] first point\nPoint2 [in] second point\nVector [out] direction vector\n\nInitializes a normalized \"Vector\" that points along \n\n the direction from \"Point1\" to \"Point2\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to normalize a direction vector?"
            },
            {
                "role": "assistant",
                "content": "cvxVecNormalize\nVector [inout] direction vector\n\nNormalizes a direction vector to unit magnitude (1.0)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to convert a vector to unit magnitude?"
            },
            {
                "role": "assistant",
                "content": "cvxVecNormalize\nVector [inout] direction vector\n\nNormalizes a direction vector to unit magnitude (1.0)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the unit vector from a direction vector?"
            },
            {
                "role": "assistant",
                "content": "cvxVecNormalize\nVector [inout] direction vector\n\nNormalizes a direction vector to unit magnitude (1.0)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate the angle between two vectors?"
            },
            {
                "role": "assistant",
                "content": "cvxVecAngle\nV1 [in] first vector\nV2 [in] second vector\nAngle [out] angle (radians) between vectors\n\nCalculates the angle (radians) between the input vectors."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to find the angle between two vectors?"
            },
            {
                "role": "assistant",
                "content": "cvxVecAngle\nV1 [in] first vector\nV2 [in] second vector\nAngle [out] angle (radians) between vectors\n\nCalculates the angle (radians) between the input vectors."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the angle (in radians) between two input vectors?"
            },
            {
                "role": "assistant",
                "content": "cvxVecAngle\nV1 [in] first vector\nV2 [in] second vector\nAngle [out] angle (radians) between vectors\n\nCalculates the angle (radians) between the input vectors."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate the cross product of two vectors?"
            },
            {
                "role": "assistant",
                "content": "cvxVecCross\nV1 [in] first vector\nV2 [in] second vector\nCross [out] cross product of V1 and V2\n\nGets the cross product of two vectors."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the cross product of two vectors?"
            },
            {
                "role": "assistant",
                "content": "cvxVecCross\nV1 [in] first vector\nV2 [in] second vector\nCross [out] cross product of V1 and V2\n\nGets the cross product of two vectors."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the cross product of two given vectors?"
            },
            {
                "role": "assistant",
                "content": "cvxVecCross\nV1 [in] first vector\nV2 [in] second vector\nCross [out] cross product of V1 and V2\n\nGets the cross product of two vectors."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a perpendicular vector to a given vector?"
            },
            {
                "role": "assistant",
                "content": "cvxVecPerp\nVector [in] reference vector\nPerp [out] vector perpendicular to input \"Vector\"\n\nCreates a vector that is perpendicular to another vector."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to find a vector perpendicular to a reference vector?"
            },
            {
                "role": "assistant",
                "content": "cvxVecPerp\nVector [in] reference vector\nPerp [out] vector perpendicular to input \"Vector\"\n\nCreates a vector that is perpendicular to another vector."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a perpendicular vector from a given vector?"
            },
            {
                "role": "assistant",
                "content": "cvxVecPerp\nVector [in] reference vector\nPerp [out] vector perpendicular to input \"Vector\"\n\nCreates a vector that is perpendicular to another vector."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to reverse the direction of a vector?"
            },
            {
                "role": "assistant",
                "content": "cvxVecReverse\nVector [inout] vector\n\nReverses the direction of the input vector."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to invert the direction of a vector?"
            },
            {
                "role": "assistant",
                "content": "cvxVecReverse\nVector [inout] vector\n\nReverses the direction of the input vector."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the direction of a vector?"
            },
            {
                "role": "assistant",
                "content": "cvxVecReverse\nVector [inout] vector\n\nReverses the direction of the input vector."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if two vectors are parallel within a specified angular tolerance?"
            },
            {
                "role": "assistant",
                "content": "cvxVecParallelChk\nOrient [in] 0 = parallel vectors can be in same or opposite direction \n\n 1 = Parallel vectors must point in same direction \n\n 2 = Parallel vectors must point in opposite directions\nV1 [in] first vector\nV2 [in] second vector\nCosTol [in] cosine of maximum angle allowed for parallelism\n\nDetermine whether two vectors are parallel within a specified angular tolerance.\nThe CosTol tolerance is the cosine of the maximum angle allowed between the \n\n vectors for them to be considered parallel. The table below shows the maximum \n\n angle allowed between the vectors (right) for several values of CosTol (left): \n                     CosTol               degrees\n                     0.9          -        25.84\n                     0.9848       -          10\n                     0.9962       -          5\n                     0.9986       -          3\n                     0.9994       -          2\n                     0.99985      -          1\n                     0.99996      -         0.5\n                     0.999998     -         0.1"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the maximum angle allowed between vectors for them to be considered parallel with a CosTol of 0.9848?"
            },
            {
                "role": "assistant",
                "content": "cvxVecParallelChk\nOrient [in] 0 = parallel vectors can be in same or opposite direction \n\n 1 = Parallel vectors must point in same direction \n\n 2 = Parallel vectors must point in opposite directions\nV1 [in] first vector\nV2 [in] second vector\nCosTol [in] cosine of maximum angle allowed for parallelism\n\nDetermine whether two vectors are parallel within a specified angular tolerance.\nThe CosTol tolerance is the cosine of the maximum angle allowed between the \n\n vectors for them to be considered parallel. The table below shows the maximum \n\n angle allowed between the vectors (right) for several values of CosTol (left): \n                     CosTol               degrees\n                     0.9          -        25.84\n                     0.9848       -          10\n                     0.9962       -          5\n                     0.9986       -          3\n                     0.9994       -          2\n                     0.99985      -          1\n                     0.99996      -         0.5\n                     0.999998     -         0.1"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the maximum angle allowed between vectors for them to be considered parallel with a CosTol of 0.99985?"
            },
            {
                "role": "assistant",
                "content": "cvxVecParallelChk\nOrient [in] 0 = parallel vectors can be in same or opposite direction \n\n 1 = Parallel vectors must point in same direction \n\n 2 = Parallel vectors must point in opposite directions\nV1 [in] first vector\nV2 [in] second vector\nCosTol [in] cosine of maximum angle allowed for parallelism\n\nDetermine whether two vectors are parallel within a specified angular tolerance.\nThe CosTol tolerance is the cosine of the maximum angle allowed between the \n\n vectors for them to be considered parallel. The table below shows the maximum \n\n angle allowed between the vectors (right) for several values of CosTol (left): \n                     CosTol               degrees\n                     0.9          -        25.84\n                     0.9848       -          10\n                     0.9962       -          5\n                     0.9986       -          3\n                     0.9994       -          2\n                     0.99985      -          1\n                     0.99996      -         0.5\n                     0.999998     -         0.1"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to allocate memory of a specific size?"
            },
            {
                "role": "assistant",
                "content": "cvxMemAlloc\nNumBytes [in] no. of bytes to allocate\nMemPointer [out] pointer to allocated memory\n\nAllocates chunk of memory of requested size from system heap. \n\n Returns void pointer to specified amount of memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to allocate memory from the system heap?"
            },
            {
                "role": "assistant",
                "content": "cvxMemAlloc\nNumBytes [in] no. of bytes to allocate\nMemPointer [out] pointer to allocated memory\n\nAllocates chunk of memory of requested size from system heap. \n\n Returns void pointer to specified amount of memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a pointer to the allocated memory?"
            },
            {
                "role": "assistant",
                "content": "cvxMemAlloc\nNumBytes [in] no. of bytes to allocate\nMemPointer [out] pointer to allocated memory\n\nAllocates chunk of memory of requested size from system heap. \n\n Returns void pointer to specified amount of memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to resize a memory chunk allocated via VxMemAlloc?"
            },
            {
                "role": "assistant",
                "content": "cvxMemResize\nNumBytes [in] new memory size in bytes\nMemPointer [out] address of pointer to memory to be resized\n\nResizes memory chunk that was allocated via VxMemAlloc(). \n\n If input pointer is NULL, allocates new memory. \n\n Outputs pointer to resized memory. \n\n If memory cannot not be resized, the input pointer is not modified."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to allocate new memory if the input pointer is NULL?"
            },
            {
                "role": "assistant",
                "content": "cvxMemResize\nNumBytes [in] new memory size in bytes\nMemPointer [out] address of pointer to memory to be resized\n\nResizes memory chunk that was allocated via VxMemAlloc(). \n\n If input pointer is NULL, allocates new memory. \n\n Outputs pointer to resized memory. \n\n If memory cannot not be resized, the input pointer is not modified."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the address of the pointer to the resized memory?"
            },
            {
                "role": "assistant",
                "content": "cvxMemResize\nNumBytes [in] new memory size in bytes\nMemPointer [out] address of pointer to memory to be resized\n\nResizes memory chunk that was allocated via VxMemAlloc(). \n\n If input pointer is NULL, allocates new memory. \n\n Outputs pointer to resized memory. \n\n If memory cannot not be resized, the input pointer is not modified."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to zero a specific number of bytes of data?"
            },
            {
                "role": "assistant",
                "content": "cvxMemZero\nMemPointer [in] pointer to memory\nNumBytes [in] number of bytes to zero\n\nZero \"NumBytes\" of data beginning with \"MemPointer\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to zero a specific memory pointer?"
            },
            {
                "role": "assistant",
                "content": "cvxMemZero\nMemPointer [in] pointer to memory\nNumBytes [in] number of bytes to zero\n\nZero \"NumBytes\" of data beginning with \"MemPointer\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxMemZero to clear a block of memory?"
            },
            {
                "role": "assistant",
                "content": "cvxMemZero\nMemPointer [in] pointer to memory\nNumBytes [in] number of bytes to zero\n\nZero \"NumBytes\" of data beginning with \"MemPointer\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free memory at a specified pointer?"
            },
            {
                "role": "assistant",
                "content": "cvxMemFree\nMemPointer [in] address of pointer to be Free'd\n\nFrees memory at specified pointer. \n\n Sets pointer to NULL if memory was freed successfully. \n\n If the input pointer is already NULL, this function does nothing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if the input pointer is already NULL?"
            },
            {
                "role": "assistant",
                "content": "cvxMemFree\nMemPointer [in] address of pointer to be Free'd\n\nFrees memory at specified pointer. \n\n Sets pointer to NULL if memory was freed successfully. \n\n If the input pointer is already NULL, this function does nothing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the pointer to NULL if memory is freed successfully?"
            },
            {
                "role": "assistant",
                "content": "cvxMemFree\nMemPointer [in] address of pointer to be Free'd\n\nFrees memory at specified pointer. \n\n Sets pointer to NULL if memory was freed successfully. \n\n If the input pointer is already NULL, this function does nothing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to disable display of error messages?"
            },
            {
                "role": "assistant",
                "content": "cvxErrDisable\n\nDisable display of error messages in the ZW3D message area.\nThe application that uses this function is ALWAYS responsible for re-enabling error message display using cvxErrEnable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to turn off error message display?"
            },
            {
                "role": "assistant",
                "content": "cvxErrDisable\n\nDisable display of error messages in the ZW3D message area.\nThe application that uses this function is ALWAYS responsible for re-enabling error message display using cvxErrEnable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to prevent error messages from showing up?"
            },
            {
                "role": "assistant",
                "content": "cvxErrDisable\n\nDisable display of error messages in the ZW3D message area.\nThe application that uses this function is ALWAYS responsible for re-enabling error message display using cvxErrEnable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to re-enable display of error messages?"
            },
            {
                "role": "assistant",
                "content": "cvxErrEnable\n\nRe-enable display of error messages in the ZW3D message area."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to enable error message display in ZW3D message area?"
            },
            {
                "role": "assistant",
                "content": "cvxErrEnable\n\nRe-enable display of error messages in the ZW3D message area."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I turn on error message display?"
            },
            {
                "role": "assistant",
                "content": "cvxErrEnable\n\nRe-enable display of error messages in the ZW3D message area."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to disable display of general messages in ZW3D message area?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgDisable\n\nDisable display of general messages in the ZW3D message area.\nThe application that uses this function is ALWAYS responsible \n\n for re-enabling general message display using cvxMsgEnable().\nUse cvxErrDisable() to disable display of error messages. \n\n Use cvxPromptDisable() to disable display of command prompts."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to re-enable general message display after disabling?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgDisable\n\nDisable display of general messages in the ZW3D message area.\nThe application that uses this function is ALWAYS responsible \n\n for re-enabling general message display using cvxMsgEnable().\nUse cvxErrDisable() to disable display of error messages. \n\n Use cvxPromptDisable() to disable display of command prompts."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function should be used to disable display of error messages?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgDisable\n\nDisable display of general messages in the ZW3D message area.\nThe application that uses this function is ALWAYS responsible \n\n for re-enabling general message display using cvxMsgEnable().\nUse cvxErrDisable() to disable display of error messages. \n\n Use cvxPromptDisable() to disable display of command prompts."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to disable display of command prompts?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgDisable\n\nDisable display of general messages in the ZW3D message area.\nThe application that uses this function is ALWAYS responsible \n\n for re-enabling general message display using cvxMsgEnable().\nUse cvxErrDisable() to disable display of error messages. \n\n Use cvxPromptDisable() to disable display of command prompts."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to re-enable display of general messages in the ZW3D message area?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgEnable\n\nRe-enable display of general messages in the ZW3D message area."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to enable general messages display in the ZW3D message area?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgEnable\n\nRe-enable display of general messages in the ZW3D message area."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I turn on the display of general messages in the ZW3D message area?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgEnable\n\nRe-enable display of general messages in the ZW3D message area."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to enable the warning message when API function fails?"
            },
            {
                "role": "assistant",
                "content": "cvxLastWarningMsgEnable\nenable [in] 1 - enable the warning message, else 0\n\nEnable/Disable display the warning message when API function fails.\nnote:\nDefault is disabled"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to disable the warning message when API function fails?"
            },
            {
                "role": "assistant",
                "content": "cvxLastWarningMsgEnable\nenable [in] 1 - enable the warning message, else 0\n\nEnable/Disable display the warning message when API function fails.\nnote:\nDefault is disabled"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the default setting for displaying warning messages?"
            },
            {
                "role": "assistant",
                "content": "cvxLastWarningMsgEnable\nenable [in] 1 - enable the warning message, else 0\n\nEnable/Disable display the warning message when API function fails.\nnote:\nDefault is disabled"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to disable the display of command prompts?"
            },
            {
                "role": "assistant",
                "content": "cvxPromptDisable\n\nDisables the display of command prompts (when it is possible)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to hide command prompts?"
            },
            {
                "role": "assistant",
                "content": "cvxPromptDisable\n\nDisables the display of command prompts (when it is possible)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I turn off the command prompts?"
            },
            {
                "role": "assistant",
                "content": "cvxPromptDisable\n\nDisables the display of command prompts (when it is possible)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to re-enable display of command prompts?"
            },
            {
                "role": "assistant",
                "content": "cvxPromptEnable\n\nRe-enables display of command prompts."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to enable command prompts?"
            },
            {
                "role": "assistant",
                "content": "cvxPromptEnable\n\nRe-enables display of command prompts."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I turn on command prompts?"
            },
            {
                "role": "assistant",
                "content": "cvxPromptEnable\n\nRe-enables display of command prompts."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to disable the translator status window?"
            },
            {
                "role": "assistant",
                "content": "cvxTranStatusDisable\n\nDisables the translator status window. \n\n Always pair a call to this function with a subsequent \n\n call to cvxTranslatorStatusEnable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should I use cvxTranslatorStatusDisable function?"
            },
            {
                "role": "assistant",
                "content": "cvxTranStatusDisable\n\nDisables the translator status window. \n\n Always pair a call to this function with a subsequent \n\n call to cvxTranslatorStatusEnable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of cvxTranslatorStatusDisable function?"
            },
            {
                "role": "assistant",
                "content": "cvxTranStatusDisable\n\nDisables the translator status window. \n\n Always pair a call to this function with a subsequent \n\n call to cvxTranslatorStatusEnable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to re-enable the translator status window?"
            },
            {
                "role": "assistant",
                "content": "cvxTranStatusEnable\n\nRe-enables the translator status window. \n\n A call to cvxTranslatorStatusDisable() should always \n\n be paired with a subsequent call to this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should I use cvxTranStatusEnable?"
            },
            {
                "role": "assistant",
                "content": "cvxTranStatusEnable\n\nRe-enables the translator status window. \n\n A call to cvxTranslatorStatusDisable() should always \n\n be paired with a subsequent call to this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to enable translator status window?"
            },
            {
                "role": "assistant",
                "content": "cvxTranStatusEnable\n\nRe-enables the translator status window. \n\n A call to cvxTranslatorStatusDisable() should always \n\n be paired with a subsequent call to this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the current disable status of prompt dialog?"
            },
            {
                "role": "assistant",
                "content": "cvxUserActionStatusGet\ndisableStatus [out] current disable status\n\nGet the value of prompt dialog status. This function must be called before \n\n cvxUserActionStatusSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the disable status of prompt dialog?"
            },
            {
                "role": "assistant",
                "content": "cvxUserActionStatusGet\ndisableStatus [out] current disable status\n\nGet the value of prompt dialog status. This function must be called before \n\n cvxUserActionStatusSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to obtain the disable status before setting it?"
            },
            {
                "role": "assistant",
                "content": "cvxUserActionStatusGet\ndisableStatus [out] current disable status\n\nGet the value of prompt dialog status. This function must be called before \n\n cvxUserActionStatusSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the status of prompt dialog?"
            },
            {
                "role": "assistant",
                "content": "cvxUserActionStatusSet\ndisable [in] disable or enable the prompt dialog\n\nSet the status of prompt dialog. disable: 0-enable \n\n 2-disable: the default action is \"Yes\" \n\n 3-disable: the default action is \"Yes All\", if the option does not have this, \n\n it is \"Yes\" \n\n -1-disable: the default action is \"Cancel\" ,if the option does not have this, \n\n it is \"No\" \n\n -2-disable: the default action is \"No\"\nIf the option is \"Continue\", as long as disable is non-zero, it will choice the action \"Continue\".\nMake sure cvxUserActionStatusGet()has been called before you call this function. \n\n After your operation finished, please called this function again to restore the status. \n\n The \"integer\" value (disable) should be output by cvxUserActionStatusGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the options for disabling the prompt dialog?"
            },
            {
                "role": "assistant",
                "content": "cvxUserActionStatusSet\ndisable [in] disable or enable the prompt dialog\n\nSet the status of prompt dialog. disable: 0-enable \n\n 2-disable: the default action is \"Yes\" \n\n 3-disable: the default action is \"Yes All\", if the option does not have this, \n\n it is \"Yes\" \n\n -1-disable: the default action is \"Cancel\" ,if the option does not have this, \n\n it is \"No\" \n\n -2-disable: the default action is \"No\"\nIf the option is \"Continue\", as long as disable is non-zero, it will choice the action \"Continue\".\nMake sure cvxUserActionStatusGet()has been called before you call this function. \n\n After your operation finished, please called this function again to restore the status. \n\n The \"integer\" value (disable) should be output by cvxUserActionStatusGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to restore the status of prompt dialog after an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxUserActionStatusSet\ndisable [in] disable or enable the prompt dialog\n\nSet the status of prompt dialog. disable: 0-enable \n\n 2-disable: the default action is \"Yes\" \n\n 3-disable: the default action is \"Yes All\", if the option does not have this, \n\n it is \"Yes\" \n\n -1-disable: the default action is \"Cancel\" ,if the option does not have this, \n\n it is \"No\" \n\n -2-disable: the default action is \"No\"\nIf the option is \"Continue\", as long as disable is non-zero, it will choice the action \"Continue\".\nMake sure cvxUserActionStatusGet()has been called before you call this function. \n\n After your operation finished, please called this function again to restore the status. \n\n The \"integer\" value (disable) should be output by cvxUserActionStatusGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to disable the crash prompt dialog?"
            },
            {
                "role": "assistant",
                "content": "cvxCrashPromptDisable\n\nDisable the crash prompt dialog. \n\n \nsee:\ncvxCrashPromptEnable() to enable."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to turn off the crash prompt dialog?"
            },
            {
                "role": "assistant",
                "content": "cvxCrashPromptDisable\n\nDisable the crash prompt dialog. \n\n \nsee:\ncvxCrashPromptEnable() to enable."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to prevent the crash prompt dialog from appearing?"
            },
            {
                "role": "assistant",
                "content": "cvxCrashPromptDisable\n\nDisable the crash prompt dialog. \n\n \nsee:\ncvxCrashPromptEnable() to enable."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to enable the crash prompt dialog?"
            },
            {
                "role": "assistant",
                "content": "cvxCrashPromptEnable\n\nEnable the crash prompt dialog. \n\n \nsee:\ncvxCrashPromptDisable() to disable."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to enable the crash prompt dialog?"
            },
            {
                "role": "assistant",
                "content": "cvxCrashPromptEnable\n\nEnable the crash prompt dialog. \n\n \nsee:\ncvxCrashPromptDisable() to disable."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to activate the crash prompt dialog?"
            },
            {
                "role": "assistant",
                "content": "cvxCrashPromptEnable\n\nEnable the crash prompt dialog. \n\n \nsee:\ncvxCrashPromptDisable() to disable."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to disable the prompt dialog for 'Save as the file'?"
            },
            {
                "role": "assistant",
                "content": "cvxUserActionStatusSet2\ntype [in] prompt window type\nvalue [in] flag value to disable or enable the prompt dialog\n\nEnhanced API for disable or enable the prompt dialog, as cvxUserActionStatusSet() could only set yes / no.\nType: When type is VX_DIALOG_SAVE_AS, parameter value controls the prompt dialog for \"Save as the file\": \n\n value == 0: Prompt dialog \n\n value == 3: The default action is select \"Save as new and replace original one\" then push ok button, not prompt dialog \n\n value == 4: The default action is select \"Save as copy and close\", then push ok button, not prompt dialog \n\n value == 5: The default action is select \"Save as copy and open\" then push ok button, not prompt dialog \n\n value == 6: The default action is \"Cancel\", not prompt dialog \n\n\nOther values for parameter type are reserved for future usage."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to enable the prompt dialog for 'Save as the file'?"
            },
            {
                "role": "assistant",
                "content": "cvxUserActionStatusSet2\ntype [in] prompt window type\nvalue [in] flag value to disable or enable the prompt dialog\n\nEnhanced API for disable or enable the prompt dialog, as cvxUserActionStatusSet() could only set yes / no.\nType: When type is VX_DIALOG_SAVE_AS, parameter value controls the prompt dialog for \"Save as the file\": \n\n value == 0: Prompt dialog \n\n value == 3: The default action is select \"Save as new and replace original one\" then push ok button, not prompt dialog \n\n value == 4: The default action is select \"Save as copy and close\", then push ok button, not prompt dialog \n\n value == 5: The default action is select \"Save as copy and open\" then push ok button, not prompt dialog \n\n value == 6: The default action is \"Cancel\", not prompt dialog \n\n\nOther values for parameter type are reserved for future usage."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the different flag values to control the prompt dialog for 'Save as the file'?"
            },
            {
                "role": "assistant",
                "content": "cvxUserActionStatusSet2\ntype [in] prompt window type\nvalue [in] flag value to disable or enable the prompt dialog\n\nEnhanced API for disable or enable the prompt dialog, as cvxUserActionStatusSet() could only set yes / no.\nType: When type is VX_DIALOG_SAVE_AS, parameter value controls the prompt dialog for \"Save as the file\": \n\n value == 0: Prompt dialog \n\n value == 3: The default action is select \"Save as new and replace original one\" then push ok button, not prompt dialog \n\n value == 4: The default action is select \"Save as copy and close\", then push ok button, not prompt dialog \n\n value == 5: The default action is select \"Save as copy and open\" then push ok button, not prompt dialog \n\n value == 6: The default action is \"Cancel\", not prompt dialog \n\n\nOther values for parameter type are reserved for future usage."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to close the ZW3D message area?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgAreaClose\n\nCloses the ZW3D message area."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to close the message area in ZW3D?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgAreaClose\n\nCloses the ZW3D message area."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to hide the message area in ZW3D?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgAreaClose\n\nCloses the ZW3D message area."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to open the ZW3D message area?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgAreaOpen\n\nOpens the ZW3D message area."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to display the ZW3D message area?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgAreaOpen\n\nOpens the ZW3D message area."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to access the ZW3D message area?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgAreaOpen\n\nOpens the ZW3D message area."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to prevent the message window from automatically opening?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgAreaState\n\nCalling this function with \"Disable=1\" prevents the message \n\n window from automatically opening.\nCalling the function again with \"Disable=0\" re-enables the \n\n normal operation of the message window.\nThis function MUST always be called in pairs \n\n call with \"Disable=1\" and the second call with \"Disable=0\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to re-enable the normal operation of the message window?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgAreaState\n\nCalling this function with \"Disable=1\" prevents the message \n\n window from automatically opening.\nCalling the function again with \"Disable=0\" re-enables the \n\n normal operation of the message window.\nThis function MUST always be called in pairs \n\n call with \"Disable=1\" and the second call with \"Disable=0\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to call to disable the message window?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgAreaState\n\nCalling this function with \"Disable=1\" prevents the message \n\n window from automatically opening.\nCalling the function again with \"Disable=0\" re-enables the \n\n normal operation of the message window.\nThis function MUST always be called in pairs \n\n call with \"Disable=1\" and the second call with \"Disable=0\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to call to enable the message window?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgAreaState\n\nCalling this function with \"Disable=1\" prevents the message \n\n window from automatically opening.\nCalling the function again with \"Disable=0\" re-enables the \n\n normal operation of the message window.\nThis function MUST always be called in pairs \n\n call with \"Disable=1\" and the second call with \"Disable=0\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if the output list is displayed or hidden?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgAreaStateGet\naction [out] action; 1-displayed, 2-hidden\n\nGet the hidden or displayed status of the output list \n\n through this interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the status of the output list display?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgAreaStateGet\naction [out] action; 1-displayed, 2-hidden\n\nGet the hidden or displayed status of the output list \n\n through this interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I determine if the output list is hidden or displayed?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgAreaStateGet\naction [out] action; 1-displayed, 2-hidden\n\nGet the hidden or displayed status of the output list \n\n through this interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to load messages from a specified file?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgFileLoad\nFile [in] path to message file\nidFile [out] loaded message file id\n\nLoad the messages in the specified file (File) in memory \n\n and return an id (idFile) that identifies the file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to load message files into memory?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgFileLoad\nFile [in] path to message file\nidFile [out] loaded message file id\n\nLoad the messages in the specified file (File) in memory \n\n and return an id (idFile) that identifies the file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of a loaded message file?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgFileLoad\nFile [in] path to message file\nidFile [out] loaded message file id\n\nLoad the messages in the specified file (File) in memory \n\n and return an id (idFile) that identifies the file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a pointer to the text of a specific message?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgPtr\nidFile [in] message file id (see cvxMsgFileLoad())\nMessageNum [in] message number within message file\n\nReturns a pointer to a static memory area containing the text of \n\n the message identified by \"idFile\" and \"MessageNum\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to access the text of a message by its number and file id?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgPtr\nidFile [in] message file id (see cvxMsgFileLoad())\nMessageNum [in] message number within message file\n\nReturns a pointer to a static memory area containing the text of \n\n the message identified by \"idFile\" and \"MessageNum\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the text of a message using its file id and message number?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgPtr\nidFile [in] message file id (see cvxMsgFileLoad())\nMessageNum [in] message number within message file\n\nReturns a pointer to a static memory area containing the text of \n\n the message identified by \"idFile\" and \"MessageNum\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display text in the ZW3D message area?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgDisp\nText [in] text string\n\nDisplays the specified text in the ZW3D message area."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to show specified text in ZW3D message area?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgDisp\nText [in] text string\n\nDisplays the specified text in the ZW3D message area."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxMsgDisp to display text?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgDisp\nText [in] text string\n\nDisplays the specified text in the ZW3D message area."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a text with information level?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgDisp2\nText [in] text string\nlevel [in] message level (0-6)\n\nDisplays the specified text in the output area with specified level. \n\n\nlevel: 0-information\n       1-note\n       2-debug\n       3-warning\n       4-alert\n       5-error\n       6-fatal"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a text with error level?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgDisp2\nText [in] text string\nlevel [in] message level (0-6)\n\nDisplays the specified text in the output area with specified level. \n\n\nlevel: 0-information\n       1-note\n       2-debug\n       3-warning\n       4-alert\n       5-error\n       6-fatal"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to display a text with specified message level?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgDisp2\nText [in] text string\nlevel [in] message level (0-6)\n\nDisplays the specified text in the output area with specified level. \n\n\nlevel: 0-information\n       1-note\n       2-debug\n       3-warning\n       4-alert\n       5-error\n       6-fatal"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to show a text with debug level?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgDisp2\nText [in] text string\nlevel [in] message level (0-6)\n\nDisplays the specified text in the output area with specified level. \n\n\nlevel: 0-information\n       1-note\n       2-debug\n       3-warning\n       4-alert\n       5-error\n       6-fatal"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display an error window with a choice of resolutions?"
            },
            {
                "role": "assistant",
                "content": "cvxMessageBox\nMsgType [in] Message box type\nWndMode [in] 0 = modeless, 1 = full application modal\nTitle [in] Window title; set to NULL if not applicable\nMessage [in] Message string\nBtn1Str [in] Button1 string; set to NULL if not applicable\nBtn2Str [in] Button2 string; set to NULL if not applicable\nAction [out] Action\n\nFunction to display message window. A message window is used for common \n\n interaction tasks, which include giving information, asking questions, and \n\n reporting errors.\nValid MsgType is shown below:\nMsgType=1: An error window warns users of action consequences and gives them a choice of resolutions. \n\n\nMsgType=2: An information window gives the user information, such as the status of an action.\nMsgType=3: A message window is used for common interaction tasks.\nMsgType=4: A Question window is used to get the answer to a question from the user.\nMsgType=5: A warning window warns users of action consequences and gives them a choice of resolutions.\nMsgType=6: A working window informs users that there is atime-consuming operation in progress and allows them to cancel the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display an information window with the status of an action?"
            },
            {
                "role": "assistant",
                "content": "cvxMessageBox\nMsgType [in] Message box type\nWndMode [in] 0 = modeless, 1 = full application modal\nTitle [in] Window title; set to NULL if not applicable\nMessage [in] Message string\nBtn1Str [in] Button1 string; set to NULL if not applicable\nBtn2Str [in] Button2 string; set to NULL if not applicable\nAction [out] Action\n\nFunction to display message window. A message window is used for common \n\n interaction tasks, which include giving information, asking questions, and \n\n reporting errors.\nValid MsgType is shown below:\nMsgType=1: An error window warns users of action consequences and gives them a choice of resolutions. \n\n\nMsgType=2: An information window gives the user information, such as the status of an action.\nMsgType=3: A message window is used for common interaction tasks.\nMsgType=4: A Question window is used to get the answer to a question from the user.\nMsgType=5: A warning window warns users of action consequences and gives them a choice of resolutions.\nMsgType=6: A working window informs users that there is atime-consuming operation in progress and allows them to cancel the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a message window for common interaction tasks?"
            },
            {
                "role": "assistant",
                "content": "cvxMessageBox\nMsgType [in] Message box type\nWndMode [in] 0 = modeless, 1 = full application modal\nTitle [in] Window title; set to NULL if not applicable\nMessage [in] Message string\nBtn1Str [in] Button1 string; set to NULL if not applicable\nBtn2Str [in] Button2 string; set to NULL if not applicable\nAction [out] Action\n\nFunction to display message window. A message window is used for common \n\n interaction tasks, which include giving information, asking questions, and \n\n reporting errors.\nValid MsgType is shown below:\nMsgType=1: An error window warns users of action consequences and gives them a choice of resolutions. \n\n\nMsgType=2: An information window gives the user information, such as the status of an action.\nMsgType=3: A message window is used for common interaction tasks.\nMsgType=4: A Question window is used to get the answer to a question from the user.\nMsgType=5: A warning window warns users of action consequences and gives them a choice of resolutions.\nMsgType=6: A working window informs users that there is atime-consuming operation in progress and allows them to cancel the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a question window to get an answer from the user?"
            },
            {
                "role": "assistant",
                "content": "cvxMessageBox\nMsgType [in] Message box type\nWndMode [in] 0 = modeless, 1 = full application modal\nTitle [in] Window title; set to NULL if not applicable\nMessage [in] Message string\nBtn1Str [in] Button1 string; set to NULL if not applicable\nBtn2Str [in] Button2 string; set to NULL if not applicable\nAction [out] Action\n\nFunction to display message window. A message window is used for common \n\n interaction tasks, which include giving information, asking questions, and \n\n reporting errors.\nValid MsgType is shown below:\nMsgType=1: An error window warns users of action consequences and gives them a choice of resolutions. \n\n\nMsgType=2: An information window gives the user information, such as the status of an action.\nMsgType=3: A message window is used for common interaction tasks.\nMsgType=4: A Question window is used to get the answer to a question from the user.\nMsgType=5: A warning window warns users of action consequences and gives them a choice of resolutions.\nMsgType=6: A working window informs users that there is atime-consuming operation in progress and allows them to cancel the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a warning window with a choice of resolutions?"
            },
            {
                "role": "assistant",
                "content": "cvxMessageBox\nMsgType [in] Message box type\nWndMode [in] 0 = modeless, 1 = full application modal\nTitle [in] Window title; set to NULL if not applicable\nMessage [in] Message string\nBtn1Str [in] Button1 string; set to NULL if not applicable\nBtn2Str [in] Button2 string; set to NULL if not applicable\nAction [out] Action\n\nFunction to display message window. A message window is used for common \n\n interaction tasks, which include giving information, asking questions, and \n\n reporting errors.\nValid MsgType is shown below:\nMsgType=1: An error window warns users of action consequences and gives them a choice of resolutions. \n\n\nMsgType=2: An information window gives the user information, such as the status of an action.\nMsgType=3: A message window is used for common interaction tasks.\nMsgType=4: A Question window is used to get the answer to a question from the user.\nMsgType=5: A warning window warns users of action consequences and gives them a choice of resolutions.\nMsgType=6: A working window informs users that there is atime-consuming operation in progress and allows them to cancel the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a working window to inform users of a time-consuming operation?"
            },
            {
                "role": "assistant",
                "content": "cvxMessageBox\nMsgType [in] Message box type\nWndMode [in] 0 = modeless, 1 = full application modal\nTitle [in] Window title; set to NULL if not applicable\nMessage [in] Message string\nBtn1Str [in] Button1 string; set to NULL if not applicable\nBtn2Str [in] Button2 string; set to NULL if not applicable\nAction [out] Action\n\nFunction to display message window. A message window is used for common \n\n interaction tasks, which include giving information, asking questions, and \n\n reporting errors.\nValid MsgType is shown below:\nMsgType=1: An error window warns users of action consequences and gives them a choice of resolutions. \n\n\nMsgType=2: An information window gives the user information, such as the status of an action.\nMsgType=3: A message window is used for common interaction tasks.\nMsgType=4: A Question window is used to get the answer to a question from the user.\nMsgType=5: A warning window warns users of action consequences and gives them a choice of resolutions.\nMsgType=6: A working window informs users that there is atime-consuming operation in progress and allows them to cancel the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the last error type?"
            },
            {
                "role": "assistant",
                "content": "cvxLastErrGet\n\nGet the last error type."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the type of the last error?"
            },
            {
                "role": "assistant",
                "content": "cvxLastErrGet\n\nGet the last error type."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the type of the last error?"
            },
            {
                "role": "assistant",
                "content": "cvxLastErrGet\n\nGet the last error type."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the last error type?"
            },
            {
                "role": "assistant",
                "content": "cvxLastErrSet\nerror [in] set the last error type\n\nSet the last error type."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the last error type?"
            },
            {
                "role": "assistant",
                "content": "cvxLastErrSet\nerror [in] set the last error type\n\nSet the last error type."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to set the last error type?"
            },
            {
                "role": "assistant",
                "content": "cvxLastErrSet\nerror [in] set the last error type\n\nSet the last error type."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the error message?"
            },
            {
                "role": "assistant",
                "content": "cvxErrMsgGet\nerror [in] Get the error message\n\nReturn the error message, return NULL if fails to get."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the error message?"
            },
            {
                "role": "assistant",
                "content": "cvxErrMsgGet\nerror [in] Get the error message\n\nReturn the error message, return NULL if fails to get."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function can be used to obtain the error message?"
            },
            {
                "role": "assistant",
                "content": "cvxErrMsgGet\nerror [in] Get the error message\n\nReturn the error message, return NULL if fails to get."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate mass properties of an active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMassProp\n\nAppends an operation to the history of the active part to \n\n calculate mass properties for the part, assigning the results \n\n to the variables named Part_Area, Part_Volume and Part_Mass."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to assign results to variables for mass properties calculation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMassProp\n\nAppends an operation to the history of the active part to \n\n calculate mass properties for the part, assigning the results \n\n to the variables named Part_Area, Part_Volume and Part_Mass."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can you provide the variables for area, volume, and mass of a part after calculation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMassProp\n\nAppends an operation to the history of the active part to \n\n calculate mass properties for the part, assigning the results \n\n to the variables named Part_Area, Part_Volume and Part_Mass."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate the length of a part specified by index?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCalcAttrGet\nidPart [in] index of part in database\nattr [out] calculate attribute of part\n\nCalculate length,width,hight,volume,area,mass of part specified by index"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the volume of a part specified by index?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCalcAttrGet\nidPart [in] index of part in database\nattr [out] calculate attribute of part\n\nCalculate length,width,hight,volume,area,mass of part specified by index"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to calculate the area of a part specified by index?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCalcAttrGet\nidPart [in] index of part in database\nattr [out] calculate attribute of part\n\nCalculate length,width,hight,volume,area,mass of part specified by index"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the mass of a part specified by index?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCalcAttrGet\nidPart [in] index of part in database\nattr [out] calculate attribute of part\n\nCalculate length,width,hight,volume,area,mass of part specified by index"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate physical attributes of a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPhyAttrCalc\nName [in] part name\n\nCalculate physical attributes of the specified part. \n\n If Name = \"\" or NULL, it will calculate current active \n\n part's physical attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to calculate physical attributes of the current active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPhyAttrCalc\nName [in] part name\n\nCalculate physical attributes of the specified part. \n\n If Name = \"\" or NULL, it will calculate current active \n\n part's physical attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate physical attributes of a part by name?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPhyAttrCalc\nName [in] part name\n\nCalculate physical attributes of the specified part. \n\n If Name = \"\" or NULL, it will calculate current active \n\n part's physical attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the volume of a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVolumAndMassGet\nName [in] name of part in active file(Name[0]=0 or NULL for active part)\ndVolume [out] volume of part,unit:mm^3\ndMass [out] mass of part,unit:kg\n\nOutput volume and mass data from the specified part in the active file. \n\n Before you use it, you need to use function cvxPartPhyAttrCalc() to calculate \n\n physical attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the mass of a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVolumAndMassGet\nName [in] name of part in active file(Name[0]=0 or NULL for active part)\ndVolume [out] volume of part,unit:mm^3\ndMass [out] mass of part,unit:kg\n\nOutput volume and mass data from the specified part in the active file. \n\n Before you use it, you need to use function cvxPartPhyAttrCalc() to calculate \n\n physical attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function should be used to calculate physical attributes before using cvxPartVolumAndMassGet?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVolumAndMassGet\nName [in] name of part in active file(Name[0]=0 or NULL for active part)\ndVolume [out] volume of part,unit:mm^3\ndMass [out] mass of part,unit:kg\n\nOutput volume and mass data from the specified part in the active file. \n\n Before you use it, you need to use function cvxPartPhyAttrCalc() to calculate \n\n physical attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain material information in a specified file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMaterialGet\nfileName [in] file name(fileName[0]=0 or NULL for active file)\nrootName [in] root name(rootName[0]=0 or NULL for active target object)\nmaterial [in] material name\ndata [out] material attributes\n\nObtain the material information in the specified file. \n\n Attributes->Material corresponding to platform functions. \n\n The obtained density is in kg/m^3.\nThis interface obtains the data in the material list of the specified file. \n\n If the user wants to get material's attribute of the part file, interface cvxPartAtItemGet can be used.\nnote:\nfileName can only have a file name, or it can be a file name \n\n that contains a file path. \n\n If fileName only has a file name, user can add a search path \n\n through the cvxPathSearchFirst() interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get material attributes by root name?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMaterialGet\nfileName [in] file name(fileName[0]=0 or NULL for active file)\nrootName [in] root name(rootName[0]=0 or NULL for active target object)\nmaterial [in] material name\ndata [out] material attributes\n\nObtain the material information in the specified file. \n\n Attributes->Material corresponding to platform functions. \n\n The obtained density is in kg/m^3.\nThis interface obtains the data in the material list of the specified file. \n\n If the user wants to get material's attribute of the part file, interface cvxPartAtItemGet can be used.\nnote:\nfileName can only have a file name, or it can be a file name \n\n that contains a file path. \n\n If fileName only has a file name, user can add a search path \n\n through the cvxPathSearchFirst() interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the density of a material in kg/m^3?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMaterialGet\nfileName [in] file name(fileName[0]=0 or NULL for active file)\nrootName [in] root name(rootName[0]=0 or NULL for active target object)\nmaterial [in] material name\ndata [out] material attributes\n\nObtain the material information in the specified file. \n\n Attributes->Material corresponding to platform functions. \n\n The obtained density is in kg/m^3.\nThis interface obtains the data in the material list of the specified file. \n\n If the user wants to get material's attribute of the part file, interface cvxPartAtItemGet can be used.\nnote:\nfileName can only have a file name, or it can be a file name \n\n that contains a file path. \n\n If fileName only has a file name, user can add a search path \n\n through the cvxPathSearchFirst() interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I use cvxPartAtItemGet to get material's attribute of the part file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMaterialGet\nfileName [in] file name(fileName[0]=0 or NULL for active file)\nrootName [in] root name(rootName[0]=0 or NULL for active target object)\nmaterial [in] material name\ndata [out] material attributes\n\nObtain the material information in the specified file. \n\n Attributes->Material corresponding to platform functions. \n\n The obtained density is in kg/m^3.\nThis interface obtains the data in the material list of the specified file. \n\n If the user wants to get material's attribute of the part file, interface cvxPartAtItemGet can be used.\nnote:\nfileName can only have a file name, or it can be a file name \n\n that contains a file path. \n\n If fileName only has a file name, user can add a search path \n\n through the cvxPathSearchFirst() interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add materials to the material list of a specified document?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMaterialSet\nfileName [in] file name(fileName[0]=0 or NULL for active file)\nrootName [in] root name(rootName[0]=0 or NULL for active target object)\nmaterial [in] material name\ndata [in] material attributes\n\nThis interface is used to add materials to the material list of the specified document. \n\n (Attributes->Material...)\nIf the user wants to set material's attribute of the part file, interface cvxPartAtItemSet can be used.\nIf the material exists,modify the density corresponding to the existing material name. \n\n Otherwise, add the material name and density that did not exist before. \n\n The unit of density is kg/m^3.\nnote:\nfileName can only have a file name, or it can be a file name that contains a file path. \n\n If fileName only has a file name, user can add a search path through the cvxPathSearchFirst() interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to modify the density of an existing material?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMaterialSet\nfileName [in] file name(fileName[0]=0 or NULL for active file)\nrootName [in] root name(rootName[0]=0 or NULL for active target object)\nmaterial [in] material name\ndata [in] material attributes\n\nThis interface is used to add materials to the material list of the specified document. \n\n (Attributes->Material...)\nIf the user wants to set material's attribute of the part file, interface cvxPartAtItemSet can be used.\nIf the material exists,modify the density corresponding to the existing material name. \n\n Otherwise, add the material name and density that did not exist before. \n\n The unit of density is kg/m^3.\nnote:\nfileName can only have a file name, or it can be a file name that contains a file path. \n\n If fileName only has a file name, user can add a search path through the cvxPathSearchFirst() interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I set material attributes of a part file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMaterialSet\nfileName [in] file name(fileName[0]=0 or NULL for active file)\nrootName [in] root name(rootName[0]=0 or NULL for active target object)\nmaterial [in] material name\ndata [in] material attributes\n\nThis interface is used to add materials to the material list of the specified document. \n\n (Attributes->Material...)\nIf the user wants to set material's attribute of the part file, interface cvxPartAtItemSet can be used.\nIf the material exists,modify the density corresponding to the existing material name. \n\n Otherwise, add the material name and density that did not exist before. \n\n The unit of density is kg/m^3.\nnote:\nfileName can only have a file name, or it can be a file name that contains a file path. \n\n If fileName only has a file name, user can add a search path through the cvxPathSearchFirst() interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the unit of density for materials?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMaterialSet\nfileName [in] file name(fileName[0]=0 or NULL for active file)\nrootName [in] root name(rootName[0]=0 or NULL for active target object)\nmaterial [in] material name\ndata [in] material attributes\n\nThis interface is used to add materials to the material list of the specified document. \n\n (Attributes->Material...)\nIf the user wants to set material's attribute of the part file, interface cvxPartAtItemSet can be used.\nIf the material exists,modify the density corresponding to the existing material name. \n\n Otherwise, add the material name and density that did not exist before. \n\n The unit of density is kg/m^3.\nnote:\nfileName can only have a file name, or it can be a file name that contains a file path. \n\n If fileName only has a file name, user can add a search path through the cvxPathSearchFirst() interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I add a search path through the interface cvxPathSearchFirst()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMaterialSet\nfileName [in] file name(fileName[0]=0 or NULL for active file)\nrootName [in] root name(rootName[0]=0 or NULL for active target object)\nmaterial [in] material name\ndata [in] material attributes\n\nThis interface is used to add materials to the material list of the specified document. \n\n (Attributes->Material...)\nIf the user wants to set material's attribute of the part file, interface cvxPartAtItemSet can be used.\nIf the material exists,modify the density corresponding to the existing material name. \n\n Otherwise, add the material name and density that did not exist before. \n\n The unit of density is kg/m^3.\nnote:\nfileName can only have a file name, or it can be a file name that contains a file path. \n\n If fileName only has a file name, user can add a search path through the cvxPathSearchFirst() interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a material from the material list of a specified file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMaterialDel\nfileName [in] file name(fileName[0]=0 or NULL for active file)\nrootName [in] root name(rootName[0]=0 or NULL for active target object)\nmaterial [in] material name\n\nThis interface is used to delete the specified materials in the material list of the specified file. (Attributes->Material...)\nnote:\nfileName can only have a file name, or it can be a file name that contains a file path. \n\n If fileName only has a file name, user can add a search path through the cvxPathSearchFirst() interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove a material from the material list of a file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMaterialDel\nfileName [in] file name(fileName[0]=0 or NULL for active file)\nrootName [in] root name(rootName[0]=0 or NULL for active target object)\nmaterial [in] material name\n\nThis interface is used to delete the specified materials in the material list of the specified file. (Attributes->Material...)\nnote:\nfileName can only have a file name, or it can be a file name that contains a file path. \n\n If fileName only has a file name, user can add a search path through the cvxPathSearchFirst() interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the interface used to delete materials from the material list of a file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMaterialDel\nfileName [in] file name(fileName[0]=0 or NULL for active file)\nrootName [in] root name(rootName[0]=0 or NULL for active target object)\nmaterial [in] material name\n\nThis interface is used to delete the specified materials in the material list of the specified file. (Attributes->Material...)\nnote:\nfileName can only have a file name, or it can be a file name that contains a file path. \n\n If fileName only has a file name, user can add a search path through the cvxPathSearchFirst() interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve attribute data from a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtGet\nName [in] name of part in active file\nAt [out] part attribute data\n\nRetrieves attribute data from the specified part in the active file. \n\n If \"Name\" is NULL or an empty string, the active target part is used."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get part attribute data by name?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtGet\nName [in] name of part in active file\nAt [out] part attribute data\n\nRetrieves attribute data from the specified part in the active file. \n\n If \"Name\" is NULL or an empty string, the active target part is used."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get part attribute data from the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtGet\nName [in] name of part in active file\nAt [out] part attribute data\n\nRetrieves attribute data from the specified part in the active file. \n\n If \"Name\" is NULL or an empty string, the active target part is used."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to selectively update attributes of a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtMod\nName [in] name of part in active file\nAt [in] part attribute data\n\nSelectively updates attributes of the specified part with the \n\n fields in \"At\" that have valid ascii strings in their \"data\" \n\n variables. Any attribute whose \"data\" is a blank string is \n\n ignored. The \"label\" strings associated with modified fields \n\n are not reflected into the specified part's attribute info \n\n with the exception of user attributes and driving dimensions.\nFor this function to update a user attribute, both \"label\" and \"data\" \n\n must be defined for \"At->UserAttribute[n]\". If a user attribute with \n\n the specified \"label\" already exists in the part's current attribute \n\n info, then the corresponding \"data\" is updated. If not, then a new \n\n user-attribute is added to part's attribute info.\nEntries in \"At->Dimen[]\" that have blank labels are skipped. \n\n Dimensions listed in \"At->Dimen[]\" that are not already listed in \n\n the part's attribute info are added. Entries in \"At->Dimen[]\" with \n\n blank labels are ignored.\nIt is assumed that labels of driving dimensions listed in \"At->Dimen[]\" \n\n identify valid dimension or variables in the parent part. It is also \n\n assumed that dimension values stored in \"At->Dimen[].data\" fields are \n\n within valid ranges. No checking is done to ensure it. When driving \n\n dimension values are changed, the parent part is automatically \n\n regenerated by this function.\nYou cannot use this function to delete pre-existing dimension names \n\n from a part's attribute info. To do that, you have to get the existing \n\n attribute data with cvxPartAtGet(), clear the \"label\" and \"data\" variables \n\n of the driving dimensions you no longer want recorded in the part attributes, \n\n then reset all attributes using cvxPartAtSet().\nIf \"Name\" is NULL or an empty string, the active target part is used."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to update user attributes and driving dimensions of a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtMod\nName [in] name of part in active file\nAt [in] part attribute data\n\nSelectively updates attributes of the specified part with the \n\n fields in \"At\" that have valid ascii strings in their \"data\" \n\n variables. Any attribute whose \"data\" is a blank string is \n\n ignored. The \"label\" strings associated with modified fields \n\n are not reflected into the specified part's attribute info \n\n with the exception of user attributes and driving dimensions.\nFor this function to update a user attribute, both \"label\" and \"data\" \n\n must be defined for \"At->UserAttribute[n]\". If a user attribute with \n\n the specified \"label\" already exists in the part's current attribute \n\n info, then the corresponding \"data\" is updated. If not, then a new \n\n user-attribute is added to part's attribute info.\nEntries in \"At->Dimen[]\" that have blank labels are skipped. \n\n Dimensions listed in \"At->Dimen[]\" that are not already listed in \n\n the part's attribute info are added. Entries in \"At->Dimen[]\" with \n\n blank labels are ignored.\nIt is assumed that labels of driving dimensions listed in \"At->Dimen[]\" \n\n identify valid dimension or variables in the parent part. It is also \n\n assumed that dimension values stored in \"At->Dimen[].data\" fields are \n\n within valid ranges. No checking is done to ensure it. When driving \n\n dimension values are changed, the parent part is automatically \n\n regenerated by this function.\nYou cannot use this function to delete pre-existing dimension names \n\n from a part's attribute info. To do that, you have to get the existing \n\n attribute data with cvxPartAtGet(), clear the \"label\" and \"data\" variables \n\n of the driving dimensions you no longer want recorded in the part attributes, \n\n then reset all attributes using cvxPartAtSet().\nIf \"Name\" is NULL or an empty string, the active target part is used."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add new user attributes to a part's attribute info?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtMod\nName [in] name of part in active file\nAt [in] part attribute data\n\nSelectively updates attributes of the specified part with the \n\n fields in \"At\" that have valid ascii strings in their \"data\" \n\n variables. Any attribute whose \"data\" is a blank string is \n\n ignored. The \"label\" strings associated with modified fields \n\n are not reflected into the specified part's attribute info \n\n with the exception of user attributes and driving dimensions.\nFor this function to update a user attribute, both \"label\" and \"data\" \n\n must be defined for \"At->UserAttribute[n]\". If a user attribute with \n\n the specified \"label\" already exists in the part's current attribute \n\n info, then the corresponding \"data\" is updated. If not, then a new \n\n user-attribute is added to part's attribute info.\nEntries in \"At->Dimen[]\" that have blank labels are skipped. \n\n Dimensions listed in \"At->Dimen[]\" that are not already listed in \n\n the part's attribute info are added. Entries in \"At->Dimen[]\" with \n\n blank labels are ignored.\nIt is assumed that labels of driving dimensions listed in \"At->Dimen[]\" \n\n identify valid dimension or variables in the parent part. It is also \n\n assumed that dimension values stored in \"At->Dimen[].data\" fields are \n\n within valid ranges. No checking is done to ensure it. When driving \n\n dimension values are changed, the parent part is automatically \n\n regenerated by this function.\nYou cannot use this function to delete pre-existing dimension names \n\n from a part's attribute info. To do that, you have to get the existing \n\n attribute data with cvxPartAtGet(), clear the \"label\" and \"data\" variables \n\n of the driving dimensions you no longer want recorded in the part attributes, \n\n then reset all attributes using cvxPartAtSet().\nIf \"Name\" is NULL or an empty string, the active target part is used."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I use this function to delete pre-existing dimension names from a part's attribute info?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtMod\nName [in] name of part in active file\nAt [in] part attribute data\n\nSelectively updates attributes of the specified part with the \n\n fields in \"At\" that have valid ascii strings in their \"data\" \n\n variables. Any attribute whose \"data\" is a blank string is \n\n ignored. The \"label\" strings associated with modified fields \n\n are not reflected into the specified part's attribute info \n\n with the exception of user attributes and driving dimensions.\nFor this function to update a user attribute, both \"label\" and \"data\" \n\n must be defined for \"At->UserAttribute[n]\". If a user attribute with \n\n the specified \"label\" already exists in the part's current attribute \n\n info, then the corresponding \"data\" is updated. If not, then a new \n\n user-attribute is added to part's attribute info.\nEntries in \"At->Dimen[]\" that have blank labels are skipped. \n\n Dimensions listed in \"At->Dimen[]\" that are not already listed in \n\n the part's attribute info are added. Entries in \"At->Dimen[]\" with \n\n blank labels are ignored.\nIt is assumed that labels of driving dimensions listed in \"At->Dimen[]\" \n\n identify valid dimension or variables in the parent part. It is also \n\n assumed that dimension values stored in \"At->Dimen[].data\" fields are \n\n within valid ranges. No checking is done to ensure it. When driving \n\n dimension values are changed, the parent part is automatically \n\n regenerated by this function.\nYou cannot use this function to delete pre-existing dimension names \n\n from a part's attribute info. To do that, you have to get the existing \n\n attribute data with cvxPartAtGet(), clear the \"label\" and \"data\" variables \n\n of the driving dimensions you no longer want recorded in the part attributes, \n\n then reset all attributes using cvxPartAtSet().\nIf \"Name\" is NULL or an empty string, the active target part is used."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign part attribute data to a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtSet\nName [in] name of part in active file\nAt [in] part attribute data\n\nAssigns the specified part attribute data to the specified part. \n\n Existing part attribute data is replaced with the contents of \n\n the input attribute data structure.\nThis function reflects back into the specified part all of the \n\n attribute data in \"At\", even the blank strings (excluding the \n\n part name field). So, generally speaking, you would want to \n\n initialize \"At\" by passing it to cvxPartAtGet(), modify select \n\n fields of \"At\", then pass \"At\" back into this function.\nIt is assumed that labels of driving dimensions listed in \"At->Dimen[]\" \n\n identify valid dimension or variables in the parent part. It is also \n\n assumed that dimension values stored in \"At->Dimen[].data\" fields are \n\n within valid ranges. No checking is done to ensure it. When driving \n\n dimension values are changed, the parent part is automatically \n\n regenerated by this function.\nUse cvxPartAtMod() to selectively update part attribute data.\nIf \"Name\" is NULL or an empty string, the active target part is used."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to replace existing part attribute data with new data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtSet\nName [in] name of part in active file\nAt [in] part attribute data\n\nAssigns the specified part attribute data to the specified part. \n\n Existing part attribute data is replaced with the contents of \n\n the input attribute data structure.\nThis function reflects back into the specified part all of the \n\n attribute data in \"At\", even the blank strings (excluding the \n\n part name field). So, generally speaking, you would want to \n\n initialize \"At\" by passing it to cvxPartAtGet(), modify select \n\n fields of \"At\", then pass \"At\" back into this function.\nIt is assumed that labels of driving dimensions listed in \"At->Dimen[]\" \n\n identify valid dimension or variables in the parent part. It is also \n\n assumed that dimension values stored in \"At->Dimen[].data\" fields are \n\n within valid ranges. No checking is done to ensure it. When driving \n\n dimension values are changed, the parent part is automatically \n\n regenerated by this function.\nUse cvxPartAtMod() to selectively update part attribute data.\nIf \"Name\" is NULL or an empty string, the active target part is used."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update part attribute data selectively?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtSet\nName [in] name of part in active file\nAt [in] part attribute data\n\nAssigns the specified part attribute data to the specified part. \n\n Existing part attribute data is replaced with the contents of \n\n the input attribute data structure.\nThis function reflects back into the specified part all of the \n\n attribute data in \"At\", even the blank strings (excluding the \n\n part name field). So, generally speaking, you would want to \n\n initialize \"At\" by passing it to cvxPartAtGet(), modify select \n\n fields of \"At\", then pass \"At\" back into this function.\nIt is assumed that labels of driving dimensions listed in \"At->Dimen[]\" \n\n identify valid dimension or variables in the parent part. It is also \n\n assumed that dimension values stored in \"At->Dimen[].data\" fields are \n\n within valid ranges. No checking is done to ensure it. When driving \n\n dimension values are changed, the parent part is automatically \n\n regenerated by this function.\nUse cvxPartAtMod() to selectively update part attribute data.\nIf \"Name\" is NULL or an empty string, the active target part is used."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display the part attributes form for a specified root object?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShowPartAt\nFile [in] file name (NULL for active file)\nRoot [in] root object name (NULL for active root object)\n\nDisplay the part attributes form for specified root object.\nsee:\ncvxPartClosePartAt()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to show the part attributes form for a specific root object?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShowPartAt\nFile [in] file name (NULL for active file)\nRoot [in] root object name (NULL for active root object)\n\nDisplay the part attributes form for specified root object.\nsee:\ncvxPartClosePartAt()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I display the part attributes form for a particular root object?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShowPartAt\nFile [in] file name (NULL for active file)\nRoot [in] root object name (NULL for active root object)\n\nDisplay the part attributes form for specified root object.\nsee:\ncvxPartClosePartAt()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to close the part attributes form?"
            },
            {
                "role": "assistant",
                "content": "cvxPartClosePartAt\n\nClose the part attributes form.\nsee:\ncvxPartShowPartAt()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to close the part attributes form?"
            },
            {
                "role": "assistant",
                "content": "cvxPartClosePartAt\n\nClose the part attributes form.\nsee:\ncvxPartShowPartAt()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to hide the part attributes form?"
            },
            {
                "role": "assistant",
                "content": "cvxPartClosePartAt\n\nClose the part attributes form.\nsee:\ncvxPartShowPartAt()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a specified attribute from the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemGet\nitemId [in] item id\nAt [inout] part item attribute\n\nOutputs the specified attribute from the active part.\nThe itemId includes part items of evxAtItemId (VX_AT_USER~VX_AT_HEIGHT).\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must \n\n be assigned to At->label before calling this function. For all other \n\n itemId values, At->label can be an empty string (At->label[0]=0) when \n\n this function is called."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve part item attribute by item id?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemGet\nitemId [in] item id\nAt [inout] part item attribute\n\nOutputs the specified attribute from the active part.\nThe itemId includes part items of evxAtItemId (VX_AT_USER~VX_AT_HEIGHT).\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must \n\n be assigned to At->label before calling this function. For all other \n\n itemId values, At->label can be an empty string (At->label[0]=0) when \n\n this function is called."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use itemId to get part item attribute?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemGet\nitemId [in] item id\nAt [inout] part item attribute\n\nOutputs the specified attribute from the active part.\nThe itemId includes part items of evxAtItemId (VX_AT_USER~VX_AT_HEIGHT).\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must \n\n be assigned to At->label before calling this function. For all other \n\n itemId values, At->label can be an empty string (At->label[0]=0) when \n\n this function is called."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the value of a specific attribute in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemSet\nitemId [in] item id\nAt [in] part item attribute\n\nSets the value of the specified attribute in the active part.\nThe itemId includes part items of evxAtItemId (VX_AT_USER~VX_AT_HEIGHT).\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must \n\n be assigned to At->label before calling this function. For all other \n\n itemId values, At->label can be an empty string (At->label[0]=0) when \n\n this function is called."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign a name to the user-defined attribute before calling the function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemSet\nitemId [in] item id\nAt [in] part item attribute\n\nSets the value of the specified attribute in the active part.\nThe itemId includes part items of evxAtItemId (VX_AT_USER~VX_AT_HEIGHT).\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must \n\n be assigned to At->label before calling this function. For all other \n\n itemId values, At->label can be an empty string (At->label[0]=0) when \n\n this function is called."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the different part items that can be included in the itemId parameter?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemSet\nitemId [in] item id\nAt [in] part item attribute\n\nSets the value of the specified attribute in the active part.\nThe itemId includes part items of evxAtItemId (VX_AT_USER~VX_AT_HEIGHT).\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must \n\n be assigned to At->label before calling this function. For all other \n\n itemId values, At->label can be an empty string (At->label[0]=0) when \n\n this function is called."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get an attribute from a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemGetInFile\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nitemId [in] item id\nAt [inout] part item attribute\n\nOutputs an attribute from a specified part.\nThe itemId includes part items of evxAtItemId (VX_AT_USER~VX_AT_HEIGHT).\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must \n\n be assigned to At->label before calling this function. For all other \n\n itemId values, At->label can be an empty string (At->label[0]=0) when \n\n this function is called.\nIf the specified file is not already open, this function will open it \n\n to access the attribute, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep() function, before calling this \n\n function, to set a flag that prevents cvxPartAtItemSetInFile() and \n\n cvxPartAtItemGetInFile() from closing the files that they open. (Files \n\n that are already open before cvxPartAtItemSetInFile() or \n\n cvxPartAtItemGetInFile() is called are never closed by these functions.) \n\n Keeping files open is a more efficient way to access multiple \n\n attributes in a file, but you must remember to call cvxFileKeep() again \n\n to reset the flag after you have finished your calls to \n\n cvxPartAtItemGetInFile() and cvxPartAtItemSetInFile(), and you also become \n\n responsible for closing the files, for example by using one of the \n\n cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to access the attribute of a part item in a file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemGetInFile\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nitemId [in] item id\nAt [inout] part item attribute\n\nOutputs an attribute from a specified part.\nThe itemId includes part items of evxAtItemId (VX_AT_USER~VX_AT_HEIGHT).\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must \n\n be assigned to At->label before calling this function. For all other \n\n itemId values, At->label can be an empty string (At->label[0]=0) when \n\n this function is called.\nIf the specified file is not already open, this function will open it \n\n to access the attribute, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep() function, before calling this \n\n function, to set a flag that prevents cvxPartAtItemSetInFile() and \n\n cvxPartAtItemGetInFile() from closing the files that they open. (Files \n\n that are already open before cvxPartAtItemSetInFile() or \n\n cvxPartAtItemGetInFile() is called are never closed by these functions.) \n\n Keeping files open is a more efficient way to access multiple \n\n attributes in a file, but you must remember to call cvxFileKeep() again \n\n to reset the flag after you have finished your calls to \n\n cvxPartAtItemGetInFile() and cvxPartAtItemSetInFile(), and you also become \n\n responsible for closing the files, for example by using one of the \n\n cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to keep the file open while accessing the attribute of a part item?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemGetInFile\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nitemId [in] item id\nAt [inout] part item attribute\n\nOutputs an attribute from a specified part.\nThe itemId includes part items of evxAtItemId (VX_AT_USER~VX_AT_HEIGHT).\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must \n\n be assigned to At->label before calling this function. For all other \n\n itemId values, At->label can be an empty string (At->label[0]=0) when \n\n this function is called.\nIf the specified file is not already open, this function will open it \n\n to access the attribute, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep() function, before calling this \n\n function, to set a flag that prevents cvxPartAtItemSetInFile() and \n\n cvxPartAtItemGetInFile() from closing the files that they open. (Files \n\n that are already open before cvxPartAtItemSetInFile() or \n\n cvxPartAtItemGetInFile() is called are never closed by these functions.) \n\n Keeping files open is a more efficient way to access multiple \n\n attributes in a file, but you must remember to call cvxFileKeep() again \n\n to reset the flag after you have finished your calls to \n\n cvxPartAtItemGetInFile() and cvxPartAtItemSetInFile(), and you also become \n\n responsible for closing the files, for example by using one of the \n\n cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set an attribute value in a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemSetInFile\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nitemId [in] item id\nAt [in] part item attribute\n\nSets an attribute value in a specified part.\nThe itemId includes part items of evxAtItemId (VX_AT_USER~VX_AT_HEIGHT).\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must \n\n be assigned to At->label before calling this function. For all other \n\n itemId values, At->label can be an empty string (At->label[0]=0) when \n\n this function is called.\nIf the specified file is not already open, this function will open it \n\n to access the attribute, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep() function, before calling this \n\n function, to set a flag that prevents cvxPartAtItemSetInFile() and \n\n cvxPartAtItemGetInFile() from closing the files that they open. (Files \n\n that are already open before cvxPartAtItemSetInFile() or \n\n cvxPartAtItemGetInFile() is called are never closed by these functions.) \n\n Keeping files open is a more efficient way to access multiple \n\n attributes in a file, but you must remember to call cvxFileKeep() again \n\n to reset the flag after you have finished your calls to \n\n cvxPartAtItemGetInFile() and cvxPartAtItemSetInFile(), and you also become \n\n responsible for closing the files, for example by using one of the \n\n cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to keep the file open while accessing attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemSetInFile\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nitemId [in] item id\nAt [in] part item attribute\n\nSets an attribute value in a specified part.\nThe itemId includes part items of evxAtItemId (VX_AT_USER~VX_AT_HEIGHT).\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must \n\n be assigned to At->label before calling this function. For all other \n\n itemId values, At->label can be an empty string (At->label[0]=0) when \n\n this function is called.\nIf the specified file is not already open, this function will open it \n\n to access the attribute, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep() function, before calling this \n\n function, to set a flag that prevents cvxPartAtItemSetInFile() and \n\n cvxPartAtItemGetInFile() from closing the files that they open. (Files \n\n that are already open before cvxPartAtItemSetInFile() or \n\n cvxPartAtItemGetInFile() is called are never closed by these functions.) \n\n Keeping files open is a more efficient way to access multiple \n\n attributes in a file, but you must remember to call cvxFileKeep() again \n\n to reset the flag after you have finished your calls to \n\n cvxPartAtItemGetInFile() and cvxPartAtItemSetInFile(), and you also become \n\n responsible for closing the files, for example by using one of the \n\n cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to access multiple attributes in a file efficiently?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemSetInFile\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nitemId [in] item id\nAt [in] part item attribute\n\nSets an attribute value in a specified part.\nThe itemId includes part items of evxAtItemId (VX_AT_USER~VX_AT_HEIGHT).\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must \n\n be assigned to At->label before calling this function. For all other \n\n itemId values, At->label can be an empty string (At->label[0]=0) when \n\n this function is called.\nIf the specified file is not already open, this function will open it \n\n to access the attribute, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep() function, before calling this \n\n function, to set a flag that prevents cvxPartAtItemSetInFile() and \n\n cvxPartAtItemGetInFile() from closing the files that they open. (Files \n\n that are already open before cvxPartAtItemSetInFile() or \n\n cvxPartAtItemGetInFile() is called are never closed by these functions.) \n\n Keeping files open is a more efficient way to access multiple \n\n attributes in a file, but you must remember to call cvxFileKeep() again \n\n to reset the flag after you have finished your calls to \n\n cvxPartAtItemGetInFile() and cvxPartAtItemSetInFile(), and you also become \n\n responsible for closing the files, for example by using one of the \n\n cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to prevent closing the files that are opened to access attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemSetInFile\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nitemId [in] item id\nAt [in] part item attribute\n\nSets an attribute value in a specified part.\nThe itemId includes part items of evxAtItemId (VX_AT_USER~VX_AT_HEIGHT).\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must \n\n be assigned to At->label before calling this function. For all other \n\n itemId values, At->label can be an empty string (At->label[0]=0) when \n\n this function is called.\nIf the specified file is not already open, this function will open it \n\n to access the attribute, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep() function, before calling this \n\n function, to set a flag that prevents cvxPartAtItemSetInFile() and \n\n cvxPartAtItemGetInFile() from closing the files that they open. (Files \n\n that are already open before cvxPartAtItemSetInFile() or \n\n cvxPartAtItemGetInFile() is called are never closed by these functions.) \n\n Keeping files open is a more efficient way to access multiple \n\n attributes in a file, but you must remember to call cvxFileKeep() again \n\n to reset the flag after you have finished your calls to \n\n cvxPartAtItemGetInFile() and cvxPartAtItemSetInFile(), and you also become \n\n responsible for closing the files, for example by using one of the \n\n cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete an attribute of a specified item?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemDel\nitemId [in] item id\nlabel [in] lable of item attribute\n\nDelete the attribute of specified item.\nIf the itemId = VX_AT_USER, the label can not be NULL and the attribute will \n\n be delete, otherwise it will set the data of At to NULL.\nThe itemId includes part items of evxAtItemId(VX_AT_USER~VX_AT_HEIGHT)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete an attribute if the item id is VX_AT_USER?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemDel\nitemId [in] item id\nlabel [in] lable of item attribute\n\nDelete the attribute of specified item.\nIf the itemId = VX_AT_USER, the label can not be NULL and the attribute will \n\n be delete, otherwise it will set the data of At to NULL.\nThe itemId includes part items of evxAtItemId(VX_AT_USER~VX_AT_HEIGHT)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the data of At to NULL for a specified item?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemDel\nitemId [in] item id\nlabel [in] lable of item attribute\n\nDelete the attribute of specified item.\nIf the itemId = VX_AT_USER, the label can not be NULL and the attribute will \n\n be delete, otherwise it will set the data of At to NULL.\nThe itemId includes part items of evxAtItemId(VX_AT_USER~VX_AT_HEIGHT)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the description of a specified attribute item?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemDesGet\nitemId [in] attribute item id\nAtLable [in] attribute item name\nAtDes [out] attribute item description\nnBytes [in] string max size of attribute item description\n\nGet the description of the specified attribute item.\nIf the itemId = VX_AT_USER, the parameter AtLable can not be NULL. \n\n The itemId includes part items of evxAtItemId(VX_AT_USER~VX_AT_HEIGHT)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the attribute item description?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemDesGet\nitemId [in] attribute item id\nAtLable [in] attribute item name\nAtDes [out] attribute item description\nnBytes [in] string max size of attribute item description\n\nGet the description of the specified attribute item.\nIf the itemId = VX_AT_USER, the parameter AtLable can not be NULL. \n\n The itemId includes part items of evxAtItemId(VX_AT_USER~VX_AT_HEIGHT)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the attribute item description based on the item ID and label?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemDesGet\nitemId [in] attribute item id\nAtLable [in] attribute item name\nAtDes [out] attribute item description\nnBytes [in] string max size of attribute item description\n\nGet the description of the specified attribute item.\nIf the itemId = VX_AT_USER, the parameter AtLable can not be NULL. \n\n The itemId includes part items of evxAtItemId(VX_AT_USER~VX_AT_HEIGHT)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the description of a specified attribute item?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemDesSet\nitemId [in] attribute item id\nAtLable [in] attribute item name\nAtDes [in] attribute item description\n\nSet the description of the specified attribute item.\nIf the itemId = VX_AT_USER, the parameter AtLable can not be NULL. \n\n The itemId includes part items of evxAtItemId(VX_AT_USER~VX_AT_HEIGHT)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to set the attribute item description?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemDesSet\nitemId [in] attribute item id\nAtLable [in] attribute item name\nAtDes [in] attribute item description\n\nSet the description of the specified attribute item.\nIf the itemId = VX_AT_USER, the parameter AtLable can not be NULL. \n\n The itemId includes part items of evxAtItemId(VX_AT_USER~VX_AT_HEIGHT)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the description of an attribute item with a specific item ID?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemDesSet\nitemId [in] attribute item id\nAtLable [in] attribute item name\nAtDes [in] attribute item description\n\nSet the description of the specified attribute item.\nIf the itemId = VX_AT_USER, the parameter AtLable can not be NULL. \n\n The itemId includes part items of evxAtItemId(VX_AT_USER~VX_AT_HEIGHT)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the locking state of a custom attribute item?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemLockGet\nAtLable [in] custom attribute name\nAtLockState [out] locking state of attribute item\n\nGet the locking state of the specified attribute item. \n\n only custom attribute item are supported."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check the lock state of a specific attribute item?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemLockGet\nAtLable [in] custom attribute name\nAtLockState [out] locking state of attribute item\n\nGet the locking state of the specified attribute item. \n\n only custom attribute item are supported."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the lock state of a custom attribute item?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemLockGet\nAtLable [in] custom attribute name\nAtLockState [out] locking state of attribute item\n\nGet the locking state of the specified attribute item. \n\n only custom attribute item are supported."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the locking state of a custom attribute item?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemLockSet\nAtLable [in] custom attribute name\nAtLockState [in] locking state of attribute item\n\nSet the locking state of the specified attribute item. \n\n only custom attribute item are supported."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to lock a specific attribute item?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemLockSet\nAtLable [in] custom attribute name\nAtLockState [in] locking state of attribute item\n\nSet the locking state of the specified attribute item. \n\n only custom attribute item are supported."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the locking state of a custom attribute item?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemLockSet\nAtLable [in] custom attribute name\nAtLockState [in] locking state of attribute item\n\nSet the locking state of the specified attribute item. \n\n only custom attribute item are supported."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the locking state of a custom attribute item?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemLockGetInFile\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nAtLable [in] custom attribute name\nAtLockState [out] locking state of attribute item\n\nGet the locking state of the specified attribute item. \n\n only custom attribute item are supported.\nIf the specified file is not already open, this function will open it \n\n to access attributes, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep() function, before calling this \n\n function, to set a flag that prevents this function from closing the \n\n files that it opens. (Files that are already open before this function \n\n is called are never closed by this function.) If you will be calling \n\n several functions to access data in the same file, keeping the file open \n\n between calls is more efficient than letting each function open and close \n\n the file. However, you must remember to call cvxFileKeep() again to reset \n\n the flag after you have finished all of the function calls that need to \n\n access the specified file, and you also become responsible for closing the \n\n file, for example by using one of the cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check the locking state of a specified attribute item?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemLockGetInFile\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nAtLable [in] custom attribute name\nAtLockState [out] locking state of attribute item\n\nGet the locking state of the specified attribute item. \n\n only custom attribute item are supported.\nIf the specified file is not already open, this function will open it \n\n to access attributes, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep() function, before calling this \n\n function, to set a flag that prevents this function from closing the \n\n files that it opens. (Files that are already open before this function \n\n is called are never closed by this function.) If you will be calling \n\n several functions to access data in the same file, keeping the file open \n\n between calls is more efficient than letting each function open and close \n\n the file. However, you must remember to call cvxFileKeep() again to reset \n\n the flag after you have finished all of the function calls that need to \n\n access the specified file, and you also become responsible for closing the \n\n file, for example by using one of the cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to access the locking state of a custom attribute item in a file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemLockGetInFile\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nAtLable [in] custom attribute name\nAtLockState [out] locking state of attribute item\n\nGet the locking state of the specified attribute item. \n\n only custom attribute item are supported.\nIf the specified file is not already open, this function will open it \n\n to access attributes, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep() function, before calling this \n\n function, to set a flag that prevents this function from closing the \n\n files that it opens. (Files that are already open before this function \n\n is called are never closed by this function.) If you will be calling \n\n several functions to access data in the same file, keeping the file open \n\n between calls is more efficient than letting each function open and close \n\n the file. However, you must remember to call cvxFileKeep() again to reset \n\n the flag after you have finished all of the function calls that need to \n\n access the specified file, and you also become responsible for closing the \n\n file, for example by using one of the cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the locking state of a custom attribute item?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemLockSetInFile\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nAtLable [in] custom attribute name\nAtLockState [in] locking state of attribute item\n\nSet the locking state of the specified attribute item. \n\n only custom attribute item are supported.\nIf the specified file is not already open, this function will open it \n\n to access attributes, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep() function, before calling this \n\n function, to set a flag that prevents this function from closing the \n\n files that it opens. (Files that are already open before this function \n\n is called are never closed by this function.) If you will be calling \n\n several functions to access data in the same file, keeping the file open \n\n between calls is more efficient than letting each function open and close \n\n the file. However, you must remember to call cvxFileKeep() again to reset \n\n the flag after you have finished all of the function calls that need to \n\n access the specified file, and you also become responsible for closing the \n\n file, for example by using one of the cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to keep the file open while accessing attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemLockSetInFile\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nAtLable [in] custom attribute name\nAtLockState [in] locking state of attribute item\n\nSet the locking state of the specified attribute item. \n\n only custom attribute item are supported.\nIf the specified file is not already open, this function will open it \n\n to access attributes, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep() function, before calling this \n\n function, to set a flag that prevents this function from closing the \n\n files that it opens. (Files that are already open before this function \n\n is called are never closed by this function.) If you will be calling \n\n several functions to access data in the same file, keeping the file open \n\n between calls is more efficient than letting each function open and close \n\n the file. However, you must remember to call cvxFileKeep() again to reset \n\n the flag after you have finished all of the function calls that need to \n\n access the specified file, and you also become responsible for closing the \n\n file, for example by using one of the cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to access and close the file after setting the locking state of an attribute item?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemLockSetInFile\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nAtLable [in] custom attribute name\nAtLockState [in] locking state of attribute item\n\nSet the locking state of the specified attribute item. \n\n only custom attribute item are supported.\nIf the specified file is not already open, this function will open it \n\n to access attributes, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep() function, before calling this \n\n function, to set a flag that prevents this function from closing the \n\n files that it opens. (Files that are already open before this function \n\n is called are never closed by this function.) If you will be calling \n\n several functions to access data in the same file, keeping the file open \n\n between calls is more efficient than letting each function open and close \n\n the file. However, you must remember to call cvxFileKeep() again to reset \n\n the flag after you have finished all of the function calls that need to \n\n access the specified file, and you also become responsible for closing the \n\n file, for example by using one of the cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve user attribute data from a specified part in a file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUserAtGet\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nCount [out] number of user attributes\nUserAt [out] list of user attributes\n\nRetrieves user attribute data from the specified part in the specified file.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nIf the specified file is not already open, this function will open it \n\n to access attributes, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep() function, before calling this \n\n function, to set a flag that prevents this function from closing the \n\n files that it opens. (Files that are already open before this function \n\n is called are never closed by this function.) If you will be calling \n\n several functions to access data in the same file, keeping the file open \n\n between calls is more efficient than letting each function open and close \n\n the file. However, you must remember to call cvxFileKeep() again to reset \n\n the flag after you have finished all of the function calls that need to \n\n access the specified file, and you also become responsible for closing the \n\n file, for example by using one of the cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list after retrieving user attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUserAtGet\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nCount [out] number of user attributes\nUserAt [out] list of user attributes\n\nRetrieves user attribute data from the specified part in the specified file.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nIf the specified file is not already open, this function will open it \n\n to access attributes, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep() function, before calling this \n\n function, to set a flag that prevents this function from closing the \n\n files that it opens. (Files that are already open before this function \n\n is called are never closed by this function.) If you will be calling \n\n several functions to access data in the same file, keeping the file open \n\n between calls is more efficient than letting each function open and close \n\n the file. However, you must remember to call cvxFileKeep() again to reset \n\n the flag after you have finished all of the function calls that need to \n\n access the specified file, and you also become responsible for closing the \n\n file, for example by using one of the cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to prevent the function from closing the file after retrieving user attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUserAtGet\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nCount [out] number of user attributes\nUserAt [out] list of user attributes\n\nRetrieves user attribute data from the specified part in the specified file.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nIf the specified file is not already open, this function will open it \n\n to access attributes, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep() function, before calling this \n\n function, to set a flag that prevents this function from closing the \n\n files that it opens. (Files that are already open before this function \n\n is called are never closed by this function.) If you will be calling \n\n several functions to access data in the same file, keeping the file open \n\n between calls is more efficient than letting each function open and close \n\n the file. However, you must remember to call cvxFileKeep() again to reset \n\n the flag after you have finished all of the function calls that need to \n\n access the specified file, and you also become responsible for closing the \n\n file, for example by using one of the cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the procedure to keep the file open when accessing data in the same file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUserAtGet\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nCount [out] number of user attributes\nUserAt [out] list of user attributes\n\nRetrieves user attribute data from the specified part in the specified file.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nIf the specified file is not already open, this function will open it \n\n to access attributes, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep() function, before calling this \n\n function, to set a flag that prevents this function from closing the \n\n files that it opens. (Files that are already open before this function \n\n is called are never closed by this function.) If you will be calling \n\n several functions to access data in the same file, keeping the file open \n\n between calls is more efficient than letting each function open and close \n\n the file. However, you must remember to call cvxFileKeep() again to reset \n\n the flag after you have finished all of the function calls that need to \n\n access the specified file, and you also become responsible for closing the \n\n file, for example by using one of the cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign part attribute data to a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUserAtSet\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nDelOrgAt [in] whether to clear original user attribute\nCount [in] number of user attributes\nUserAt [in] list of user attributes\n\nAssigns the specified part attribute data to the specified part. \n\n Existing part attribute data is replaced with the contents of \n\n the input attribute data structure.\nIf the specified file is not already open, this function will open it \n\n to access attributes, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep() function, before calling this \n\n function, to set a flag that prevents this function from closing the \n\n files that it opens. (Files that are already open before this function \n\n is called are never closed by this function.) If you will be calling \n\n several functions to access data in the same file, keeping the file open \n\n between calls is more efficient than letting each function open and close \n\n the file. However, you must remember to call cvxFileKeep() again to reset \n\n the flag after you have finished all of the function calls that need to \n\n access the specified file, and you also become responsible for closing the \n\n file, for example by using one of the cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to replace existing part attribute data with new data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUserAtSet\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nDelOrgAt [in] whether to clear original user attribute\nCount [in] number of user attributes\nUserAt [in] list of user attributes\n\nAssigns the specified part attribute data to the specified part. \n\n Existing part attribute data is replaced with the contents of \n\n the input attribute data structure.\nIf the specified file is not already open, this function will open it \n\n to access attributes, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep() function, before calling this \n\n function, to set a flag that prevents this function from closing the \n\n files that it opens. (Files that are already open before this function \n\n is called are never closed by this function.) If you will be calling \n\n several functions to access data in the same file, keeping the file open \n\n between calls is more efficient than letting each function open and close \n\n the file. However, you must remember to call cvxFileKeep() again to reset \n\n the flag after you have finished all of the function calls that need to \n\n access the specified file, and you also become responsible for closing the \n\n file, for example by using one of the cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to keep the file open while accessing attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUserAtSet\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nDelOrgAt [in] whether to clear original user attribute\nCount [in] number of user attributes\nUserAt [in] list of user attributes\n\nAssigns the specified part attribute data to the specified part. \n\n Existing part attribute data is replaced with the contents of \n\n the input attribute data structure.\nIf the specified file is not already open, this function will open it \n\n to access attributes, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep() function, before calling this \n\n function, to set a flag that prevents this function from closing the \n\n files that it opens. (Files that are already open before this function \n\n is called are never closed by this function.) If you will be calling \n\n several functions to access data in the same file, keeping the file open \n\n between calls is more efficient than letting each function open and close \n\n the file. However, you must remember to call cvxFileKeep() again to reset \n\n the flag after you have finished all of the function calls that need to \n\n access the specified file, and you also become responsible for closing the \n\n file, for example by using one of the cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to export part user attribute data to an excel file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUserAtExport\nfilePath [in] path of excel file to export\n\nExport the part user attribute data to the specified file 'filePath'."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to export part user attribute data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUserAtExport\nfilePath [in] path of excel file to export\n\nExport the part user attribute data to the specified file 'filePath'."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the file path for exporting part user attribute data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUserAtExport\nfilePath [in] path of excel file to export\n\nExport the part user attribute data to the specified file 'filePath'."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set a custom string for a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSetCustomStr\nidEnt [in] part id\nCustomString [in] custom string\nidStr [out] custom string id, NULL to ignore\n\nSet custom string attached to a entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to attach a custom string to a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSetCustomStr\nidEnt [in] part id\nCustomString [in] custom string\nidStr [out] custom string id, NULL to ignore\n\nSet custom string attached to a entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the custom string id after setting it?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSetCustomStr\nidEnt [in] part id\nCustomString [in] custom string\nidStr [out] custom string id, NULL to ignore\n\nSet custom string attached to a entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get custom string attached to a part entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartGetCustomStr\nidEnt [in] part id\nidStr [out] custom string id, can be NULL\nCustomString [out] custom string\n\nGet custom string attached to a entity.\nThe calling procedure MUST deallocate the output string with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any function to retrieve custom string id for a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartGetCustomStr\nidEnt [in] part id\nidStr [out] custom string id, can be NULL\nCustomString [out] custom string\n\nGet custom string attached to a entity.\nThe calling procedure MUST deallocate the output string with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output string after getting the custom string?"
            },
            {
                "role": "assistant",
                "content": "cvxPartGetCustomStr\nidEnt [in] part id\nidStr [out] custom string id, can be NULL\nCustomString [out] custom string\n\nGet custom string attached to a entity.\nThe calling procedure MUST deallocate the output string with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblAdd\ncfgName [in] config name\ncfgDes [in] config description(Max = 96bytes,NULL to ignore)\nidCfg [out] id of config\n\nAdd a configuration id to the configuration table. \n\n COnfiguration properties can be set for through idCfg \n\n and interface cvxCfgTblInfosSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblAdd\ncfgName [in] config name\ncfgDes [in] config description(Max = 96bytes,NULL to ignore)\nidCfg [out] id of config\n\nAdd a configuration id to the configuration table. \n\n COnfiguration properties can be set for through idCfg \n\n and interface cvxCfgTblInfosSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblAdd\ncfgName [in] config name\ncfgDes [in] config description(Max = 96bytes,NULL to ignore)\nidCfg [out] id of config\n\nAdd a configuration id to the configuration table. \n\n COnfiguration properties can be set for through idCfg \n\n and interface cvxCfgTblInfosSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to activate a specific configuration for the current part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgActivate\nidCfg [in] config id\n\nActive the specified configuration to current part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set a configuration as active for the current part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgActivate\nidCfg [in] config id\n\nActive the specified configuration to current part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to activate a configuration for the current part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgActivate\nidCfg [in] config id\n\nActive the specified configuration to current part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the active configuration of the current active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqActiveCfg\nidCfg [out] the id of current active configuration\n\nOutputs the active configuration id of current active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the id of the active configuration of the current part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqActiveCfg\nidCfg [out] the id of current active configuration\n\nOutputs the active configuration id of current active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the id of the active configuration of the current part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqActiveCfg\nidCfg [out] the id of current active configuration\n\nOutputs the active configuration id of current active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the active configuration id of a specified file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqActiveCfgByName\nfileName [in] file name, NULL for active file name\nrootName [in] root name, NULL for active root name\nidCfg [out] the id of current active configuration\n\nOutputs the active configuration id of specified file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the active configuration id by file name?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqActiveCfgByName\nfileName [in] file name, NULL for active file name\nrootName [in] root name, NULL for active root name\nidCfg [out] the id of current active configuration\n\nOutputs the active configuration id of specified file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the id of the current active configuration?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqActiveCfgByName\nfileName [in] file name, NULL for active file name\nrootName [in] root name, NULL for active root name\nidCfg [out] the id of current active configuration\n\nOutputs the active configuration id of specified file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of part configurations?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCfgList\nCount [out] the number of part configuration\nCfgList [out] the list of part configuration id\n\nOutputs the configuration id list of current active part.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of part configurations?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCfgList\nCount [out] the number of part configuration\nCfgList [out] the list of part configuration id\n\nOutputs the configuration id list of current active part.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the configuration id list of the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCfgList\nCount [out] the number of part configuration\nCfgList [out] the list of part configuration id\n\nOutputs the configuration id list of current active part.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCfgListByName\nfileName [in] file name, NULL for active file name\nrootName [in] root name, NULL for active root name\ncount [out] the number of part configuration\ncfgList [out] the list of part configuration id\n\nOutputs the configuration id list of specified file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCfgListByName\nfileName [in] file name, NULL for active file name\nrootName [in] root name, NULL for active root name\ncount [out] the number of part configuration\ncfgList [out] the list of part configuration id\n\nOutputs the configuration id list of specified file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCfgListByName\nfileName [in] file name, NULL for active file name\nrootName [in] root name, NULL for active root name\ncount [out] the number of part configuration\ncfgList [out] the list of part configuration id\n\nOutputs the configuration id list of specified file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify data in the configuration table?"
            },
            {
                "role": "assistant",
                "content": "cvxCfgTblInfosSet\nidCfg [in] configuration id\ninfo [in] config table info that changed\n\nThis interface can modify data that already exists in the configuration table.\nGet Id by cvxPartInqCfgList(); \n\n Get info by cvxPartInqConfigTableInfos();\nMultiple values for each row of configuration can be set at once.\nnote:\nWhen using this interface to set the configuration table,there are too many structure parameters, \n\n which makes the interface difficult to use. \n\n Therefore ,after all the new interfaces that replace this interface are available, \n\n this interface will be discarded. \n\n Now,it is recommended that customers use cvxPartCfgTblAttrSet() to add, modify, and delete attribute \n\n related items to the configuration table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set multiple values for each row of configuration at once?"
            },
            {
                "role": "assistant",
                "content": "cvxCfgTblInfosSet\nidCfg [in] configuration id\ninfo [in] config table info that changed\n\nThis interface can modify data that already exists in the configuration table.\nGet Id by cvxPartInqCfgList(); \n\n Get info by cvxPartInqConfigTableInfos();\nMultiple values for each row of configuration can be set at once.\nnote:\nWhen using this interface to set the configuration table,there are too many structure parameters, \n\n which makes the interface difficult to use. \n\n Therefore ,after all the new interfaces that replace this interface are available, \n\n this interface will be discarded. \n\n Now,it is recommended that customers use cvxPartCfgTblAttrSet() to add, modify, and delete attribute \n\n related items to the configuration table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there an alternative interface to set the configuration table?"
            },
            {
                "role": "assistant",
                "content": "cvxCfgTblInfosSet\nidCfg [in] configuration id\ninfo [in] config table info that changed\n\nThis interface can modify data that already exists in the configuration table.\nGet Id by cvxPartInqCfgList(); \n\n Get info by cvxPartInqConfigTableInfos();\nMultiple values for each row of configuration can be set at once.\nnote:\nWhen using this interface to set the configuration table,there are too many structure parameters, \n\n which makes the interface difficult to use. \n\n Therefore ,after all the new interfaces that replace this interface are available, \n\n this interface will be discarded. \n\n Now,it is recommended that customers use cvxPartCfgTblAttrSet() to add, modify, and delete attribute \n\n related items to the configuration table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the recommended interface to add, modify, and delete attribute-related items to the configuration table?"
            },
            {
                "role": "assistant",
                "content": "cvxCfgTblInfosSet\nidCfg [in] configuration id\ninfo [in] config table info that changed\n\nThis interface can modify data that already exists in the configuration table.\nGet Id by cvxPartInqCfgList(); \n\n Get info by cvxPartInqConfigTableInfos();\nMultiple values for each row of configuration can be set at once.\nnote:\nWhen using this interface to set the configuration table,there are too many structure parameters, \n\n which makes the interface difficult to use. \n\n Therefore ,after all the new interfaces that replace this interface are available, \n\n this interface will be discarded. \n\n Now,it is recommended that customers use cvxPartCfgTblAttrSet() to add, modify, and delete attribute \n\n related items to the configuration table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get configuration infos of a specified id configuration table?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCfgTblInfos\nidCfg [in] configuration id\npartCfg [out] configuration infos\n\nGet specified id configuration table infos. \n\n Get Id by cvxPartInqCfgList();\nThe memory referenced by \"partcfg\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxPartFreeCfgTbl(partcfg))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve configuration infos by id?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCfgTblInfos\nidCfg [in] configuration id\npartCfg [out] configuration infos\n\nGet specified id configuration table infos. \n\n Get Id by cvxPartInqCfgList();\nThe memory referenced by \"partcfg\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxPartFreeCfgTbl(partcfg))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free the memory allocated by the function cvxPartInqCfgTblInfos?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCfgTblInfos\nidCfg [in] configuration id\npartCfg [out] configuration infos\n\nGet specified id configuration table infos. \n\n Get Id by cvxPartInqCfgList();\nThe memory referenced by \"partcfg\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxPartFreeCfgTbl(partcfg))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get configuration table infos by file name and root name?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCfgTblInfosByName\nfileName [in] file name, NULL for active file name\nrootName [in] root name, NULL for active root name\nidCfg [in] configuration id\npartCfg [out] configuration infos\n\nGet specified id configuration table infos. \n\n Get idCfg by cvxPartInqCfgList()/cvxPartInqCfgListByName();\nThe memory referenced by \"partCfg\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxPartFreeCfgTbl(&partCfg))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve configuration id?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCfgTblInfosByName\nfileName [in] file name, NULL for active file name\nrootName [in] root name, NULL for active root name\nidCfg [in] configuration id\npartCfg [out] configuration infos\n\nGet specified id configuration table infos. \n\n Get idCfg by cvxPartInqCfgList()/cvxPartInqCfgListByName();\nThe memory referenced by \"partCfg\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxPartFreeCfgTbl(&partCfg))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to free the memory allocated by the function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCfgTblInfosByName\nfileName [in] file name, NULL for active file name\nrootName [in] root name, NULL for active root name\nidCfg [in] configuration id\npartCfg [out] configuration infos\n\nGet specified id configuration table infos. \n\n Get idCfg by cvxPartInqCfgList()/cvxPartInqCfgListByName();\nThe memory referenced by \"partCfg\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxPartFreeCfgTbl(&partCfg))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free memory associated with the input config table infos list?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFreeCfgTbl\ncfginfo [inout] list of config table info\n\nFrees memory associated with the input config table infos list. \n\n The input memory pointer (*cfginfo) is set to NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the input memory pointer to NULL?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFreeCfgTbl\ncfginfo [inout] list of config table info\n\nFrees memory associated with the input config table infos list. \n\n The input memory pointer (*cfginfo) is set to NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to release memory associated with the config table info?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFreeCfgTbl\ncfginfo [inout] list of config table info\n\nFrees memory associated with the input config table infos list. \n\n The input memory pointer (*cfginfo) is set to NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add items in the configuration table through attribute value and type?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblAttrSet\nmarkDel [in] 1 is delete attribute, -1 if add attribute(default attribute), else 0 is modify \n\n (If it exists, it will be modified;if it does not exist ,it will be added and modified.).\nidCfg [in] configuration id\ncnt [in] count of types(attrs)\ntypes [in] attribute type\nattrs [in] attribute data\n\nUser can add, modify, and delete items in the configuration table through the attribute value and attribute type.\nThe enumerations that can be used for types are: \n\nVX_AT_USER ,VX_AT_NUMBER ,VX_AT_DESIGNER ,VX_AT_COST ,VX_AT_SUPPLIER ,VX_AT_DESCRIPT, \n\nVX_AT_KEYWORD ,VX_AT_MANAGER ,VX_AT_MATERIAL ,VX_AT_NO_SECTION ,VX_AT_NO_HATCH ,VX_AT_NO_BOM, \n\nVX_AT_AREA ,VX_AT_VOLUME ,VX_AT_MASS ,VX_AT_LENGTH ,VX_AT_WIDTH ,VX_AT_HEIGHT.\nThe value of attrs can be obtained through interface cvxPartAtItemGet(),cvxPartAtItemGetInFile()..."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify items in the configuration table using attribute value and type?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblAttrSet\nmarkDel [in] 1 is delete attribute, -1 if add attribute(default attribute), else 0 is modify \n\n (If it exists, it will be modified;if it does not exist ,it will be added and modified.).\nidCfg [in] configuration id\ncnt [in] count of types(attrs)\ntypes [in] attribute type\nattrs [in] attribute data\n\nUser can add, modify, and delete items in the configuration table through the attribute value and attribute type.\nThe enumerations that can be used for types are: \n\nVX_AT_USER ,VX_AT_NUMBER ,VX_AT_DESIGNER ,VX_AT_COST ,VX_AT_SUPPLIER ,VX_AT_DESCRIPT, \n\nVX_AT_KEYWORD ,VX_AT_MANAGER ,VX_AT_MATERIAL ,VX_AT_NO_SECTION ,VX_AT_NO_HATCH ,VX_AT_NO_BOM, \n\nVX_AT_AREA ,VX_AT_VOLUME ,VX_AT_MASS ,VX_AT_LENGTH ,VX_AT_WIDTH ,VX_AT_HEIGHT.\nThe value of attrs can be obtained through interface cvxPartAtItemGet(),cvxPartAtItemGetInFile()..."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete items in the configuration table using attribute value and type?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblAttrSet\nmarkDel [in] 1 is delete attribute, -1 if add attribute(default attribute), else 0 is modify \n\n (If it exists, it will be modified;if it does not exist ,it will be added and modified.).\nidCfg [in] configuration id\ncnt [in] count of types(attrs)\ntypes [in] attribute type\nattrs [in] attribute data\n\nUser can add, modify, and delete items in the configuration table through the attribute value and attribute type.\nThe enumerations that can be used for types are: \n\nVX_AT_USER ,VX_AT_NUMBER ,VX_AT_DESIGNER ,VX_AT_COST ,VX_AT_SUPPLIER ,VX_AT_DESCRIPT, \n\nVX_AT_KEYWORD ,VX_AT_MANAGER ,VX_AT_MATERIAL ,VX_AT_NO_SECTION ,VX_AT_NO_HATCH ,VX_AT_NO_BOM, \n\nVX_AT_AREA ,VX_AT_VOLUME ,VX_AT_MASS ,VX_AT_LENGTH ,VX_AT_WIDTH ,VX_AT_HEIGHT.\nThe value of attrs can be obtained through interface cvxPartAtItemGet(),cvxPartAtItemGetInFile()..."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the available attribute types for configuration table modification?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblAttrSet\nmarkDel [in] 1 is delete attribute, -1 if add attribute(default attribute), else 0 is modify \n\n (If it exists, it will be modified;if it does not exist ,it will be added and modified.).\nidCfg [in] configuration id\ncnt [in] count of types(attrs)\ntypes [in] attribute type\nattrs [in] attribute data\n\nUser can add, modify, and delete items in the configuration table through the attribute value and attribute type.\nThe enumerations that can be used for types are: \n\nVX_AT_USER ,VX_AT_NUMBER ,VX_AT_DESIGNER ,VX_AT_COST ,VX_AT_SUPPLIER ,VX_AT_DESCRIPT, \n\nVX_AT_KEYWORD ,VX_AT_MANAGER ,VX_AT_MATERIAL ,VX_AT_NO_SECTION ,VX_AT_NO_HATCH ,VX_AT_NO_BOM, \n\nVX_AT_AREA ,VX_AT_VOLUME ,VX_AT_MASS ,VX_AT_LENGTH ,VX_AT_WIDTH ,VX_AT_HEIGHT.\nThe value of attrs can be obtained through interface cvxPartAtItemGet(),cvxPartAtItemGetInFile()..."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the value of attributes for configuration table modification?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblAttrSet\nmarkDel [in] 1 is delete attribute, -1 if add attribute(default attribute), else 0 is modify \n\n (If it exists, it will be modified;if it does not exist ,it will be added and modified.).\nidCfg [in] configuration id\ncnt [in] count of types(attrs)\ntypes [in] attribute type\nattrs [in] attribute data\n\nUser can add, modify, and delete items in the configuration table through the attribute value and attribute type.\nThe enumerations that can be used for types are: \n\nVX_AT_USER ,VX_AT_NUMBER ,VX_AT_DESIGNER ,VX_AT_COST ,VX_AT_SUPPLIER ,VX_AT_DESCRIPT, \n\nVX_AT_KEYWORD ,VX_AT_MANAGER ,VX_AT_MATERIAL ,VX_AT_NO_SECTION ,VX_AT_NO_HATCH ,VX_AT_NO_BOM, \n\nVX_AT_AREA ,VX_AT_VOLUME ,VX_AT_MASS ,VX_AT_LENGTH ,VX_AT_WIDTH ,VX_AT_HEIGHT.\nThe value of attrs can be obtained through interface cvxPartAtItemGet(),cvxPartAtItemGetInFile()..."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a color item in the configuration table?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblColorSet\nmarkDelClr [in] 1 is delete color, -1 if add color(default color), else 0 is modify (If it exists, it will be modified;if it does not exist ,it will be added and modified.).\nidCfg [in] configuration id\ncolor [in] part color.\n\nUser can add, modify, and delete color item in the configuration table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify a color item in the configuration table?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblColorSet\nmarkDelClr [in] 1 is delete color, -1 if add color(default color), else 0 is modify (If it exists, it will be modified;if it does not exist ,it will be added and modified.).\nidCfg [in] configuration id\ncolor [in] part color.\n\nUser can add, modify, and delete color item in the configuration table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a color item in the configuration table?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblColorSet\nmarkDelClr [in] 1 is delete color, -1 if add color(default color), else 0 is modify (If it exists, it will be modified;if it does not exist ,it will be added and modified.).\nidCfg [in] configuration id\ncolor [in] part color.\n\nUser can add, modify, and delete color item in the configuration table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set part color in the configuration table?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblColorSet\nmarkDelClr [in] 1 is delete color, -1 if add color(default color), else 0 is modify (If it exists, it will be modified;if it does not exist ,it will be added and modified.).\nidCfg [in] configuration id\ncolor [in] part color.\n\nUser can add, modify, and delete color item in the configuration table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add an instance name item in the configuration table?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblInstNameSet\nmarkDelInstName [in] 1 is delete instance name, -1 if add instance name(default instance name), else 0 is modify (If it exists, it will be modified;if it does not exist ,it will be added and modified.).\nidCfg [in] configuration id\ninstanceName [in] instance name.NULL to use default value.\n\nUser can add, modify, and delete instance name item in the configuration table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify an instance name item in the configuration table?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblInstNameSet\nmarkDelInstName [in] 1 is delete instance name, -1 if add instance name(default instance name), else 0 is modify (If it exists, it will be modified;if it does not exist ,it will be added and modified.).\nidCfg [in] configuration id\ninstanceName [in] instance name.NULL to use default value.\n\nUser can add, modify, and delete instance name item in the configuration table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete an instance name item in the configuration table?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblInstNameSet\nmarkDelInstName [in] 1 is delete instance name, -1 if add instance name(default instance name), else 0 is modify (If it exists, it will be modified;if it does not exist ,it will be added and modified.).\nidCfg [in] configuration id\ninstanceName [in] instance name.NULL to use default value.\n\nUser can add, modify, and delete instance name item in the configuration table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to use the default instance name in the configuration table?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblInstNameSet\nmarkDelInstName [in] 1 is delete instance name, -1 if add instance name(default instance name), else 0 is modify (If it exists, it will be modified;if it does not exist ,it will be added and modified.).\nidCfg [in] configuration id\ninstanceName [in] instance name.NULL to use default value.\n\nUser can add, modify, and delete instance name item in the configuration table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of the markDelInstName parameter in the configuration table?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblInstNameSet\nmarkDelInstName [in] 1 is delete instance name, -1 if add instance name(default instance name), else 0 is modify (If it exists, it will be modified;if it does not exist ,it will be added and modified.).\nidCfg [in] configuration id\ninstanceName [in] instance name.NULL to use default value.\n\nUser can add, modify, and delete instance name item in the configuration table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the significance of the idCfg parameter in the configuration table?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblInstNameSet\nmarkDelInstName [in] 1 is delete instance name, -1 if add instance name(default instance name), else 0 is modify (If it exists, it will be modified;if it does not exist ,it will be added and modified.).\nidCfg [in] configuration id\ninstanceName [in] instance name.NULL to use default value.\n\nUser can add, modify, and delete instance name item in the configuration table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a variable item in the configuration table?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblVarsSet\nmarkDelVars [in] 1 is delete variable, -1 if add variable(default variable), else 0 is modify \n\n (If it exists, it will be modified;if it does not exist ,it will be added and modified.).\nidCfg [in] configuration id\ncnt [in] count of vars\nvars [in] list of variable\n\nUser can add, modify, and delete variable item in the configuration table.\nnote:\nIf the user wants to modify the value of the variable, it is recommended to modify svxVariable.Expression."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify a variable item in the configuration table?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblVarsSet\nmarkDelVars [in] 1 is delete variable, -1 if add variable(default variable), else 0 is modify \n\n (If it exists, it will be modified;if it does not exist ,it will be added and modified.).\nidCfg [in] configuration id\ncnt [in] count of vars\nvars [in] list of variable\n\nUser can add, modify, and delete variable item in the configuration table.\nnote:\nIf the user wants to modify the value of the variable, it is recommended to modify svxVariable.Expression."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a variable item from the configuration table?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblVarsSet\nmarkDelVars [in] 1 is delete variable, -1 if add variable(default variable), else 0 is modify \n\n (If it exists, it will be modified;if it does not exist ,it will be added and modified.).\nidCfg [in] configuration id\ncnt [in] count of vars\nvars [in] list of variable\n\nUser can add, modify, and delete variable item in the configuration table.\nnote:\nIf the user wants to modify the value of the variable, it is recommended to modify svxVariable.Expression."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to modify the value of a variable in the configuration table?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblVarsSet\nmarkDelVars [in] 1 is delete variable, -1 if add variable(default variable), else 0 is modify \n\n (If it exists, it will be modified;if it does not exist ,it will be added and modified.).\nidCfg [in] configuration id\ncnt [in] count of vars\nvars [in] list of variable\n\nUser can add, modify, and delete variable item in the configuration table.\nnote:\nIf the user wants to modify the value of the variable, it is recommended to modify svxVariable.Expression."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the recommended way to modify the value of a variable in the configuration table?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblVarsSet\nmarkDelVars [in] 1 is delete variable, -1 if add variable(default variable), else 0 is modify \n\n (If it exists, it will be modified;if it does not exist ,it will be added and modified.).\nidCfg [in] configuration id\ncnt [in] count of vars\nvars [in] list of variable\n\nUser can add, modify, and delete variable item in the configuration table.\nnote:\nIf the user wants to modify the value of the variable, it is recommended to modify svxVariable.Expression."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of axes in the current part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAxis\nCount [out] number of axis\nAxis [out] list of index of axises\n\nOutputs a list of axis that belong to the current part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of axes that belong to the current part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAxis\nCount [out] number of axis\nAxis [out] list of index of axises\n\nOutputs a list of axis that belong to the current part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about the axes in the current part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAxis\nCount [out] number of axis\nAxis [out] list of index of axises\n\nOutputs a list of axis that belong to the current part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the start point of an axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisInqDir\nidAxis [in] index of axis\npPnt [out] start point of axis\npDir [out] direction of axis\n\nGet the direction associated with the specified object (idAxis)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the direction of an axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisInqDir\nidAxis [in] index of axis\npPnt [out] start point of axis\npDir [out] direction of axis\n\nGet the direction associated with the specified object (idAxis)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the direction associated with a specific axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisInqDir\nidAxis [in] index of axis\npPnt [out] start point of axis\npDir [out] direction of axis\n\nGet the direction associated with the specified object (idAxis)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve Axis data by id?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisGetData\nidAxis [in] Axis id\nAxis [out] Axis data\n\nGet the Axis data associated with the specified idAxis.\nnote:\nThis interface can only retrieve datum data created by interface cvxPartAxisNew()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get Axis data using id?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisGetData\nidAxis [in] Axis id\nAxis [out] Axis data\n\nGet the Axis data associated with the specified idAxis.\nnote:\nThis interface can only retrieve datum data created by interface cvxPartAxisNew()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to access Axis data created by cvxPartAxisNew()?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisGetData\nidAxis [in] Axis id\nAxis [out] Axis data\n\nGet the Axis data associated with the specified idAxis.\nnote:\nThis interface can only retrieve datum data created by interface cvxPartAxisNew()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the length of a specified datum axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisLengthGet\nidAxis [in] id of datum axis\nLength [out] length of datum axis\n\nGet length of the specified datum axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the length of a datum axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisLengthGet\nidAxis [in] id of datum axis\nLength [out] length of datum axis\n\nGet length of the specified datum axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the length of a datum axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisLengthGet\nidAxis [in] id of datum axis\nLength [out] length of datum axis\n\nGet length of the specified datum axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the length of a specified datum axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisLengthSet\nidAxis [in] id of datum axis\nLength [in] length of datum axis\n\nSet length of the specified datum axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the length of a datum axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisLengthSet\nidAxis [in] id of datum axis\nLength [in] length of datum axis\n\nSet length of the specified datum axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I update the length of a datum axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisLengthSet\nidAxis [in] id of datum axis\nLength [in] length of datum axis\n\nSet length of the specified datum axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve plane data by id?"
            },
            {
                "role": "assistant",
                "content": "cvxPlaneGetData\nidPlane [in] Plane id\nPlane [out] Plane data\n\nGet the Plane data associated with the specified idPlane, contained frame and Entity path.\nnote:\nThis interface can only retrieve datum data created by interface cvxPartPlaneNew()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the contained frame of a specified plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPlaneGetData\nidPlane [in] Plane id\nPlane [out] Plane data\n\nGet the Plane data associated with the specified idPlane, contained frame and Entity path.\nnote:\nThis interface can only retrieve datum data created by interface cvxPartPlaneNew()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve entity path of a plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPlaneGetData\nidPlane [in] Plane id\nPlane [out] Plane data\n\nGet the Plane data associated with the specified idPlane, contained frame and Entity path.\nnote:\nThis interface can only retrieve datum data created by interface cvxPartPlaneNew()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of CSYS in the current part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCsys\nCount [out] number of CSYS\nCsys [out] list of index of CSYS\n\nOutputs a list of CSYS that belong to the current part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of CSYS belonging to the current part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCsys\nCount [out] number of CSYS\nCsys [out] list of index of CSYS\n\nOutputs a list of CSYS that belong to the current part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve CSYS that belong to the current part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCsys\nCount [out] number of CSYS\nCsys [out] list of index of CSYS\n\nOutputs a list of CSYS that belong to the current part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the default CSYS/Datum ID with Uid three 10?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqDefaultCSYS\nCSYS [out] Default CSYS/Datum id\n\nGet the Default CSYS/Datum ID which Uid is three 10."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the default CSYS/Datum ID?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqDefaultCSYS\nCSYS [out] Default CSYS/Datum id\n\nGet the Default CSYS/Datum ID which Uid is three 10."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the ID of the default CSYS/Datum with Uid three 10?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqDefaultCSYS\nCSYS [out] Default CSYS/Datum id\n\nGet the Default CSYS/Datum ID which Uid is three 10."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of a specified datum axis?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCSYSAxis\nidCSYS [in] id of datum CSYS\nAxisType [in] axis type to query\nidAxis [out] id of datum axis\n\nGet the id of the specified datum axis of the specified datum CSYS."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to query the axis type of a datum CSYS?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCSYSAxis\nidCSYS [in] id of datum CSYS\nAxisType [in] axis type to query\nidAxis [out] id of datum axis\n\nGet the id of the specified datum axis of the specified datum CSYS."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the id of a datum axis for a given datum CSYS?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCSYSAxis\nidCSYS [in] id of datum CSYS\nAxisType [in] axis type to query\nidAxis [out] id of datum axis\n\nGet the id of the specified datum axis of the specified datum CSYS."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of a specified datum plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCSYSPlane\nidCSYS [in] id of datum CSYS\nPlnType [in] plane type to query\nidPlane [out] id of datum plane\n\nGet the id of the specified datum plane of the specified datum CSYS."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to query the plane type of a specified datum CSYS?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCSYSPlane\nidCSYS [in] id of datum CSYS\nPlnType [in] plane type to query\nidPlane [out] id of datum plane\n\nGet the id of the specified datum plane of the specified datum CSYS."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the id of a datum plane by specifying the datum CSYS?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCSYSPlane\nidCSYS [in] id of datum CSYS\nPlnType [in] plane type to query\nidPlane [out] id of datum plane\n\nGet the id of the specified datum plane of the specified datum CSYS."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve CSYS data by its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxCSYSGetData\nidCSYS [in] CSYS id\nCSYS [out] CSYS data\n\nGet the CSYS data associated with the specified idCSYS, contained frame and Entity path.\nnote:\nThis interface can only retrieve datum data created by interface cvxPartCSYSNew()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the contained frame of a specified CSYS?"
            },
            {
                "role": "assistant",
                "content": "cvxCSYSGetData\nidCSYS [in] CSYS id\nCSYS [out] CSYS data\n\nGet the CSYS data associated with the specified idCSYS, contained frame and Entity path.\nnote:\nThis interface can only retrieve datum data created by interface cvxPartCSYSNew()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I retrieve CSYS data created by cvxPartCSYSNew interface?"
            },
            {
                "role": "assistant",
                "content": "cvxCSYSGetData\nidCSYS [in] CSYS id\nCSYS [out] CSYS data\n\nGet the CSYS data associated with the specified idCSYS, contained frame and Entity path.\nnote:\nThis interface can only retrieve datum data created by interface cvxPartCSYSNew()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the local CSYS matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqLCSMat\nmat [out] the local CSYS matrix.\n\nGets the local CSYS matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the local CSYS matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqLCSMat\nmat [out] the local CSYS matrix.\n\nGets the local CSYS matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the local CSYS matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqLCSMat\nmat [out] the local CSYS matrix.\n\nGets the local CSYS matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of dimensions for a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqDims\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nCount [out] number of variables\nVariables [out] list of variables\n\nOutputs a list of dimensions that belong to the specified part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list of variables?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqDims\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nCount [out] number of variables\nVariables [out] list of variables\n\nOutputs a list of dimensions that belong to the specified part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the count of variables for a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqDims\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nCount [out] number of variables\nVariables [out] list of variables\n\nOutputs a list of dimensions that belong to the specified part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the pick path list of entities associated with a PMI dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPMIDimEnts\nidDim [in] id of PMI dimension\nCount [out] number of entities associated with the dimension\nEntPaths [out] pick path of entities associated with the dimension\n\nOutputs the pick path list of entities associated with the specified PMI dimension.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any function to retrieve the number of entities associated with a PMI dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPMIDimEnts\nidDim [in] id of PMI dimension\nCount [out] number of entities associated with the dimension\nEntPaths [out] pick path of entities associated with the dimension\n\nOutputs the pick path list of entities associated with the specified PMI dimension.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list of entities associated with a PMI dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPMIDimEnts\nidDim [in] id of PMI dimension\nCount [out] number of entities associated with the dimension\nEntPaths [out] pick path of entities associated with the dimension\n\nOutputs the pick path list of entities associated with the specified PMI dimension.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of dimensions' id for a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqDimIdxs\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nCount [out] number of dimensions\nIdList [out] list of the dimension's index\n\nOutputs a list of dimensions' id that belong to the specified part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the number of dimensions for a specific part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqDimIdxs\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nCount [out] number of dimensions\nIdList [out] list of the dimension's index\n\nOutputs a list of dimensions' id that belong to the specified part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the dimension indices for a particular part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqDimIdxs\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nCount [out] number of dimensions\nIdList [out] list of the dimension's index\n\nOutputs a list of dimensions' id that belong to the specified part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get PMI list of active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPMIs\ntype [in] PMI type to inquire\ncount [out] number of PMI\nidPMIs [out] list of index of PMI\n\nOutputs a list of PMI objects that belong to the currently active part.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of PMI list?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPMIs\ntype [in] PMI type to inquire\ncount [out] number of PMI\nidPMIs [out] list of index of PMI\n\nOutputs a list of PMI objects that belong to the currently active part.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get PMI by type?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPMIs\ntype [in] PMI type to inquire\ncount [out] number of PMI\nidPMIs [out] list of index of PMI\n\nOutputs a list of PMI objects that belong to the currently active part.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the type of a specific PMI entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPMIInqType\nidPMI [in] index of PMI or base object of PMI\ntype [out] type of PMI\n\nGet the type(evxPMIEntType) of specified PMI entity. \n\n It can't get the corresponding type if \"*type = VX_PMI_ALL\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the type of a PMI entity by its index?"
            },
            {
                "role": "assistant",
                "content": "cvxPMIInqType\nidPMI [in] index of PMI or base object of PMI\ntype [out] type of PMI\n\nGet the type(evxPMIEntType) of specified PMI entity. \n\n It can't get the corresponding type if \"*type = VX_PMI_ALL\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I determine the type of a PMI entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPMIInqType\nidPMI [in] index of PMI or base object of PMI\ntype [out] type of PMI\n\nGet the type(evxPMIEntType) of specified PMI entity. \n\n It can't get the corresponding type if \"*type = VX_PMI_ALL\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of the base object of a specified PMI entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPMIInqBaseEnt\nidPMI [in] index of PMI\nidBaseObj [out] index of base object of PMI\n\nGet index of base object of specified PMI entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the base object index of a PMI entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPMIInqBaseEnt\nidPMI [in] index of PMI\nidBaseObj [out] index of base object of PMI\n\nGet index of base object of specified PMI entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the index of the base object for a specific PMI entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPMIInqBaseEnt\nidPMI [in] index of PMI\nidBaseObj [out] index of base object of PMI\n\nGet index of base object of specified PMI entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the associated entities of a specific PMI entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPMIInqAssoEnts\nidPMI [in] index of PMI or base object of PMI\ncount [out] number of entities associated with the PMI\nentPaths [out] pick path of entities associated with the PMI\n\nOutputs the pick path list of entities associated with the specified \n\n PMI entity. the function has the same function as cvxPartInqPMIDimEnts(), \n\n but the function can get the associated entities of all types of PMI.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the pick path list of entities associated with a PMI entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPMIInqAssoEnts\nidPMI [in] index of PMI or base object of PMI\ncount [out] number of entities associated with the PMI\nentPaths [out] pick path of entities associated with the PMI\n\nOutputs the pick path list of entities associated with the specified \n\n PMI entity. the function has the same function as cvxPartInqPMIDimEnts(), \n\n but the function can get the associated entities of all types of PMI.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the number of entities associated with a PMI?"
            },
            {
                "role": "assistant",
                "content": "cvxPMIInqAssoEnts\nidPMI [in] index of PMI or base object of PMI\ncount [out] number of entities associated with the PMI\nentPaths [out] pick path of entities associated with the PMI\n\nOutputs the pick path list of entities associated with the specified \n\n PMI entity. the function has the same function as cvxPartInqPMIDimEnts(), \n\n but the function can get the associated entities of all types of PMI.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a PMI is valid?"
            },
            {
                "role": "assistant",
                "content": "cvxPMIInqValid\nidPMI [in] index of PMI\nisValid [out] whether PMI is valid (1: valid; 0: invalid)\n\nCheck whether the PMI is valid."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a specific PMI is valid?"
            },
            {
                "role": "assistant",
                "content": "cvxPMIInqValid\nidPMI [in] index of PMI\nisValid [out] whether PMI is valid (1: valid; 0: invalid)\n\nCheck whether the PMI is valid."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to check the validity of a PMI?"
            },
            {
                "role": "assistant",
                "content": "cvxPMIInqValid\nidPMI [in] index of PMI\nisValid [out] whether PMI is valid (1: valid; 0: invalid)\n\nCheck whether the PMI is valid."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the reference point coordinate of a specified symbol object?"
            },
            {
                "role": "assistant",
                "content": "cvxSymInqRefPnt\nidSym undocumented\nRefPnt undocumented\n\nGet the reference point coordinate of specified symbol object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the reference point of a symbol object?"
            },
            {
                "role": "assistant",
                "content": "cvxSymInqRefPnt\nidSym undocumented\nRefPnt undocumented\n\nGet the reference point coordinate of specified symbol object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the coordinate of the reference point for a specific symbol object?"
            },
            {
                "role": "assistant",
                "content": "cvxSymInqRefPnt\nidSym undocumented\nRefPnt undocumented\n\nGet the reference point coordinate of specified symbol object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of leader curves for a specified symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxSymInqLeadLines\nidSym [in] index of symbol or PMI of symbol type\ncount [out] number of leader curves\nLeadCrvs [out] list of leader curves\n\nOutputs a list of leader curves of specified symbol.\nnote:\nall points in svxCurve are the points in Frame that the local \n\n coordinate system of the curve, the function cvxPntTransform() can be \n\n used to convert points into points in the global coordinate system. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the number of leader curves for a symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxSymInqLeadLines\nidSym [in] index of symbol or PMI of symbol type\ncount [out] number of leader curves\nLeadCrvs [out] list of leader curves\n\nOutputs a list of leader curves of specified symbol.\nnote:\nall points in svxCurve are the points in Frame that the local \n\n coordinate system of the curve, the function cvxPntTransform() can be \n\n used to convert points into points in the global coordinate system. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get the leader curves for a symbol by its index?"
            },
            {
                "role": "assistant",
                "content": "cvxSymInqLeadLines\nidSym [in] index of symbol or PMI of symbol type\ncount [out] number of leader curves\nLeadCrvs [out] list of leader curves\n\nOutputs a list of leader curves of specified symbol.\nnote:\nall points in svxCurve are the points in Frame that the local \n\n coordinate system of the curve, the function cvxPntTransform() can be \n\n used to convert points into points in the global coordinate system. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 3D point block to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPntBlock\nName [in] point block name\nCount [in] number of points\nPoints [in] list of points\nidEnt [out] id of new point block (input NULL to ignore this output)\n\nAdds a 3D point block to the active part. If \"idEnt\" is not NULL, the id of the new block is output.\nThe active point attribute color is assigned to the new point block.\nThis function will only add point blocks to parts for which explicit (i.e. history free) \n\n point cloud management is enabled (the default mode for parts created with version 18 or later)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign the active point attribute color to the new point block?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPntBlock\nName [in] point block name\nCount [in] number of points\nPoints [in] list of points\nidEnt [out] id of new point block (input NULL to ignore this output)\n\nAdds a 3D point block to the active part. If \"idEnt\" is not NULL, the id of the new block is output.\nThe active point attribute color is assigned to the new point block.\nThis function will only add point blocks to parts for which explicit (i.e. history free) \n\n point cloud management is enabled (the default mode for parts created with version 18 or later)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the id of the new point block after adding it to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPntBlock\nName [in] point block name\nCount [in] number of points\nPoints [in] list of points\nidEnt [out] id of new point block (input NULL to ignore this output)\n\nAdds a 3D point block to the active part. If \"idEnt\" is not NULL, the id of the new block is output.\nThe active point attribute color is assigned to the new point block.\nThis function will only add point blocks to parts for which explicit (i.e. history free) \n\n point cloud management is enabled (the default mode for parts created with version 18 or later)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a 3D Block with triangular facets?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacets\nName [in] block name\nFacets [inout] set of 3D triangular facets\nidBlock [out] id of new 3D Block of triangular facets\n\nCreates an explicit (i.e. non-historical) 3D Block containing the input \n\n 3D facet data and adds it to the active part.\nIf \"idBlock\" is not NULL, the id of the 3D Block created \n\n by this function is output via \"idBlock\".\nIf this function successfully creates the Block, the Block takes \n\n ownership of the memory referenced by the vertex data fields in the \n\n \"Facets\" structure (Vertex, Normal, etc.). This function assigns NULL \n\n to fields that refer to memory that has been transferred to the Block. \n\n After this function returns, use the cvxFacetsFree() function to release \n\n any remaining memory still referenced by the \"Facets\" structure.\nsee:\ncvxPartFacetsMod() for a function that can modify the facet data of an existing 3D Block."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add 3D facet data to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacets\nName [in] block name\nFacets [inout] set of 3D triangular facets\nidBlock [out] id of new 3D Block of triangular facets\n\nCreates an explicit (i.e. non-historical) 3D Block containing the input \n\n 3D facet data and adds it to the active part.\nIf \"idBlock\" is not NULL, the id of the 3D Block created \n\n by this function is output via \"idBlock\".\nIf this function successfully creates the Block, the Block takes \n\n ownership of the memory referenced by the vertex data fields in the \n\n \"Facets\" structure (Vertex, Normal, etc.). This function assigns NULL \n\n to fields that refer to memory that has been transferred to the Block. \n\n After this function returns, use the cvxFacetsFree() function to release \n\n any remaining memory still referenced by the \"Facets\" structure.\nsee:\ncvxPartFacetsMod() for a function that can modify the facet data of an existing 3D Block."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new 3D Block created with triangular facets?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacets\nName [in] block name\nFacets [inout] set of 3D triangular facets\nidBlock [out] id of new 3D Block of triangular facets\n\nCreates an explicit (i.e. non-historical) 3D Block containing the input \n\n 3D facet data and adds it to the active part.\nIf \"idBlock\" is not NULL, the id of the 3D Block created \n\n by this function is output via \"idBlock\".\nIf this function successfully creates the Block, the Block takes \n\n ownership of the memory referenced by the vertex data fields in the \n\n \"Facets\" structure (Vertex, Normal, etc.). This function assigns NULL \n\n to fields that refer to memory that has been transferred to the Block. \n\n After this function returns, use the cvxFacetsFree() function to release \n\n any remaining memory still referenced by the \"Facets\" structure.\nsee:\ncvxPartFacetsMod() for a function that can modify the facet data of an existing 3D Block."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a 3D Block and add it to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacetsBySTL\nname [in] block name\nstl [in] STL facets\nidBlock [out] id of new 3D Block\n\nCreates an 3D Block and adds it to the active part.\nIf \"idBlock\" is not NULL, the id of the 3D Block created \n\n by this function is output via \"idBlock\".\nDue to the lack of some data in svxSTL, I treat each triangle \n\n as a strip and store it in the facet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the id of the 3D Block created?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacetsBySTL\nname [in] block name\nstl [in] STL facets\nidBlock [out] id of new 3D Block\n\nCreates an 3D Block and adds it to the active part.\nIf \"idBlock\" is not NULL, the id of the 3D Block created \n\n by this function is output via \"idBlock\".\nDue to the lack of some data in svxSTL, I treat each triangle \n\n as a strip and store it in the facet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to treat each triangle as a strip and store it in the facet?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacetsBySTL\nname [in] block name\nstl [in] STL facets\nidBlock [out] id of new 3D Block\n\nCreates an 3D Block and adds it to the active part.\nIf \"idBlock\" is not NULL, the id of the 3D Block created \n\n by this function is output via \"idBlock\".\nDue to the lack of some data in svxSTL, I treat each triangle \n\n as a strip and store it in the facet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of 3D blocks in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqBlocks\nCount [out] number of 3D blocks in the active part\nBlocks [out] list of id's of 3D blocks in the active part\n\nOutputs a list of database id's of 3D blocks of the specified type within the \n\n active part. If there are no blocks, \"*Count\" is output as zero and \"*Blocks\" \n\n as NULL.\nThis function allocates memory for the array output via \"Blocks\". The calling \n\n procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of id's of 3D blocks in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqBlocks\nCount [out] number of 3D blocks in the active part\nBlocks [out] list of id's of 3D blocks in the active part\n\nOutputs a list of database id's of 3D blocks of the specified type within the \n\n active part. If there are no blocks, \"*Count\" is output as zero and \"*Blocks\" \n\n as NULL.\nThis function allocates memory for the array output via \"Blocks\". The calling \n\n procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the database id's of 3D blocks in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqBlocks\nCount [out] number of 3D blocks in the active part\nBlocks [out] list of id's of 3D blocks in the active part\n\nOutputs a list of database id's of 3D blocks of the specified type within the \n\n active part. If there are no blocks, \"*Count\" is output as zero and \"*Blocks\" \n\n as NULL.\nThis function allocates memory for the array output via \"Blocks\". The calling \n\n procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of points in a 3D Point Block?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqBlockPnts\nidBlock [in] id of point block in active part\nCount [out] number of points\nPoints [out] list of points\n\nOutputs a list of points in the specified 3D Point Block. \n\n Memory for the point list is allocated by this function and output \n\n via \"Points\". It must be deallocated by the calling procedure \n\n with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve a list of points in a specific 3D Point Block?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqBlockPnts\nidBlock [in] id of point block in active part\nCount [out] number of points\nPoints [out] list of points\n\nOutputs a list of points in the specified 3D Point Block. \n\n Memory for the point list is allocated by this function and output \n\n via \"Points\". It must be deallocated by the calling procedure \n\n with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to obtain the id of a point block in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqBlockPnts\nidBlock [in] id of point block in active part\nCount [out] number of points\nPoints [out] list of points\n\nOutputs a list of points in the specified 3D Point Block. \n\n Memory for the point list is allocated by this function and output \n\n via \"Points\". It must be deallocated by the calling procedure \n\n with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the block type of a 3D block entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqBlockType\nidBlock [in] 3D block id\nType [out] block type\n\nOutputs the id of the parent feature of the specified entity in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the parent feature of a specified entity in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqBlockType\nidBlock [in] 3D block id\nType [out] block type\n\nOutputs the id of the parent feature of the specified entity in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the block type of a specific block entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqBlockType\nidBlock [in] 3D block id\nType [out] block type\n\nOutputs the id of the parent feature of the specified entity in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of triangular facets of a specified STL?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFacets\nidBlock [in] STL id\nStl [out] STL facets\n\nOutputs a list of triangular facets of the specified STL.\nMemory for the STL facets is allocated by this function and \n\n assigned to the input data structure (Stl). It MUST be \n\n deallocated by the calling procedure using cvxStlFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the STL facets?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFacets\nidBlock [in] STL id\nStl [out] STL facets\n\nOutputs a list of triangular facets of the specified STL.\nMemory for the STL facets is allocated by this function and \n\n assigned to the input data structure (Stl). It MUST be \n\n deallocated by the calling procedure using cvxStlFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to allocate memory for the STL facets?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFacets\nidBlock [in] STL id\nStl [out] STL facets\n\nOutputs a list of triangular facets of the specified STL.\nMemory for the STL facets is allocated by this function and \n\n assigned to the input data structure (Stl). It MUST be \n\n deallocated by the calling procedure using cvxStlFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve facet data set from a specified 3D block?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFacets2\nidBlock [in] 3D block id\nFacets [out] facet data set\n\nOutputs the facets stored in the specified 3D block.\nThis function allocates memory for lists inside the \n\n input \"Facets\" structure. The calling procedure is \n\n responsible to free the lists using cvxFacetsFree(Facets).\nIt is assumed the specified 3D block (idBlock) resides in the active part.\nsee:\nthe description of cvxPartInqFaceFacets2() for additional information."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the facets of a 3D block?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFacets2\nidBlock [in] 3D block id\nFacets [out] facet data set\n\nOutputs the facets stored in the specified 3D block.\nThis function allocates memory for lists inside the \n\n input \"Facets\" structure. The calling procedure is \n\n responsible to free the lists using cvxFacetsFree(Facets).\nIt is assumed the specified 3D block (idBlock) resides in the active part.\nsee:\nthe description of cvxPartInqFaceFacets2() for additional information."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free the lists inside the Facets structure after retrieving the facet data set?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFacets2\nidBlock [in] 3D block id\nFacets [out] facet data set\n\nOutputs the facets stored in the specified 3D block.\nThis function allocates memory for lists inside the \n\n input \"Facets\" structure. The calling procedure is \n\n responsible to free the lists using cvxFacetsFree(Facets).\nIt is assumed the specified 3D block (idBlock) resides in the active part.\nsee:\nthe description of cvxPartInqFaceFacets2() for additional information."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the path to the original image file of a texture map applied to a facet block?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFacetsTxFile\nidBlock [in] 3D block id\nPath [out] path to texture map's original image file\n\nOutputs path to the original image file if a texture map has been \n\n applied to a facet block. Unlike cvxPartInqFacets2(), which outputs \n\n the path to a copy of the original image file that ZW3D has put in its \n\n temp directory, this function outputs the path that was originally \n\n used to create the texture map. The file might no longer exist, \n\n although the image may still exist as an embedded object.\nIt is assumed the specified block (idBlock) resides in the active part.\nsee:\ncvxPartInqFacets2() for a function that outputs all texture map attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the original image file path used to create a texture map?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFacetsTxFile\nidBlock [in] 3D block id\nPath [out] path to texture map's original image file\n\nOutputs path to the original image file if a texture map has been \n\n applied to a facet block. Unlike cvxPartInqFacets2(), which outputs \n\n the path to a copy of the original image file that ZW3D has put in its \n\n temp directory, this function outputs the path that was originally \n\n used to create the texture map. The file might no longer exist, \n\n although the image may still exist as an embedded object.\nIt is assumed the specified block (idBlock) resides in the active part.\nsee:\ncvxPartInqFacets2() for a function that outputs all texture map attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the path to the original image file of a texture map applied to a facet block?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFacetsTxFile\nidBlock [in] 3D block id\nPath [out] path to texture map's original image file\n\nOutputs path to the original image file if a texture map has been \n\n applied to a facet block. Unlike cvxPartInqFacets2(), which outputs \n\n the path to a copy of the original image file that ZW3D has put in its \n\n temp directory, this function outputs the path that was originally \n\n used to create the texture map. The file might no longer exist, \n\n although the image may still exist as an embedded object.\nIt is assumed the specified block (idBlock) resides in the active part.\nsee:\ncvxPartInqFacets2() for a function that outputs all texture map attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the path to the original image file of a texture map applied to a facet block?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFacetsTxFileByLongPath\nidBlock [in] 3D block id\nPath [out] path to texture map's original image file\nsizePath [in] max size of Path\n\nOutputs path to the original image file if a texture map has been applied to a facet block. Unlike cvxPartInqFacets2(), which outputs the path to a copy of the original image file that ZW3D has put in its temp directory, this function outputs the path that was originally used to create the texture map. The file might no longer exist, although the image may still exist as an embedded object.\nIt is assumed the specified block (idBlock) resides in the active part.\nA Path that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes.\nsee:\ncvxPartInqFacets2() for a function that outputs all texture map attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the original image file path used to create a texture map?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFacetsTxFileByLongPath\nidBlock [in] 3D block id\nPath [out] path to texture map's original image file\nsizePath [in] max size of Path\n\nOutputs path to the original image file if a texture map has been applied to a facet block. Unlike cvxPartInqFacets2(), which outputs the path to a copy of the original image file that ZW3D has put in its temp directory, this function outputs the path that was originally used to create the texture map. The file might no longer exist, although the image may still exist as an embedded object.\nIt is assumed the specified block (idBlock) resides in the active part.\nA Path that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes.\nsee:\ncvxPartInqFacets2() for a function that outputs all texture map attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle a Path that is longer than the specified max size?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFacetsTxFileByLongPath\nidBlock [in] 3D block id\nPath [out] path to texture map's original image file\nsizePath [in] max size of Path\n\nOutputs path to the original image file if a texture map has been applied to a facet block. Unlike cvxPartInqFacets2(), which outputs the path to a copy of the original image file that ZW3D has put in its temp directory, this function outputs the path that was originally used to create the texture map. The file might no longer exist, although the image may still exist as an embedded object.\nIt is assumed the specified block (idBlock) resides in the active part.\nA Path that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes.\nsee:\ncvxPartInqFacets2() for a function that outputs all texture map attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify a 3D Block in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacetsMod\nidBlock [in] id of 3D Block of triangular facets\nFacets [inout] set of 3D triangular facets\n\nModify an explicit (i.e. non-historical) 3D Block in the active part, \n\n replacing the Block's prior triangle and vertex data with data from \n\n the given \"Facets\" input.\nIf this function successfully updates the Block, the Block takes \n\n ownership of the memory referenced by the vertex data fields in the \n\n \"Facets\" structure (Vertex, Normal, etc.). This function assigns NULL \n\n to fields that refer to memory that has been transferred to the Block. \n\n After this function returns, use the cvxFacetsFree() function to release \n\n any remaining memory still referenced by the \"Facets\" structure.\nThis function ignores the At, Tx and Sh fields in the \"Facets\" \n\n structure. It does not update the Block's display attributes, texture \n\n map attributes, or shader attributes. The cvxPartFacetsSetAt() and \n\n cvxPartFacetsSetTx() functions can be used to modify a Block's display \n\n attributes and texture map attributes. Shader attributes are not \n\n currently used by 3D Blocks.\nsee:\ncvxPartFacets() for a function that can create a 3D Block from facet data."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to update the triangle and vertex data of a 3D Block?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacetsMod\nidBlock [in] id of 3D Block of triangular facets\nFacets [inout] set of 3D triangular facets\n\nModify an explicit (i.e. non-historical) 3D Block in the active part, \n\n replacing the Block's prior triangle and vertex data with data from \n\n the given \"Facets\" input.\nIf this function successfully updates the Block, the Block takes \n\n ownership of the memory referenced by the vertex data fields in the \n\n \"Facets\" structure (Vertex, Normal, etc.). This function assigns NULL \n\n to fields that refer to memory that has been transferred to the Block. \n\n After this function returns, use the cvxFacetsFree() function to release \n\n any remaining memory still referenced by the \"Facets\" structure.\nThis function ignores the At, Tx and Sh fields in the \"Facets\" \n\n structure. It does not update the Block's display attributes, texture \n\n map attributes, or shader attributes. The cvxPartFacetsSetAt() and \n\n cvxPartFacetsSetTx() functions can be used to modify a Block's display \n\n attributes and texture map attributes. Shader attributes are not \n\n currently used by 3D Blocks.\nsee:\ncvxPartFacets() for a function that can create a 3D Block from facet data."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to release memory still referenced by the Facets structure after modifying a 3D Block?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacetsMod\nidBlock [in] id of 3D Block of triangular facets\nFacets [inout] set of 3D triangular facets\n\nModify an explicit (i.e. non-historical) 3D Block in the active part, \n\n replacing the Block's prior triangle and vertex data with data from \n\n the given \"Facets\" input.\nIf this function successfully updates the Block, the Block takes \n\n ownership of the memory referenced by the vertex data fields in the \n\n \"Facets\" structure (Vertex, Normal, etc.). This function assigns NULL \n\n to fields that refer to memory that has been transferred to the Block. \n\n After this function returns, use the cvxFacetsFree() function to release \n\n any remaining memory still referenced by the \"Facets\" structure.\nThis function ignores the At, Tx and Sh fields in the \"Facets\" \n\n structure. It does not update the Block's display attributes, texture \n\n map attributes, or shader attributes. The cvxPartFacetsSetAt() and \n\n cvxPartFacetsSetTx() functions can be used to modify a Block's display \n\n attributes and texture map attributes. Shader attributes are not \n\n currently used by 3D Blocks.\nsee:\ncvxPartFacets() for a function that can create a 3D Block from facet data."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify display attributes of a specified block?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacetsSetAt\nidBlock [in] id of 3D Block\nAt [in] display attributes\n\nModifies display attributes of the specified block. It is assumed the \n\n specified block resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to change the display attributes of a 3D block?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacetsSetAt\nidBlock [in] id of 3D Block\nAt [in] display attributes\n\nModifies display attributes of the specified block. It is assumed the \n\n specified block resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I set display attributes for a specific block?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacetsSetAt\nidBlock [in] id of 3D Block\nAt [in] display attributes\n\nModifies display attributes of the specified block. It is assumed the \n\n specified block resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify texture map attributes of a specified block?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacetsSetTx\nidBlock [in] id of 3D Block\nTx [in] texture map attributes\n\nModifies texture map attributes of the specified block. It is assumed \n\n the specified block (idBlock) resides in the active part.\nIf the \"file\" field of the svxTextureAt structure is empty (a \n\n zero-length string), the texture map attributes are not saved and any \n\n prior texture map assigned to the block is removed.\nThe \"opt\" field of the svxTextureAt structure is not currently supported."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove prior texture map assigned to a block?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacetsSetTx\nidBlock [in] id of 3D Block\nTx [in] texture map attributes\n\nModifies texture map attributes of the specified block. It is assumed \n\n the specified block (idBlock) resides in the active part.\nIf the \"file\" field of the svxTextureAt structure is empty (a \n\n zero-length string), the texture map attributes are not saved and any \n\n prior texture map assigned to the block is removed.\nThe \"opt\" field of the svxTextureAt structure is not currently supported."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the supported fields of the svxTextureAt structure for modifying texture map attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacetsSetTx\nidBlock [in] id of 3D Block\nTx [in] texture map attributes\n\nModifies texture map attributes of the specified block. It is assumed \n\n the specified block (idBlock) resides in the active part.\nIf the \"file\" field of the svxTextureAt structure is empty (a \n\n zero-length string), the texture map attributes are not saved and any \n\n prior texture map assigned to the block is removed.\nThe \"opt\" field of the svxTextureAt structure is not currently supported."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to project an STL to a plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPartProjStl\nidStl [in] STL id\nidPln [in] plane id\ntol [in] refit tolerance\nsmth [in] refit smooth\nidCurve [out] id of STL boundary curve (NULL to ignore)\n\nProject the STL to a plane, to get its boundary curve. \n\n Output new boundary curve via \"idCurve\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the boundary curve of an STL after projecting to a plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPartProjStl\nidStl [in] STL id\nidPln [in] plane id\ntol [in] refit tolerance\nsmth [in] refit smooth\nidCurve [out] id of STL boundary curve (NULL to ignore)\n\nProject the STL to a plane, to get its boundary curve. \n\n Output new boundary curve via \"idCurve\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to project an STL to a plane and obtain its boundary curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPartProjStl\nidStl [in] STL id\nidPln [in] plane id\ntol [in] refit tolerance\nsmth [in] refit smooth\nidCurve [out] id of STL boundary curve (NULL to ignore)\n\nProject the STL to a plane, to get its boundary curve. \n\n Output new boundary curve via \"idCurve\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of triangular facets for a specified face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceFacets\nidFace [in] face id\nCount [out] number of triangular facets\nFacets [out] list of triangular facets\n\nOutputs a list of the triangular facets used to display the specified face.\nMemory for \"Facets\" is allocated by this function. It \n\n MUST be deallocated by the calling procedure with cvxMemFree().\nIt is assumed the specified face (idFace) resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of triangular facets for a specified face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceFacets\nidFace [in] face id\nCount [out] number of triangular facets\nFacets [out] list of triangular facets\n\nOutputs a list of the triangular facets used to display the specified face.\nMemory for \"Facets\" is allocated by this function. It \n\n MUST be deallocated by the calling procedure with cvxMemFree().\nIt is assumed the specified face (idFace) resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to display the triangular facets of a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceFacets\nidFace [in] face id\nCount [out] number of triangular facets\nFacets [out] list of triangular facets\n\nOutputs a list of the triangular facets used to display the specified face.\nMemory for \"Facets\" is allocated by this function. It \n\n MUST be deallocated by the calling procedure with cvxMemFree().\nIt is assumed the specified face (idFace) resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve and traverse a face's facet data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceFacets2\nidFace [in] face id\nFacets [out] facet data set\n\nOutputs the facets used to display the specified face along with \n\n display, texture or shader attributes that may be defined for the \n\n face.\nThis function allocates memory for lists inside the \n\n input \"Facets\" structure. The calling procedure is \n\n responsible to free the lists using cvxFacetsFree(Facets).\nIt is assumed the specified face (idFace) resides in the active part.\nThe following is sample code for retrieving and traversing a face's facet data:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the facets used to display a specified face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceFacets2\nidFace [in] face id\nFacets [out] facet data set\n\nOutputs the facets used to display the specified face along with \n\n display, texture or shader attributes that may be defined for the \n\n face.\nThis function allocates memory for lists inside the \n\n input \"Facets\" structure. The calling procedure is \n\n responsible to free the lists using cvxFacetsFree(Facets).\nIt is assumed the specified face (idFace) resides in the active part.\nThe following is sample code for retrieving and traversing a face's facet data:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the display, texture, or shader attributes defined for a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceFacets2\nidFace [in] face id\nFacets [out] facet data set\n\nOutputs the facets used to display the specified face along with \n\n display, texture or shader attributes that may be defined for the \n\n face.\nThis function allocates memory for lists inside the \n\n input \"Facets\" structure. The calling procedure is \n\n responsible to free the lists using cvxFacetsFree(Facets).\nIt is assumed the specified face (idFace) resides in the active part.\nThe following is sample code for retrieving and traversing a face's facet data:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get triangular facets for a specified face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceFacetsByChord\nidFace [in] face id\nChordHeight [in] chord height for facet generation(min = 0.001, )\nCount [out] number of triangular facets\nFacets [out] list of triangular facets\n\nOutputs a list of the triangular facets used to display the specified face at specified chord height.\nMemory for \"Facets\" is allocated by this function. It \n\n MUST be deallocated by the calling procedure with cvxMemFree().\nIt is assumed the specified face (idFace) resides in the active part.\nnote:\nif the idFace is planar, ChordHeight is invalid for this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to generate triangular facets for a face at a specified chord height?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceFacetsByChord\nidFace [in] face id\nChordHeight [in] chord height for facet generation(min = 0.001, )\nCount [out] number of triangular facets\nFacets [out] list of triangular facets\n\nOutputs a list of the triangular facets used to display the specified face at specified chord height.\nMemory for \"Facets\" is allocated by this function. It \n\n MUST be deallocated by the calling procedure with cvxMemFree().\nIt is assumed the specified face (idFace) resides in the active part.\nnote:\nif the idFace is planar, ChordHeight is invalid for this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate memory for the list of triangular facets?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceFacetsByChord\nidFace [in] face id\nChordHeight [in] chord height for facet generation(min = 0.001, )\nCount [out] number of triangular facets\nFacets [out] list of triangular facets\n\nOutputs a list of the triangular facets used to display the specified face at specified chord height.\nMemory for \"Facets\" is allocated by this function. It \n\n MUST be deallocated by the calling procedure with cvxMemFree().\nIt is assumed the specified face (idFace) resides in the active part.\nnote:\nif the idFace is planar, ChordHeight is invalid for this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartInqFaceFacets2ByTol()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRefineFacetsInit\ndata [out] refine facets data\n\nInitialize the parameters of the cvxPartInqFaceFacets2ByTol().\nnote:\nDo not assign a value to variable \"data\" before calling this function. \n\n The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing the parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRefineFacetsInit\ndata [out] refine facets data\n\nInitialize the parameters of the cvxPartInqFaceFacets2ByTol().\nnote:\nDo not assign a value to variable \"data\" before calling this function. \n\n The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the refine facets data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRefineFacetsInit\ndata [out] refine facets data\n\nInitialize the parameters of the cvxPartInqFaceFacets2ByTol().\nnote:\nDo not assign a value to variable \"data\" before calling this function. \n\n The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the facets used to display a specified face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceFacets2ByTol\nRefineData [in] refine facets data\nFacets [out] facet data set\n\nOutputs the facets used to display the specified face along with \n\n display, texture or shader attributes that may be defined for the \n\n specified face at specifies RefineData.\nThis function allocates memory for lists inside the \n\n input \"Facets\" structure. The calling procedure is \n\n responsible to free the lists using cvxFacetsFree(Facets).\nIt is assumed the specified face (RefineData.listFaceId) resides in the active part.\nIf the value of chord height and angle exceeds the specified range, \n\n the default value will be used instead.\nsvxRefineFacets can be initialized through interface cvxPartRefineFacetsInit().\nnote:\nIf the face is planar, ChordHeight(VX_FACETS_TOL_DISTANCE,VX_FACETS_TOL_PIXEL) and angle(VX_FACETS_TOL_ANGLE) are ignored."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve texture or shader attributes for a specified face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceFacets2ByTol\nRefineData [in] refine facets data\nFacets [out] facet data set\n\nOutputs the facets used to display the specified face along with \n\n display, texture or shader attributes that may be defined for the \n\n specified face at specifies RefineData.\nThis function allocates memory for lists inside the \n\n input \"Facets\" structure. The calling procedure is \n\n responsible to free the lists using cvxFacetsFree(Facets).\nIt is assumed the specified face (RefineData.listFaceId) resides in the active part.\nIf the value of chord height and angle exceeds the specified range, \n\n the default value will be used instead.\nsvxRefineFacets can be initialized through interface cvxPartRefineFacetsInit().\nnote:\nIf the face is planar, ChordHeight(VX_FACETS_TOL_DISTANCE,VX_FACETS_TOL_PIXEL) and angle(VX_FACETS_TOL_ANGLE) are ignored."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free the memory allocated for the facet lists?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceFacets2ByTol\nRefineData [in] refine facets data\nFacets [out] facet data set\n\nOutputs the facets used to display the specified face along with \n\n display, texture or shader attributes that may be defined for the \n\n specified face at specifies RefineData.\nThis function allocates memory for lists inside the \n\n input \"Facets\" structure. The calling procedure is \n\n responsible to free the lists using cvxFacetsFree(Facets).\nIt is assumed the specified face (RefineData.listFaceId) resides in the active part.\nIf the value of chord height and angle exceeds the specified range, \n\n the default value will be used instead.\nsvxRefineFacets can be initialized through interface cvxPartRefineFacetsInit().\nnote:\nIf the face is planar, ChordHeight(VX_FACETS_TOL_DISTANCE,VX_FACETS_TOL_PIXEL) and angle(VX_FACETS_TOL_ANGLE) are ignored."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I initialize svxRefineFacets through the interface cvxPartRefineFacetsInit?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceFacets2ByTol\nRefineData [in] refine facets data\nFacets [out] facet data set\n\nOutputs the facets used to display the specified face along with \n\n display, texture or shader attributes that may be defined for the \n\n specified face at specifies RefineData.\nThis function allocates memory for lists inside the \n\n input \"Facets\" structure. The calling procedure is \n\n responsible to free the lists using cvxFacetsFree(Facets).\nIt is assumed the specified face (RefineData.listFaceId) resides in the active part.\nIf the value of chord height and angle exceeds the specified range, \n\n the default value will be used instead.\nsvxRefineFacets can be initialized through interface cvxPartRefineFacetsInit().\nnote:\nIf the face is planar, ChordHeight(VX_FACETS_TOL_DISTANCE,VX_FACETS_TOL_PIXEL) and angle(VX_FACETS_TOL_ANGLE) are ignored."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if the chord height and angle values exceed the specified range?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceFacets2ByTol\nRefineData [in] refine facets data\nFacets [out] facet data set\n\nOutputs the facets used to display the specified face along with \n\n display, texture or shader attributes that may be defined for the \n\n specified face at specifies RefineData.\nThis function allocates memory for lists inside the \n\n input \"Facets\" structure. The calling procedure is \n\n responsible to free the lists using cvxFacetsFree(Facets).\nIt is assumed the specified face (RefineData.listFaceId) resides in the active part.\nIf the value of chord height and angle exceeds the specified range, \n\n the default value will be used instead.\nsvxRefineFacets can be initialized through interface cvxPartRefineFacetsInit().\nnote:\nIf the face is planar, ChordHeight(VX_FACETS_TOL_DISTANCE,VX_FACETS_TOL_PIXEL) and angle(VX_FACETS_TOL_ANGLE) are ignored."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to convert facet data to STL data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacetsConvertToSTL\nfacets [in] facet data\nstl [out] STL data\n\nThe structure svxFacets is converted into the structure svxSTL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to convert svxFacets to svxSTL?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacetsConvertToSTL\nfacets [in] facet data\nstl [out] STL data\n\nThe structure svxFacets is converted into the structure svxSTL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxPartFacetsConvertToSTL to convert facet data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacetsConvertToSTL\nfacets [in] facet data\nstl [out] STL data\n\nThe structure svxFacets is converted into the structure svxSTL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to convert STL data to facet data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSTLConvertToFacets\nstl [in] STL data\nfacets [out] facet data\n\nStructures svxFacets and svxSTL are converted to each other."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to convert svxFacets to svxSTL?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSTLConvertToFacets\nstl [in] STL data\nfacets [out] facet data\n\nStructures svxFacets and svxSTL are converted to each other."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get facet data from STL data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSTLConvertToFacets\nstl [in] STL data\nfacets [out] facet data\n\nStructures svxFacets and svxSTL are converted to each other."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free memory associated with 3D facets data structure?"
            },
            {
                "role": "assistant",
                "content": "cvxFacetsFree\nFacets [in] 3D facets data structure\n\nFrees memory associated with the specified facets structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to release memory associated with facets structure?"
            },
            {
                "role": "assistant",
                "content": "cvxFacetsFree\nFacets [in] 3D facets data structure\n\nFrees memory associated with the specified facets structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate memory for 3D facets data?"
            },
            {
                "role": "assistant",
                "content": "cvxFacetsFree\nFacets [in] 3D facets data structure\n\nFrees memory associated with the specified facets structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free memory associated with STL structure?"
            },
            {
                "role": "assistant",
                "content": "cvxStlFree\nStl [in] 3D \"STL\" triangle mesh data structure\n\nFrees memory associated with the specified STL structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to release memory of STL structure?"
            },
            {
                "role": "assistant",
                "content": "cvxStlFree\nStl [in] 3D \"STL\" triangle mesh data structure\n\nFrees memory associated with the specified STL structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate memory of STL triangle mesh data structure?"
            },
            {
                "role": "assistant",
                "content": "cvxStlFree\nStl [in] 3D \"STL\" triangle mesh data structure\n\nFrees memory associated with the specified STL structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the display data of an edge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEdgeDispData\nidEdge [in] edge id\ndata [out] display data of edge\n\nGet the display data of the edge in different modes.\nnote:\nThe calling procedure MUST deallocate the output(data) with cvxPartEdgeDispDataFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the display data of an edge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEdgeDispData\nidEdge [in] edge id\ndata [out] display data of edge\n\nGet the display data of the edge in different modes.\nnote:\nThe calling procedure MUST deallocate the output(data) with cvxPartEdgeDispDataFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the different modes to retrieve the display data of an edge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEdgeDispData\nidEdge [in] edge id\ndata [out] display data of edge\n\nGet the display data of the edge in different modes.\nnote:\nThe calling procedure MUST deallocate the output(data) with cvxPartEdgeDispDataFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free memory associated with svxEdgeDispData structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEdgeDispDataFree\ndata [in] display data of edge\n\nFrees memory associated with the specified svxEdgeDispData structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to release memory of edge display data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEdgeDispDataFree\ndata [in] display data of edge\n\nFrees memory associated with the specified svxEdgeDispData structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate memory of specified svxEdgeDispData structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEdgeDispDataFree\ndata [in] display data of edge\n\nFrees memory associated with the specified svxEdgeDispData structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a part is currently regenerating?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRegenIsActive\n\nDetermine whether a part is currently regenerating."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if the active part is regenerating?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRegenIsActive\n\nDetermine whether a part is currently regenerating."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I find out if a part is in the process of regenerating?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRegenIsActive\n\nDetermine whether a part is currently regenerating."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a part is currently being redefined?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRedefineIsActive\n\nDetermine whether a part is currently being redefined."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if the active part is being redefined?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRedefineIsActive\n\nDetermine whether a part is currently being redefined."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I find out if a part is in the process of being redefined?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRedefineIsActive\n\nDetermine whether a part is currently being redefined."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to regenerate triangle facet data for specified faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRegenFacets\nCount [in] number of faces\nidFaces [in] list of face id's in active part\nAssembly [in] 1 to regenerate facets for active assembly, else 0\nLOD [in] 1 to generate level-of-detail, else 0\nTol [in] chord-height tolerance for facet generation (0.0 for default)\n\nRegenerates triangle facet data used to display the specified faces (Count and idFaces).\nIf no faces are specified (Count=0 and idFaces=NULL), all faces in the active part are \n\n re-tessellated at the specified tolerance (Tol). If \"Assembly != 0\", all faces in the active assembly are re-tessellated.\nIf \"Tol\" is input as zero, a tolerance based on the active view extent is used.\nIf \"LOD != 0\", levels of detail are calculated for faces that are retessellated. That \n\n means that facet data is generated at a tight tolerance, then organized into several \n\n levels of detail from coarse to fine. Level-of-Detail generates more data for each \n\n face, but the speed and quality of face display can be optimized based on the size \n\n of a face relative to the active view extent."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to re-tessellate all faces in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRegenFacets\nCount [in] number of faces\nidFaces [in] list of face id's in active part\nAssembly [in] 1 to regenerate facets for active assembly, else 0\nLOD [in] 1 to generate level-of-detail, else 0\nTol [in] chord-height tolerance for facet generation (0.0 for default)\n\nRegenerates triangle facet data used to display the specified faces (Count and idFaces).\nIf no faces are specified (Count=0 and idFaces=NULL), all faces in the active part are \n\n re-tessellated at the specified tolerance (Tol). If \"Assembly != 0\", all faces in the active assembly are re-tessellated.\nIf \"Tol\" is input as zero, a tolerance based on the active view extent is used.\nIf \"LOD != 0\", levels of detail are calculated for faces that are retessellated. That \n\n means that facet data is generated at a tight tolerance, then organized into several \n\n levels of detail from coarse to fine. Level-of-Detail generates more data for each \n\n face, but the speed and quality of face display can be optimized based on the size \n\n of a face relative to the active view extent."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to generate levels of detail for faces during re-tessellation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRegenFacets\nCount [in] number of faces\nidFaces [in] list of face id's in active part\nAssembly [in] 1 to regenerate facets for active assembly, else 0\nLOD [in] 1 to generate level-of-detail, else 0\nTol [in] chord-height tolerance for facet generation (0.0 for default)\n\nRegenerates triangle facet data used to display the specified faces (Count and idFaces).\nIf no faces are specified (Count=0 and idFaces=NULL), all faces in the active part are \n\n re-tessellated at the specified tolerance (Tol). If \"Assembly != 0\", all faces in the active assembly are re-tessellated.\nIf \"Tol\" is input as zero, a tolerance based on the active view extent is used.\nIf \"LOD != 0\", levels of detail are calculated for faces that are retessellated. That \n\n means that facet data is generated at a tight tolerance, then organized into several \n\n levels of detail from coarse to fine. Level-of-Detail generates more data for each \n\n face, but the speed and quality of face display can be optimized based on the size \n\n of a face relative to the active view extent."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to disable prompt for partial fillet results?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPartialResults\nDisable [in] 1 to disable partial results, 0 to re-enable it\n\nPassing 1 to this function disables the prompt for partial fillet results and \n\n causes a failed fillet to exit rather than attempt to generate partial results.\nPassing 0 to this function re-enables the prompt for partial fillet results.\nThis function MUST be called in pairs, first with \"iDisable=1\", then with \n\n \"iDisable=0\". Otherwise partial results could become permanently disabled \n\n during the active session."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to re-enable prompt for partial fillet results?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPartialResults\nDisable [in] 1 to disable partial results, 0 to re-enable it\n\nPassing 1 to this function disables the prompt for partial fillet results and \n\n causes a failed fillet to exit rather than attempt to generate partial results.\nPassing 0 to this function re-enables the prompt for partial fillet results.\nThis function MUST be called in pairs, first with \"iDisable=1\", then with \n\n \"iDisable=0\". Otherwise partial results could become permanently disabled \n\n during the active session."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if the function is not called in pairs with 'iDisable=1' and 'iDisable=0'?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPartialResults\nDisable [in] 1 to disable partial results, 0 to re-enable it\n\nPassing 1 to this function disables the prompt for partial fillet results and \n\n causes a failed fillet to exit rather than attempt to generate partial results.\nPassing 0 to this function re-enables the prompt for partial fillet results.\nThis function MUST be called in pairs, first with \"iDisable=1\", then with \n\n \"iDisable=0\". Otherwise partial results could become permanently disabled \n\n during the active session."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get history operations that have been played in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistList\nOption [in] Option=0 : get history operations that have been played \n\n Option=1 : get history operations that have not been played \n\n Option=2 : get played and unplayed history operations\nCnts [out] number of history operations\nHistList [out] list of history operations\n\nGets a list of history operations in the active part as specified by the input \"Option\".\nThe memory referenced by \"HistList\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)HistList)).\nsee:\ncvxPartInqFtrList() is the same as cvxPartHistList when Type = 0."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get history operations that have not been played in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistList\nOption [in] Option=0 : get history operations that have been played \n\n Option=1 : get history operations that have not been played \n\n Option=2 : get played and unplayed history operations\nCnts [out] number of history operations\nHistList [out] list of history operations\n\nGets a list of history operations in the active part as specified by the input \"Option\".\nThe memory referenced by \"HistList\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)HistList)).\nsee:\ncvxPartInqFtrList() is the same as cvxPartHistList when Type = 0."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get both played and unplayed history operations in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistList\nOption [in] Option=0 : get history operations that have been played \n\n Option=1 : get history operations that have not been played \n\n Option=2 : get played and unplayed history operations\nCnts [out] number of history operations\nHistList [out] list of history operations\n\nGets a list of history operations in the active part as specified by the input \"Option\".\nThe memory referenced by \"HistList\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)HistList)).\nsee:\ncvxPartInqFtrList() is the same as cvxPartHistList when Type = 0."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the count of history operations in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistList\nOption [in] Option=0 : get history operations that have been played \n\n Option=1 : get history operations that have not been played \n\n Option=2 : get played and unplayed history operations\nCnts [out] number of history operations\nHistList [out] list of history operations\n\nGets a list of history operations in the active part as specified by the input \"Option\".\nThe memory referenced by \"HistList\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)HistList)).\nsee:\ncvxPartInqFtrList() is the same as cvxPartHistList when Type = 0."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of history operations in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistList\nOption [in] Option=0 : get history operations that have been played \n\n Option=1 : get history operations that have not been played \n\n Option=2 : get played and unplayed history operations\nCnts [out] number of history operations\nHistList [out] list of history operations\n\nGets a list of history operations in the active part as specified by the input \"Option\".\nThe memory referenced by \"HistList\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)HistList)).\nsee:\ncvxPartInqFtrList() is the same as cvxPartHistList when Type = 0."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of features in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrList\nCount [out] number of features in the active part\nFeatures [out] list of id's of features (i.e. operations) in the active part history\n\nOutputs a list of database id's of features (i.e. operations) in the active part's history \n\n in the order they are listed there (including hidden operations). If there are no features, \n\n \"*Count\" is output as zero and \"*Features\" as NULL.\nThis function allocates memory for the array output via \"Features\". The calling \n\n procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any function to get the list of features in the active part's history?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrList\nCount [out] number of features in the active part\nFeatures [out] list of id's of features (i.e. operations) in the active part history\n\nOutputs a list of database id's of features (i.e. operations) in the active part's history \n\n in the order they are listed there (including hidden operations). If there are no features, \n\n \"*Count\" is output as zero and \"*Features\" as NULL.\nThis function allocates memory for the array output via \"Features\". The calling \n\n procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the id's of features in the active part's history?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrList\nCount [out] number of features in the active part\nFeatures [out] list of id's of features (i.e. operations) in the active part history\n\nOutputs a list of database id's of features (i.e. operations) in the active part's history \n\n in the order they are listed there (including hidden operations). If there are no features, \n\n \"*Count\" is output as zero and \"*Features\" as NULL.\nThis function allocates memory for the array output via \"Features\". The calling \n\n procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if a feature is a sub-part?"
            },
            {
                "role": "assistant",
                "content": "cvxFtrIsSubPart\nidFtr [in] feature id\n\nDetermine whether the feature is a sub-part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if a feature is a sub-part?"
            },
            {
                "role": "assistant",
                "content": "cvxFtrIsSubPart\nidFtr [in] feature id\n\nDetermine whether the feature is a sub-part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to determine if a feature is a sub-part?"
            },
            {
                "role": "assistant",
                "content": "cvxFtrIsSubPart\nidFtr [in] feature id\n\nDetermine whether the feature is a sub-part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a reference feature has lost external references?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrIsMissRef\nidFeature [in] reference feature id\nstatus [out] feature status. 1 is miss reference, 0 is no miss reference.\n\nDetermines whether a reference feature has lost external references."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a feature has missing external references?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrIsMissRef\nidFeature [in] reference feature id\nstatus [out] feature status. 1 is miss reference, 0 is no miss reference.\n\nDetermines whether a reference feature has lost external references."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find out if a feature has lost its external references?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrIsMissRef\nidFeature [in] reference feature id\nstatus [out] feature status. 1 is miss reference, 0 is no miss reference.\n\nDetermines whether a reference feature has lost external references."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the associated external file name of a specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrAssoPart\nidFeature [in] index of external feature in active part\nfile [out] associated external file name (NULL to ignore)\nrootName [out] associated external root name (NULL to ignore)\n\nGet information about the source file associated with the specified \n\n external reference feature, including file name, root name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the associated external root name of a specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrAssoPart\nidFeature [in] index of external feature in active part\nfile [out] associated external file name (NULL to ignore)\nrootName [out] associated external root name (NULL to ignore)\n\nGet information about the source file associated with the specified \n\n external reference feature, including file name, root name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to ignore the associated external file name and root name when getting information about a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrAssoPart\nidFeature [in] index of external feature in active part\nfile [out] associated external file name (NULL to ignore)\nrootName [out] associated external root name (NULL to ignore)\n\nGet information about the source file associated with the specified \n\n external reference feature, including file name, root name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get information about the source file associated with an external reference feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrAssoPartByLongPath\nidFeature [in] index of external feature in active part\nfile [out] associated external file name (NULL to ignore)\nsizeFile [in] max size of fileName\nrootName [out] associated external root name (NULL to ignore)\nsizeRName [in] max size of rootName\n\nGet information about the source file associated with the specified external reference feature, including file name, root name.\nA file that is too long (longer than \"sizeFile\") is truncated. A rootName that is too long (longer than \"sizeRName\") is truncated.\nIt is assumed that the input \"file\" is no longer than 512 bytes. It is assumed that the input \"rootName\" is no longer than 256 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the associated external file name?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrAssoPartByLongPath\nidFeature [in] index of external feature in active part\nfile [out] associated external file name (NULL to ignore)\nsizeFile [in] max size of fileName\nrootName [out] associated external root name (NULL to ignore)\nsizeRName [in] max size of rootName\n\nGet information about the source file associated with the specified external reference feature, including file name, root name.\nA file that is too long (longer than \"sizeFile\") is truncated. A rootName that is too long (longer than \"sizeRName\") is truncated.\nIt is assumed that the input \"file\" is no longer than 512 bytes. It is assumed that the input \"rootName\" is no longer than 256 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the associated external root name?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrAssoPartByLongPath\nidFeature [in] index of external feature in active part\nfile [out] associated external file name (NULL to ignore)\nsizeFile [in] max size of fileName\nrootName [out] associated external root name (NULL to ignore)\nsizeRName [in] max size of rootName\n\nGet information about the source file associated with the specified external reference feature, including file name, root name.\nA file that is too long (longer than \"sizeFile\") is truncated. A rootName that is too long (longer than \"sizeRName\") is truncated.\nIt is assumed that the input \"file\" is no longer than 512 bytes. It is assumed that the input \"rootName\" is no longer than 256 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of a feature's data container?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrData\nidFeature [in] feature id\niNoEval [in] 1 to get unevaluated data; else 0\nidData [out] id of feature data container\n\nOutputs the id of a copy of the specified feature's data container. \n\n The calling procedure MUST deallocate \"idData\" using cvxDataFree() \n\n after it is done querying \"idData\" with the cvxDataXXX() functions. \n\n\nThe data associated with a feature is stored in a \"persistent\" format. \n\n Entity references in the data are stored in a format that uses entity \n\n labels that were current at the time the feature operation was executed. \n\n Before the data can be queried for current entity id's, it must be \n\n re-evaluated. This can fail if it references entities that no longer \n\n exist. Point selections that reference entities (e.g. entity endpoint) \n\n can also fail to re-evaluate if the referenced entities no longer exist.\nRe-evaluation of the feature data is done without rolling the history \n\n back to the specified feature. For this reason, the success or failure \n\n of this function is very sensitive to whether the current state of the \n\n model contains all of the geometry that existed at the time that the \n\n feature was originally executed.\nIf you know that the feature data will not re-evaluate based on the \n\n current state of the model, you can get the last evaluated state of \n\n point and numeric inputs by calling this function with \"iNoEval=1\". \n\n In this case, you will not be able to successfully query any entity \n\n data fields in \"idData\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get unevaluated data of a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrData\nidFeature [in] feature id\niNoEval [in] 1 to get unevaluated data; else 0\nidData [out] id of feature data container\n\nOutputs the id of a copy of the specified feature's data container. \n\n The calling procedure MUST deallocate \"idData\" using cvxDataFree() \n\n after it is done querying \"idData\" with the cvxDataXXX() functions. \n\n\nThe data associated with a feature is stored in a \"persistent\" format. \n\n Entity references in the data are stored in a format that uses entity \n\n labels that were current at the time the feature operation was executed. \n\n Before the data can be queried for current entity id's, it must be \n\n re-evaluated. This can fail if it references entities that no longer \n\n exist. Point selections that reference entities (e.g. entity endpoint) \n\n can also fail to re-evaluate if the referenced entities no longer exist.\nRe-evaluation of the feature data is done without rolling the history \n\n back to the specified feature. For this reason, the success or failure \n\n of this function is very sensitive to whether the current state of the \n\n model contains all of the geometry that existed at the time that the \n\n feature was originally executed.\nIf you know that the feature data will not re-evaluate based on the \n\n current state of the model, you can get the last evaluated state of \n\n point and numeric inputs by calling this function with \"iNoEval=1\". \n\n In this case, you will not be able to successfully query any entity \n\n data fields in \"idData\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the idData after querying with cvxDataXXX() functions?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrData\nidFeature [in] feature id\niNoEval [in] 1 to get unevaluated data; else 0\nidData [out] id of feature data container\n\nOutputs the id of a copy of the specified feature's data container. \n\n The calling procedure MUST deallocate \"idData\" using cvxDataFree() \n\n after it is done querying \"idData\" with the cvxDataXXX() functions. \n\n\nThe data associated with a feature is stored in a \"persistent\" format. \n\n Entity references in the data are stored in a format that uses entity \n\n labels that were current at the time the feature operation was executed. \n\n Before the data can be queried for current entity id's, it must be \n\n re-evaluated. This can fail if it references entities that no longer \n\n exist. Point selections that reference entities (e.g. entity endpoint) \n\n can also fail to re-evaluate if the referenced entities no longer exist.\nRe-evaluation of the feature data is done without rolling the history \n\n back to the specified feature. For this reason, the success or failure \n\n of this function is very sensitive to whether the current state of the \n\n model contains all of the geometry that existed at the time that the \n\n feature was originally executed.\nIf you know that the feature data will not re-evaluate based on the \n\n current state of the model, you can get the last evaluated state of \n\n point and numeric inputs by calling this function with \"iNoEval=1\". \n\n In this case, you will not be able to successfully query any entity \n\n data fields in \"idData\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of auxiliary features for a specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrInqAuxFtrs\nidFtr [in] id feature\ncount [out] count of idAuxFtrs\nidAuxFtrs [out] list of auxiliary feature id\n\nGets a list of auxiliary features for the specified feature.\nThe memory referenced by \"idAuxFtrs\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)idAuxFtrs))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to count the number of auxiliary features for a specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrInqAuxFtrs\nidFtr [in] id feature\ncount [out] count of idAuxFtrs\nidAuxFtrs [out] list of auxiliary feature id\n\nGets a list of auxiliary features for the specified feature.\nThe memory referenced by \"idAuxFtrs\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)idAuxFtrs))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the list of auxiliary feature IDs for a specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrInqAuxFtrs\nidFtr [in] id feature\ncount [out] count of idAuxFtrs\nidAuxFtrs [out] list of auxiliary feature id\n\nGets a list of auxiliary features for the specified feature.\nThe memory referenced by \"idAuxFtrs\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)idAuxFtrs))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the command template name for a specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrTemplate\nidFeature [in] feature id\nTemplate [out] feature command template name\n\nOutputs the name of the command template that defines the input \n\n parameters of the specified feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the command template for a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrTemplate\nidFeature [in] feature id\nTemplate [out] feature command template name\n\nOutputs the name of the command template that defines the input \n\n parameters of the specified feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the feature command template name?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrTemplate\nidFeature [in] feature id\nTemplate [out] feature command template name\n\nOutputs the name of the command template that defines the input \n\n parameters of the specified feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the tolerance used by a specific feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrTol\nidFeature [in] feature id\nTolerance [out] feature tolerance\n\nOutputs tolerance used by the specified feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the feature tolerance by its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrTol\nidFeature [in] feature id\nTolerance [out] feature tolerance\n\nOutputs tolerance used by the specified feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to inquire about the tolerance of a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrTol\nidFeature [in] feature id\nTolerance [out] feature tolerance\n\nOutputs tolerance used by the specified feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check the regen state of a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrRegenStat\nidFeature [in] feature index\nstat [out] feature regen status as below: \n\n 0, regen the feature without suppression \n\n 1, feature is manually suppressed \n\n 2, feature is automatically suppressed due to the failure of regen \n\n 4, feature have suppress condition\n\nOutputs the regen state of a feature. \n\n Judge the suppression state of the feature.\nnote:\nThe functions of cvxPartInqFtrRegenStat() interface and cvxPartInqFtrRegenStatus() \n\n interface are completely different."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the different regen status of a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrRegenStat\nidFeature [in] feature index\nstat [out] feature regen status as below: \n\n 0, regen the feature without suppression \n\n 1, feature is manually suppressed \n\n 2, feature is automatically suppressed due to the failure of regen \n\n 4, feature have suppress condition\n\nOutputs the regen state of a feature. \n\n Judge the suppression state of the feature.\nnote:\nThe functions of cvxPartInqFtrRegenStat() interface and cvxPartInqFtrRegenStatus() \n\n interface are completely different."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if a feature is manually suppressed?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrRegenStat\nidFeature [in] feature index\nstat [out] feature regen status as below: \n\n 0, regen the feature without suppression \n\n 1, feature is manually suppressed \n\n 2, feature is automatically suppressed due to the failure of regen \n\n 4, feature have suppress condition\n\nOutputs the regen state of a feature. \n\n Judge the suppression state of the feature.\nnote:\nThe functions of cvxPartInqFtrRegenStat() interface and cvxPartInqFtrRegenStatus() \n\n interface are completely different."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the regen status of a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrRegenStatus\nidFtr [in] feature index\nstatus [out] feature regen status\n\nGet the missing state or constraint state of the feature.\nnote:\nThe functions of cvxPartInqFtrRegenStat() interface and cvxPartInqFtrRegenStatus() interface are completely different."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check the missing state of a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrRegenStatus\nidFtr [in] feature index\nstatus [out] feature regen status\n\nGet the missing state or constraint state of the feature.\nnote:\nThe functions of cvxPartInqFtrRegenStat() interface and cvxPartInqFtrRegenStatus() interface are completely different."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire about the constraint state of a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrRegenStatus\nidFtr [in] feature index\nstatus [out] feature regen status\n\nGet the missing state or constraint state of the feature.\nnote:\nThe functions of cvxPartInqFtrRegenStat() interface and cvxPartInqFtrRegenStatus() interface are completely different."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the version number of a specific feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrVersion\nidFeature [in] feature id\nVersion [out] feature version number\n\nOutputs the product version number associated with the specified \n\n feature. If \"idFeature < 1\", outputs the version number of the \n\n \"active\" feature (i.e. the feature currently regenerating)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the version number of the active feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrVersion\nidFeature [in] feature id\nVersion [out] feature version number\n\nOutputs the product version number associated with the specified \n\n feature. If \"idFeature < 1\", outputs the version number of the \n\n \"active\" feature (i.e. the feature currently regenerating)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire about the feature version?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrVersion\nidFeature [in] feature id\nVersion [out] feature version number\n\nOutputs the product version number associated with the specified \n\n feature. If \"idFeature < 1\", outputs the version number of the \n\n \"active\" feature (i.e. the feature currently regenerating)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the feature group of a specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrGroup\nidFeature [in] feature id\nidGroup [out] feature group id\n\nOutput the index of the feature group where the specified \n\n feature is located. Output -1 if the specified feature is not \n\n in any feature group."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if a feature is in any feature group?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrGroup\nidFeature [in] feature id\nidGroup [out] feature group id\n\nOutput the index of the feature group where the specified \n\n feature is located. Output -1 if the specified feature is not \n\n in any feature group."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the feature group id of a specific feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrGroup\nidFeature [in] feature id\nidGroup [out] feature group id\n\nOutput the index of the feature group where the specified \n\n feature is located. Output -1 if the specified feature is not \n\n in any feature group."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of feature list within a specified group?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqGroupFtrs\nidGroup [in] feature group id\ncount [out] number of elements in the Feature list\nftrList [out] list of feature id\n\nOutput all feature_id within the specified feature group.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of feature ids within a specified group?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqGroupFtrs\nidGroup [in] feature group id\ncount [out] number of elements in the Feature list\nftrList [out] list of feature id\n\nOutput all feature_id within the specified feature group.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to output all feature ids within a specified feature group?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqGroupFtrs\nidGroup [in] feature group id\ncount [out] number of elements in the Feature list\nftrList [out] list of feature id\n\nOutput all feature_id within the specified feature group.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of features in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqGroupList\ncount [out] number of features in the active part\ngroups [out] list of id's of groups in the active part history\n\nOutputs a list of database id's of feature groups in the active part's history \n\n in the order they are listed there. If there are no groups, \n\n \"*count\" is output as zero and \"*groups\" as NULL.\nThis function allocates memory for the array output via \"groups\". The calling \n\n procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of feature groups in the active part's history?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqGroupList\ncount [out] number of features in the active part\ngroups [out] list of id's of groups in the active part history\n\nOutputs a list of database id's of feature groups in the active part's history \n\n in the order they are listed there. If there are no groups, \n\n \"*count\" is output as zero and \"*groups\" as NULL.\nThis function allocates memory for the array output via \"groups\". The calling \n\n procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the database id's of feature groups in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqGroupList\ncount [out] number of features in the active part\ngroups [out] list of id's of groups in the active part history\n\nOutputs a list of database id's of feature groups in the active part's history \n\n in the order they are listed there. If there are no groups, \n\n \"*count\" is output as zero and \"*groups\" as NULL.\nThis function allocates memory for the array output via \"groups\". The calling \n\n procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of parent features for a specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrParentFtrs\nidFeature [in] index of feature in active part\ngetAll [in] 1 to get all parent features (parents and grandparents) \n\n 0 to get just the immediate parent features\ncnt [out] no. of parent features\nlist [out] list of indices of parent features\n\nGet a list of parent features upon with the specified feature is dependent.\nThe feature list (list) is allocated by this function and must be \n\n deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of parent features for a specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrParentFtrs\nidFeature [in] index of feature in active part\ngetAll [in] 1 to get all parent features (parents and grandparents) \n\n 0 to get just the immediate parent features\ncnt [out] no. of parent features\nlist [out] list of indices of parent features\n\nGet a list of parent features upon with the specified feature is dependent.\nThe feature list (list) is allocated by this function and must be \n\n deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the immediate parent features for a specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrParentFtrs\nidFeature [in] index of feature in active part\ngetAll [in] 1 to get all parent features (parents and grandparents) \n\n 0 to get just the immediate parent features\ncnt [out] no. of parent features\nlist [out] list of indices of parent features\n\nGet a list of parent features upon with the specified feature is dependent.\nThe feature list (list) is allocated by this function and must be \n\n deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get all parent features (parents and grandparents) for a specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrParentFtrs\nidFeature [in] index of feature in active part\ngetAll [in] 1 to get all parent features (parents and grandparents) \n\n 0 to get just the immediate parent features\ncnt [out] no. of parent features\nlist [out] list of indices of parent features\n\nGet a list of parent features upon with the specified feature is dependent.\nThe feature list (list) is allocated by this function and must be \n\n deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the child features of a specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrChildFtrs\nidFeature [in] index of feature in active part\ncnt [out] no. of children\nlist [out] list of indices of feature's children\n\nGet the child features of specified feature.\nThe feature list (list) is allocated by this function and must be \n\n deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the number of children for a specific feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrChildFtrs\nidFeature [in] index of feature in active part\ncnt [out] no. of children\nlist [out] list of indices of feature's children\n\nGet the child features of specified feature.\nThe feature list (list) is allocated by this function and must be \n\n deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the list of indices of a feature's children?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrChildFtrs\nidFeature [in] index of feature in active part\ncnt [out] no. of children\nlist [out] list of indices of feature's children\n\nGet the child features of specified feature.\nThe feature list (list) is allocated by this function and must be \n\n deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the specified entities of a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrInqInpEnts\nidFeature [in] index of feature in active bin\ntype [in] entity type id\ncnt [out] no. of specified entities\nlist [out] list of entities\n\nGet the specified entities of the specified feature. These entities are in the VDATA of the feature.\nnote:\nUsually we need to call cvxPartFtrPlayTo() to rollback to \"idFeature\" first, \n\n and then call this function to get the input entities. \n\n The feature list (list) is allocated by this function and must be \n\n deallocated by the calling procedure. \n\n Some of evxEntType(VX_ENT_BREP, VX_ENT_OP, VX_ENT_POINT, VX_ENT_WIRE) are banned in this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the input entities of a specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrInqInpEnts\nidFeature [in] index of feature in active bin\ntype [in] entity type id\ncnt [out] no. of specified entities\nlist [out] list of entities\n\nGet the specified entities of the specified feature. These entities are in the VDATA of the feature.\nnote:\nUsually we need to call cvxPartFtrPlayTo() to rollback to \"idFeature\" first, \n\n and then call this function to get the input entities. \n\n The feature list (list) is allocated by this function and must be \n\n deallocated by the calling procedure. \n\n Some of evxEntType(VX_ENT_BREP, VX_ENT_OP, VX_ENT_POINT, VX_ENT_WIRE) are banned in this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to obtain the input entities of a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrInqInpEnts\nidFeature [in] index of feature in active bin\ntype [in] entity type id\ncnt [out] no. of specified entities\nlist [out] list of entities\n\nGet the specified entities of the specified feature. These entities are in the VDATA of the feature.\nnote:\nUsually we need to call cvxPartFtrPlayTo() to rollback to \"idFeature\" first, \n\n and then call this function to get the input entities. \n\n The feature list (list) is allocated by this function and must be \n\n deallocated by the calling procedure. \n\n Some of evxEntType(VX_ENT_BREP, VX_ENT_OP, VX_ENT_POINT, VX_ENT_WIRE) are banned in this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of entity IDs for a specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrEnts\nidFeature [in] feature id\nEntType [in] entity type id\nCount [out] number of entities\nEnts [out] list of the entity IDs\n\nOutputs a list of indices of the entity IDs that belong to \n\n the specified feature in the active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nRight now, this function only support to get shape, face, curve, point, dimension form the feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the count of entities for a specific feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrEnts\nidFeature [in] feature id\nEntType [in] entity type id\nCount [out] number of entities\nEnts [out] list of the entity IDs\n\nOutputs a list of indices of the entity IDs that belong to \n\n the specified feature in the active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nRight now, this function only support to get shape, face, curve, point, dimension form the feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the entity IDs for a particular feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrEnts\nidFeature [in] feature id\nEntType [in] entity type id\nCount [out] number of entities\nEnts [out] list of the entity IDs\n\nOutputs a list of indices of the entity IDs that belong to \n\n the specified feature in the active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nRight now, this function only support to get shape, face, curve, point, dimension form the feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve user attribute data of a specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrUserAtGet\nidFeature [in] index of feature or sketch\nCount [out] number of user attributes\nUserAt [out] list of user attributes\n\nRetrieves user attribute data of the specified feature or sketch in the current active part.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the number of user attributes for a feature or sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrUserAtGet\nidFeature [in] index of feature or sketch\nCount [out] number of user attributes\nUserAt [out] list of user attributes\n\nRetrieves user attribute data of the specified feature or sketch in the current active part.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain a list of user attributes for a specific feature or sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrUserAtGet\nidFeature [in] index of feature or sketch\nCount [out] number of user attributes\nUserAt [out] list of user attributes\n\nRetrieves user attribute data of the specified feature or sketch in the current active part.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set user attribute data for a specific feature or sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrUserAtSet\nidFeature [in] index of feature or sketch\nCount [in] number of user attributes\nUserAt [in] list of user attributes\n\nSet user attribute data of the specified feature or sketch in the current active part. \n\n a new user attribute is inserted if the user attribute for the specified label does not exist."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to insert a new user attribute for a specified label if it does not exist?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrUserAtSet\nidFeature [in] index of feature or sketch\nCount [in] number of user attributes\nUserAt [in] list of user attributes\n\nSet user attribute data of the specified feature or sketch in the current active part. \n\n a new user attribute is inserted if the user attribute for the specified label does not exist."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the user attribute data for a feature or sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrUserAtSet\nidFeature [in] index of feature or sketch\nCount [in] number of user attributes\nUserAt [in] list of user attributes\n\nSet user attribute data of the specified feature or sketch in the current active part. \n\n a new user attribute is inserted if the user attribute for the specified label does not exist."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete user attributes of a specified feature or sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrUserAtDel\nidFeature [in] index of feature or sketch\nCount [in] number of user attributes (0 to delete all user attributes)\nUserAt [in] list of user attributes (NULL to delete all user attributes)\n\nDelete user attribute of the specified feature or sketch in the current active part. \n\n the function does not delete any attributes if the specified label is an empty string \n\n or the attribute specified label is not found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to delete all user attributes of a feature or sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrUserAtDel\nidFeature [in] index of feature or sketch\nCount [in] number of user attributes (0 to delete all user attributes)\nUserAt [in] list of user attributes (NULL to delete all user attributes)\n\nDelete user attribute of the specified feature or sketch in the current active part. \n\n the function does not delete any attributes if the specified label is an empty string \n\n or the attribute specified label is not found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a specific user attribute of a feature or sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrUserAtDel\nidFeature [in] index of feature or sketch\nCount [in] number of user attributes (0 to delete all user attributes)\nUserAt [in] list of user attributes (NULL to delete all user attributes)\n\nDelete user attribute of the specified feature or sketch in the current active part. \n\n the function does not delete any attributes if the specified label is an empty string \n\n or the attribute specified label is not found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of holes for a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqHoles\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nCount [out] number of holes\nHoles [out] list of holes\n\nOutputs a list of holes that belong to the specified part. \n\n The calling procedure MUST deallocate the output list using \n\n cvxPartFreeHoles(Count, Holes);\nThe \"idInsFace\" and \"idUntilFace\" fields of the \"svxHoleData\" \n\n structure are not currently supported. They are always output \n\n as zero. \"ThreadType\" is always output as VX_THREAD_CUSTOM."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the number of holes in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqHoles\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nCount [out] number of holes\nHoles [out] list of holes\n\nOutputs a list of holes that belong to the specified part. \n\n The calling procedure MUST deallocate the output list using \n\n cvxPartFreeHoles(Count, Holes);\nThe \"idInsFace\" and \"idUntilFace\" fields of the \"svxHoleData\" \n\n structure are not currently supported. They are always output \n\n as zero. \"ThreadType\" is always output as VX_THREAD_CUSTOM."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list of holes after retrieval?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqHoles\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nCount [out] number of holes\nHoles [out] list of holes\n\nOutputs a list of holes that belong to the specified part. \n\n The calling procedure MUST deallocate the output list using \n\n cvxPartFreeHoles(Count, Holes);\nThe \"idInsFace\" and \"idUntilFace\" fields of the \"svxHoleData\" \n\n structure are not currently supported. They are always output \n\n as zero. \"ThreadType\" is always output as VX_THREAD_CUSTOM."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free memory associated with the input hole list?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFreeHoles\nCount [in] number of holes\nHoles [inout] list of holes\n\nFrees memory associated with the input hole list. \n\n The input memory pointer (*Holes) is set to NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the input memory pointer to NULL?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFreeHoles\nCount [in] number of holes\nHoles [inout] list of holes\n\nFrees memory associated with the input hole list. \n\n The input memory pointer (*Holes) is set to NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to release memory of the hole list?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFreeHoles\nCount [in] number of holes\nHoles [inout] list of holes\n\nFrees memory associated with the input hole list. \n\n The input memory pointer (*Holes) is set to NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of curves in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCurves\nCount [out] number of curves\nCurves [out] list of curve id's\n\nOutputs a list of indices of the curves that belong to \n\n the active part. The calling procedure MUST deallocate \n\n the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of curve id's in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCurves\nCount [out] number of curves\nCurves [out] list of curve id's\n\nOutputs a list of indices of the curves that belong to \n\n the active part. The calling procedure MUST deallocate \n\n the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list after obtaining the curve id's?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCurves\nCount [out] number of curves\nCurves [out] list of curve id's\n\nOutputs a list of indices of the curves that belong to \n\n the active part. The calling procedure MUST deallocate \n\n the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of curve lists in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCrvLists\nCount [out] number of curves\nCrvLists [out] list of curve list id's\n\nOutputs a list of indices of the curve list that belong to \n\n the active part. The calling procedure MUST deallocate \n\n the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of curve list id's in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCrvLists\nCount [out] number of curves\nCrvLists [out] list of curve list id's\n\nOutputs a list of indices of the curve list that belong to \n\n the active part. The calling procedure MUST deallocate \n\n the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list obtained from cvxPartInqCrvLists?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCrvLists\nCount [out] number of curves\nCrvLists [out] list of curve list id's\n\nOutputs a list of indices of the curve list that belong to \n\n the active part. The calling procedure MUST deallocate \n\n the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of curves in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCrvList\nidCrvList [in] id of curve-list entity in active part\nCount [out] number of curves (0 if there are no curves)\nCurves [out] list of curves (NULL if there are no curves)\n\nOutputs a list of the curve or edge entities referenced by the \n\n specified curve-list entity within the active part. The curve \n\n references are output using the \"svxEntPick\" data structure \n\n so that parent sketches can be identified for sketch curves \n\n instanced by the curve list.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve a list of curves from a specified curve-list entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCrvList\nidCrvList [in] id of curve-list entity in active part\nCount [out] number of curves (0 if there are no curves)\nCurves [out] list of curves (NULL if there are no curves)\n\nOutputs a list of the curve or edge entities referenced by the \n\n specified curve-list entity within the active part. The curve \n\n references are output using the \"svxEntPick\" data structure \n\n so that parent sketches can be identified for sketch curves \n\n instanced by the curve list.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to identify parent sketches for sketch curves instanced by the curve list?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCrvList\nidCrvList [in] id of curve-list entity in active part\nCount [out] number of curves (0 if there are no curves)\nCurves [out] list of curves (NULL if there are no curves)\n\nOutputs a list of the curve or edge entities referenced by the \n\n specified curve-list entity within the active part. The curve \n\n references are output using the \"svxEntPick\" data structure \n\n so that parent sketches can be identified for sketch curves \n\n instanced by the curve list.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get curve geometry for a specified curvilinear entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCurve\nidEntity [in] id of curvilinear entity (includes edges)\nNurb [in] 1=get NURBS data for all curve types; else 0\nCrv [out] curve data\n\nGets curve geometry for the specified curvilinear entity, including \n\n face edges. If \"Nurb\" is input as 1, NURBS data is output for \n\n analytic curve types (e.g. line, arc, circle). NURBS data is output \n\n via \"Crv\" using memory allocated by this function. The memory MUST \n\n be deallocated by the calling procedure using cvxCurveFree(). It \n\n is assumed the curve geometry resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get NURBS data for all curve types?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCurve\nidEntity [in] id of curvilinear entity (includes edges)\nNurb [in] 1=get NURBS data for all curve types; else 0\nCrv [out] curve data\n\nGets curve geometry for the specified curvilinear entity, including \n\n face edges. If \"Nurb\" is input as 1, NURBS data is output for \n\n analytic curve types (e.g. line, arc, circle). NURBS data is output \n\n via \"Crv\" using memory allocated by this function. The memory MUST \n\n be deallocated by the calling procedure using cvxCurveFree(). It \n\n is assumed the curve geometry resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate memory allocated by the function cvxPartInqCurve?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCurve\nidEntity [in] id of curvilinear entity (includes edges)\nNurb [in] 1=get NURBS data for all curve types; else 0\nCrv [out] curve data\n\nGets curve geometry for the specified curvilinear entity, including \n\n face edges. If \"Nurb\" is input as 1, NURBS data is output for \n\n analytic curve types (e.g. line, arc, circle). NURBS data is output \n\n via \"Crv\" using memory allocated by this function. The memory MUST \n\n be deallocated by the calling procedure using cvxCurveFree(). It \n\n is assumed the curve geometry resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free memory associated with a specified curve structure?"
            },
            {
                "role": "assistant",
                "content": "cvxCurveFree\nCrv [in] curve structure\n\nFrees memory associated with the specified curve structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to release memory associated with a curve structure?"
            },
            {
                "role": "assistant",
                "content": "cvxCurveFree\nCrv [in] curve structure\n\nFrees memory associated with the specified curve structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate memory for a curve structure?"
            },
            {
                "role": "assistant",
                "content": "cvxCurveFree\nCrv [in] curve structure\n\nFrees memory associated with the specified curve structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of points in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPoints\ncount [out] number of points\npointIdx [out] list of points' indices\n\nOutputs a list of indices of point objects that belong to \n\n the active part. The calling procedure MUST deallocate the \n\n output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of point indices in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPoints\ncount [out] number of points\npointIdx [out] list of points' indices\n\nOutputs a list of indices of point objects that belong to \n\n the active part. The calling procedure MUST deallocate the \n\n output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the points belonging to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPoints\ncount [out] number of points\npointIdx [out] list of points' indices\n\nOutputs a list of indices of point objects that belong to \n\n the active part. The calling procedure MUST deallocate the \n\n output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of annotation texts in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAnnoTexts\nCount [out] number of curves\nTexts [out] list of text id's\n\nOutputs a list of indices of the text that belong to \n\n the active part. The calling procedure MUST deallocate \n\n the output list with cvxMemFree().\nnote:\nSee cvxPartInqTexts() to get both annotation text and balloon text entities."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of text id's for annotation texts in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAnnoTexts\nCount [out] number of curves\nTexts [out] list of text id's\n\nOutputs a list of indices of the text that belong to \n\n the active part. The calling procedure MUST deallocate \n\n the output list with cvxMemFree().\nnote:\nSee cvxPartInqTexts() to get both annotation text and balloon text entities."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve annotation texts in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAnnoTexts\nCount [out] number of curves\nTexts [out] list of text id's\n\nOutputs a list of indices of the text that belong to \n\n the active part. The calling procedure MUST deallocate \n\n the output list with cvxMemFree().\nnote:\nSee cvxPartInqTexts() to get both annotation text and balloon text entities."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of text entities in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqTexts\ncount [out] number of texts\nidTexts [out] list of text id\n\nOutputs a list of id of the text that belong to the active part, \n\n including annotation, balloon, normal, bit-mapped and ready type. \n\n The calling procedure MUST deallocate the output list with cvxMemFree.\nnote:\nSee cvxPartInqAnnoTexts() for a similar function that collects only annotation text entities."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of text entities in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqTexts\ncount [out] number of texts\nidTexts [out] list of text id\n\nOutputs a list of id of the text that belong to the active part, \n\n including annotation, balloon, normal, bit-mapped and ready type. \n\n The calling procedure MUST deallocate the output list with cvxMemFree.\nnote:\nSee cvxPartInqAnnoTexts() for a similar function that collects only annotation text entities."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the text entities in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqTexts\ncount [out] number of texts\nidTexts [out] list of text id\n\nOutputs a list of id of the text that belong to the active part, \n\n including annotation, balloon, normal, bit-mapped and ready type. \n\n The calling procedure MUST deallocate the output list with cvxMemFree.\nnote:\nSee cvxPartInqAnnoTexts() for a similar function that collects only annotation text entities."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of constraints in a component?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqConstraints\nFile [in] object file name (File[0]=0 or NULL for active file)\nPart [in] root object name (Part[0]=0 or NULL for active target object)\ncount [out] number of constraints\ncons [out] list of constraint ids\n\nOutputs a list of indices of the constraints in the specified component.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of constraint ids in a specified component?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqConstraints\nFile [in] object file name (File[0]=0 or NULL for active file)\nPart [in] root object name (Part[0]=0 or NULL for active target object)\ncount [out] number of constraints\ncons [out] list of constraint ids\n\nOutputs a list of indices of the constraints in the specified component.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about constraints in a component?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqConstraints\nFile [in] object file name (File[0]=0 or NULL for active file)\nPart [in] root object name (Part[0]=0 or NULL for active target object)\ncount [out] number of constraints\ncons [out] list of constraint ids\n\nOutputs a list of indices of the constraints in the specified component.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get temp data of a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqTempData\nidPart [in] part id (-1 to use the active part)\ncount [out] count of datas\ndatas [out] temp datas\n\nGet the temp data of the specified part or active part. \n\n Such as the curves' id of the Section View.\nThe memory referenced by \"datas\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)datas))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get count of temp datas?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqTempData\nidPart [in] part id (-1 to use the active part)\ncount [out] count of datas\ndatas [out] temp datas\n\nGet the temp data of the specified part or active part. \n\n Such as the curves' id of the Section View.\nThe memory referenced by \"datas\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)datas))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the temp datas of the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqTempData\nidPart [in] part id (-1 to use the active part)\ncount [out] count of datas\ndatas [out] temp datas\n\nGet the temp data of the specified part or active part. \n\n Such as the curves' id of the Section View.\nThe memory referenced by \"datas\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)datas))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free the memory allocated for temp datas?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqTempData\nidPart [in] part id (-1 to use the active part)\ncount [out] count of datas\ndatas [out] temp datas\n\nGet the temp data of the specified part or active part. \n\n Such as the curves' id of the Section View.\nThe memory referenced by \"datas\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)datas))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of publication sets in a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPublishSets\nFile [in] file name (File[0]=0 or NULL for active file)\nPart [in] root object name (Part[0]=0 or NULL for active target object or single object file)\nCount [out] number of publication sets\nidPubSets [out] list of publication set ids\n\nOutputs a list of indices of the publication set in the specified part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree().\nIf the specified file is not already open, this function will open it \n\n to query publish sets, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep function, before calling this \n\n function, to set a flag that prevents this function from closing the \n\n files that it opens. (Files that are already open before this function \n\n is called are never closed by this function.) If you will be calling \n\n several functions to access data in the same file, keeping the file open \n\n between calls is more efficient than letting each function open and close \n\n the file. However, you must remember to call cvxFileKeep again to reset \n\n the flag after you have finished all of the function calls that need to \n\n access the specified file, and you also become responsible for closing the \n\n file, for example by using one of the cvxFileClose or cvxFileSave functions.\nsee:\ncvxPartPublishSet(): create a publication set to publish the specified entities. \nsee:\ncvxPartInqPublishSet(): query data of the specified publication set. \nsee:\ncvxPartPublishSetDel(): delete the specified publication sets."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the number of publication sets in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPublishSets\nFile [in] file name (File[0]=0 or NULL for active file)\nPart [in] root object name (Part[0]=0 or NULL for active target object or single object file)\nCount [out] number of publication sets\nidPubSets [out] list of publication set ids\n\nOutputs a list of indices of the publication set in the specified part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree().\nIf the specified file is not already open, this function will open it \n\n to query publish sets, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep function, before calling this \n\n function, to set a flag that prevents this function from closing the \n\n files that it opens. (Files that are already open before this function \n\n is called are never closed by this function.) If you will be calling \n\n several functions to access data in the same file, keeping the file open \n\n between calls is more efficient than letting each function open and close \n\n the file. However, you must remember to call cvxFileKeep again to reset \n\n the flag after you have finished all of the function calls that need to \n\n access the specified file, and you also become responsible for closing the \n\n file, for example by using one of the cvxFileClose or cvxFileSave functions.\nsee:\ncvxPartPublishSet(): create a publication set to publish the specified entities. \nsee:\ncvxPartInqPublishSet(): query data of the specified publication set. \nsee:\ncvxPartPublishSetDel(): delete the specified publication sets."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to query the publication set data of a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPublishSets\nFile [in] file name (File[0]=0 or NULL for active file)\nPart [in] root object name (Part[0]=0 or NULL for active target object or single object file)\nCount [out] number of publication sets\nidPubSets [out] list of publication set ids\n\nOutputs a list of indices of the publication set in the specified part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree().\nIf the specified file is not already open, this function will open it \n\n to query publish sets, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep function, before calling this \n\n function, to set a flag that prevents this function from closing the \n\n files that it opens. (Files that are already open before this function \n\n is called are never closed by this function.) If you will be calling \n\n several functions to access data in the same file, keeping the file open \n\n between calls is more efficient than letting each function open and close \n\n the file. However, you must remember to call cvxFileKeep again to reset \n\n the flag after you have finished all of the function calls that need to \n\n access the specified file, and you also become responsible for closing the \n\n file, for example by using one of the cvxFileClose or cvxFileSave functions.\nsee:\ncvxPartPublishSet(): create a publication set to publish the specified entities. \nsee:\ncvxPartInqPublishSet(): query data of the specified publication set. \nsee:\ncvxPartPublishSetDel(): delete the specified publication sets."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to query data of a specified publication set in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPublishSet\nFile [in] file name (File[0]=0 or NULL for active file)\nPart [in] root object name (Part[0]=0 or NULL for active target object or single object file)\nidPubSet [in] id of publication set to query\nName [out] name of publication set (NULL to ignore)\nCount [out] number of entities published by publication set (NULL to ignore)\nidEnts [out] list of ids of the entities published by publication set (NULL to ignore)\n\nQuery data of the specified publication set in the specified part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree().\nIf the specified file is not already open, this function will open it \n\n to query publish sets, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep function, before calling this \n\n function, to set a flag that prevents this function from closing the \n\n files that it opens. (Files that are already open before this function \n\n is called are never closed by this function.) If you will be calling \n\n several functions to access data in the same file, keeping the file open \n\n between calls is more efficient than letting each function open and close \n\n the file. However, you must remember to call cvxFileKeep again to reset \n\n the flag after you have finished all of the function calls that need to \n\n access the specified file, and you also become responsible for closing the \n\n file, for example by using one of the cvxFileClose or cvxFileSave functions.\nsee:\ncvxPartPublishSet(): create a publication set to publish the specified entities. \nsee:\ncvxPartInqPublishSets(): get a list of indices of the publication set. \nsee:\ncvxPartPublishSetDel(): delete the specified publication sets."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name of a publication set?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPublishSet\nFile [in] file name (File[0]=0 or NULL for active file)\nPart [in] root object name (Part[0]=0 or NULL for active target object or single object file)\nidPubSet [in] id of publication set to query\nName [out] name of publication set (NULL to ignore)\nCount [out] number of entities published by publication set (NULL to ignore)\nidEnts [out] list of ids of the entities published by publication set (NULL to ignore)\n\nQuery data of the specified publication set in the specified part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree().\nIf the specified file is not already open, this function will open it \n\n to query publish sets, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep function, before calling this \n\n function, to set a flag that prevents this function from closing the \n\n files that it opens. (Files that are already open before this function \n\n is called are never closed by this function.) If you will be calling \n\n several functions to access data in the same file, keeping the file open \n\n between calls is more efficient than letting each function open and close \n\n the file. However, you must remember to call cvxFileKeep again to reset \n\n the flag after you have finished all of the function calls that need to \n\n access the specified file, and you also become responsible for closing the \n\n file, for example by using one of the cvxFileClose or cvxFileSave functions.\nsee:\ncvxPartPublishSet(): create a publication set to publish the specified entities. \nsee:\ncvxPartInqPublishSets(): get a list of indices of the publication set. \nsee:\ncvxPartPublishSetDel(): delete the specified publication sets."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of entities published by a publication set?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPublishSet\nFile [in] file name (File[0]=0 or NULL for active file)\nPart [in] root object name (Part[0]=0 or NULL for active target object or single object file)\nidPubSet [in] id of publication set to query\nName [out] name of publication set (NULL to ignore)\nCount [out] number of entities published by publication set (NULL to ignore)\nidEnts [out] list of ids of the entities published by publication set (NULL to ignore)\n\nQuery data of the specified publication set in the specified part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree().\nIf the specified file is not already open, this function will open it \n\n to query publish sets, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep function, before calling this \n\n function, to set a flag that prevents this function from closing the \n\n files that it opens. (Files that are already open before this function \n\n is called are never closed by this function.) If you will be calling \n\n several functions to access data in the same file, keeping the file open \n\n between calls is more efficient than letting each function open and close \n\n the file. However, you must remember to call cvxFileKeep again to reset \n\n the flag after you have finished all of the function calls that need to \n\n access the specified file, and you also become responsible for closing the \n\n file, for example by using one of the cvxFileClose or cvxFileSave functions.\nsee:\ncvxPartPublishSet(): create a publication set to publish the specified entities. \nsee:\ncvxPartInqPublishSets(): get a list of indices of the publication set. \nsee:\ncvxPartPublishSetDel(): delete the specified publication sets."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of ids of the entities published by a publication set?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPublishSet\nFile [in] file name (File[0]=0 or NULL for active file)\nPart [in] root object name (Part[0]=0 or NULL for active target object or single object file)\nidPubSet [in] id of publication set to query\nName [out] name of publication set (NULL to ignore)\nCount [out] number of entities published by publication set (NULL to ignore)\nidEnts [out] list of ids of the entities published by publication set (NULL to ignore)\n\nQuery data of the specified publication set in the specified part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree().\nIf the specified file is not already open, this function will open it \n\n to query publish sets, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep function, before calling this \n\n function, to set a flag that prevents this function from closing the \n\n files that it opens. (Files that are already open before this function \n\n is called are never closed by this function.) If you will be calling \n\n several functions to access data in the same file, keeping the file open \n\n between calls is more efficient than letting each function open and close \n\n the file. However, you must remember to call cvxFileKeep again to reset \n\n the flag after you have finished all of the function calls that need to \n\n access the specified file, and you also become responsible for closing the \n\n file, for example by using one of the cvxFileClose or cvxFileSave functions.\nsee:\ncvxPartPublishSet(): create a publication set to publish the specified entities. \nsee:\ncvxPartInqPublishSets(): get a list of indices of the publication set. \nsee:\ncvxPartPublishSetDel(): delete the specified publication sets."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to exit the active part to its parent part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExit\n\nExits the active part to its parent part if it was activated from within an assembly, to its parent CAM plan if it was activated from within a CAM plan, to its parent drawing sheet if it was activated from a drawing sheet view, or to the root object level of its parent file, if it was activated from the level of the root object list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to exit from a CAM plan to its parent?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExit\n\nExits the active part to its parent part if it was activated from within an assembly, to its parent CAM plan if it was activated from within a CAM plan, to its parent drawing sheet if it was activated from a drawing sheet view, or to the root object level of its parent file, if it was activated from the level of the root object list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to exit from a drawing sheet view to its parent drawing sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExit\n\nExits the active part to its parent part if it was activated from within an assembly, to its parent CAM plan if it was activated from within a CAM plan, to its parent drawing sheet if it was activated from a drawing sheet view, or to the root object level of its parent file, if it was activated from the level of the root object list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I exit to the root object level of the parent file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExit\n\nExits the active part to its parent part if it was activated from within an assembly, to its parent CAM plan if it was activated from within a CAM plan, to its parent drawing sheet if it was activated from a drawing sheet view, or to the root object level of its parent file, if it was activated from the level of the root object list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a backup operation in the active part's history?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBackup\n\nInserts a \"Backup\" operation in the active part's history."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to insert a backup operation in the part's history?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBackup\n\nInserts a \"Backup\" operation in the active part's history."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to perform a backup operation on the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBackup\n\nInserts a \"Backup\" operation in the active part's history."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a backup of the current model state in a history operation?"
            },
            {
                "role": "assistant",
                "content": "cvxHistBackup\n\nBacks up the current model state in a history operation. Saving model states in the history can speed up history rollback and regen."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to speed up history rollback and regen by saving model states in the history?"
            },
            {
                "role": "assistant",
                "content": "cvxHistBackup\n\nBacks up the current model state in a history operation. Saving model states in the history can speed up history rollback and regen."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can you explain the process of backing up the model state in a history operation?"
            },
            {
                "role": "assistant",
                "content": "cvxHistBackup\n\nBacks up the current model state in a history operation. Saving model states in the history can speed up history rollback and regen."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to encapsulate the active part's history?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEncapsulate\nOption [in] 0 to encapsulate according to active configuration options; \n\n 1 to force encapsulate to use StartData/ExplicitData; \n\n 2 to force encapsulate to use ExplicitData and explicit shape features; \n\n 3 to force encapsulate to use Explicit data with active config setting for explicit shape features\nKeepDimen [in] 1 to save feature dimensions with encapsulated data; 0 to delete them\n\nEncapsulates the active part's history."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the options for encapsulation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEncapsulate\nOption [in] 0 to encapsulate according to active configuration options; \n\n 1 to force encapsulate to use StartData/ExplicitData; \n\n 2 to force encapsulate to use ExplicitData and explicit shape features; \n\n 3 to force encapsulate to use Explicit data with active config setting for explicit shape features\nKeepDimen [in] 1 to save feature dimensions with encapsulated data; 0 to delete them\n\nEncapsulates the active part's history."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to force encapsulate using StartData/ExplicitData?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEncapsulate\nOption [in] 0 to encapsulate according to active configuration options; \n\n 1 to force encapsulate to use StartData/ExplicitData; \n\n 2 to force encapsulate to use ExplicitData and explicit shape features; \n\n 3 to force encapsulate to use Explicit data with active config setting for explicit shape features\nKeepDimen [in] 1 to save feature dimensions with encapsulated data; 0 to delete them\n\nEncapsulates the active part's history."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to define a static feature for program-generated geometry?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistStart\nName [in] history operation (i.e. feature) name\n\nDefines a \"static\" feature (i.e. history operation) for program-generated geometry (e.g. faces) to attach to. When you are done adding geometry, call cvxPartHistEnd(). This function will cause all existing part geometry and history to be bundled into a single static \"StartData\" history operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to attach history operation to program-generated geometry?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistStart\nName [in] history operation (i.e. feature) name\n\nDefines a \"static\" feature (i.e. history operation) for program-generated geometry (e.g. faces) to attach to. When you are done adding geometry, call cvxPartHistEnd(). This function will cause all existing part geometry and history to be bundled into a single static \"StartData\" history operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to bundle existing part geometry and history into a single static 'StartData' history operation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistStart\nName [in] history operation (i.e. feature) name\n\nDefines a \"static\" feature (i.e. history operation) for program-generated geometry (e.g. faces) to attach to. When you are done adding geometry, call cvxPartHistEnd(). This function will cause all existing part geometry and history to be bundled into a single static \"StartData\" history operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to bundle all existing part geometry and history into a single static 'StartData' history operation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistEnd\n\nUsed in conjunction with cvxPartHistStart() to bundle all existing part geometry and history to be bundled into a single static \"StartData\" history operation. It is the equivalent of cvxPartEncapsulate(1, 0)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to bundle part geometry and history?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistEnd\n\nUsed in conjunction with cvxPartHistStart() to bundle all existing part geometry and history to be bundled into a single static \"StartData\" history operation. It is the equivalent of cvxPartEncapsulate(1, 0)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxPartHistEnd in conjunction with cvxPartHistStart?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistEnd\n\nUsed in conjunction with cvxPartHistStart() to bundle all existing part geometry and history to be bundled into a single static \"StartData\" history operation. It is the equivalent of cvxPartEncapsulate(1, 0)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to redefine a history operation?"
            },
            {
                "role": "assistant",
                "content": "cvxHistRedefine\nOperation [in] name of history operation\n\nLaunches interactive redefinition of the specified history operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to interactively redefine a specific history operation?"
            },
            {
                "role": "assistant",
                "content": "cvxHistRedefine\nOperation [in] name of history operation\n\nLaunches interactive redefinition of the specified history operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I launch the redefinition of a history operation using this function?"
            },
            {
                "role": "assistant",
                "content": "cvxHistRedefine\nOperation [in] name of history operation\n\nLaunches interactive redefinition of the specified history operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to log a history operation for skipping to a specified operation?"
            },
            {
                "role": "assistant",
                "content": "cvxHistSkipTo\nExpression [in] conditional expression (see documentation of \"Skip To\" command)\nOperation [in] name of history operation\nidOp [in] id of history operation created by this function (NULL to ignore)\n\nLogs a history operation that will cause history replay to skip to the specified operation if the specified conditional expression evaluates to a non-zero number (i.e. TRUE). If it evaluates to zero (i.e. FALSE), history execution continues without skipping anything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to cause history replay to skip to a specific operation?"
            },
            {
                "role": "assistant",
                "content": "cvxHistSkipTo\nExpression [in] conditional expression (see documentation of \"Skip To\" command)\nOperation [in] name of history operation\nidOp [in] id of history operation created by this function (NULL to ignore)\n\nLogs a history operation that will cause history replay to skip to the specified operation if the specified conditional expression evaluates to a non-zero number (i.e. TRUE). If it evaluates to zero (i.e. FALSE), history execution continues without skipping anything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use conditional expression to skip history replay to a particular operation?"
            },
            {
                "role": "assistant",
                "content": "cvxHistSkipTo\nExpression [in] conditional expression (see documentation of \"Skip To\" command)\nOperation [in] name of history operation\nidOp [in] id of history operation created by this function (NULL to ignore)\n\nLogs a history operation that will cause history replay to skip to the specified operation if the specified conditional expression evaluates to a non-zero number (i.e. TRUE). If it evaluates to zero (i.e. FALSE), history execution continues without skipping anything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to play the feature history to the top of a specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrPlayTo\nidxFtrPlayTo [in] id of feature play to\nstate [in] state of feature(1-has played, 0-not)\n\nPlay the feature history to the top of specified feature. If the state is 1, rollback to the specified feature, else play to this feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to rollback to a specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrPlayTo\nidxFtrPlayTo [in] id of feature play to\nstate [in] state of feature(1-has played, 0-not)\n\nPlay the feature history to the top of specified feature. If the state is 1, rollback to the specified feature, else play to this feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to play to a specific feature if the state is not 1?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrPlayTo\nidxFtrPlayTo [in] id of feature play to\nstate [in] state of feature(1-has played, 0-not)\n\nPlay the feature history to the top of specified feature. If the state is 1, rollback to the specified feature, else play to this feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to suppress a specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrSuppress\ncount [in] count of idFeatures\nidFeatures [in] list of feature id\nsuppress [in] 1-suppress, 0-unSuppress\n\nSuppress or unSuppress the specified feature (including assembly feature)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to unSuppress a specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrSuppress\ncount [in] count of idFeatures\nidFeatures [in] list of feature id\nsuppress [in] 1-suppress, 0-unSuppress\n\nSuppress or unSuppress the specified feature (including assembly feature)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to suppress assembly features?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrSuppress\ncount [in] count of idFeatures\nidFeatures [in] list of feature id\nsuppress [in] 1-suppress, 0-unSuppress\n\nSuppress or unSuppress the specified feature (including assembly feature)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to group history operations by specifying the first and last operation IDs?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistGroup\nidFirst [in] id of first history operation\nidLast [in] id of last history operation\nName [in] group name (input NULL for default name)\nClose [in] 1 to close new group, else 0\n\nGroup the specified history operations."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to close a new group of history operations?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistGroup\nidFirst [in] id of first history operation\nidLast [in] id of last history operation\nName [in] group name (input NULL for default name)\nClose [in] 1 to close new group, else 0\n\nGroup the specified history operations."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I specify a group name when grouping history operations?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistGroup\nidFirst [in] id of first history operation\nidLast [in] id of last history operation\nName [in] group name (input NULL for default name)\nClose [in] 1 to close new group, else 0\n\nGroup the specified history operations."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the group where a history object is located?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistInqGroup\nidHistObj [in] all object ids in the history tree.\nidGroup [out] group id\n\nOutput the index of the group where the specified history object is located.\nOutput -1 if the specified history object is not in any group."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the group id of a history object?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistInqGroup\nidHistObj [in] all object ids in the history tree.\nidGroup [out] group id\n\nOutput the index of the group where the specified history object is located.\nOutput -1 if the specified history object is not in any group."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a history object is in any group?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistInqGroup\nidHistObj [in] all object ids in the history tree.\nidGroup [out] group id\n\nOutput the index of the group where the specified history object is located.\nOutput -1 if the specified history object is not in any group."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to paste operations from clipboard into the history of active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistPaste\n\nPaste operations currently on the clipboard into the history of the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to paste clipboard operations into part history?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistPaste\n\nPaste operations currently on the clipboard into the history of the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to transfer clipboard operations to part history?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistPaste\n\nPaste operations currently on the clipboard into the history of the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to cut specific operations from the history of the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistClip\nCut [in] 1 to cut; 0 to copy\nCount [in] number of history operations to cut or copy\nOperations [in] list of history operation id's\n\nCuts or copies the specified operations from the history of the active part to the clipboard, replacing operations previously stored on the clipboard."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to copy specific operations from the history of the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistClip\nCut [in] 1 to cut; 0 to copy\nCount [in] number of history operations to cut or copy\nOperations [in] list of history operation id's\n\nCuts or copies the specified operations from the history of the active part to the clipboard, replacing operations previously stored on the clipboard."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to replace operations stored on the clipboard with new ones?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistClip\nCut [in] 1 to cut; 0 to copy\nCount [in] number of history operations to cut or copy\nOperations [in] list of history operation id's\n\nCuts or copies the specified operations from the history of the active part to the clipboard, replacing operations previously stored on the clipboard."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to cut a specified path of the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistClipbyPath\nCut [in] 1 to cut; 0 to copy\nCount [in] number of history operations to cut or copy\npaths [in] list of history operation path\n\nCuts or copies the specified path of the active part to the clipboard, replacing operations previously stored on the clipboard."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to copy a specified path of the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistClipbyPath\nCut [in] 1 to cut; 0 to copy\nCount [in] number of history operations to cut or copy\npaths [in] list of history operation path\n\nCuts or copies the specified path of the active part to the clipboard, replacing operations previously stored on the clipboard."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to replace operations stored on the clipboard?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistClipbyPath\nCut [in] 1 to cut; 0 to copy\nCount [in] number of history operations to cut or copy\npaths [in] list of history operation path\n\nCuts or copies the specified path of the active part to the clipboard, replacing operations previously stored on the clipboard."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to rename an operation in the history of the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistRename\nidOp [in] id of history operation (i.e. feature)\nName [in] new operation name\nDescript [in] new description (NULL if undefined)\n\nRenames an operation in the history of the active part and assigns the specified description to it (if defined). Passing in a blank string for \"Descript\" will clear the description currently assigned to \"idOp\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign a new description to a history operation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistRename\nidOp [in] id of history operation (i.e. feature)\nName [in] new operation name\nDescript [in] new description (NULL if undefined)\n\nRenames an operation in the history of the active part and assigns the specified description to it (if defined). Passing in a blank string for \"Descript\" will clear the description currently assigned to \"idOp\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to clear the description currently assigned to an operation in the history of the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistRename\nidOp [in] id of history operation (i.e. feature)\nName [in] new operation name\nDescript [in] new description (NULL if undefined)\n\nRenames an operation in the history of the active part and assigns the specified description to it (if defined). Passing in a blank string for \"Descript\" will clear the description currently assigned to \"idOp\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete specific operations from the history of the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistDel\nCount [in] number of history operations to delete\nOperations [in] list of history operation id's\n\nDeletes the specified operations from the history of the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove history operations from the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistDel\nCount [in] number of history operations to delete\nOperations [in] list of history operation id's\n\nDeletes the specified operations from the history of the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to delete a list of history operations from the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistDel\nCount [in] number of history operations to delete\nOperations [in] list of history operation id's\n\nDeletes the specified operations from the history of the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete specific operations from the history of the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistDelUtil\nCount [in] number of history operations to delete\nOperations [in] list of history operation id's\nOpType [in] OpType=0 : prompt to the user \n\n OpType=1 : auto delete associated history operations \n\n OpType=2 : auto suppress failed feature\n\nDeletes the specified operations from the history of the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to prompt the user for deleting history operations?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistDelUtil\nCount [in] number of history operations to delete\nOperations [in] list of history operation id's\nOpType [in] OpType=0 : prompt to the user \n\n OpType=1 : auto delete associated history operations \n\n OpType=2 : auto suppress failed feature\n\nDeletes the specified operations from the history of the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to automatically delete associated history operations?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistDelUtil\nCount [in] number of history operations to delete\nOperations [in] list of history operation id's\nOpType [in] OpType=0 : prompt to the user \n\n OpType=1 : auto delete associated history operations \n\n OpType=2 : auto suppress failed feature\n\nDeletes the specified operations from the history of the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to automatically suppress failed feature while deleting history operations?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistDelUtil\nCount [in] number of history operations to delete\nOperations [in] list of history operation id's\nOpType [in] OpType=0 : prompt to the user \n\n OpType=1 : auto delete associated history operations \n\n OpType=2 : auto suppress failed feature\n\nDeletes the specified operations from the history of the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a feature group?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDelGrpFtr\nidFtr [in] feature group index\ndelFtrs [in] delete the features in the folder or not\n\nDelete the feature group. delFtrs: 1-delete the features in the folder \n\n 0-just delete the folder\nnote:\nYou need regen the history after deleting all the features."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to delete features within a folder?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDelGrpFtr\nidFtr [in] feature group index\ndelFtrs [in] delete the features in the folder or not\n\nDelete the feature group. delFtrs: 1-delete the features in the folder \n\n 0-just delete the folder\nnote:\nYou need regen the history after deleting all the features."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to delete a folder without deleting the features within it?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDelGrpFtr\nidFtr [in] feature group index\ndelFtrs [in] delete the features in the folder or not\n\nDelete the feature group. delFtrs: 1-delete the features in the folder \n\n 0-just delete the folder\nnote:\nYou need regen the history after deleting all the features."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to make a profile/datum internal or external?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMkEntExternal\nidEnt [in] index of the profile/datum to make internal/external\nexternal [in] 1-make external, else 0\n\nMake the specified profile/datum internal/external.\nnote:\nThe profile/datum must be used by only one feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the status of a profile/datum to internal or external?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMkEntExternal\nidEnt [in] index of the profile/datum to make internal/external\nexternal [in] 1-make external, else 0\n\nMake the specified profile/datum internal/external.\nnote:\nThe profile/datum must be used by only one feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify if a profile/datum should be internal or external?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMkEntExternal\nidEnt [in] index of the profile/datum to make internal/external\nexternal [in] 1-make external, else 0\n\nMake the specified profile/datum internal/external.\nnote:\nThe profile/datum must be used by only one feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to disable history tree update?"
            },
            {
                "role": "assistant",
                "content": "cvxHistDisable\n\nDisable history tree update.\nThe application that uses this function is ALWAYS responsible for re-enabling history tree update using cvxHistEnable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to stop history tree update?"
            },
            {
                "role": "assistant",
                "content": "cvxHistDisable\n\nDisable history tree update.\nThe application that uses this function is ALWAYS responsible for re-enabling history tree update using cvxHistEnable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to prevent history tree from updating?"
            },
            {
                "role": "assistant",
                "content": "cvxHistDisable\n\nDisable history tree update.\nThe application that uses this function is ALWAYS responsible for re-enabling history tree update using cvxHistEnable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to re-enable history tree update?"
            },
            {
                "role": "assistant",
                "content": "cvxHistEnable\n\nRe-enable history tree update.\nCalls to this function MUST ALWAYS be paired with a prior call to cvxHistDisable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function should be called to re-enable history tree update?"
            },
            {
                "role": "assistant",
                "content": "cvxHistEnable\n\nRe-enable history tree update.\nCalls to this function MUST ALWAYS be paired with a prior call to cvxHistDisable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to pair the call to re-enable history tree update with a prior call to disable?"
            },
            {
                "role": "assistant",
                "content": "cvxHistEnable\n\nRe-enable history tree update.\nCalls to this function MUST ALWAYS be paired with a prior call to cvxHistDisable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a feature to the history manager after executing a template command?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistAdd\nidData [in] index of data container\nFtrName [in] feature name\nOption [in] feature type (0: feature may geometrically modify entities 1: feature may create new entities)\nidFtr [out] index of feature (NULL to ignore)\n\nAdd the feature defined by idData and FtrName in the active part. the function is used in the execution function of a template command. If a template command modifies or adds entities, a feature will be added to the history manager after the command is executed. the use case is as follows:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to add a feature to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistAdd\nidData [in] index of data container\nFtrName [in] feature name\nOption [in] feature type (0: feature may geometrically modify entities 1: feature may create new entities)\nidFtr [out] index of feature (NULL to ignore)\n\nAdd the feature defined by idData and FtrName in the active part. the function is used in the execution function of a template command. If a template command modifies or adds entities, a feature will be added to the history manager after the command is executed. the use case is as follows:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to define a feature using idData and FtrName in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistAdd\nidData [in] index of data container\nFtrName [in] feature name\nOption [in] feature type (0: feature may geometrically modify entities 1: feature may create new entities)\nidFtr [out] index of feature (NULL to ignore)\n\nAdd the feature defined by idData and FtrName in the active part. the function is used in the execution function of a template command. If a template command modifies or adds entities, a feature will be added to the history manager after the command is executed. the use case is as follows:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to erase specified entities of the current part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartErase\nCount [in] number of entities\nidEnts [in] list of entity id's\n\nErase specified entities of current Part.\nnote:\nThis function is the same as cvxEntErase(), cvxEntErase() can erase the entities of part, sketch and drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to erase entities of a part, sketch, and drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxPartErase\nCount [in] number of entities\nidEnts [in] list of entity id's\n\nErase specified entities of current Part.\nnote:\nThis function is the same as cvxEntErase(), cvxEntErase() can erase the entities of part, sketch and drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can you explain how to use cvxPartErase to delete entities?"
            },
            {
                "role": "assistant",
                "content": "cvxPartErase\nCount [in] number of entities\nidEnts [in] list of entity id's\n\nErase specified entities of current Part.\nnote:\nThis function is the same as cvxEntErase(), cvxEntErase() can erase the entities of part, sketch and drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to scroll to a feature in the history tree using a special entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistScrollTo\nidEnt [in] located entity\n\nUse this function to scroll to the feature in the history tree by the special entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to navigate to a specific entity in the history tree?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistScrollTo\nidEnt [in] located entity\n\nUse this function to scroll to the feature in the history tree by the special entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I scroll to a feature in the history tree based on a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistScrollTo\nidEnt [in] located entity\n\nUse this function to scroll to the feature in the history tree by the special entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete specified publication sets of the current part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPublishSetDel\nCount [in] number of publication sets\nidPubSets [in] list of publication set id's\n\nErase specified publication sets of current Part.\nsee:\ncvxPartPublishSet(): create a publication set to publish the specified entities. \nsee:\ncvxPartInqPublishSets(): get a list of indices of the publication set. \nsee:\ncvxPartInqPublishSet(): query data of the specified publication set."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to erase publication sets of the part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPublishSetDel\nCount [in] number of publication sets\nidPubSets [in] list of publication set id's\n\nErase specified publication sets of current Part.\nsee:\ncvxPartPublishSet(): create a publication set to publish the specified entities. \nsee:\ncvxPartInqPublishSets(): get a list of indices of the publication set. \nsee:\ncvxPartInqPublishSet(): query data of the specified publication set."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete publication sets by id?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPublishSetDel\nCount [in] number of publication sets\nidPubSets [in] list of publication set id's\n\nErase specified publication sets of current Part.\nsee:\ncvxPartPublishSet(): create a publication set to publish the specified entities. \nsee:\ncvxPartInqPublishSets(): get a list of indices of the publication set. \nsee:\ncvxPartInqPublishSet(): query data of the specified publication set."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get sheet metal attribute values?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdAtGet\nat [out] sheet metal attribute\n\nGet the sheet metal attribute values."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve sheet metal attribute values?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdAtGet\nat [out] sheet metal attribute\n\nGet the sheet metal attribute values."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the sheet metal attribute using this function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdAtGet\nat [out] sheet metal attribute\n\nGet the sheet metal attribute values."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set sheet metal attribute values?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdAtSet\nat [in] sheet metal attribute\n\nSet the sheet metal attribute values. If there is no sheet metal, it will create one.\nnote:\nif you just want to set some specified variables of svxSmdAt, you'd better \n\n call cvxPartSmdAtGet to get the global values to initialize \"at\" first."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to create a sheet metal attribute if it doesn't exist?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdAtSet\nat [in] sheet metal attribute\n\nSet the sheet metal attribute values. If there is no sheet metal, it will create one.\nnote:\nif you just want to set some specified variables of svxSmdAt, you'd better \n\n call cvxPartSmdAtGet to get the global values to initialize \"at\" first."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the recommended way to initialize the 'at' variable for setting specified sheet metal attribute values?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdAtSet\nat [in] sheet metal attribute\n\nSet the sheet metal attribute values. If there is no sheet metal, it will create one.\nnote:\nif you just want to set some specified variables of svxSmdAt, you'd better \n\n call cvxPartSmdAtGet to get the global values to initialize \"at\" first."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of stationary faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqSmdStatFcs\nidShape [in] shape id\ncountStat [out] count of \"statFcs\" (NULL to ignore)\nstatFcs [out] see description(NULL to ignore)\ncountPair [out] count of \"pairStatFcs\" (NULL to ignore)\npairStatFcs [out] see description(NULL to ignore)\n\nGet the faces on the same side as the stationary face(statFaces). \n\n Get the faces opposite the stationary face(pairStatFaces).\nsee:\nInterface cvxPartInqSmdStatFace can only obtain one face of sheet metal whose attribute is the stationary face.\nnote:\nSheet metal must have a stationary face to call this interface. \n\n The memory referenced by \"statFcs\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)statFcs)). \n\n The memory referenced by \"pairStatFcs\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)pairStatFcs))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the faces on the same side as the stationary face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqSmdStatFcs\nidShape [in] shape id\ncountStat [out] count of \"statFcs\" (NULL to ignore)\nstatFcs [out] see description(NULL to ignore)\ncountPair [out] count of \"pairStatFcs\" (NULL to ignore)\npairStatFcs [out] see description(NULL to ignore)\n\nGet the faces on the same side as the stationary face(statFaces). \n\n Get the faces opposite the stationary face(pairStatFaces).\nsee:\nInterface cvxPartInqSmdStatFace can only obtain one face of sheet metal whose attribute is the stationary face.\nnote:\nSheet metal must have a stationary face to call this interface. \n\n The memory referenced by \"statFcs\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)statFcs)). \n\n The memory referenced by \"pairStatFcs\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)pairStatFcs))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to obtain the faces opposite the stationary face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqSmdStatFcs\nidShape [in] shape id\ncountStat [out] count of \"statFcs\" (NULL to ignore)\nstatFcs [out] see description(NULL to ignore)\ncountPair [out] count of \"pairStatFcs\" (NULL to ignore)\npairStatFcs [out] see description(NULL to ignore)\n\nGet the faces on the same side as the stationary face(statFaces). \n\n Get the faces opposite the stationary face(pairStatFaces).\nsee:\nInterface cvxPartInqSmdStatFace can only obtain one face of sheet metal whose attribute is the stationary face.\nnote:\nSheet metal must have a stationary face to call this interface. \n\n The memory referenced by \"statFcs\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)statFcs)). \n\n The memory referenced by \"pairStatFcs\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)pairStatFcs))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the stationary face of a specified sheet metal solid?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqSmdStatFace\nidShape [in] id of sheet metal solid\nidFace [out] id of stationary face\n\nGet the stationary face of the shape specified by idFace.\nsee:\ncvxPartInqSmdStatFcs. \n\n This interface can obtain all faces on one side of the sheet metal stationary face and all faces on the poopsite side. \n\n This interface can obtain all faces except sheet metal thickness faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to obtain all faces on one side of the sheet metal stationary face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqSmdStatFace\nidShape [in] id of sheet metal solid\nidFace [out] id of stationary face\n\nGet the stationary face of the shape specified by idFace.\nsee:\ncvxPartInqSmdStatFcs. \n\n This interface can obtain all faces on one side of the sheet metal stationary face and all faces on the poopsite side. \n\n This interface can obtain all faces except sheet metal thickness faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain all faces except sheet metal thickness faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqSmdStatFace\nidShape [in] id of sheet metal solid\nidFace [out] id of stationary face\n\nGet the stationary face of the shape specified by idFace.\nsee:\ncvxPartInqSmdStatFcs. \n\n This interface can obtain all faces on one side of the sheet metal stationary face and all faces on the poopsite side. \n\n This interface can obtain all faces except sheet metal thickness faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the opposite face of a given face in a sheet metal solid?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqSmdPairFaces\nidFace [in] index of face\ncount [out] number of opposite faces\nfaces [out] list of opposite face id's\n\nOutputs a list of indices of the face opposite to the input face in a sheet metal solid.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the list of opposite faces for a specific face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqSmdPairFaces\nidFace [in] index of face\ncount [out] number of opposite faces\nfaces [out] list of opposite face id's\n\nOutputs a list of indices of the face opposite to the input face in a sheet metal solid.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list after retrieving the opposite faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqSmdPairFaces\nidFace [in] index of face\ncount [out] number of opposite faces\nfaces [out] list of opposite face id's\n\nOutputs a list of indices of the face opposite to the input face in a sheet metal solid.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the surface type of a sheet metal face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqSmdSrfType\nidFace [in] face id\ntype [out] sheet metal surface type\n\nGet surface type of sheet metal."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about the sheet metal surface type of a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqSmdSrfType\nidFace [in] face id\ntype [out] sheet metal surface type\n\nGet surface type of sheet metal."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the type of sheet metal surface for a specific face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqSmdSrfType\nidFace [in] face id\ntype [out] sheet metal surface type\n\nGet surface type of sheet metal."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the thickness of a specified sheet metal?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShtMetalThick\nidShape [in] index of shape\nthick [out] thick\n\nGet thickness of the specified sheet metal."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about the thickness of a sheet metal?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShtMetalThick\nidShape [in] index of shape\nthick [out] thick\n\nGet thickness of the specified sheet metal."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the thickness of a specific sheet metal shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShtMetalThick\nidShape [in] index of shape\nthick [out] thick\n\nGet thickness of the specified sheet metal."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the stationary face of a sheet metal part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdStatFaceSet\nidFace [in] id of face\nidFtr [out] id of feature(NULL to ignore)\n\nSet the stationary face of a sheet metal part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to specify the stationary face of a sheet metal part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdStatFaceSet\nidFace [in] id of face\nidFtr [out] id of feature(NULL to ignore)\n\nSet the stationary face of a sheet metal part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign the stationary face for a sheet metal part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdStatFaceSet\nidFace [in] id of face\nidFtr [out] id of feature(NULL to ignore)\n\nSet the stationary face of a sheet metal part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of sheet metal flat solids in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartGetFlatSolids\ncnts [out] count of \"solids\"\nsolids [out] list of sheet metal flat solid id\n\nGets a list of sheet metal flat solid id in the active part.\nThe memory referenced by \"solids\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)solids))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve a list of sheet metal flat solid IDs in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartGetFlatSolids\ncnts [out] count of \"solids\"\nsolids [out] list of sheet metal flat solid id\n\nGets a list of sheet metal flat solid id in the active part.\nThe memory referenced by \"solids\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)solids))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free the memory allocated for the list of sheet metal flat solid IDs?"
            },
            {
                "role": "assistant",
                "content": "cvxPartGetFlatSolids\ncnts [out] count of \"solids\"\nsolids [out] list of sheet metal flat solid id\n\nGets a list of sheet metal flat solid id in the active part.\nThe memory referenced by \"solids\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)solids))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of sheet metal flatten id and flatten name in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFlattens\ncount [out] count of idFlattens(flattenNames).\nidFlattens [out] list of flatten id\nflattenNames [out] list of flatten name\n\nGets a list of sheet metal flatten id and flatten name in the active part. \n\n At least one of idFlattens and flattenNames must exist.\nThe memory referenced by \"idFlattens\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)idFlattens)). \n\n The memory referenced by \"FlattenNames\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)FlattenNames))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get a list of sheet metal flatten id and flatten name in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFlattens\ncount [out] count of idFlattens(flattenNames).\nidFlattens [out] list of flatten id\nflattenNames [out] list of flatten name\n\nGets a list of sheet metal flatten id and flatten name in the active part. \n\n At least one of idFlattens and flattenNames must exist.\nThe memory referenced by \"idFlattens\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)idFlattens)). \n\n The memory referenced by \"FlattenNames\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)FlattenNames))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free the memory referenced by idFlattens and flattenNames?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFlattens\ncount [out] count of idFlattens(flattenNames).\nidFlattens [out] list of flatten id\nflattenNames [out] list of flatten name\n\nGets a list of sheet metal flatten id and flatten name in the active part. \n\n At least one of idFlattens and flattenNames must exist.\nThe memory referenced by \"idFlattens\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)idFlattens)). \n\n The memory referenced by \"FlattenNames\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)FlattenNames))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of variables for a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqVars\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nCount [out] number of variables\nVariables [out] list of variables\n\nOutputs a list of variables that belong to the specified part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list of variables?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqVars\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nCount [out] number of variables\nVariables [out] list of variables\n\nOutputs a list of variables that belong to the specified part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the count of variables for a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqVars\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nCount [out] number of variables\nVariables [out] list of variables\n\nOutputs a list of variables that belong to the specified part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of all equation sets?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEqnAllId\ncntList [out] number of idList\nidList [out] list of equation id\ncntSets [out] number of idSets\nidSets [out] list of equation set id\n\nOutput all equations and equation sets. If no equation,*cntList=0 and *idList=NULL. If no equation set,*cntSets=0 and *idSets=NULL.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of all equation ids?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEqnAllId\ncntList [out] number of idList\nidList [out] list of equation id\ncntSets [out] number of idSets\nidSets [out] list of equation set id\n\nOutput all equations and equation sets. If no equation,*cntList=0 and *idList=NULL. If no equation set,*cntSets=0 and *idSets=NULL.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to output all equations and equation sets?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEqnAllId\ncntList [out] number of idList\nidList [out] list of equation id\ncntSets [out] number of idSets\nidSets [out] list of equation set id\n\nOutput all equations and equation sets. If no equation,*cntList=0 and *idList=NULL. If no equation set,*cntSets=0 and *idSets=NULL.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a variable to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarAdd\nVariable [in] definition of a variable\n\nAdds the specified variable to the active part.\nExpression format of string type :\"\\\"str\\\"\"; \n\n Expression format of point type :\"Point(1,2,3)\"; \n\n Expression format of vector type :\"Vector(1,2,3)\";\nIf the type of variable is set to 0,then the sub_type must be set,else ignore. \n\n If the sub_type of variable is set to 1 or 2,then the unit_type must be set,else ignore.\nevxUnitType for length unit and evxAngUnitType for angle unit."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the expression format for a string type variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarAdd\nVariable [in] definition of a variable\n\nAdds the specified variable to the active part.\nExpression format of string type :\"\\\"str\\\"\"; \n\n Expression format of point type :\"Point(1,2,3)\"; \n\n Expression format of vector type :\"Vector(1,2,3)\";\nIf the type of variable is set to 0,then the sub_type must be set,else ignore. \n\n If the sub_type of variable is set to 1 or 2,then the unit_type must be set,else ignore.\nevxUnitType for length unit and evxAngUnitType for angle unit."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the expression format for a point type variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarAdd\nVariable [in] definition of a variable\n\nAdds the specified variable to the active part.\nExpression format of string type :\"\\\"str\\\"\"; \n\n Expression format of point type :\"Point(1,2,3)\"; \n\n Expression format of vector type :\"Vector(1,2,3)\";\nIf the type of variable is set to 0,then the sub_type must be set,else ignore. \n\n If the sub_type of variable is set to 1 or 2,then the unit_type must be set,else ignore.\nevxUnitType for length unit and evxAngUnitType for angle unit."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the expression format for a vector type variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarAdd\nVariable [in] definition of a variable\n\nAdds the specified variable to the active part.\nExpression format of string type :\"\\\"str\\\"\"; \n\n Expression format of point type :\"Point(1,2,3)\"; \n\n Expression format of vector type :\"Vector(1,2,3)\";\nIf the type of variable is set to 0,then the sub_type must be set,else ignore. \n\n If the sub_type of variable is set to 1 or 2,then the unit_type must be set,else ignore.\nevxUnitType for length unit and evxAngUnitType for angle unit."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should the sub_type of a variable be set?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarAdd\nVariable [in] definition of a variable\n\nAdds the specified variable to the active part.\nExpression format of string type :\"\\\"str\\\"\"; \n\n Expression format of point type :\"Point(1,2,3)\"; \n\n Expression format of vector type :\"Vector(1,2,3)\";\nIf the type of variable is set to 0,then the sub_type must be set,else ignore. \n\n If the sub_type of variable is set to 1 or 2,then the unit_type must be set,else ignore.\nevxUnitType for length unit and evxAngUnitType for angle unit."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should the unit_type of a variable be set?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarAdd\nVariable [in] definition of a variable\n\nAdds the specified variable to the active part.\nExpression format of string type :\"\\\"str\\\"\"; \n\n Expression format of point type :\"Point(1,2,3)\"; \n\n Expression format of vector type :\"Vector(1,2,3)\";\nIf the type of variable is set to 0,then the sub_type must be set,else ignore. \n\n If the sub_type of variable is set to 1 or 2,then the unit_type must be set,else ignore.\nevxUnitType for length unit and evxAngUnitType for angle unit."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to search for a variable in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarGet\nVariable [inout] variable data\n\nSearches the active part for the variable named \"Variable->Name\".\nThe value of the specified variable is output via \n\n \"Variable->Value\" in database units (mm, deg).\nIf \"Variable->Name\" is a string variable, the associated \n\n text is output via \"Variable->Expression\". Strings longer \n\n than 256 bytes are truncated.\nnote:\n\"Variable->Expression\" is not used to output the \n\n expression that defines a variable. It is used to output \n\n text associated with a \"string\" variable."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the value of a specified variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarGet\nVariable [inout] variable data\n\nSearches the active part for the variable named \"Variable->Name\".\nThe value of the specified variable is output via \n\n \"Variable->Value\" in database units (mm, deg).\nIf \"Variable->Name\" is a string variable, the associated \n\n text is output via \"Variable->Expression\". Strings longer \n\n than 256 bytes are truncated.\nnote:\n\"Variable->Expression\" is not used to output the \n\n expression that defines a variable. It is used to output \n\n text associated with a \"string\" variable."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to output text associated with a string variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarGet\nVariable [inout] variable data\n\nSearches the active part for the variable named \"Variable->Name\".\nThe value of the specified variable is output via \n\n \"Variable->Value\" in database units (mm, deg).\nIf \"Variable->Name\" is a string variable, the associated \n\n text is output via \"Variable->Expression\". Strings longer \n\n than 256 bytes are truncated.\nnote:\n\"Variable->Expression\" is not used to output the \n\n expression that defines a variable. It is used to output \n\n text associated with a \"string\" variable."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to search for a variable by equation id in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarGetById\nidEqn [in] equation id\nVariable [out] variable data\n\nSearches the active part for the equation id.\nnote:\n\"Variable->Expression\" is not used to output the \n\n expression that defines a variable. It is used to output \n\n text associated with a \"string\" variable."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get variable data by equation id?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarGetById\nidEqn [in] equation id\nVariable [out] variable data\n\nSearches the active part for the equation id.\nnote:\n\"Variable->Expression\" is not used to output the \n\n expression that defines a variable. It is used to output \n\n text associated with a \"string\" variable."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve variable data associated with a specific equation id?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarGetById\nidEqn [in] equation id\nVariable [out] variable data\n\nSearches the active part for the equation id.\nnote:\n\"Variable->Expression\" is not used to output the \n\n expression that defines a variable. It is used to output \n\n text associated with a \"string\" variable."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update part variables and regenerate the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarSet\nCount [in] number of variables\nVariables [in] list of variables\nWorking [in] 1 to display \"Working...\" message, else 0\n\nUpdates the part variables (e.g. dimensions, parameters) \n\n specified by \"Variables\" and regenerates the active part \n\n with the modified values.\nYou can disable the object regeneration normally performed by \n\n this function by inputing \"Working = -1\".\n\n\nExpression format of point type :\"Point(1,2,3)\"; \n\nExpression format of vector type :\"Vector(1,2,3)\";\nsee:\nthe description of \"cvxRootVarSet()\" for the names \n\n used to identify various part parameters and attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to disable object regeneration when updating part variables?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarSet\nCount [in] number of variables\nVariables [in] list of variables\nWorking [in] 1 to display \"Working...\" message, else 0\n\nUpdates the part variables (e.g. dimensions, parameters) \n\n specified by \"Variables\" and regenerates the active part \n\n with the modified values.\nYou can disable the object regeneration normally performed by \n\n this function by inputing \"Working = -1\".\n\n\nExpression format of point type :\"Point(1,2,3)\"; \n\nExpression format of vector type :\"Vector(1,2,3)\";\nsee:\nthe description of \"cvxRootVarSet()\" for the names \n\n used to identify various part parameters and attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the expression format for the point type?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarSet\nCount [in] number of variables\nVariables [in] list of variables\nWorking [in] 1 to display \"Working...\" message, else 0\n\nUpdates the part variables (e.g. dimensions, parameters) \n\n specified by \"Variables\" and regenerates the active part \n\n with the modified values.\nYou can disable the object regeneration normally performed by \n\n this function by inputing \"Working = -1\".\n\n\nExpression format of point type :\"Point(1,2,3)\"; \n\nExpression format of vector type :\"Vector(1,2,3)\";\nsee:\nthe description of \"cvxRootVarSet()\" for the names \n\n used to identify various part parameters and attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the expression format for the vector type?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarSet\nCount [in] number of variables\nVariables [in] list of variables\nWorking [in] 1 to display \"Working...\" message, else 0\n\nUpdates the part variables (e.g. dimensions, parameters) \n\n specified by \"Variables\" and regenerates the active part \n\n with the modified values.\nYou can disable the object regeneration normally performed by \n\n this function by inputing \"Working = -1\".\n\n\nExpression format of point type :\"Point(1,2,3)\"; \n\nExpression format of vector type :\"Vector(1,2,3)\";\nsee:\nthe description of \"cvxRootVarSet()\" for the names \n\n used to identify various part parameters and attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Where can I find the names used to identify various part parameters and attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarSet\nCount [in] number of variables\nVariables [in] list of variables\nWorking [in] 1 to display \"Working...\" message, else 0\n\nUpdates the part variables (e.g. dimensions, parameters) \n\n specified by \"Variables\" and regenerates the active part \n\n with the modified values.\nYou can disable the object regeneration normally performed by \n\n this function by inputing \"Working = -1\".\n\n\nExpression format of point type :\"Point(1,2,3)\"; \n\nExpression format of vector type :\"Vector(1,2,3)\";\nsee:\nthe description of \"cvxRootVarSet()\" for the names \n\n used to identify various part parameters and attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to move existing expressions to a specified equation set?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEqnMoveToEqnSet\nidEqnSet [in] equation set id\ncnt [in] number of variables\nidListEqn [in] list of variables\n\nMoves some existing expressions to the specified equation set.\nUnlike the cvxPartVarAddToEqnSet() interface, this interface changes \n\n the position of original expression.\nThe cvxPartEqnSet() interface can create a equation set and this interface can not."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the position of original expression in an equation set?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEqnMoveToEqnSet\nidEqnSet [in] equation set id\ncnt [in] number of variables\nidListEqn [in] list of variables\n\nMoves some existing expressions to the specified equation set.\nUnlike the cvxPartVarAddToEqnSet() interface, this interface changes \n\n the position of original expression.\nThe cvxPartEqnSet() interface can create a equation set and this interface can not."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I move variables to a specific equation set using this function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEqnMoveToEqnSet\nidEqnSet [in] equation set id\ncnt [in] number of variables\nidListEqn [in] list of variables\n\nMoves some existing expressions to the specified equation set.\nUnlike the cvxPartVarAddToEqnSet() interface, this interface changes \n\n the position of original expression.\nThe cvxPartEqnSet() interface can create a equation set and this interface can not."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add non-existent expressions to an equation set?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarAddToEqnSet\nidEqnSet [in] equation set id\ncnt [in] number of variables\nvars [in] list of variables\n\nAdds some non-existent expressions or copys some existent expressions to the specified equation set.\nUnlike the cvxPartEqnMoveToEqnSet() interface, this interface does not change the position of original expression."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to copy existent expressions to a specified equation set?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarAddToEqnSet\nidEqnSet [in] equation set id\ncnt [in] number of variables\nvars [in] list of variables\n\nAdds some non-existent expressions or copys some existent expressions to the specified equation set.\nUnlike the cvxPartEqnMoveToEqnSet() interface, this interface does not change the position of original expression."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add variables to an equation set without changing the position of the original expression?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarAddToEqnSet\nidEqnSet [in] equation set id\ncnt [in] number of variables\nvars [in] list of variables\n\nAdds some non-existent expressions or copys some existent expressions to the specified equation set.\nUnlike the cvxPartEqnMoveToEqnSet() interface, this interface does not change the position of original expression."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create an equation set in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEqnSet\nCount [in] number of variables\nVariables [in] list of variables\n\nCreate an equation set in active part, and add variables into this equation set."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add variables into an equation set?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEqnSet\nCount [in] number of variables\nVariables [in] list of variables\n\nCreate an equation set in active part, and add variables into this equation set."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the number of variables in an equation set?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEqnSet\nCount [in] number of variables\nVariables [in] list of variables\n\nCreate an equation set in active part, and add variables into this equation set."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create an empty equation set in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEqnSetWithName\nsetName [in] equation set name(can be NULL)\ncount [in] number of variables\nvars [in] list of variables\n\nDESCRIPTION: Create an equation set in active part, and add variables into this equation set.\nThis interface can create an empty equation set or specify the name of the equation set."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add variables into an equation set?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEqnSetWithName\nsetName [in] equation set name(can be NULL)\ncount [in] number of variables\nvars [in] list of variables\n\nDESCRIPTION: Create an equation set in active part, and add variables into this equation set.\nThis interface can create an empty equation set or specify the name of the equation set."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is it possible to specify the name of the equation set while creating it?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEqnSetWithName\nsetName [in] equation set name(can be NULL)\ncount [in] number of variables\nvars [in] list of variables\n\nDESCRIPTION: Create an equation set in active part, and add variables into this equation set.\nThis interface can create an empty equation set or specify the name of the equation set."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the parameters of a specific view in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqView\nidView [in] database id of view saved in the active part\nView [out] view information\n\nOutputs the parameters of the specified view saved in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the information of a view saved in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqView\nidView [in] database id of view saved in the active part\nView [out] view information\n\nOutputs the parameters of the specified view saved in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the details of a particular view in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqView\nidView [in] database id of view saved in the active part\nView [out] view information\n\nOutputs the parameters of the specified view saved in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of 3D views in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqViews\nCount [out] number of 3D views saved in the active part\nViews [out] list of id's of 3D views saved in the active part\n\nOutputs all view ids under the view manager for the current part,including \n\n standard views,custom views, and sectional views.\nThis function allocates memory for the array output via \"Views\". The calling \n\n procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of id's of 3D views in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqViews\nCount [out] number of 3D views saved in the active part\nViews [out] list of id's of 3D views saved in the active part\n\nOutputs all view ids under the view manager for the current part,including \n\n standard views,custom views, and sectional views.\nThis function allocates memory for the array output via \"Views\". The calling \n\n procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve all standard, custom, and sectional views in the current part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqViews\nCount [out] number of 3D views saved in the active part\nViews [out] list of id's of 3D views saved in the active part\n\nOutputs all view ids under the view manager for the current part,including \n\n standard views,custom views, and sectional views.\nThis function allocates memory for the array output via \"Views\". The calling \n\n procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartViewAdd()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartViewAddInit\ndata [out] view data(z3prt,z3asm)\n\nInitialize the parameters of the cvxPartViewAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. \n\n The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to initialize the view data for cvxPartViewAdd()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartViewAddInit\ndata [out] view data(z3prt,z3asm)\n\nInitialize the parameters of the cvxPartViewAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. \n\n The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to empty everything before initializing the view data for cvxPartViewAdd()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartViewAddInit\ndata [out] view data(z3prt,z3asm)\n\nInitialize the parameters of the cvxPartViewAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. \n\n The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a new view in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartViewAdd\nView [in] view definition\nidView [out] id of new view (NULL to ignore)\n\nCreates a new view with the specified definition and adds it to \n\n the active part. Outputs the id of the new view via \"idView\".\nnote:\nInterface cvxPartViewAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a view with a specified definition?"
            },
            {
                "role": "assistant",
                "content": "cvxPartViewAdd\nView [in] view definition\nidView [out] id of new view (NULL to ignore)\n\nCreates a new view with the specified definition and adds it to \n\n the active part. Outputs the id of the new view via \"idView\".\nnote:\nInterface cvxPartViewAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the newly created view?"
            },
            {
                "role": "assistant",
                "content": "cvxPartViewAdd\nView [in] view definition\nidView [out] id of new view (NULL to ignore)\n\nCreates a new view with the specified definition and adds it to \n\n the active part. Outputs the id of the new view via \"idView\".\nnote:\nInterface cvxPartViewAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to record a view object in the view manager?"
            },
            {
                "role": "assistant",
                "content": "cvxPartViewRecord\nidView [in] view id\nView [in] view information\n\nRecord the view object in view manager."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to save view information in the view manager?"
            },
            {
                "role": "assistant",
                "content": "cvxPartViewRecord\nidView [in] view id\nView [in] view information\n\nRecord the view object in view manager."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxPartViewRecord to store a view object?"
            },
            {
                "role": "assistant",
                "content": "cvxPartViewRecord\nidView [in] view id\nView [in] view information\n\nRecord the view object in view manager."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the scope of display traversal to include all objects?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShowAll\n\nSet the scope of display traversal to include all objects, originating \n\n with the root object. This affects operations such as drawing and \n\n picking in all views."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to include all objects in display traversal?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShowAll\n\nSet the scope of display traversal to include all objects, originating \n\n with the root object. This affects operations such as drawing and \n\n picking in all views."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to affect drawing and picking in all views?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShowAll\n\nSet the scope of display traversal to include all objects, originating \n\n with the root object. This affects operations such as drawing and \n\n picking in all views."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to limit the scope of display traversal to only the active target object?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShowTarg\n\nLimit the scope of display traversal to only the active target object. \n\n This affects operations such as drawing and picking in all views. For \n\n example, when the root object is an assembly and the active target is \n\n one of its components, this function prevents other components in the \n\n assembly from being drawn. If the root object is the active target, \n\n this function and cvxPartShowAll() produce the same results."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What does cvxPartShowTarg() function affect in terms of drawing and picking in all views?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShowTarg\n\nLimit the scope of display traversal to only the active target object. \n\n This affects operations such as drawing and picking in all views. For \n\n example, when the root object is an assembly and the active target is \n\n one of its components, this function prevents other components in the \n\n assembly from being drawn. If the root object is the active target, \n\n this function and cvxPartShowAll() produce the same results."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should I use cvxPartShowTarg() function over cvxPartShowAll()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShowTarg\n\nLimit the scope of display traversal to only the active target object. \n\n This affects operations such as drawing and picking in all views. For \n\n example, when the root object is an assembly and the active target is \n\n one of its components, this function prevents other components in the \n\n assembly from being drawn. If the root object is the active target, \n\n this function and cvxPartShowAll() produce the same results."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to open a small window to preview the contents of a file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShowPreview\nfileName [in] file name\nrootName [in] root name\n\nThis interface opens a small window to preview the contents of a file.\nnote:\nThe fileName cannot be equal to the active file name. \n\n The rootName cannot be equal to the active root name. \n\n If the small window is open, the small window is not refreshed.\nsee:\ncvxPartClosePreview()"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to prevent the fileName from being equal to the active file name?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShowPreview\nfileName [in] file name\nrootName [in] root name\n\nThis interface opens a small window to preview the contents of a file.\nnote:\nThe fileName cannot be equal to the active file name. \n\n The rootName cannot be equal to the active root name. \n\n If the small window is open, the small window is not refreshed.\nsee:\ncvxPartClosePreview()"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to prevent the rootName from being equal to the active root name?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShowPreview\nfileName [in] file name\nrootName [in] root name\n\nThis interface opens a small window to preview the contents of a file.\nnote:\nThe fileName cannot be equal to the active file name. \n\n The rootName cannot be equal to the active root name. \n\n If the small window is open, the small window is not refreshed.\nsee:\ncvxPartClosePreview()"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to close the file preview window?"
            },
            {
                "role": "assistant",
                "content": "cvxPartClosePreview\n\nClose the file preview window.\nsee:\ncvxPartShowPreview()"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to close the preview of a file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartClosePreview\n\nClose the file preview window.\nsee:\ncvxPartShowPreview()"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to hide the preview window of a file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartClosePreview\n\nClose the file preview window.\nsee:\ncvxPartShowPreview()"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to split selected roots into multiple single files?"
            },
            {
                "role": "assistant",
                "content": "cvxRootSeparate\ndata [in] separate data\n\nThe function of this interface is to split the selected roots in multiple files into multiple single files.\nInterface cvxRootSeparateInit can initialize the structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize the structure for splitting roots?"
            },
            {
                "role": "assistant",
                "content": "cvxRootSeparate\ndata [in] separate data\n\nThe function of this interface is to split the selected roots in multiple files into multiple single files.\nInterface cvxRootSeparateInit can initialize the structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to separate the selected roots into multiple files?"
            },
            {
                "role": "assistant",
                "content": "cvxRootSeparate\ndata [in] separate data\n\nThe function of this interface is to split the selected roots in multiple files into multiple single files.\nInterface cvxRootSeparateInit can initialize the structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the structure svxRootSepData?"
            },
            {
                "role": "assistant",
                "content": "cvxRootSeparateInit\ndata [out] separate data\n\nInitialize the structure svxRootSepData.\nsee:\ncvxRootSeparate"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to separate root data?"
            },
            {
                "role": "assistant",
                "content": "cvxRootSeparateInit\ndata [out] separate data\n\nInitialize the structure svxRootSepData.\nsee:\ncvxRootSeparate"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxRootSeparateInit to get separate data?"
            },
            {
                "role": "assistant",
                "content": "cvxRootSeparateInit\ndata [out] separate data\n\nInitialize the structure svxRootSepData.\nsee:\ncvxRootSeparate"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to activate a specific root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootActivate\nName [in] root object name\n\nActivates the specified root object in the active file for editing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to edit a root object in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootActivate\nName [in] root object name\n\nActivates the specified root object in the active file for editing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to activate a root object for editing?"
            },
            {
                "role": "assistant",
                "content": "cvxRootActivate\nName [in] root object name\n\nActivates the specified root object in the active file for editing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to activate a root object with specified file and name?"
            },
            {
                "role": "assistant",
                "content": "cvxRootActivate2\nFile [in] root object file\nName [in] root object name\n\nActivates the root object specified by \"File\" and \"Root\" as the \n\n target object and backs up information about the current target \n\n object to an internal stack (up to 16 calls deep).\nThis function will activate the specified file in the memory and \n\n the target object will be activated. cvxFileActivate() will activate \n\n the file and open it in the window.\nWhen this function is called with \"File=NULL\" and \"Root=NULL\", \n\n the last target object on the stack is restored. The calling \n\n application MUST reliably pair calls to this function to set \n\n and restore target objects.\nWhen this function is called with \"File=\"*\" and \"Name=NULL\", \n\n the stack is cleared.\nfor example:\n...(coding)\ncvxRootActivate2(File,Name);\n...(coding)\n...(when no code is needed to execute in the current environment, the interface closure file needs to be called again)\ncvxRootActivate2(NULL,NULL);\n...(coding)\n\nnote:\nIf cvxRootActivate2(NULL,NULL) is not called,unpredictable errors can occur."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to back up information about the current target object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootActivate2\nFile [in] root object file\nName [in] root object name\n\nActivates the root object specified by \"File\" and \"Root\" as the \n\n target object and backs up information about the current target \n\n object to an internal stack (up to 16 calls deep).\nThis function will activate the specified file in the memory and \n\n the target object will be activated. cvxFileActivate() will activate \n\n the file and open it in the window.\nWhen this function is called with \"File=NULL\" and \"Root=NULL\", \n\n the last target object on the stack is restored. The calling \n\n application MUST reliably pair calls to this function to set \n\n and restore target objects.\nWhen this function is called with \"File=\"*\" and \"Name=NULL\", \n\n the stack is cleared.\nfor example:\n...(coding)\ncvxRootActivate2(File,Name);\n...(coding)\n...(when no code is needed to execute in the current environment, the interface closure file needs to be called again)\ncvxRootActivate2(NULL,NULL);\n...(coding)\n\nnote:\nIf cvxRootActivate2(NULL,NULL) is not called,unpredictable errors can occur."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to restore the last target object on the stack?"
            },
            {
                "role": "assistant",
                "content": "cvxRootActivate2\nFile [in] root object file\nName [in] root object name\n\nActivates the root object specified by \"File\" and \"Root\" as the \n\n target object and backs up information about the current target \n\n object to an internal stack (up to 16 calls deep).\nThis function will activate the specified file in the memory and \n\n the target object will be activated. cvxFileActivate() will activate \n\n the file and open it in the window.\nWhen this function is called with \"File=NULL\" and \"Root=NULL\", \n\n the last target object on the stack is restored. The calling \n\n application MUST reliably pair calls to this function to set \n\n and restore target objects.\nWhen this function is called with \"File=\"*\" and \"Name=NULL\", \n\n the stack is cleared.\nfor example:\n...(coding)\ncvxRootActivate2(File,Name);\n...(coding)\n...(when no code is needed to execute in the current environment, the interface closure file needs to be called again)\ncvxRootActivate2(NULL,NULL);\n...(coding)\n\nnote:\nIf cvxRootActivate2(NULL,NULL) is not called,unpredictable errors can occur."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to clear the stack of target objects?"
            },
            {
                "role": "assistant",
                "content": "cvxRootActivate2\nFile [in] root object file\nName [in] root object name\n\nActivates the root object specified by \"File\" and \"Root\" as the \n\n target object and backs up information about the current target \n\n object to an internal stack (up to 16 calls deep).\nThis function will activate the specified file in the memory and \n\n the target object will be activated. cvxFileActivate() will activate \n\n the file and open it in the window.\nWhen this function is called with \"File=NULL\" and \"Root=NULL\", \n\n the last target object on the stack is restored. The calling \n\n application MUST reliably pair calls to this function to set \n\n and restore target objects.\nWhen this function is called with \"File=\"*\" and \"Name=NULL\", \n\n the stack is cleared.\nfor example:\n...(coding)\ncvxRootActivate2(File,Name);\n...(coding)\n...(when no code is needed to execute in the current environment, the interface closure file needs to be called again)\ncvxRootActivate2(NULL,NULL);\n...(coding)\n\nnote:\nIf cvxRootActivate2(NULL,NULL) is not called,unpredictable errors can occur."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to activate a root object as the target object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootActivateLoadAsmCtx\nFile [in] root object file\nName [in] root object name\nisLoad [in] 1 is load assembly context data, 0 is not load\n\nActivates the root object specified by \"File\" and \"Name\" as the \n\n target object and backs up information about the current target \n\n object to an internal stack (up to 16 calls deep).\nWhen this function is called with \"File=NULL\" and \"Name=NULL\", \n\n the last target object on the stack is restored. \n\n When this function is called with \"File=\"*\" and \"Name=NULL\", \n\n the stack is cleared.\nThe calling application MUST reliably pair calls to this function to set \n\n and restore target objects.\nfor example:\n...(coding)\ncvxRootActivateLoadAsmCtx(File,Name,1);\n...(coding)\n...(when no code is needed to execute in the current environment, the interface closure file needs to be called again)\ncvxRootActivateLoadAsmCtx(NULL,NULL,1);\n...(coding)\n\nnote:\nIf cvxRootActivateLoadAsmCtx(NULL,NULL,) is not called,unpredictable errors can occur. \n\n cvxRootActivateLoadAsmCtx(File,Name,0) and cvxRootActivate2(File,Name) have the same function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to back up information about the current target object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootActivateLoadAsmCtx\nFile [in] root object file\nName [in] root object name\nisLoad [in] 1 is load assembly context data, 0 is not load\n\nActivates the root object specified by \"File\" and \"Name\" as the \n\n target object and backs up information about the current target \n\n object to an internal stack (up to 16 calls deep).\nWhen this function is called with \"File=NULL\" and \"Name=NULL\", \n\n the last target object on the stack is restored. \n\n When this function is called with \"File=\"*\" and \"Name=NULL\", \n\n the stack is cleared.\nThe calling application MUST reliably pair calls to this function to set \n\n and restore target objects.\nfor example:\n...(coding)\ncvxRootActivateLoadAsmCtx(File,Name,1);\n...(coding)\n...(when no code is needed to execute in the current environment, the interface closure file needs to be called again)\ncvxRootActivateLoadAsmCtx(NULL,NULL,1);\n...(coding)\n\nnote:\nIf cvxRootActivateLoadAsmCtx(NULL,NULL,) is not called,unpredictable errors can occur. \n\n cvxRootActivateLoadAsmCtx(File,Name,0) and cvxRootActivate2(File,Name) have the same function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to clear the stack of target objects?"
            },
            {
                "role": "assistant",
                "content": "cvxRootActivateLoadAsmCtx\nFile [in] root object file\nName [in] root object name\nisLoad [in] 1 is load assembly context data, 0 is not load\n\nActivates the root object specified by \"File\" and \"Name\" as the \n\n target object and backs up information about the current target \n\n object to an internal stack (up to 16 calls deep).\nWhen this function is called with \"File=NULL\" and \"Name=NULL\", \n\n the last target object on the stack is restored. \n\n When this function is called with \"File=\"*\" and \"Name=NULL\", \n\n the stack is cleared.\nThe calling application MUST reliably pair calls to this function to set \n\n and restore target objects.\nfor example:\n...(coding)\ncvxRootActivateLoadAsmCtx(File,Name,1);\n...(coding)\n...(when no code is needed to execute in the current environment, the interface closure file needs to be called again)\ncvxRootActivateLoadAsmCtx(NULL,NULL,1);\n...(coding)\n\nnote:\nIf cvxRootActivateLoadAsmCtx(NULL,NULL,) is not called,unpredictable errors can occur. \n\n cvxRootActivateLoadAsmCtx(File,Name,0) and cvxRootActivate2(File,Name) have the same function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to restore the last target object on the stack?"
            },
            {
                "role": "assistant",
                "content": "cvxRootActivateLoadAsmCtx\nFile [in] root object file\nName [in] root object name\nisLoad [in] 1 is load assembly context data, 0 is not load\n\nActivates the root object specified by \"File\" and \"Name\" as the \n\n target object and backs up information about the current target \n\n object to an internal stack (up to 16 calls deep).\nWhen this function is called with \"File=NULL\" and \"Name=NULL\", \n\n the last target object on the stack is restored. \n\n When this function is called with \"File=\"*\" and \"Name=NULL\", \n\n the stack is cleared.\nThe calling application MUST reliably pair calls to this function to set \n\n and restore target objects.\nfor example:\n...(coding)\ncvxRootActivateLoadAsmCtx(File,Name,1);\n...(coding)\n...(when no code is needed to execute in the current environment, the interface closure file needs to be called again)\ncvxRootActivateLoadAsmCtx(NULL,NULL,1);\n...(coding)\n\nnote:\nIf cvxRootActivateLoadAsmCtx(NULL,NULL,) is not called,unpredictable errors can occur. \n\n cvxRootActivateLoadAsmCtx(File,Name,0) and cvxRootActivate2(File,Name) have the same function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to reliably pair calls to set and restore target objects?"
            },
            {
                "role": "assistant",
                "content": "cvxRootActivateLoadAsmCtx\nFile [in] root object file\nName [in] root object name\nisLoad [in] 1 is load assembly context data, 0 is not load\n\nActivates the root object specified by \"File\" and \"Name\" as the \n\n target object and backs up information about the current target \n\n object to an internal stack (up to 16 calls deep).\nWhen this function is called with \"File=NULL\" and \"Name=NULL\", \n\n the last target object on the stack is restored. \n\n When this function is called with \"File=\"*\" and \"Name=NULL\", \n\n the stack is cleared.\nThe calling application MUST reliably pair calls to this function to set \n\n and restore target objects.\nfor example:\n...(coding)\ncvxRootActivateLoadAsmCtx(File,Name,1);\n...(coding)\n...(when no code is needed to execute in the current environment, the interface closure file needs to be called again)\ncvxRootActivateLoadAsmCtx(NULL,NULL,1);\n...(coding)\n\nnote:\nIf cvxRootActivateLoadAsmCtx(NULL,NULL,) is not called,unpredictable errors can occur. \n\n cvxRootActivateLoadAsmCtx(File,Name,0) and cvxRootActivate2(File,Name) have the same function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create and insert a root object of a specified type?"
            },
            {
                "role": "assistant",
                "content": "cvxRootAdd\nType [in] root object type\nName [in] root object name\nTemplate [in] optional template object name (or NULL)\n\nCreates and inserts a root object of the specified type \n\n in the active file. It becomes the active object for editing.\nnote:\nUser need to call cvxRootExit() after one root \n\n object is added if inserts two root objects at the \n\n same time, for example: \n\n \n\n sheet or plan. If it is specified, the new root object \n\n is a copy of the template object. It is assumed that \n\n the template object resides in the template file registered \n\n with cvxRootTemplateFile() before this function is called."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to make a root object the active object for editing?"
            },
            {
                "role": "assistant",
                "content": "cvxRootAdd\nType [in] root object type\nName [in] root object name\nTemplate [in] optional template object name (or NULL)\n\nCreates and inserts a root object of the specified type \n\n in the active file. It becomes the active object for editing.\nnote:\nUser need to call cvxRootExit() after one root \n\n object is added if inserts two root objects at the \n\n same time, for example: \n\n \n\n sheet or plan. If it is specified, the new root object \n\n is a copy of the template object. It is assumed that \n\n the template object resides in the template file registered \n\n with cvxRootTemplateFile() before this function is called."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to add a root object using a template object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootAdd\nType [in] root object type\nName [in] root object name\nTemplate [in] optional template object name (or NULL)\n\nCreates and inserts a root object of the specified type \n\n in the active file. It becomes the active object for editing.\nnote:\nUser need to call cvxRootExit() after one root \n\n object is added if inserts two root objects at the \n\n same time, for example: \n\n \n\n sheet or plan. If it is specified, the new root object \n\n is a copy of the template object. It is assumed that \n\n the template object resides in the template file registered \n\n with cvxRootTemplateFile() before this function is called."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a root object with a description for a part?"
            },
            {
                "role": "assistant",
                "content": "cvxRootAdd2\nName [in] root object name\nTemplate [in] optional template object name (or NULL)\nDescription [in] optional object description (or NULL)\n\nThe function is same as cvxRootAdd() but add a parameter Description to add \n\n description for part"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to add a root object with a specific name and description?"
            },
            {
                "role": "assistant",
                "content": "cvxRootAdd2\nName [in] root object name\nTemplate [in] optional template object name (or NULL)\nDescription [in] optional object description (or NULL)\n\nThe function is same as cvxRootAdd() but add a parameter Description to add \n\n description for part"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxRootAdd2 to add a root object with a description?"
            },
            {
                "role": "assistant",
                "content": "cvxRootAdd2\nName [in] root object name\nTemplate [in] optional template object name (or NULL)\nDescription [in] optional object description (or NULL)\n\nThe function is same as cvxRootAdd() but add a parameter Description to add \n\n description for part"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a root object to the background of the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootAdd2Bg\nType [in] root object type (presently only VX_ROOT_PART is supported)\nName [in] part name\n\nAdds a root object into the \"background\" of the active file \n\n is not displayed in the file's root object list. If a root object with the input name already \n\n exists in the active file, a new root object is not added.\nPresently, this function only supports part objects (Type = VX_ROOT_PART)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is it possible to add a root object of type VX_ROOT_PART?"
            },
            {
                "role": "assistant",
                "content": "cvxRootAdd2Bg\nType [in] root object type (presently only VX_ROOT_PART is supported)\nName [in] part name\n\nAdds a root object into the \"background\" of the active file \n\n is not displayed in the file's root object list. If a root object with the input name already \n\n exists in the active file, a new root object is not added.\nPresently, this function only supports part objects (Type = VX_ROOT_PART)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if a root object with the same name already exists in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootAdd2Bg\nType [in] root object type (presently only VX_ROOT_PART is supported)\nName [in] part name\n\nAdds a root object into the \"background\" of the active file \n\n is not displayed in the file's root object list. If a root object with the input name already \n\n exists in the active file, a new root object is not added.\nPresently, this function only supports part objects (Type = VX_ROOT_PART)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to copy a root object from one file to another?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCopy\nSourceFile [in] name of file to copy from\nSourceName [in] name of root object in source file\nDestFile [in] name of file to copy to\nDestName [in] name to assign copied root object\nOverwrite [in] 0 = upgrade DestName to avoid naming conflict, \n\n 1 = prompt before overwriting existing object. \n\n -1 = automatically overwrite existing object.\nUpdateUid [in] 1 to make UID's of copied geometry unique, else 0\n\nCopies the specified root object from \"SourceFile\" to \"DestFile\". \n\n Both files must already exist and must reside in one of the \n\n directories specified in \"vxpaths\" (see cvxPathAdd() and \n\n cvxPathSearchFirst()).\nNormally, when a root object is copied, the unique id's in the copied \n\n object are the same as the original object. When \"UpdateUid=1\", the \n\n the unique id's of the copied object are updated so they are different \n\n from the original object. You should input \"UpdateUid=0\", unless you \n\n have a specific purpose for generating copies with different unique id's. \n\n In normal usage, ZW3D is able to differentiate entities in a copied object \n\n from the original object without changing unique id's."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to copy a root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCopy\nSourceFile [in] name of file to copy from\nSourceName [in] name of root object in source file\nDestFile [in] name of file to copy to\nDestName [in] name to assign copied root object\nOverwrite [in] 0 = upgrade DestName to avoid naming conflict, \n\n 1 = prompt before overwriting existing object. \n\n -1 = automatically overwrite existing object.\nUpdateUid [in] 1 to make UID's of copied geometry unique, else 0\n\nCopies the specified root object from \"SourceFile\" to \"DestFile\". \n\n Both files must already exist and must reside in one of the \n\n directories specified in \"vxpaths\" (see cvxPathAdd() and \n\n cvxPathSearchFirst()).\nNormally, when a root object is copied, the unique id's in the copied \n\n object are the same as the original object. When \"UpdateUid=1\", the \n\n the unique id's of the copied object are updated so they are different \n\n from the original object. You should input \"UpdateUid=0\", unless you \n\n have a specific purpose for generating copies with different unique id's. \n\n In normal usage, ZW3D is able to differentiate entities in a copied object \n\n from the original object without changing unique id's."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle naming conflicts while copying a root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCopy\nSourceFile [in] name of file to copy from\nSourceName [in] name of root object in source file\nDestFile [in] name of file to copy to\nDestName [in] name to assign copied root object\nOverwrite [in] 0 = upgrade DestName to avoid naming conflict, \n\n 1 = prompt before overwriting existing object. \n\n -1 = automatically overwrite existing object.\nUpdateUid [in] 1 to make UID's of copied geometry unique, else 0\n\nCopies the specified root object from \"SourceFile\" to \"DestFile\". \n\n Both files must already exist and must reside in one of the \n\n directories specified in \"vxpaths\" (see cvxPathAdd() and \n\n cvxPathSearchFirst()).\nNormally, when a root object is copied, the unique id's in the copied \n\n object are the same as the original object. When \"UpdateUid=1\", the \n\n the unique id's of the copied object are updated so they are different \n\n from the original object. You should input \"UpdateUid=0\", unless you \n\n have a specific purpose for generating copies with different unique id's. \n\n In normal usage, ZW3D is able to differentiate entities in a copied object \n\n from the original object without changing unique id's."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there an option to update unique IDs of copied geometry?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCopy\nSourceFile [in] name of file to copy from\nSourceName [in] name of root object in source file\nDestFile [in] name of file to copy to\nDestName [in] name to assign copied root object\nOverwrite [in] 0 = upgrade DestName to avoid naming conflict, \n\n 1 = prompt before overwriting existing object. \n\n -1 = automatically overwrite existing object.\nUpdateUid [in] 1 to make UID's of copied geometry unique, else 0\n\nCopies the specified root object from \"SourceFile\" to \"DestFile\". \n\n Both files must already exist and must reside in one of the \n\n directories specified in \"vxpaths\" (see cvxPathAdd() and \n\n cvxPathSearchFirst()).\nNormally, when a root object is copied, the unique id's in the copied \n\n object are the same as the original object. When \"UpdateUid=1\", the \n\n the unique id's of the copied object are updated so they are different \n\n from the original object. You should input \"UpdateUid=0\", unless you \n\n have a specific purpose for generating copies with different unique id's. \n\n In normal usage, ZW3D is able to differentiate entities in a copied object \n\n from the original object without changing unique id's."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a root object from the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootDel\nName [in] root object name\n\nDeletes the specified root object from the active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove a specific root object from the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootDel\nName [in] root object name\n\nDeletes the specified root object from the active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to delete a root object by its name?"
            },
            {
                "role": "assistant",
                "content": "cvxRootDel\nName [in] root object name\n\nDeletes the specified root object from the active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to exit the active root object to the parent object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootExit\n\nExits the active root object to either the parent object or the parent file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to exit the active root object to the parent file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootExit\n\nExits the active root object to either the parent object or the parent file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to exit the active root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootExit\n\nExits the active root object to either the parent object or the parent file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the database id of a root object by name?"
            },
            {
                "role": "assistant",
                "content": "cvxRootId\nName [in] root object name\nidRoot [out] root object id\nType [out] root object type\n\nGets the database id of the specified root object (Name) in \n\n the active file. \"idRoot = 0\" is output if root object is \n\n not found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the type of a root object by its name?"
            },
            {
                "role": "assistant",
                "content": "cvxRootId\nName [in] root object name\nidRoot [out] root object id\nType [out] root object type\n\nGets the database id of the specified root object (Name) in \n\n the active file. \"idRoot = 0\" is output if root object is \n\n not found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if the specified root object is not found in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootId\nName [in] root object name\nidRoot [out] root object id\nType [out] root object type\n\nGets the database id of the specified root object (Name) in \n\n the active file. \"idRoot = 0\" is output if root object is \n\n not found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name of the active root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqActive\nName [out] name of active root object\nnBytes [in] string max size of root object name\n\nOutputs the name of the active root object. \n\n Outputs \"Name[0]=0\" if there is not an active root object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if there is an active root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqActive\nName [out] name of active root object\nnBytes [in] string max size of root object name\n\nOutputs the name of the active root object. \n\n Outputs \"Name[0]=0\" if there is not an active root object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the maximum size of the root object name?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqActive\nName [out] name of active root object\nnBytes [in] string max size of root object name\n\nOutputs the name of the active root object. \n\n Outputs \"Name[0]=0\" if there is not an active root object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqAsm\nName [out] name of top root object in assembly\nnBytes [in] string max size of root object\n\nOutputs the name of the top root object in assembly. \n\n Outputs \"Name[0]=0\" if error."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqAsm\nName [out] name of top root object in assembly\nnBytes [in] string max size of root object\n\nOutputs the name of the top root object in assembly. \n\n Outputs \"Name[0]=0\" if error."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqAsm\nName [out] name of top root object in assembly\nnBytes [in] string max size of root object\n\nOutputs the name of the top root object in assembly. \n\n Outputs \"Name[0]=0\" if error."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if the active root object has been modified?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqMod\nMod [out] 1 if active root object has been modified\n\nOutputs 1 if the active root object has been modified since it was \n\n last activated, otherwise outputs 0.\nsee:\ncvxRootInqModSinceRegen() and cvxFileIsModified()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if the root object has been modified?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqMod\nMod [out] 1 if active root object has been modified\n\nOutputs 1 if the active root object has been modified since it was \n\n last activated, otherwise outputs 0.\nsee:\ncvxRootInqModSinceRegen() and cvxFileIsModified()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find out if the active root object has been modified?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqMod\nMod [out] 1 if active root object has been modified\n\nOutputs 1 if the active root object has been modified since it was \n\n last activated, otherwise outputs 0.\nsee:\ncvxRootInqModSinceRegen() and cvxFileIsModified()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a specific root object has been modified?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqModByName\nfileName [in] Z3/VX file name (fileName[0]=0 or NULL for active file)\nrootName [in] root object name (rootName[0]=0 or NULL for active object)\nmod [out] 1 if active root object has been modified\n\nOutputs 1 if the specified root object has been modified since it was \n\n last activated, otherwise outputs 0.\nsee:\ncvxRootInqModSinceRegen() and cvxFileIsModified()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if the active root object has been modified?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqModByName\nfileName [in] Z3/VX file name (fileName[0]=0 or NULL for active file)\nrootName [in] root object name (rootName[0]=0 or NULL for active object)\nmod [out] 1 if active root object has been modified\n\nOutputs 1 if the specified root object has been modified since it was \n\n last activated, otherwise outputs 0.\nsee:\ncvxRootInqModSinceRegen() and cvxFileIsModified()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find out if a root object has been modified since it was last activated?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqModByName\nfileName [in] Z3/VX file name (fileName[0]=0 or NULL for active file)\nrootName [in] root object name (rootName[0]=0 or NULL for active object)\nmod [out] 1 if active root object has been modified\n\nOutputs 1 if the specified root object has been modified since it was \n\n last activated, otherwise outputs 0.\nsee:\ncvxRootInqModSinceRegen() and cvxFileIsModified()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if the active root object has been modified since last regen?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqModSinceRegen\nMod [out] 1 if active root object has been modified since last regen\n\nOutputs 1 if the active root object has been modified since it was \n\n regenerated, otherwise outputs 0.\nsee:\nalso cvxRootInqMod() and cvxFileIsModified()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if the root object has been modified since the last regeneration?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqModSinceRegen\nMod [out] 1 if active root object has been modified since last regen\n\nOutputs 1 if the active root object has been modified since it was \n\n regenerated, otherwise outputs 0.\nsee:\nalso cvxRootInqMod() and cvxFileIsModified()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find out if the active root object has been modified since the last regen?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqModSinceRegen\nMod [out] 1 if active root object has been modified since last regen\n\nOutputs 1 if the active root object has been modified since it was \n\n regenerated, otherwise outputs 0.\nsee:\nalso cvxRootInqMod() and cvxFileIsModified()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of symbol names in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqSymbol\nfile [in] file path (pass in NULL if undefined)\niCount [out] number of symbol names\nnames [out] list of symbol names\n\nIf \"file\" is input as NULL, this function gets a list of the symbol names in the active file.\nIf the path of a valid ZW3D file is input via \"file\", this function gets a \n\n list of symbol names in the specified file.\nThe list referenced by \"**names\" is allocated by this function and must \n\n be deallocated by the calling procedure. A NULL pointer is output if \n\n no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of symbol names in a specified file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqSymbol\nfile [in] file path (pass in NULL if undefined)\niCount [out] number of symbol names\nnames [out] list of symbol names\n\nIf \"file\" is input as NULL, this function gets a list of the symbol names in the active file.\nIf the path of a valid ZW3D file is input via \"file\", this function gets a \n\n list of symbol names in the specified file.\nThe list referenced by \"**names\" is allocated by this function and must \n\n be deallocated by the calling procedure. A NULL pointer is output if \n\n no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the list of symbol names obtained from the function?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqSymbol\nfile [in] file path (pass in NULL if undefined)\niCount [out] number of symbol names\nnames [out] list of symbol names\n\nIf \"file\" is input as NULL, this function gets a list of the symbol names in the active file.\nIf the path of a valid ZW3D file is input via \"file\", this function gets a \n\n list of symbol names in the specified file.\nThe list referenced by \"**names\" is allocated by this function and must \n\n be deallocated by the calling procedure. A NULL pointer is output if \n\n no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if a file is an assembly or a part?"
            },
            {
                "role": "assistant",
                "content": "cvxRootIsAsm\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nisAsm [out] 1 = Assembly; 0 = Part\n\nGet the type of part root object: part or assembly."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if a part is an assembly?"
            },
            {
                "role": "assistant",
                "content": "cvxRootIsAsm\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nisAsm [out] 1 = Assembly; 0 = Part\n\nGet the type of part root object: part or assembly."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the type of the root object in a part file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootIsAsm\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nisAsm [out] 1 = Assembly; 0 = Part\n\nGet the type of part root object: part or assembly."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of root object names in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootList\nFile [in] optional ZW3D file path (pass in NULL if undefined)\nCount [out] no. of root objects output via \"Names\"\nNames [out] list of root object names\n\nif \"File\" is input as NULL, this function gets a list of the names of all \n\n the root objects in the active file.\nIf the path of a valid ZW3D file is input via \"File\", this function gets a \n\n list of the root objects in the specified file.\nThe list referenced by \"**Names\" is allocated by this function and must \n\n be deallocated by the calling procedure. A NULL pointer is output if \n\n no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of root object names in a specified ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootList\nFile [in] optional ZW3D file path (pass in NULL if undefined)\nCount [out] no. of root objects output via \"Names\"\nNames [out] list of root object names\n\nif \"File\" is input as NULL, this function gets a list of the names of all \n\n the root objects in the active file.\nIf the path of a valid ZW3D file is input via \"File\", this function gets a \n\n list of the root objects in the specified file.\nThe list referenced by \"**Names\" is allocated by this function and must \n\n be deallocated by the calling procedure. A NULL pointer is output if \n\n no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to deallocate the list of root object names obtained from the function?"
            },
            {
                "role": "assistant",
                "content": "cvxRootList\nFile [in] optional ZW3D file path (pass in NULL if undefined)\nCount [out] no. of root objects output via \"Names\"\nNames [out] list of root object names\n\nif \"File\" is input as NULL, this function gets a list of the names of all \n\n the root objects in the active file.\nIf the path of a valid ZW3D file is input via \"File\", this function gets a \n\n list of the root objects in the specified file.\nThe list referenced by \"**Names\" is allocated by this function and must \n\n be deallocated by the calling procedure. A NULL pointer is output if \n\n no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if the graphical root object preview is enabled?"
            },
            {
                "role": "assistant",
                "content": "cvxRootPreviewGet\n\nDetermine whether a graphical root object preview is enabled."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check if the graphical root object preview is enabled?"
            },
            {
                "role": "assistant",
                "content": "cvxRootPreviewGet\n\nDetermine whether a graphical root object preview is enabled."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I find out if the graphical root object preview is enabled?"
            },
            {
                "role": "assistant",
                "content": "cvxRootPreviewGet\n\nDetermine whether a graphical root object preview is enabled."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set preview mode for a root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootPreviewSet\nMode [in] preview mode\nFile [in] file (NULL if VX_PREVIEW_OFF)\nObject [in] object (NULL if VX_PREVIEW_OFF)\n\nDisplays the specified preview for the specified root object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a specific preview for a root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootPreviewSet\nMode [in] preview mode\nFile [in] file (NULL if VX_PREVIEW_OFF)\nObject [in] object (NULL if VX_PREVIEW_OFF)\n\nDisplays the specified preview for the specified root object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to display a preview for a specific file and object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootPreviewSet\nMode [in] preview mode\nFile [in] file (NULL if VX_PREVIEW_OFF)\nObject [in] object (NULL if VX_PREVIEW_OFF)\n\nDisplays the specified preview for the specified root object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to register a template object file name?"
            },
            {
                "role": "assistant",
                "content": "cvxRootTemplateFile\nFile [in] template object file name (NULL for default name)\n\nRegisters the specified object file name as the file from \n\n which cvxRootAdd() retrieves template objects. The file \n\n should reside in one of the active search directories \n\n (see cvxPathAdd()). Input NULL or a blank string to \n\n use the default template file name (defined in config)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set a file for retrieving template objects?"
            },
            {
                "role": "assistant",
                "content": "cvxRootTemplateFile\nFile [in] template object file name (NULL for default name)\n\nRegisters the specified object file name as the file from \n\n which cvxRootAdd() retrieves template objects. The file \n\n should reside in one of the active search directories \n\n (see cvxPathAdd()). Input NULL or a blank string to \n\n use the default template file name (defined in config)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the template object file name for cvxRootAdd()?"
            },
            {
                "role": "assistant",
                "content": "cvxRootTemplateFile\nFile [in] template object file name (NULL for default name)\n\nRegisters the specified object file name as the file from \n\n which cvxRootAdd() retrieves template objects. The file \n\n should reside in one of the active search directories \n\n (see cvxPathAdd()). Input NULL or a blank string to \n\n use the default template file name (defined in config)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to rename a root object in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootRename\nName [in] name of root object to rename (in active file)\nNewName [in] new name for root object\nUpdate [in] 1 to update references by name, else 0\n\nRenames a root object in the active file. If \"Update\" is input \n\n as a non-zero value, references to \"Name\" in the active file are \n\n changed to \"NewName\".\nIt's also can be used to rename the 2d sketch block in the active file.\nnote:\nCan only rename the root name of .Z3 File."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update references by name when renaming a root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootRename\nName [in] name of root object to rename (in active file)\nNewName [in] new name for root object\nUpdate [in] 1 to update references by name, else 0\n\nRenames a root object in the active file. If \"Update\" is input \n\n as a non-zero value, references to \"Name\" in the active file are \n\n changed to \"NewName\".\nIt's also can be used to rename the 2d sketch block in the active file.\nnote:\nCan only rename the root name of .Z3 File."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is it possible to rename a 2D sketch block in the active file using this function?"
            },
            {
                "role": "assistant",
                "content": "cvxRootRename\nName [in] name of root object to rename (in active file)\nNewName [in] new name for root object\nUpdate [in] 1 to update references by name, else 0\n\nRenames a root object in the active file. If \"Update\" is input \n\n as a non-zero value, references to \"Name\" in the active file are \n\n changed to \"NewName\".\nIt's also can be used to rename the 2d sketch block in the active file.\nnote:\nCan only rename the root name of .Z3 File."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to rename a root object in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootRename2\nName [in] name of root object to rename (in active file)\nNewName [in] new name for root object\nDescript [in] new description for root object (NULL if undefined)\nUpdate [in] 1 to update references by name, else 0\n\nRenames a root object in the active file and assigns the specified \n\n description to it (if defined). If \"Update\" is input as a non-zero \n\n value, references to \"Name\" in the active file are changed to \"NewName\". \n\n Passing in a blank string for \"Descript\" will clear the current \n\n description associated with the specified root object.\nnote:\nCan only rename the root name of .Z3 File."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign a new description to a root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootRename2\nName [in] name of root object to rename (in active file)\nNewName [in] new name for root object\nDescript [in] new description for root object (NULL if undefined)\nUpdate [in] 1 to update references by name, else 0\n\nRenames a root object in the active file and assigns the specified \n\n description to it (if defined). If \"Update\" is input as a non-zero \n\n value, references to \"Name\" in the active file are changed to \"NewName\". \n\n Passing in a blank string for \"Descript\" will clear the current \n\n description associated with the specified root object.\nnote:\nCan only rename the root name of .Z3 File."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to update references by name for a root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootRename2\nName [in] name of root object to rename (in active file)\nNewName [in] new name for root object\nDescript [in] new description for root object (NULL if undefined)\nUpdate [in] 1 to update references by name, else 0\n\nRenames a root object in the active file and assigns the specified \n\n description to it (if defined). If \"Update\" is input as a non-zero \n\n value, references to \"Name\" in the active file are changed to \"NewName\". \n\n Passing in a blank string for \"Descript\" will clear the current \n\n description associated with the specified root object.\nnote:\nCan only rename the root name of .Z3 File."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I clear the current description associated with a specified root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootRename2\nName [in] name of root object to rename (in active file)\nNewName [in] new name for root object\nDescript [in] new description for root object (NULL if undefined)\nUpdate [in] 1 to update references by name, else 0\n\nRenames a root object in the active file and assigns the specified \n\n description to it (if defined). If \"Update\" is input as a non-zero \n\n value, references to \"Name\" in the active file are changed to \"NewName\". \n\n Passing in a blank string for \"Descript\" will clear the current \n\n description associated with the specified root object.\nnote:\nCan only rename the root name of .Z3 File."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to rename files and root objects?"
            },
            {
                "role": "assistant",
                "content": "cvxRootRenameMulti\nCount [in] the number of names in each input array\nFileName [in] array of \"Count\" file names or full paths to rename. each file that needs to be renamed must have add file name or full path to the array.\nRootName [in] array of \"Count\" root object names to rename, may be NULL. multi-objects files must specify the root object to be renamed. single-object files do not need to be specified.\nNewFileName [in] array of \"Count\" new file names or full paths, may be NULL. if don't specify new file name, the original file name is used by default. single-object file should always specify new file name.\nNewRootName [in] array of \"Count\" new root object names, may be NULL. if no new root object name is specified for multi-objects file, the original root object name is used by default. single-object files do not need to be specified.\nfDelOriginal [in] 1 to delete original files after renaming, 0 to keep them\n\nRename the given files and/or root objects. If neither the new file name nor the new root object name is specified, the function does nothing and returns ZW_API_INVALID_INPUT.\nIn the active file and files referenced by the active file, references to the given names are updated to use the new names.\nRenaming a root object with this function clears the object's description. Refer to cvxRootRename2() for a function that can assign a description to a root object while renaming it.\nWhen files are renamed, a new copy of each file is saved using the new name rather than actually changing the name of the original file. If the fDelOriginal argument is 1, this function deletes the original files for which new files have been created. If fDelOriginal is 0, the original files are preserved.\nIf a n error does occur, some files and objects might be renamed and others might still have their original names when this function returns."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update references to given names in active file and referenced files?"
            },
            {
                "role": "assistant",
                "content": "cvxRootRenameMulti\nCount [in] the number of names in each input array\nFileName [in] array of \"Count\" file names or full paths to rename. each file that needs to be renamed must have add file name or full path to the array.\nRootName [in] array of \"Count\" root object names to rename, may be NULL. multi-objects files must specify the root object to be renamed. single-object files do not need to be specified.\nNewFileName [in] array of \"Count\" new file names or full paths, may be NULL. if don't specify new file name, the original file name is used by default. single-object file should always specify new file name.\nNewRootName [in] array of \"Count\" new root object names, may be NULL. if no new root object name is specified for multi-objects file, the original root object name is used by default. single-object files do not need to be specified.\nfDelOriginal [in] 1 to delete original files after renaming, 0 to keep them\n\nRename the given files and/or root objects. If neither the new file name nor the new root object name is specified, the function does nothing and returns ZW_API_INVALID_INPUT.\nIn the active file and files referenced by the active file, references to the given names are updated to use the new names.\nRenaming a root object with this function clears the object's description. Refer to cvxRootRename2() for a function that can assign a description to a root object while renaming it.\nWhen files are renamed, a new copy of each file is saved using the new name rather than actually changing the name of the original file. If the fDelOriginal argument is 1, this function deletes the original files for which new files have been created. If fDelOriginal is 0, the original files are preserved.\nIf a n error does occur, some files and objects might be renamed and others might still have their original names when this function returns."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if neither new file name nor new root object name is specified?"
            },
            {
                "role": "assistant",
                "content": "cvxRootRenameMulti\nCount [in] the number of names in each input array\nFileName [in] array of \"Count\" file names or full paths to rename. each file that needs to be renamed must have add file name or full path to the array.\nRootName [in] array of \"Count\" root object names to rename, may be NULL. multi-objects files must specify the root object to be renamed. single-object files do not need to be specified.\nNewFileName [in] array of \"Count\" new file names or full paths, may be NULL. if don't specify new file name, the original file name is used by default. single-object file should always specify new file name.\nNewRootName [in] array of \"Count\" new root object names, may be NULL. if no new root object name is specified for multi-objects file, the original root object name is used by default. single-object files do not need to be specified.\nfDelOriginal [in] 1 to delete original files after renaming, 0 to keep them\n\nRename the given files and/or root objects. If neither the new file name nor the new root object name is specified, the function does nothing and returns ZW_API_INVALID_INPUT.\nIn the active file and files referenced by the active file, references to the given names are updated to use the new names.\nRenaming a root object with this function clears the object's description. Refer to cvxRootRename2() for a function that can assign a description to a root object while renaming it.\nWhen files are renamed, a new copy of each file is saved using the new name rather than actually changing the name of the original file. If the fDelOriginal argument is 1, this function deletes the original files for which new files have been created. If fDelOriginal is 0, the original files are preserved.\nIf a n error does occur, some files and objects might be renamed and others might still have their original names when this function returns."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete original files after renaming?"
            },
            {
                "role": "assistant",
                "content": "cvxRootRenameMulti\nCount [in] the number of names in each input array\nFileName [in] array of \"Count\" file names or full paths to rename. each file that needs to be renamed must have add file name or full path to the array.\nRootName [in] array of \"Count\" root object names to rename, may be NULL. multi-objects files must specify the root object to be renamed. single-object files do not need to be specified.\nNewFileName [in] array of \"Count\" new file names or full paths, may be NULL. if don't specify new file name, the original file name is used by default. single-object file should always specify new file name.\nNewRootName [in] array of \"Count\" new root object names, may be NULL. if no new root object name is specified for multi-objects file, the original root object name is used by default. single-object files do not need to be specified.\nfDelOriginal [in] 1 to delete original files after renaming, 0 to keep them\n\nRename the given files and/or root objects. If neither the new file name nor the new root object name is specified, the function does nothing and returns ZW_API_INVALID_INPUT.\nIn the active file and files referenced by the active file, references to the given names are updated to use the new names.\nRenaming a root object with this function clears the object's description. Refer to cvxRootRename2() for a function that can assign a description to a root object while renaming it.\nWhen files are renamed, a new copy of each file is saved using the new name rather than actually changing the name of the original file. If the fDelOriginal argument is 1, this function deletes the original files for which new files have been created. If fDelOriginal is 0, the original files are preserved.\nIf a n error does occur, some files and objects might be renamed and others might still have their original names when this function returns."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if an error occurs during renaming?"
            },
            {
                "role": "assistant",
                "content": "cvxRootRenameMulti\nCount [in] the number of names in each input array\nFileName [in] array of \"Count\" file names or full paths to rename. each file that needs to be renamed must have add file name or full path to the array.\nRootName [in] array of \"Count\" root object names to rename, may be NULL. multi-objects files must specify the root object to be renamed. single-object files do not need to be specified.\nNewFileName [in] array of \"Count\" new file names or full paths, may be NULL. if don't specify new file name, the original file name is used by default. single-object file should always specify new file name.\nNewRootName [in] array of \"Count\" new root object names, may be NULL. if no new root object name is specified for multi-objects file, the original root object name is used by default. single-object files do not need to be specified.\nfDelOriginal [in] 1 to delete original files after renaming, 0 to keep them\n\nRename the given files and/or root objects. If neither the new file name nor the new root object name is specified, the function does nothing and returns ZW_API_INVALID_INPUT.\nIn the active file and files referenced by the active file, references to the given names are updated to use the new names.\nRenaming a root object with this function clears the object's description. Refer to cvxRootRename2() for a function that can assign a description to a root object while renaming it.\nWhen files are renamed, a new copy of each file is saved using the new name rather than actually changing the name of the original file. If the fDelOriginal argument is 1, this function deletes the original files for which new files have been created. If fDelOriginal is 0, the original files are preserved.\nIf a n error does occur, some files and objects might be renamed and others might still have their original names when this function returns."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to rename files and root objects?"
            },
            {
                "role": "assistant",
                "content": "cvxRootRenameMultiByLongPath\nCount [in] the number of names in each input array\nFileName [in] array of \"Count\" file names or full paths to rename. \n\n each file that needs to be renamed must have add file name or full path to the array.\nRootName [in] array of \"Count\" root object names to rename, may be NULL. \n\n multi-objects files must specify the root object to be renamed. \n\n single-object files do not need to be specified.\nNewFileName [in] array of \"Count\" new file names or full paths, may be NULL. \n\n if don't specify new file name, the original file name is used by default. \n\n single-object file should always specify new file name.\nNewRootName [in] array of \"Count\" new root object names, may be NULL. \n\n if no new root object name is specified for multi-objects file, the original root object name is used by default. \n\n single-object files do not need to be specified.\nfDelOriginal [in] 1 to delete original files after renaming, 0 to keep them\n\nRename the given files and/or root objects. If neither the new file name nor the new root object name \n\n is specified, the function does nothing and returns ZW_API_INVALID_INPUT.\nIn the active file and files referenced by the active file, references to the given names are updated to \n\n use the new names.\nRenaming a root object with this function clears the object's description. Refer to cvxRootRename2() \n\n for a function that can assign a description to a root object while renaming it.\nWhen files are renamed, a new copy of each file is saved using the new name rather than actually changing \n\n the name of the original file. If the fDelOriginal argument is 1, this function deletes the original files \n\n for which new files have been created. If fDelOriginal is 0, the original files are preserved.\nIf an error does occur, some files and objects might be renamed and others might \n\n still have their original names when this function returns. \n\n\nnote:\nNormally, this function is used to rename components/roots in the current activate file. \n\n Don't use cvxRootActivate2 to active the files you want to rename!!! \n\n This function will active them inside."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify new file names or full paths for renaming?"
            },
            {
                "role": "assistant",
                "content": "cvxRootRenameMultiByLongPath\nCount [in] the number of names in each input array\nFileName [in] array of \"Count\" file names or full paths to rename. \n\n each file that needs to be renamed must have add file name or full path to the array.\nRootName [in] array of \"Count\" root object names to rename, may be NULL. \n\n multi-objects files must specify the root object to be renamed. \n\n single-object files do not need to be specified.\nNewFileName [in] array of \"Count\" new file names or full paths, may be NULL. \n\n if don't specify new file name, the original file name is used by default. \n\n single-object file should always specify new file name.\nNewRootName [in] array of \"Count\" new root object names, may be NULL. \n\n if no new root object name is specified for multi-objects file, the original root object name is used by default. \n\n single-object files do not need to be specified.\nfDelOriginal [in] 1 to delete original files after renaming, 0 to keep them\n\nRename the given files and/or root objects. If neither the new file name nor the new root object name \n\n is specified, the function does nothing and returns ZW_API_INVALID_INPUT.\nIn the active file and files referenced by the active file, references to the given names are updated to \n\n use the new names.\nRenaming a root object with this function clears the object's description. Refer to cvxRootRename2() \n\n for a function that can assign a description to a root object while renaming it.\nWhen files are renamed, a new copy of each file is saved using the new name rather than actually changing \n\n the name of the original file. If the fDelOriginal argument is 1, this function deletes the original files \n\n for which new files have been created. If fDelOriginal is 0, the original files are preserved.\nIf an error does occur, some files and objects might be renamed and others might \n\n still have their original names when this function returns. \n\n\nnote:\nNormally, this function is used to rename components/roots in the current activate file. \n\n Don't use cvxRootActivate2 to active the files you want to rename!!! \n\n This function will active them inside."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update references to the given names after renaming?"
            },
            {
                "role": "assistant",
                "content": "cvxRootRenameMultiByLongPath\nCount [in] the number of names in each input array\nFileName [in] array of \"Count\" file names or full paths to rename. \n\n each file that needs to be renamed must have add file name or full path to the array.\nRootName [in] array of \"Count\" root object names to rename, may be NULL. \n\n multi-objects files must specify the root object to be renamed. \n\n single-object files do not need to be specified.\nNewFileName [in] array of \"Count\" new file names or full paths, may be NULL. \n\n if don't specify new file name, the original file name is used by default. \n\n single-object file should always specify new file name.\nNewRootName [in] array of \"Count\" new root object names, may be NULL. \n\n if no new root object name is specified for multi-objects file, the original root object name is used by default. \n\n single-object files do not need to be specified.\nfDelOriginal [in] 1 to delete original files after renaming, 0 to keep them\n\nRename the given files and/or root objects. If neither the new file name nor the new root object name \n\n is specified, the function does nothing and returns ZW_API_INVALID_INPUT.\nIn the active file and files referenced by the active file, references to the given names are updated to \n\n use the new names.\nRenaming a root object with this function clears the object's description. Refer to cvxRootRename2() \n\n for a function that can assign a description to a root object while renaming it.\nWhen files are renamed, a new copy of each file is saved using the new name rather than actually changing \n\n the name of the original file. If the fDelOriginal argument is 1, this function deletes the original files \n\n for which new files have been created. If fDelOriginal is 0, the original files are preserved.\nIf an error does occur, some files and objects might be renamed and others might \n\n still have their original names when this function returns. \n\n\nnote:\nNormally, this function is used to rename components/roots in the current activate file. \n\n Don't use cvxRootActivate2 to active the files you want to rename!!! \n\n This function will active them inside."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete original files after renaming?"
            },
            {
                "role": "assistant",
                "content": "cvxRootRenameMultiByLongPath\nCount [in] the number of names in each input array\nFileName [in] array of \"Count\" file names or full paths to rename. \n\n each file that needs to be renamed must have add file name or full path to the array.\nRootName [in] array of \"Count\" root object names to rename, may be NULL. \n\n multi-objects files must specify the root object to be renamed. \n\n single-object files do not need to be specified.\nNewFileName [in] array of \"Count\" new file names or full paths, may be NULL. \n\n if don't specify new file name, the original file name is used by default. \n\n single-object file should always specify new file name.\nNewRootName [in] array of \"Count\" new root object names, may be NULL. \n\n if no new root object name is specified for multi-objects file, the original root object name is used by default. \n\n single-object files do not need to be specified.\nfDelOriginal [in] 1 to delete original files after renaming, 0 to keep them\n\nRename the given files and/or root objects. If neither the new file name nor the new root object name \n\n is specified, the function does nothing and returns ZW_API_INVALID_INPUT.\nIn the active file and files referenced by the active file, references to the given names are updated to \n\n use the new names.\nRenaming a root object with this function clears the object's description. Refer to cvxRootRename2() \n\n for a function that can assign a description to a root object while renaming it.\nWhen files are renamed, a new copy of each file is saved using the new name rather than actually changing \n\n the name of the original file. If the fDelOriginal argument is 1, this function deletes the original files \n\n for which new files have been created. If fDelOriginal is 0, the original files are preserved.\nIf an error does occur, some files and objects might be renamed and others might \n\n still have their original names when this function returns. \n\n\nnote:\nNormally, this function is used to rename components/roots in the current activate file. \n\n Don't use cvxRootActivate2 to active the files you want to rename!!! \n\n This function will active them inside."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to assign a description to a root object while renaming it?"
            },
            {
                "role": "assistant",
                "content": "cvxRootRenameMultiByLongPath\nCount [in] the number of names in each input array\nFileName [in] array of \"Count\" file names or full paths to rename. \n\n each file that needs to be renamed must have add file name or full path to the array.\nRootName [in] array of \"Count\" root object names to rename, may be NULL. \n\n multi-objects files must specify the root object to be renamed. \n\n single-object files do not need to be specified.\nNewFileName [in] array of \"Count\" new file names or full paths, may be NULL. \n\n if don't specify new file name, the original file name is used by default. \n\n single-object file should always specify new file name.\nNewRootName [in] array of \"Count\" new root object names, may be NULL. \n\n if no new root object name is specified for multi-objects file, the original root object name is used by default. \n\n single-object files do not need to be specified.\nfDelOriginal [in] 1 to delete original files after renaming, 0 to keep them\n\nRename the given files and/or root objects. If neither the new file name nor the new root object name \n\n is specified, the function does nothing and returns ZW_API_INVALID_INPUT.\nIn the active file and files referenced by the active file, references to the given names are updated to \n\n use the new names.\nRenaming a root object with this function clears the object's description. Refer to cvxRootRename2() \n\n for a function that can assign a description to a root object while renaming it.\nWhen files are renamed, a new copy of each file is saved using the new name rather than actually changing \n\n the name of the original file. If the fDelOriginal argument is 1, this function deletes the original files \n\n for which new files have been created. If fDelOriginal is 0, the original files are preserved.\nIf an error does occur, some files and objects might be renamed and others might \n\n still have their original names when this function returns. \n\n\nnote:\nNormally, this function is used to rename components/roots in the current activate file. \n\n Don't use cvxRootActivate2 to active the files you want to rename!!! \n\n This function will active them inside."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to search for a variable in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootVarGet\nName [in] root object name\nVariable [inout] variable data\n\nSearches the specified root object in the active file \n\n for the variable named \"Variable->Name\".\nThe value of the specified variable is output via \n\n \"Variable->Value\" in database units (mm, deg). \n\n The \"isDistance\" parameter is not set by this function.\nIf \"Variable->Name\" is a string variable, the associated \n\n text is output via \"Variable->Expression\". Strings longer \n\n than 256 bytes are truncated.\nnote:\n\"Variable->Expression\" is not used to output the \n\n expression that defines a variable. It is used to output \n\n text associated with a \"string\" variable."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the value of a specified variable?"
            },
            {
                "role": "assistant",
                "content": "cvxRootVarGet\nName [in] root object name\nVariable [inout] variable data\n\nSearches the specified root object in the active file \n\n for the variable named \"Variable->Name\".\nThe value of the specified variable is output via \n\n \"Variable->Value\" in database units (mm, deg). \n\n The \"isDistance\" parameter is not set by this function.\nIf \"Variable->Name\" is a string variable, the associated \n\n text is output via \"Variable->Expression\". Strings longer \n\n than 256 bytes are truncated.\nnote:\n\"Variable->Expression\" is not used to output the \n\n expression that defines a variable. It is used to output \n\n text associated with a \"string\" variable."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to output the text associated with a string variable?"
            },
            {
                "role": "assistant",
                "content": "cvxRootVarGet\nName [in] root object name\nVariable [inout] variable data\n\nSearches the specified root object in the active file \n\n for the variable named \"Variable->Name\".\nThe value of the specified variable is output via \n\n \"Variable->Value\" in database units (mm, deg). \n\n The \"isDistance\" parameter is not set by this function.\nIf \"Variable->Name\" is a string variable, the associated \n\n text is output via \"Variable->Expression\". Strings longer \n\n than 256 bytes are truncated.\nnote:\n\"Variable->Expression\" is not used to output the \n\n expression that defines a variable. It is used to output \n\n text associated with a \"string\" variable."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update variables in a specified root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootVarSet\nName [in] root object name\nCount [in] number of variables\nVar [in] list of variables\nWorking [in] 1 to display \"Working...\" message, else 0\n\nUpdates the variables (e.g. dimensions, parameters) specified \n\n by \"Variables\" in the specified root object within the active \n\n file. The root object is then regenerated.\nYou can disable the object regeneration normally performed by \n\n this function by inputing \"Working = -1\".\nA field of a history operation's input data is identified by a \n\n variable name encoded as follows (brackets included): \n\n with the new attribute value or data assigned to the \"Expression\" field \n\n of the \"svxVariable\" data structure. \n\n using a variable name composed from \"part_\" and a user-data label. \n\n For example, if an item of user data were labeled \"my_data\", the \n\n corresponding variable name would be \"part_my_data\". The new user \n\n data would be defined via the \"Expression\" field of the \"svxVariable\" \n\n data structure.\n  <operation_name:field_number>\n\n  part_number, part_class, part_designer, part_cost, part_supplier  \n  part_description, part_keyword, part_manager, part_material  \n\nThe part \"density\" attribute is modified via the variable name \"part_density\". \n\n The new density (kg/mm3) is defined via the \"Value\" field of the \"svxVariable\" \n\n data structure.\nThe color of all faces in a part may be modified via the \"part_color\" \n\n variable with \"Expression\" set to \"Aluminum\", \"Brass\", \"Bronze\", \"Copper\", \n\n \"Silver\", \"Steel\", \"Stainless\", \"Gold\", \"Gray\", \"Red\", \"Green\", \"Blue\", \n\n \"Brown\", \"Orange\" or RGB values (0-255) encoded as \"R.G.B\" (e.g. 136.255.0).\nCustom variables : \n\n Expression format of string type :\"\\\"str\\\"\"; \n\n Expression format of point type :\"Point(1,2,3)\"; \n\n Expression format of vector type :\"Vector(1,2,3)\"; \n\n\nIf the type of variable is set to 0,then the sub_type must be set,else ignore. \n\n If the sub_type of variable is set to 1 or 2,then the unit_type must be set,else ignore.\nevxUnitType for length unit and evxAngUnitType for angle unit."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to disable object regeneration normally performed by the function?"
            },
            {
                "role": "assistant",
                "content": "cvxRootVarSet\nName [in] root object name\nCount [in] number of variables\nVar [in] list of variables\nWorking [in] 1 to display \"Working...\" message, else 0\n\nUpdates the variables (e.g. dimensions, parameters) specified \n\n by \"Variables\" in the specified root object within the active \n\n file. The root object is then regenerated.\nYou can disable the object regeneration normally performed by \n\n this function by inputing \"Working = -1\".\nA field of a history operation's input data is identified by a \n\n variable name encoded as follows (brackets included): \n\n with the new attribute value or data assigned to the \"Expression\" field \n\n of the \"svxVariable\" data structure. \n\n using a variable name composed from \"part_\" and a user-data label. \n\n For example, if an item of user data were labeled \"my_data\", the \n\n corresponding variable name would be \"part_my_data\". The new user \n\n data would be defined via the \"Expression\" field of the \"svxVariable\" \n\n data structure.\n  <operation_name:field_number>\n\n  part_number, part_class, part_designer, part_cost, part_supplier  \n  part_description, part_keyword, part_manager, part_material  \n\nThe part \"density\" attribute is modified via the variable name \"part_density\". \n\n The new density (kg/mm3) is defined via the \"Value\" field of the \"svxVariable\" \n\n data structure.\nThe color of all faces in a part may be modified via the \"part_color\" \n\n variable with \"Expression\" set to \"Aluminum\", \"Brass\", \"Bronze\", \"Copper\", \n\n \"Silver\", \"Steel\", \"Stainless\", \"Gold\", \"Gray\", \"Red\", \"Green\", \"Blue\", \n\n \"Brown\", \"Orange\" or RGB values (0-255) encoded as \"R.G.B\" (e.g. 136.255.0).\nCustom variables : \n\n Expression format of string type :\"\\\"str\\\"\"; \n\n Expression format of point type :\"Point(1,2,3)\"; \n\n Expression format of vector type :\"Vector(1,2,3)\"; \n\n\nIf the type of variable is set to 0,then the sub_type must be set,else ignore. \n\n If the sub_type of variable is set to 1 or 2,then the unit_type must be set,else ignore.\nevxUnitType for length unit and evxAngUnitType for angle unit."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the color of all faces in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxRootVarSet\nName [in] root object name\nCount [in] number of variables\nVar [in] list of variables\nWorking [in] 1 to display \"Working...\" message, else 0\n\nUpdates the variables (e.g. dimensions, parameters) specified \n\n by \"Variables\" in the specified root object within the active \n\n file. The root object is then regenerated.\nYou can disable the object regeneration normally performed by \n\n this function by inputing \"Working = -1\".\nA field of a history operation's input data is identified by a \n\n variable name encoded as follows (brackets included): \n\n with the new attribute value or data assigned to the \"Expression\" field \n\n of the \"svxVariable\" data structure. \n\n using a variable name composed from \"part_\" and a user-data label. \n\n For example, if an item of user data were labeled \"my_data\", the \n\n corresponding variable name would be \"part_my_data\". The new user \n\n data would be defined via the \"Expression\" field of the \"svxVariable\" \n\n data structure.\n  <operation_name:field_number>\n\n  part_number, part_class, part_designer, part_cost, part_supplier  \n  part_description, part_keyword, part_manager, part_material  \n\nThe part \"density\" attribute is modified via the variable name \"part_density\". \n\n The new density (kg/mm3) is defined via the \"Value\" field of the \"svxVariable\" \n\n data structure.\nThe color of all faces in a part may be modified via the \"part_color\" \n\n variable with \"Expression\" set to \"Aluminum\", \"Brass\", \"Bronze\", \"Copper\", \n\n \"Silver\", \"Steel\", \"Stainless\", \"Gold\", \"Gray\", \"Red\", \"Green\", \"Blue\", \n\n \"Brown\", \"Orange\" or RGB values (0-255) encoded as \"R.G.B\" (e.g. 136.255.0).\nCustom variables : \n\n Expression format of string type :\"\\\"str\\\"\"; \n\n Expression format of point type :\"Point(1,2,3)\"; \n\n Expression format of vector type :\"Vector(1,2,3)\"; \n\n\nIf the type of variable is set to 0,then the sub_type must be set,else ignore. \n\n If the sub_type of variable is set to 1 or 2,then the unit_type must be set,else ignore.\nevxUnitType for length unit and evxAngUnitType for angle unit."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the format for custom variables of string type?"
            },
            {
                "role": "assistant",
                "content": "cvxRootVarSet\nName [in] root object name\nCount [in] number of variables\nVar [in] list of variables\nWorking [in] 1 to display \"Working...\" message, else 0\n\nUpdates the variables (e.g. dimensions, parameters) specified \n\n by \"Variables\" in the specified root object within the active \n\n file. The root object is then regenerated.\nYou can disable the object regeneration normally performed by \n\n this function by inputing \"Working = -1\".\nA field of a history operation's input data is identified by a \n\n variable name encoded as follows (brackets included): \n\n with the new attribute value or data assigned to the \"Expression\" field \n\n of the \"svxVariable\" data structure. \n\n using a variable name composed from \"part_\" and a user-data label. \n\n For example, if an item of user data were labeled \"my_data\", the \n\n corresponding variable name would be \"part_my_data\". The new user \n\n data would be defined via the \"Expression\" field of the \"svxVariable\" \n\n data structure.\n  <operation_name:field_number>\n\n  part_number, part_class, part_designer, part_cost, part_supplier  \n  part_description, part_keyword, part_manager, part_material  \n\nThe part \"density\" attribute is modified via the variable name \"part_density\". \n\n The new density (kg/mm3) is defined via the \"Value\" field of the \"svxVariable\" \n\n data structure.\nThe color of all faces in a part may be modified via the \"part_color\" \n\n variable with \"Expression\" set to \"Aluminum\", \"Brass\", \"Bronze\", \"Copper\", \n\n \"Silver\", \"Steel\", \"Stainless\", \"Gold\", \"Gray\", \"Red\", \"Green\", \"Blue\", \n\n \"Brown\", \"Orange\" or RGB values (0-255) encoded as \"R.G.B\" (e.g. 136.255.0).\nCustom variables : \n\n Expression format of string type :\"\\\"str\\\"\"; \n\n Expression format of point type :\"Point(1,2,3)\"; \n\n Expression format of vector type :\"Vector(1,2,3)\"; \n\n\nIf the type of variable is set to 0,then the sub_type must be set,else ignore. \n\n If the sub_type of variable is set to 1 or 2,then the unit_type must be set,else ignore.\nevxUnitType for length unit and evxAngUnitType for angle unit."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to define a new density for a part?"
            },
            {
                "role": "assistant",
                "content": "cvxRootVarSet\nName [in] root object name\nCount [in] number of variables\nVar [in] list of variables\nWorking [in] 1 to display \"Working...\" message, else 0\n\nUpdates the variables (e.g. dimensions, parameters) specified \n\n by \"Variables\" in the specified root object within the active \n\n file. The root object is then regenerated.\nYou can disable the object regeneration normally performed by \n\n this function by inputing \"Working = -1\".\nA field of a history operation's input data is identified by a \n\n variable name encoded as follows (brackets included): \n\n with the new attribute value or data assigned to the \"Expression\" field \n\n of the \"svxVariable\" data structure. \n\n using a variable name composed from \"part_\" and a user-data label. \n\n For example, if an item of user data were labeled \"my_data\", the \n\n corresponding variable name would be \"part_my_data\". The new user \n\n data would be defined via the \"Expression\" field of the \"svxVariable\" \n\n data structure.\n  <operation_name:field_number>\n\n  part_number, part_class, part_designer, part_cost, part_supplier  \n  part_description, part_keyword, part_manager, part_material  \n\nThe part \"density\" attribute is modified via the variable name \"part_density\". \n\n The new density (kg/mm3) is defined via the \"Value\" field of the \"svxVariable\" \n\n data structure.\nThe color of all faces in a part may be modified via the \"part_color\" \n\n variable with \"Expression\" set to \"Aluminum\", \"Brass\", \"Bronze\", \"Copper\", \n\n \"Silver\", \"Steel\", \"Stainless\", \"Gold\", \"Gray\", \"Red\", \"Green\", \"Blue\", \n\n \"Brown\", \"Orange\" or RGB values (0-255) encoded as \"R.G.B\" (e.g. 136.255.0).\nCustom variables : \n\n Expression format of string type :\"\\\"str\\\"\"; \n\n Expression format of point type :\"Point(1,2,3)\"; \n\n Expression format of vector type :\"Vector(1,2,3)\"; \n\n\nIf the type of variable is set to 0,then the sub_type must be set,else ignore. \n\n If the sub_type of variable is set to 1 or 2,then the unit_type must be set,else ignore.\nevxUnitType for length unit and evxAngUnitType for angle unit."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to show or hide a root object in the root object browser?"
            },
            {
                "role": "assistant",
                "content": "cvxRootVisibility\nName [in] root object name\nVisible [in] 1 to show; 0 to hide\n\nIf \"Visible = 0\", suppress display of the specified \n\n root object in the root object browser.\nIf \"Visible = 1\", enable display of the specified \n\n root object in the root object browser.\nIf is assumed \"Name\" identifies a valid root object \n\n in the active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to suppress the display of a specific root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootVisibility\nName [in] root object name\nVisible [in] 1 to show; 0 to hide\n\nIf \"Visible = 0\", suppress display of the specified \n\n root object in the root object browser.\nIf \"Visible = 1\", enable display of the specified \n\n root object in the root object browser.\nIf is assumed \"Name\" identifies a valid root object \n\n in the active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to enable the display of a specific root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootVisibility\nName [in] root object name\nVisible [in] 1 to show; 0 to hide\n\nIf \"Visible = 0\", suppress display of the specified \n\n root object in the root object browser.\nIf \"Visible = 1\", enable display of the specified \n\n root object in the root object browser.\nIf is assumed \"Name\" identifies a valid root object \n\n in the active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a specified part contains sheet metal?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqSheetMetal\nfile [in] file name (file[0]=0 or NULL for active file)\npart [in] part name (part[0]=0 or NULL for active part)\nshtMetal [out] whether there is sheet metal in the part (1: exist; 0: NOT exist)\n\nCheck that whether there is sheet metal in specified part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a part contains sheet metal?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqSheetMetal\nfile [in] file name (file[0]=0 or NULL for active file)\npart [in] part name (part[0]=0 or NULL for active part)\nshtMetal [out] whether there is sheet metal in the part (1: exist; 0: NOT exist)\n\nCheck that whether there is sheet metal in specified part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find out if a part has sheet metal in it?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqSheetMetal\nfile [in] file name (file[0]=0 or NULL for active file)\npart [in] part name (part[0]=0 or NULL for active part)\nshtMetal [out] whether there is sheet metal in the part (1: exist; 0: NOT exist)\n\nCheck that whether there is sheet metal in specified part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get an attribute from a specified root?"
            },
            {
                "role": "assistant",
                "content": "cvxRootAtItemGet\nfile [in] object file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active target object)\nitemId [in] item id\nat [inout] part item attribute\n\nOutputs an attribute from a specified root.\nThe itemId includes the following items of evxAtItemId: VX_AT_USER VX_AT_NAME VX_AT_NUMBER VX_AT_DESIGNER VX_AT_MANAGER VX_AT_SUPPLIER VX_AT_KEYWORD VX_AT_DESCRIPT VX_AT_START VX_AT_END\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must be assigned to at->label before calling this function. For all other itemId values, at->label can be an empty string (at->label[0]=0) when this function is called.\nIf the specified file is not already open, this function will open it to access the attribute, and will then close the file. If you want to keep the file open, use the cvxFileKeep() function, before calling this function, to set a flag that prevents cvxRootAtItemGet() and cvxRootAtItemSet() from closing the files that they open. (Files that are already open before cvxRootAtItemGet() or cvxRootAtItemSet() is called are never closed by these functions.) Keeping files open is a more efficient way to access multiple attributes in a file, but you must remember to call cvxFileKeep() again to reset the flag after you have finished your calls to cvxRootAtItemGet() and cvxRootAtItemSet(), and you also become responsible for closing the files, for example by using one of the cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the items included in evxAtItemId for cvxRootAtItemGet?"
            },
            {
                "role": "assistant",
                "content": "cvxRootAtItemGet\nfile [in] object file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active target object)\nitemId [in] item id\nat [inout] part item attribute\n\nOutputs an attribute from a specified root.\nThe itemId includes the following items of evxAtItemId: VX_AT_USER VX_AT_NAME VX_AT_NUMBER VX_AT_DESIGNER VX_AT_MANAGER VX_AT_SUPPLIER VX_AT_KEYWORD VX_AT_DESCRIPT VX_AT_START VX_AT_END\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must be assigned to at->label before calling this function. For all other itemId values, at->label can be an empty string (at->label[0]=0) when this function is called.\nIf the specified file is not already open, this function will open it to access the attribute, and will then close the file. If you want to keep the file open, use the cvxFileKeep() function, before calling this function, to set a flag that prevents cvxRootAtItemGet() and cvxRootAtItemSet() from closing the files that they open. (Files that are already open before cvxRootAtItemGet() or cvxRootAtItemSet() is called are never closed by these functions.) Keeping files open is a more efficient way to access multiple attributes in a file, but you must remember to call cvxFileKeep() again to reset the flag after you have finished your calls to cvxRootAtItemGet() and cvxRootAtItemSet(), and you also become responsible for closing the files, for example by using one of the cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to keep the file open while accessing attributes using cvxRootAtItemGet?"
            },
            {
                "role": "assistant",
                "content": "cvxRootAtItemGet\nfile [in] object file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active target object)\nitemId [in] item id\nat [inout] part item attribute\n\nOutputs an attribute from a specified root.\nThe itemId includes the following items of evxAtItemId: VX_AT_USER VX_AT_NAME VX_AT_NUMBER VX_AT_DESIGNER VX_AT_MANAGER VX_AT_SUPPLIER VX_AT_KEYWORD VX_AT_DESCRIPT VX_AT_START VX_AT_END\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must be assigned to at->label before calling this function. For all other itemId values, at->label can be an empty string (at->label[0]=0) when this function is called.\nIf the specified file is not already open, this function will open it to access the attribute, and will then close the file. If you want to keep the file open, use the cvxFileKeep() function, before calling this function, to set a flag that prevents cvxRootAtItemGet() and cvxRootAtItemSet() from closing the files that they open. (Files that are already open before cvxRootAtItemGet() or cvxRootAtItemSet() is called are never closed by these functions.) Keeping files open is a more efficient way to access multiple attributes in a file, but you must remember to call cvxFileKeep() again to reset the flag after you have finished your calls to cvxRootAtItemGet() and cvxRootAtItemSet(), and you also become responsible for closing the files, for example by using one of the cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set an attribute value in a specified root?"
            },
            {
                "role": "assistant",
                "content": "cvxRootAtItemSet\nfile [in] object file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active target object)\nitemId [in] item id\nat [in] part item attribute\n\nSets an attribute value in a specified root.\nThe itemId includes the following items of evxAtItemId: VX_AT_USER VX_AT_NAME VX_AT_NUMBER VX_AT_DESIGNER VX_AT_MANAGER VX_AT_SUPPLIER VX_AT_KEYWORD VX_AT_DESCRIPT\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must be assigned to at->label before calling this function. For all other itemId values, at->label can be an empty string (at->label[0]=0) when this function is called.\nIf the specified file is not already open, this function will open it to access the attribute, and will then close the file. If you want to keep the file open, use the cvxFileKeep() function, before calling this function, to set a flag that prevents cvxRootAtItemGet() and cvxRootAtItemSet() from closing the files that they open. (Files that are already open before cvxRootAtItemGet() or cvxRootAtItemSet() is called are never closed by these functions.) Keeping files open is a more efficient way to access multiple attributes in a file, but you must remember to call cvxFileKeep() again to reset the flag after you have finished your calls to cvxRootAtItemGet() and cvxRootAtItemSet(), and you also become responsible for closing the files, for example by using one of the cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the items included in evxAtItemId?"
            },
            {
                "role": "assistant",
                "content": "cvxRootAtItemSet\nfile [in] object file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active target object)\nitemId [in] item id\nat [in] part item attribute\n\nSets an attribute value in a specified root.\nThe itemId includes the following items of evxAtItemId: VX_AT_USER VX_AT_NAME VX_AT_NUMBER VX_AT_DESIGNER VX_AT_MANAGER VX_AT_SUPPLIER VX_AT_KEYWORD VX_AT_DESCRIPT\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must be assigned to at->label before calling this function. For all other itemId values, at->label can be an empty string (at->label[0]=0) when this function is called.\nIf the specified file is not already open, this function will open it to access the attribute, and will then close the file. If you want to keep the file open, use the cvxFileKeep() function, before calling this function, to set a flag that prevents cvxRootAtItemGet() and cvxRootAtItemSet() from closing the files that they open. (Files that are already open before cvxRootAtItemGet() or cvxRootAtItemSet() is called are never closed by these functions.) Keeping files open is a more efficient way to access multiple attributes in a file, but you must remember to call cvxFileKeep() again to reset the flag after you have finished your calls to cvxRootAtItemGet() and cvxRootAtItemSet(), and you also become responsible for closing the files, for example by using one of the cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to keep the file open while accessing attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxRootAtItemSet\nfile [in] object file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active target object)\nitemId [in] item id\nat [in] part item attribute\n\nSets an attribute value in a specified root.\nThe itemId includes the following items of evxAtItemId: VX_AT_USER VX_AT_NAME VX_AT_NUMBER VX_AT_DESIGNER VX_AT_MANAGER VX_AT_SUPPLIER VX_AT_KEYWORD VX_AT_DESCRIPT\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must be assigned to at->label before calling this function. For all other itemId values, at->label can be an empty string (at->label[0]=0) when this function is called.\nIf the specified file is not already open, this function will open it to access the attribute, and will then close the file. If you want to keep the file open, use the cvxFileKeep() function, before calling this function, to set a flag that prevents cvxRootAtItemGet() and cvxRootAtItemSet() from closing the files that they open. (Files that are already open before cvxRootAtItemGet() or cvxRootAtItemSet() is called are never closed by these functions.) Keeping files open is a more efficient way to access multiple attributes in a file, but you must remember to call cvxFileKeep() again to reset the flag after you have finished your calls to cvxRootAtItemGet() and cvxRootAtItemSet(), and you also become responsible for closing the files, for example by using one of the cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set user custom data to a specific root object of an existing ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataSet\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\nobjectName [in] root object name (objName[0]=0 or NULL for active object)\ndata [in] customization data\ndataLength [in] length of customization data\n\nSet user custom data to a specific root object of an existing ZW3D file. \n\n Program will overwrite the first custom data if root object already has custom data."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to overwrite the first custom data if the root object already has custom data?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataSet\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\nobjectName [in] root object name (objName[0]=0 or NULL for active object)\ndata [in] customization data\ndataLength [in] length of customization data\n\nSet user custom data to a specific root object of an existing ZW3D file. \n\n Program will overwrite the first custom data if root object already has custom data."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to set user custom data to an active object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataSet\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\nobjectName [in] root object name (objName[0]=0 or NULL for active object)\ndata [in] customization data\ndataLength [in] length of customization data\n\nSet user custom data to a specific root object of an existing ZW3D file. \n\n Program will overwrite the first custom data if root object already has custom data."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set user custom data to a ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataSet\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\nobjectName [in] root object name (objName[0]=0 or NULL for active object)\ndata [in] customization data\ndataLength [in] length of customization data\n\nSet user custom data to a specific root object of an existing ZW3D file. \n\n Program will overwrite the first custom data if root object already has custom data."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set user custom data with a specific length of customization data?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataSet\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\nobjectName [in] root object name (objName[0]=0 or NULL for active object)\ndata [in] customization data\ndataLength [in] length of customization data\n\nSet user custom data to a specific root object of an existing ZW3D file. \n\n Program will overwrite the first custom data if root object already has custom data."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the first user custom data from an existing root object of a ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataGet\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\nobjectName [in] root object name (objName[0]=0 or NULL for active object)\ndata [out] customization data\ndataLength [out] length of customization data\n\nGet the first user custom data from a existing root object of an existing ZW3D file. \n\n The list referenced by \"**data\" is allocated by this function and must \n\n be deallocated by the calling procedure by cvxMemFree() function. A NULL \n\n pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve customization data from a root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataGet\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\nobjectName [in] root object name (objName[0]=0 or NULL for active object)\ndata [out] customization data\ndataLength [out] length of customization data\n\nGet the first user custom data from a existing root object of an existing ZW3D file. \n\n The list referenced by \"**data\" is allocated by this function and must \n\n be deallocated by the calling procedure by cvxMemFree() function. A NULL \n\n pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the length of customization data in ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataGet\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\nobjectName [in] root object name (objName[0]=0 or NULL for active object)\ndata [out] customization data\ndataLength [out] length of customization data\n\nGet the first user custom data from a existing root object of an existing ZW3D file. \n\n The list referenced by \"**data\" is allocated by this function and must \n\n be deallocated by the calling procedure by cvxMemFree() function. A NULL \n\n pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete the first user custom data from an existing root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataDel\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\nobjectName [in] root object name (objName[0]=0 or NULL for active object)\n\nDelete the first user custom data from a existing root object of an existing ZW3D file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove custom data from a ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataDel\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\nobjectName [in] root object name (objName[0]=0 or NULL for active object)\n\nDelete the first user custom data from a existing root object of an existing ZW3D file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete custom data from a specific root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataDel\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\nobjectName [in] root object name (objName[0]=0 or NULL for active object)\n\nDelete the first user custom data from a existing root object of an existing ZW3D file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add user custom data to a specific root object of an existing ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataAdd\nfile [in] ZW3D file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active object)\ndata [in] customization data (pointer to null-terminated ascii string)\nidCustomData [out] index of new customization data object (NULL to ignore)\n\nAdd user custom data to a specific root object of an existing ZW3D file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add customization data to a specific root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataAdd\nfile [in] ZW3D file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active object)\ndata [in] customization data (pointer to null-terminated ascii string)\nidCustomData [out] index of new customization data object (NULL to ignore)\n\nAdd user custom data to a specific root object of an existing ZW3D file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create new customization data for a specific root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataAdd\nfile [in] ZW3D file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active object)\ndata [in] customization data (pointer to null-terminated ascii string)\nidCustomData [out] index of new customization data object (NULL to ignore)\n\nAdd user custom data to a specific root object of an existing ZW3D file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of customization data for a specific root object in ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqCustomData\nfile [in] ZW3D file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active object)\ncount [out] number of customization data\nidCustomDatas [out] id's list of customization data objects\n\nOutputs a list of indices of the customization data that belong to a existing root object of an existing ZW3D file. The calling procedure MUST deallocate the output list with cvxMemFree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of customization data objects for a specific root object in ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqCustomData\nfile [in] ZW3D file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active object)\ncount [out] number of customization data\nidCustomDatas [out] id's list of customization data objects\n\nOutputs a list of indices of the customization data that belong to a existing root object of an existing ZW3D file. The calling procedure MUST deallocate the output list with cvxMemFree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the customization data for an existing ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqCustomData\nfile [in] ZW3D file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active object)\ncount [out] number of customization data\nidCustomDatas [out] id's list of customization data objects\n\nOutputs a list of indices of the customization data that belong to a existing root object of an existing ZW3D file. The calling procedure MUST deallocate the output list with cvxMemFree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get all customization data from an existing root object of a ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataGetAll\nfile [in] ZW3D file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active object)\ncount [out] number of customization data\ndata [out] list of customization data\n\nGet all customization data from a existing root object of an existing ZW3D file. \n\n The referenced by \"***data\" and \"**dataLength\" is allocated by this function and \n\n must be deallocated by the calling procedure by cvxMemFree() function. the use case \n\n is as follows:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the number of customization data?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataGetAll\nfile [in] ZW3D file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active object)\ncount [out] number of customization data\ndata [out] list of customization data\n\nGet all customization data from a existing root object of an existing ZW3D file. \n\n The referenced by \"***data\" and \"**dataLength\" is allocated by this function and \n\n must be deallocated by the calling procedure by cvxMemFree() function. the use case \n\n is as follows:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to obtain a list of customization data from a specific root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataGetAll\nfile [in] ZW3D file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active object)\ncount [out] number of customization data\ndata [out] list of customization data\n\nGet all customization data from a existing root object of an existing ZW3D file. \n\n The referenced by \"***data\" and \"**dataLength\" is allocated by this function and \n\n must be deallocated by the calling procedure by cvxMemFree() function. the use case \n\n is as follows:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get customization data from an existing ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataGetById\nfile [in] ZW3D file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active object)\nidCustomData [in] index of customization data object\ndata [out] customization data\n\nGet specified customization data from a existing root object of an existing ZW3D file. \n\n The referenced by \"**data\" is allocated by this function and must be deallocated by the \n\n calling procedure by cvxMemFree() function. NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve specified customization data from a root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataGetById\nfile [in] ZW3D file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active object)\nidCustomData [in] index of customization data object\ndata [out] customization data\n\nGet specified customization data from a existing root object of an existing ZW3D file. \n\n The referenced by \"**data\" is allocated by this function and must be deallocated by the \n\n calling procedure by cvxMemFree() function. NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the customization data by its index?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataGetById\nfile [in] ZW3D file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active object)\nidCustomData [in] index of customization data object\ndata [out] customization data\n\nGet specified customization data from a existing root object of an existing ZW3D file. \n\n The referenced by \"**data\" is allocated by this function and must be deallocated by the \n\n calling procedure by cvxMemFree() function. NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify customization data of an existing ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataModById\nfile [in] ZW3D file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active object)\nidCustomData [in] index of customization data object\ndata [in] customization data (pointer to null-terminated ascii string)\n\nModify specified customization data from a existing root object of an existing ZW3D file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to modify customization data of a specific root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataModById\nfile [in] ZW3D file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active object)\nidCustomData [in] index of customization data object\ndata [in] customization data (pointer to null-terminated ascii string)\n\nModify specified customization data from a existing root object of an existing ZW3D file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the customization data of an existing root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataModById\nfile [in] ZW3D file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active object)\nidCustomData [in] index of customization data object\ndata [in] customization data (pointer to null-terminated ascii string)\n\nModify specified customization data from a existing root object of an existing ZW3D file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete customization data from an existing ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataDelById\nfile [in] ZW3D file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active object)\ncount [in] number of customization data (0 to delete all)\nidCustomDatas [in] index list of customization data (NULL to delete all)\n\nDelete specified customization data from a existing root object of an existing ZW3D file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to delete all customization data from a root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataDelById\nfile [in] ZW3D file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active object)\ncount [in] number of customization data (0 to delete all)\nidCustomDatas [in] index list of customization data (NULL to delete all)\n\nDelete specified customization data from a existing root object of an existing ZW3D file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete specific customization data from a root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataDelById\nfile [in] ZW3D file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active object)\ncount [in] number of customization data (0 to delete all)\nidCustomDatas [in] index list of customization data (NULL to delete all)\n\nDelete specified customization data from a existing root object of an existing ZW3D file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of dimensions in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqDim\nCount [out] number of dimensions\nidEnts [out] list of dimension entity id's\n\nOutputs a list of indices of dimension entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of dimension entity id's in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqDim\nCount [out] number of dimensions\nidEnts [out] list of dimension entity id's\n\nOutputs a list of indices of dimension entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to deallocate the output list of dimension entities?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqDim\nCount [out] number of dimensions\nidEnts [out] list of dimension entity id's\n\nOutputs a list of indices of dimension entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the type of a specified dimension constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqDimType\nidDim [in] index of dimension constraint\ntype [out] type of dimension constraint\n\nGet the type(evxConsDimType) of specified dimension constraint. \n\n It can't get the corresponding type if \"*type = VX_SK_CONSDIM_UNKNOW\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine the type of a dimension constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqDimType\nidDim [in] index of dimension constraint\ntype [out] type of dimension constraint\n\nGet the type(evxConsDimType) of specified dimension constraint. \n\n It can't get the corresponding type if \"*type = VX_SK_CONSDIM_UNKNOW\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function can be used to retrieve the type of a dimension constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqDimType\nidDim [in] index of dimension constraint\ntype [out] type of dimension constraint\n\nGet the type(evxConsDimType) of specified dimension constraint. \n\n It can't get the corresponding type if \"*type = VX_SK_CONSDIM_UNKNOW\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the reference flag of a specified dimension id?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqDimRefFlag\nidDim [in] id of dimension to inquire\nrefFlag [out] reference dimension flag\n\nOutputs the reference flag that belong to the specified id. \n\n 1-reference flag, 0-no, -1-function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if a dimension has a reference flag?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqDimRefFlag\nidDim [in] id of dimension to inquire\nrefFlag [out] reference dimension flag\n\nOutputs the reference flag that belong to the specified id. \n\n 1-reference flag, 0-no, -1-function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the reference flag of a dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqDimRefFlag\nidDim [in] id of dimension to inquire\nrefFlag [out] reference dimension flag\n\nOutputs the reference flag that belong to the specified id. \n\n 1-reference flag, 0-no, -1-function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the insertion plane of a specific sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqPlane\nidSketch [in] id of sketch in active file\nplnPath [out] pick path of the sketch insertion plane\n\nGet the insertion plane of the specified sketch."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the pick path of the sketch insertion plane?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqPlane\nidSketch [in] id of sketch in active file\nplnPath [out] pick path of the sketch insertion plane\n\nGet the insertion plane of the specified sketch."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function can be used to inquire about the insertion plane of a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqPlane\nidSketch [in] id of sketch in active file\nplnPath [out] pick path of the sketch insertion plane\n\nGet the insertion plane of the specified sketch."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the plane attached to a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqPlanes\nidSketch [in] id of sketch\ncount [out] count of idFaces\nidFaces [out] list of idFace\n\nThe function of this interface is to obtain the plane on which \n\n the sketch is attached.\nIf the plane attached to the sketch does not exist, the split \n\n sub face of the plane attached to the original sketch is obtained.\nThe cvxSkInqPlane interface can obtain the surface attached to the sketch, \n\n but once the attached surface is divided and the original surface does not \n\n exist, the interface cannot be obtained.\nThe cvxSkInqPlanes interface has all the function of the interfaced cvxSkInqPlane, \n\n and when the cvxSkInqPlane cannot obtain the plane, the cvxSkInqPlanes interface \n\n can obtain the sub split plane of the original plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the count of planes attached to a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqPlanes\nidSketch [in] id of sketch\ncount [out] count of idFaces\nidFaces [out] list of idFace\n\nThe function of this interface is to obtain the plane on which \n\n the sketch is attached.\nIf the plane attached to the sketch does not exist, the split \n\n sub face of the plane attached to the original sketch is obtained.\nThe cvxSkInqPlane interface can obtain the surface attached to the sketch, \n\n but once the attached surface is divided and the original surface does not \n\n exist, the interface cannot be obtained.\nThe cvxSkInqPlanes interface has all the function of the interfaced cvxSkInqPlane, \n\n and when the cvxSkInqPlane cannot obtain the plane, the cvxSkInqPlanes interface \n\n can obtain the sub split plane of the original plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the list of planes attached to a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqPlanes\nidSketch [in] id of sketch\ncount [out] count of idFaces\nidFaces [out] list of idFace\n\nThe function of this interface is to obtain the plane on which \n\n the sketch is attached.\nIf the plane attached to the sketch does not exist, the split \n\n sub face of the plane attached to the original sketch is obtained.\nThe cvxSkInqPlane interface can obtain the surface attached to the sketch, \n\n but once the attached surface is divided and the original surface does not \n\n exist, the interface cannot be obtained.\nThe cvxSkInqPlanes interface has all the function of the interfaced cvxSkInqPlane, \n\n and when the cvxSkInqPlane cannot obtain the plane, the cvxSkInqPlanes interface \n\n can obtain the sub split plane of the original plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a sketch is cosmetic?"
            },
            {
                "role": "assistant",
                "content": "cvxSkIsCosmetic\nIdSketch [in] d of sketch\n\nThis function is to determine whether the sketch is cosmetic."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to determine if a sketch is cosmetic?"
            },
            {
                "role": "assistant",
                "content": "cvxSkIsCosmetic\nIdSketch [in] d of sketch\n\nThis function is to determine whether the sketch is cosmetic."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I identify if a sketch is cosmetic?"
            },
            {
                "role": "assistant",
                "content": "cvxSkIsCosmetic\nIdSketch [in] d of sketch\n\nThis function is to determine whether the sketch is cosmetic."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a sketch is an external sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkIsExternal\nIdSketch [in] id of sketch\n\nThis function is to determine whether the sketch is external sketch."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a sketch is external?"
            },
            {
                "role": "assistant",
                "content": "cvxSkIsExternal\nIdSketch [in] id of sketch\n\nThis function is to determine whether the sketch is external sketch."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to identify if a sketch is external?"
            },
            {
                "role": "assistant",
                "content": "cvxSkIsExternal\nIdSketch [in] id of sketch\n\nThis function is to determine whether the sketch is external sketch."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqExternalSk\nidSketch [in] id of external sketch\nfileName [out] file name of source sketch\nrootName [out] root name of source sketch (output an empty string when file is a single object file)\nskName [out] name of sketch entity (output an empty string when root object is a sketch)\n\nGet information about the source sketch associated with the specified \n\n external sketch, including file name, root name and sketch name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqExternalSk\nidSketch [in] id of external sketch\nfileName [out] file name of source sketch\nrootName [out] root name of source sketch (output an empty string when file is a single object file)\nskName [out] name of sketch entity (output an empty string when root object is a sketch)\n\nGet information about the source sketch associated with the specified \n\n external sketch, including file name, root name and sketch name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqExternalSk\nidSketch [in] id of external sketch\nfileName [out] file name of source sketch\nrootName [out] root name of source sketch (output an empty string when file is a single object file)\nskName [out] name of sketch entity (output an empty string when root object is a sketch)\n\nGet information about the source sketch associated with the specified \n\n external sketch, including file name, root name and sketch name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the file name of the source sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqExternalSkByLongPath\nidSketch [in] id of external sketch\nfileName [out] file name of source sketch\nsizefile [in] max size of fileName\nrootName [out] root name of source sketch (output an empty string when file is a single object file)\nskName [out] name of sketch entity (output an empty string when root object is a sketch)\n\nGet information about the source sketch associated with the specified external sketch, including file name, root name and sketch name.\nA fileName that is too long (longer than \"sizefile\") is truncated.\nIt is assumed that the input \"fileName\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the root name of the source sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqExternalSkByLongPath\nidSketch [in] id of external sketch\nfileName [out] file name of source sketch\nsizefile [in] max size of fileName\nrootName [out] root name of source sketch (output an empty string when file is a single object file)\nskName [out] name of sketch entity (output an empty string when root object is a sketch)\n\nGet information about the source sketch associated with the specified external sketch, including file name, root name and sketch name.\nA fileName that is too long (longer than \"sizefile\") is truncated.\nIt is assumed that the input \"fileName\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the sketch name of the source sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqExternalSkByLongPath\nidSketch [in] id of external sketch\nfileName [out] file name of source sketch\nsizefile [in] max size of fileName\nrootName [out] root name of source sketch (output an empty string when file is a single object file)\nskName [out] name of sketch entity (output an empty string when root object is a sketch)\n\nGet information about the source sketch associated with the specified external sketch, including file name, root name and sketch name.\nA fileName that is too long (longer than \"sizefile\") is truncated.\nIt is assumed that the input \"fileName\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if the file name is longer than the specified maximum size?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqExternalSkByLongPath\nidSketch [in] id of external sketch\nfileName [out] file name of source sketch\nsizefile [in] max size of fileName\nrootName [out] root name of source sketch (output an empty string when file is a single object file)\nskName [out] name of sketch entity (output an empty string when root object is a sketch)\n\nGet information about the source sketch associated with the specified external sketch, including file name, root name and sketch name.\nA fileName that is too long (longer than \"sizefile\") is truncated.\nIt is assumed that the input \"fileName\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate the area properties of a closed 2D profile?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqArea\nnCrv [in] number of curve list\nidCrvs [in] list of boundary curves\ninnerPnt [in] reference point (the inner point)\naboutCM [out] Area properties about centroid\naboutRf [out] Area properties about ref\n\nCalculates the area properties of closed profile(2D). \n\n If the third argument (innerPnt) is V_NULL, aboutRf will be calculated \n\n about (0,0)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the area properties about centroid?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqArea\nnCrv [in] number of curve list\nidCrvs [in] list of boundary curves\ninnerPnt [in] reference point (the inner point)\naboutCM [out] Area properties about centroid\naboutRf [out] Area properties about ref\n\nCalculates the area properties of closed profile(2D). \n\n If the third argument (innerPnt) is V_NULL, aboutRf will be calculated \n\n about (0,0)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate the area properties about a reference point?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqArea\nnCrv [in] number of curve list\nidCrvs [in] list of boundary curves\ninnerPnt [in] reference point (the inner point)\naboutCM [out] Area properties about centroid\naboutRf [out] Area properties about ref\n\nCalculates the area properties of closed profile(2D). \n\n If the third argument (innerPnt) is V_NULL, aboutRf will be calculated \n\n about (0,0)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to activate a specific sketch for query or editing?"
            },
            {
                "role": "assistant",
                "content": "cvxSkActivate\nidSketch [in] id of sketch in active file (0 to exit active sketch)\nUpdateGUI [in] 1 to update GUI; 0 to leave GUI unchanged\n\nActivates the specified sketch for query or editing.\nCall this function with \"idSketch = 0\" to exit the sketch back to its parent object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to exit the active sketch back to its parent object?"
            },
            {
                "role": "assistant",
                "content": "cvxSkActivate\nidSketch [in] id of sketch in active file (0 to exit active sketch)\nUpdateGUI [in] 1 to update GUI; 0 to leave GUI unchanged\n\nActivates the specified sketch for query or editing.\nCall this function with \"idSketch = 0\" to exit the sketch back to its parent object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I update the GUI after activating a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkActivate\nidSketch [in] id of sketch in active file (0 to exit active sketch)\nUpdateGUI [in] 1 to update GUI; 0 to leave GUI unchanged\n\nActivates the specified sketch for query or editing.\nCall this function with \"idSketch = 0\" to exit the sketch back to its parent object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of X axis for a specified sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqAxis\nidSketch [in] index of sketch (-1 to inquire active sketch)\nxAxis [out] index of X axis\nyAxis [out] index of Y axis\n\nGet index of the default x and y axis of the specified sketch. \n\n if the specified default axis is not found, the value is assigned \n\n to -1, such as *xAxis = -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the active sketch's default Y axis index?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqAxis\nidSketch [in] index of sketch (-1 to inquire active sketch)\nxAxis [out] index of X axis\nyAxis [out] index of Y axis\n\nGet index of the default x and y axis of the specified sketch. \n\n if the specified default axis is not found, the value is assigned \n\n to -1, such as *xAxis = -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the default X and Y axis indices for a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqAxis\nidSketch [in] index of sketch (-1 to inquire active sketch)\nxAxis [out] index of X axis\nyAxis [out] index of Y axis\n\nGet index of the default x and y axis of the specified sketch. \n\n if the specified default axis is not found, the value is assigned \n\n to -1, such as *xAxis = -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of axis in a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqAllAxis\nCount [out] number of Axis\nidEnts [out] list of Axis entity id's\n\nOutput the axis list of current sketch. \n\n The calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of axis entity id's in a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqAllAxis\nCount [out] number of Axis\nidEnts [out] list of Axis entity id's\n\nOutput the axis list of current sketch. \n\n The calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to output the axis list of the current sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqAllAxis\nCount [out] number of Axis\nidEnts [out] list of Axis entity id's\n\nOutput the axis list of current sketch. \n\n The calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of axes for a specified sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqAllAxisById\nidSketch [in] id of sketch\ncount [out] number of Axis\nidEnts [out] list of Axis entity id's\n\nOutput the axis list of specified sketch. \n\n The calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the count of axes for a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqAllAxisById\nidSketch [in] id of sketch\ncount [out] number of Axis\nidEnts [out] list of Axis entity id's\n\nOutput the axis list of specified sketch. \n\n The calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the axis entity IDs for a given sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqAllAxisById\nidSketch [in] id of sketch\ncount [out] number of Axis\nidEnts [out] list of Axis entity id's\n\nOutput the axis list of specified sketch. \n\n The calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the start point of a 2D axis?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqAxisDir\nidAxis [in] index of 2d axis\npPnt [out] start point of axis\npDir [out] direction of axis\n\nGet the direction associated with the specified object (idAxis)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the direction of a 2D axis?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqAxisDir\nidAxis [in] index of 2d axis\npPnt [out] start point of axis\npDir [out] direction of axis\n\nGet the direction associated with the specified object (idAxis)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the direction associated with a specific 2D axis?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqAxisDir\nidAxis [in] index of 2d axis\npPnt [out] start point of axis\npDir [out] direction of axis\n\nGet the direction associated with the specified object (idAxis)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of geometry entities in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqGeom\nCount [out] number of geometry entities\nidEnts [out] list of geometry entity id's\n\nOutputs a list of indices of geometry entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of geometry entity id's in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqGeom\nCount [out] number of geometry entities\nidEnts [out] list of geometry entity id's\n\nOutputs a list of indices of geometry entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to deallocate the output list of geometry entities?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqGeom\nCount [out] number of geometry entities\nidEnts [out] list of geometry entity id's\n\nOutputs a list of indices of geometry entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of geometry entities in a specified sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqGeomById\nidSketch [in] id of sketch\ncount [out] number of geometry entities\nidEnts [out] list of geometry entity id's\n\nOutputs a list of indices of geometry entities in specified sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of geometry entity id's in a specified sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqGeomById\nidSketch [in] id of sketch\ncount [out] number of geometry entities\nidEnts [out] list of geometry entity id's\n\nOutputs a list of indices of geometry entities in specified sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about geometry entities in a specified sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqGeomById\nidSketch [in] id of sketch\ncount [out] number of geometry entities\nidEnts [out] list of geometry entity id's\n\nOutputs a list of indices of geometry entities in specified sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of construction geometry entities in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqGeomX\nCount [out] number of construction geometry entities\nidEnts [out] list of construction geometry entity id's\n\nOutputs a list of indices of construction geometry entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of construction geometry entity id's in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqGeomX\nCount [out] number of construction geometry entities\nidEnts [out] list of construction geometry entity id's\n\nOutputs a list of indices of construction geometry entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to deallocate the output list of construction geometry entities?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqGeomX\nCount [out] number of construction geometry entities\nidEnts [out] list of construction geometry entity id's\n\nOutputs a list of indices of construction geometry entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of construction geometry entities in a specified sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqGeomXById\nidSketch [in] id of sketch\ncount [out] number of construction geometry entities\nidEnts [out] list of construction geometry entity id's\n\nOutputs a list of indices of construction geometry entities in specified sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of construction geometry entity id's in a specified sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqGeomXById\nidSketch [in] id of sketch\ncount [out] number of construction geometry entities\nidEnts [out] list of construction geometry entity id's\n\nOutputs a list of indices of construction geometry entities in specified sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about construction geometry entities by sketch id?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqGeomXById\nidSketch [in] id of sketch\ncount [out] number of construction geometry entities\nidEnts [out] list of construction geometry entity id's\n\nOutputs a list of indices of construction geometry entities in specified sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of point entities in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqPnt\nCount [out] number of point entities\nidEnts [out] list of point entity id's\n\nOutputs a list of indices of point entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of point entity id's in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqPnt\nCount [out] number of point entities\nidEnts [out] list of point entity id's\n\nOutputs a list of indices of point entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to deallocate the output list of point entities?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqPnt\nCount [out] number of point entities\nidEnts [out] list of point entity id's\n\nOutputs a list of indices of point entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of point entities in a specified sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqPntById\nidSketch [in] id of sketch\ncount [out] number of point entities\nidEnts [out] list of point entity id's\n\nOutputs a list of indices of point entities in specified sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of point entity id's in a specified sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqPntById\nidSketch [in] id of sketch\ncount [out] number of point entities\nidEnts [out] list of point entity id's\n\nOutputs a list of indices of point entities in specified sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about point entities in a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqPntById\nidSketch [in] id of sketch\ncount [out] number of point entities\nidEnts [out] list of point entity id's\n\nOutputs a list of indices of point entities in specified sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of external reference entities in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqRef\nCount [out] number of external reference entities\nidEnts [out] list of external reference entity id's\n\nOutputs a list of indices of external reference entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of external reference entity id's in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqRef\nCount [out] number of external reference entities\nidEnts [out] list of external reference entity id's\n\nOutputs a list of indices of external reference entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to deallocate the output list of external reference entities?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqRef\nCount [out] number of external reference entities\nidEnts [out] list of external reference entity id's\n\nOutputs a list of indices of external reference entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of external reference entities in a specified sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqRefById\nidSketch [in] id of sketch\ncount [out] number of external reference entities\nidEnts [out] list of external reference entity id's\n\nOutputs a list of indices of external reference entities in specified sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the list of external reference entity id's in a specified sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqRefById\nidSketch [in] id of sketch\ncount [out] number of external reference entities\nidEnts [out] list of external reference entity id's\n\nOutputs a list of indices of external reference entities in specified sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list of external reference entities in a specified sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqRefById\nidSketch [in] id of sketch\ncount [out] number of external reference entities\nidEnts [out] list of external reference entity id's\n\nOutputs a list of indices of external reference entities in specified sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of text entities in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqText\nCount [out] number of text entities\nidEnts [out] list of text entity id's\n\nOutputs a list of indices of text entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of text entity id's in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqText\nCount [out] number of text entities\nidEnts [out] list of text entity id's\n\nOutputs a list of indices of text entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to deallocate the output list of text entities?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqText\nCount [out] number of text entities\nidEnts [out] list of text entity id's\n\nOutputs a list of indices of text entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get text entities in a specified sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqTextById\nidSketch [in] id of sketch\ncount [out] number of text entities\nidEnts [out] list of text entity id's\n\nOutputs a list of indices of text entities in specified sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the count of text entities in a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqTextById\nidSketch [in] id of sketch\ncount [out] number of text entities\nidEnts [out] list of text entity id's\n\nOutputs a list of indices of text entities in specified sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the list of text entity ids in a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqTextById\nidSketch [in] id of sketch\ncount [out] number of text entities\nidEnts [out] list of text entity id's\n\nOutputs a list of indices of text entities in specified sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of constraints in an active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqCns\nCount [out] number of constraints\nidEnts [out] list of constraint entity id's\n\nOutputs a list of indices of constraint entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of constraint entity id's in an active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqCns\nCount [out] number of constraints\nidEnts [out] list of constraint entity id's\n\nOutputs a list of indices of constraint entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to deallocate the output list of constraint entities in an active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqCns\nCount [out] number of constraints\nidEnts [out] list of constraint entity id's\n\nOutputs a list of indices of constraint entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of constraints in a specified sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqCnsById\nidSketch [in] id of sketch\ncount [out] number of constraints\nidEnts [out] list of constraint entity id's\n\nOutputs a list of indices of constraint entities in specified sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of constraint entity id's in a specified sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqCnsById\nidSketch [in] id of sketch\ncount [out] number of constraints\nidEnts [out] list of constraint entity id's\n\nOutputs a list of indices of constraint entities in specified sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any function to inquire about constraint entities in a sketch by id?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqCnsById\nidSketch [in] id of sketch\ncount [out] number of constraints\nidEnts [out] list of constraint entity id's\n\nOutputs a list of indices of constraint entities in specified sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of unmatched points for a list of input curves?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqCrvConnect\niCount [in] count of input curves\nidCrvs [in] id list of curves\niUnMatch [out] count of unmatched points\niOverMatch [out] count of over-matched points\n\nOutput the count of unmatched and over-matched points of specified list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the count of over-matched points for a specified list of curves?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqCrvConnect\niCount [in] count of input curves\nidCrvs [in] id list of curves\niUnMatch [out] count of unmatched points\niOverMatch [out] count of over-matched points\n\nOutput the count of unmatched and over-matched points of specified list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine the number of unmatched and over-matched points for a given list of curves?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqCrvConnect\niCount [in] count of input curves\nidCrvs [in] id list of curves\niUnMatch [out] count of unmatched points\niOverMatch [out] count of over-matched points\n\nOutput the count of unmatched and over-matched points of specified list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if an entity is a construct line?"
            },
            {
                "role": "assistant",
                "content": "cvxSkEntWireType\nentId [in] id of entity\ntype [out] wire type of specified entity, 1-construct, 0-no\n\nOutputs the construct type of specified entity. \n\n 1-the entity is construct line, 0-no."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine the wire type of a specified entity?"
            },
            {
                "role": "assistant",
                "content": "cvxSkEntWireType\nentId [in] id of entity\ntype [out] wire type of specified entity, 1-construct, 0-no\n\nOutputs the construct type of specified entity. \n\n 1-the entity is construct line, 0-no."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I find out if a specific entity is a construct line?"
            },
            {
                "role": "assistant",
                "content": "cvxSkEntWireType\nentId [in] id of entity\ntype [out] wire type of specified entity, 1-construct, 0-no\n\nOutputs the construct type of specified entity. \n\n 1-the entity is construct line, 0-no."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the wire type of 2D geometry to construction geometry?"
            },
            {
                "role": "assistant",
                "content": "cvxSkSetWireType\nnEnt [in] number of entity\nidEnt [in] list of id's of entity\ntype [in] wire type (1-construct line, 0-solid line)\n\nChange geometry wire type, from 2D geometry(lines, arcs, circles, curves, axis) to construction \n\n geometry, or change construction geometry to 2D geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the wire type of construction geometry to 2D geometry?"
            },
            {
                "role": "assistant",
                "content": "cvxSkSetWireType\nnEnt [in] number of entity\nidEnt [in] list of id's of entity\ntype [in] wire type (1-construct line, 0-solid line)\n\nChange geometry wire type, from 2D geometry(lines, arcs, circles, curves, axis) to construction \n\n geometry, or change construction geometry to 2D geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set wire type for multiple entities at once?"
            },
            {
                "role": "assistant",
                "content": "cvxSkSetWireType\nnEnt [in] number of entity\nidEnt [in] list of id's of entity\ntype [in] wire type (1-construct line, 0-solid line)\n\nChange geometry wire type, from 2D geometry(lines, arcs, circles, curves, axis) to construction \n\n geometry, or change construction geometry to 2D geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of ready sketch text entities?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqReadyText\nidSketch [in] index of sketch (-1 to inquire active sketch)\nCount [out] number of ready sketch text entities\nidEnts [out] list of ready sketch text entity id's\n\nOutputs a list of indices of ready sketch text entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of ready sketch text entity indices?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqReadyText\nidSketch [in] index of sketch (-1 to inquire active sketch)\nCount [out] number of ready sketch text entities\nidEnts [out] list of ready sketch text entity id's\n\nOutputs a list of indices of ready sketch text entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire the ready sketch text entities in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqReadyText\nidSketch [in] index of sketch (-1 to inquire active sketch)\nCount [out] number of ready sketch text entities\nidEnts [out] list of ready sketch text entity id's\n\nOutputs a list of indices of ready sketch text entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of curves in a ready sketch text?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReadyTextInqCrvs\nidRdText [in] index of the ready sketch text\nCount [out] number of curves in the ready sketch text\nidCrvs [out] list of curve id's in the ready sketch text\n\nOutputs a list of indices of curve the specified ready sketch text.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of curve id's in a ready sketch text?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReadyTextInqCrvs\nidRdText [in] index of the ready sketch text\nCount [out] number of curves in the ready sketch text\nidCrvs [out] list of curve id's in the ready sketch text\n\nOutputs a list of indices of curve the specified ready sketch text.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about curves in a ready sketch text?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReadyTextInqCrvs\nidRdText [in] index of the ready sketch text\nCount [out] number of curves in the ready sketch text\nidCrvs [out] list of curve id's in the ready sketch text\n\nOutputs a list of indices of curve the specified ready sketch text.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the string of a specified ready sketch text?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReadyTextInqText\nidRdText [in] index of the ready sketch text\nRdText [out] data of ready sketch text\n\nGet string of the specified ready sketch text.\nThis function allocates memory for the text string. The memory MUST \n\n be deallocated by the calling procedure using cvxReadyTextFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the data of a ready sketch text?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReadyTextInqText\nidRdText [in] index of the ready sketch text\nRdText [out] data of ready sketch text\n\nGet string of the specified ready sketch text.\nThis function allocates memory for the text string. The memory MUST \n\n be deallocated by the calling procedure using cvxReadyTextFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to deallocate memory for the text string obtained from ready sketch text?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReadyTextInqText\nidRdText [in] index of the ready sketch text\nRdText [out] data of ready sketch text\n\nGet string of the specified ready sketch text.\nThis function allocates memory for the text string. The memory MUST \n\n be deallocated by the calling procedure using cvxReadyTextFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the string of a specified ready sketch text?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReadyTextModText\nidRdText [in] index of the ready sketch text\nRdText [in] data of ready sketch text\n\nSet string of the specified ready sketch text."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to modify the text of a ready sketch text?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReadyTextModText\nidRdText [in] index of the ready sketch text\nRdText [in] data of ready sketch text\n\nSet string of the specified ready sketch text."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the data of a ready sketch text?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReadyTextModText\nidRdText [in] index of the ready sketch text\nRdText [in] data of ready sketch text\n\nSet string of the specified ready sketch text."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free memory associated with ready sketch text structure?"
            },
            {
                "role": "assistant",
                "content": "cvxReadyTextFree\nRdText [in] ready sketch text structure\n\nFrees memory associated with the specified ready sketch text structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to release memory associated with ready sketch text structure?"
            },
            {
                "role": "assistant",
                "content": "cvxReadyTextFree\nRdText [in] ready sketch text structure\n\nFrees memory associated with the specified ready sketch text structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate memory for ready sketch text structure?"
            },
            {
                "role": "assistant",
                "content": "cvxReadyTextFree\nRdText [in] ready sketch text structure\n\nFrees memory associated with the specified ready sketch text structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of sketch block reference entities in a specified sketch or sketch block?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqBlockReferences\nidSketch [in] id of sketch or sketch block in active file (<1 for active one)\nCount [out] number of sketch block reference entities\nidEnts [out] list of sketch block reference entity id's\n\nOutputs a list of indices of sketch block reference entities \n\n in the specified sketch or sketch block.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any function to get the list of sketch block reference entities in a sketch or sketch block?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqBlockReferences\nidSketch [in] id of sketch or sketch block in active file (<1 for active one)\nCount [out] number of sketch block reference entities\nidEnts [out] list of sketch block reference entity id's\n\nOutputs a list of indices of sketch block reference entities \n\n in the specified sketch or sketch block.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list of sketch block reference entities?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqBlockReferences\nidSketch [in] id of sketch or sketch block in active file (<1 for active one)\nCount [out] number of sketch block reference entities\nidEnts [out] list of sketch block reference entity id's\n\nOutputs a list of indices of sketch block reference entities \n\n in the specified sketch or sketch block.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of sketch blocks in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqSketchBlocks\nCount [out] no. of sketch blocks in active file\nidEnts [out] list of sketch block object id's (NULL to ignore)\nNames [out] list of sketch block object names (NULL to ignore)\n\nOutputs a list of the names of all sketch block objects in the active file. \n\n Also outputs a list of indices of them if needed.\nThe list referenced by \"**Names\" or \"**idEnts\" is allocated by this function and \n\n MUST be deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of sketch block object names in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqSketchBlocks\nCount [out] no. of sketch blocks in active file\nidEnts [out] list of sketch block object id's (NULL to ignore)\nNames [out] list of sketch block object names (NULL to ignore)\n\nOutputs a list of the names of all sketch block objects in the active file. \n\n Also outputs a list of indices of them if needed.\nThe list referenced by \"**Names\" or \"**idEnts\" is allocated by this function and \n\n MUST be deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the list of indices of sketch block objects in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqSketchBlocks\nCount [out] no. of sketch blocks in active file\nidEnts [out] list of sketch block object id's (NULL to ignore)\nNames [out] list of sketch block object names (NULL to ignore)\n\nOutputs a list of the names of all sketch block objects in the active file. \n\n Also outputs a list of indices of them if needed.\nThe list referenced by \"**Names\" or \"**idEnts\" is allocated by this function and \n\n MUST be deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to activate a 2d sketch block for query or editing?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockActivate\nidBlock [in] id of 2d sketch block in active file (0 to exit active sketch block)\nUpdateGUI [in] 1 to update GUI; 0 to leave GUI unchanged\n\nActivates the specified 2d sketch block for query or editing.\nIn addition, idBlock can also be the index of a sketch block reference. \n\n In this case the definition sketch block will be activated at the position \n\n of the block reference.\nCall this function with \"idBlock = 0\" to exit the sketch block \n\n back to its parent object or previous target object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to update the GUI after activating a sketch block?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockActivate\nidBlock [in] id of 2d sketch block in active file (0 to exit active sketch block)\nUpdateGUI [in] 1 to update GUI; 0 to leave GUI unchanged\n\nActivates the specified 2d sketch block for query or editing.\nIn addition, idBlock can also be the index of a sketch block reference. \n\n In this case the definition sketch block will be activated at the position \n\n of the block reference.\nCall this function with \"idBlock = 0\" to exit the sketch block \n\n back to its parent object or previous target object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to exit the sketch block back to its parent object or previous target object?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockActivate\nidBlock [in] id of 2d sketch block in active file (0 to exit active sketch block)\nUpdateGUI [in] 1 to update GUI; 0 to leave GUI unchanged\n\nActivates the specified 2d sketch block for query or editing.\nIn addition, idBlock can also be the index of a sketch block reference. \n\n In this case the definition sketch block will be activated at the position \n\n of the block reference.\nCall this function with \"idBlock = 0\" to exit the sketch block \n\n back to its parent object or previous target object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the inner sketch of a 2D sketch block?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockGetSketch\nidBlock [in] id of 2d sketch block\nidSketch [out] id of the inner sketch of the sketch block\n\nOutput the index of the inner sketch of the sketch block, which is invisible in the feature list.\nIt can be used to generate the pick path of the entity in the block which is formated as \n\n (-1, idBlockReference, idBlock, idSketch, idEntity)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the ID of the inner sketch of a sketch block?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockGetSketch\nidBlock [in] id of 2d sketch block\nidSketch [out] id of the inner sketch of the sketch block\n\nOutput the index of the inner sketch of the sketch block, which is invisible in the feature list.\nIt can be used to generate the pick path of the entity in the block which is formated as \n\n (-1, idBlockReference, idBlock, idSketch, idEntity)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to generate the pick path of an entity within a sketch block?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockGetSketch\nidBlock [in] id of 2d sketch block\nidSketch [out] id of the inner sketch of the sketch block\n\nOutput the index of the inner sketch of the sketch block, which is invisible in the feature list.\nIt can be used to generate the pick path of the entity in the block which is formated as \n\n (-1, idBlockReference, idBlock, idSketch, idEntity)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the definition sketch block of a specified block reference?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockRefGetDefinition\nidRef [in] id of sketch block reference\nidBlock [out] id of the definition sketch block\n\nOutput the index of the definition sketch block of the specified block reference."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the index of the definition sketch block for a block reference?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockRefGetDefinition\nidRef [in] id of sketch block reference\nidBlock [out] id of the definition sketch block\n\nOutput the index of the definition sketch block of the specified block reference."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the id of the definition sketch block for a given block reference?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockRefGetDefinition\nidRef [in] id of sketch block reference\nidBlock [out] id of the definition sketch block\n\nOutput the index of the definition sketch block of the specified block reference."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get geometry entities of a specified block?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockInqGeom\nblockName [in] block name\nCount [out] number of geometry entities\nidEnts [out] list of geometry entity id's\n\nOutputs a list of indices of geometry entities that belong to the specified block.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of geometry entities for a block?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockInqGeom\nblockName [in] block name\nCount [out] number of geometry entities\nidEnts [out] list of geometry entity id's\n\nOutputs a list of indices of geometry entities that belong to the specified block.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of geometry entity id's for a specific block?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockInqGeom\nblockName [in] block name\nCount [out] number of geometry entities\nidEnts [out] list of geometry entity id's\n\nOutputs a list of indices of geometry entities that belong to the specified block.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of point entities in a specified block?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockInqPnt\nblockName [in] block name\nCount [out] number of point entities\nidEnts [out] list of point entity id's\n\nOutputs a list of indices of point entities that belong to the specified block.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of point entity id's for a specified block?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockInqPnt\nblockName [in] block name\nCount [out] number of point entities\nidEnts [out] list of point entity id's\n\nOutputs a list of indices of point entities that belong to the specified block.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire point entities for a specific block?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockInqPnt\nblockName [in] block name\nCount [out] number of point entities\nidEnts [out] list of point entity id's\n\nOutputs a list of indices of point entities that belong to the specified block.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get dimension of a block?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockInqDim\nblockName [in] block name\nCount [out] number of dimension entities\nidEnts [out] list of dimension entity id's\n\nOutputs a list of indices of dimension entities that belong to the specified block.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get dimension by block name?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockInqDim\nblockName [in] block name\nCount [out] number of dimension entities\nidEnts [out] list of dimension entity id's\n\nOutputs a list of indices of dimension entities that belong to the specified block.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get count number of block name?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockInqDim\nblockName [in] block name\nCount [out] number of dimension entities\nidEnts [out] list of dimension entity id's\n\nOutputs a list of indices of dimension entities that belong to the specified block.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of geometry entities for a specified block?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockInqGeomX\nblockName [in] block name\nCount [out] number of geometry entities\nidEnts [out] list of geometry entity id's\n\nOutputs a list of indices of construction geometry entities that belong to the specified block.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of geometry entity id's for a specific block?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockInqGeomX\nblockName [in] block name\nCount [out] number of geometry entities\nidEnts [out] list of geometry entity id's\n\nOutputs a list of indices of construction geometry entities that belong to the specified block.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about construction geometry entities for a specified block?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockInqGeomX\nblockName [in] block name\nCount [out] number of geometry entities\nidEnts [out] list of geometry entity id's\n\nOutputs a list of indices of construction geometry entities that belong to the specified block.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get sketch block reference entity id's for a specified block?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockInqRefs\nidBlock [in] id of 2d sketch block\ncount [out] number of sketch block reference entities\nidEnts [out] list of sketch block reference entity id's\n\nOutputs a list of sketch block reference entity id's that belong to the specified block.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the count of sketch block reference entities for a specific block?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockInqRefs\nidBlock [in] id of 2d sketch block\ncount [out] number of sketch block reference entities\nidEnts [out] list of sketch block reference entity id's\n\nOutputs a list of sketch block reference entity id's that belong to the specified block.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to deallocate the output list after getting sketch block reference entity id's?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockInqRefs\nidBlock [in] id of 2d sketch block\ncount [out] number of sketch block reference entities\nidEnts [out] list of sketch block reference entity id's\n\nOutputs a list of sketch block reference entity id's that belong to the specified block.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the type of a specific geometry constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqCnsType\nidCons [in] index of geometry constraint\ntype [out] type of geometry constraint\nsubType [out] coordinate constraint type, only fix constraint and \n\n point to midpoint constraint is valid: \n\n 0: both the X and Y coordinates are constrained \n\n 1: only the X coordinate is constrained \n\n 2: only the Y coordinate is constrained \n\n 3: point to arc midpoint constraint, used only VX_SK_CONS_MID\n\nGet the type(evxGeomConsType) of specified geometry constraint. It can't get the corresponding type if \"*type = VX_SK_CONS_UNKNOWN\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine the type of a geometry constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqCnsType\nidCons [in] index of geometry constraint\ntype [out] type of geometry constraint\nsubType [out] coordinate constraint type, only fix constraint and \n\n point to midpoint constraint is valid: \n\n 0: both the X and Y coordinates are constrained \n\n 1: only the X coordinate is constrained \n\n 2: only the Y coordinate is constrained \n\n 3: point to arc midpoint constraint, used only VX_SK_CONS_MID\n\nGet the type(evxGeomConsType) of specified geometry constraint. It can't get the corresponding type if \"*type = VX_SK_CONS_UNKNOWN\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the coordinate constraint type of a geometry constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqCnsType\nidCons [in] index of geometry constraint\ntype [out] type of geometry constraint\nsubType [out] coordinate constraint type, only fix constraint and \n\n point to midpoint constraint is valid: \n\n 0: both the X and Y coordinates are constrained \n\n 1: only the X coordinate is constrained \n\n 2: only the Y coordinate is constrained \n\n 3: point to arc midpoint constraint, used only VX_SK_CONS_MID\n\nGet the type(evxGeomConsType) of specified geometry constraint. It can't get the corresponding type if \"*type = VX_SK_CONS_UNKNOWN\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of geometry entities associated with a specific constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqCnsGeoms\nidCons [in] index of geometry constraint\nCount [out] number of geometry entities\ngeoms [out] data of geometry entities\n\nOutputs the geom data array of entities associated with the specified \n\n geometry constraint.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the geometry data array of entities linked to a particular constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqCnsGeoms\nidCons [in] index of geometry constraint\nCount [out] number of geometry entities\ngeoms [out] data of geometry entities\n\nOutputs the geom data array of entities associated with the specified \n\n geometry constraint.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the geometry entities associated with a specific constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqCnsGeoms\nidCons [in] index of geometry constraint\nCount [out] number of geometry entities\ngeoms [out] data of geometry entities\n\nOutputs the geom data array of entities associated with the specified \n\n geometry constraint.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to automatically solve the current sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkRegen\n\nUse the function to solve the current sketch automatically, all constraints, equations, dimensions and variable links associated with the current sketch are executed."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to execute all constraints, equations, and dimensions associated with the current sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkRegen\n\nUse the function to solve the current sketch automatically, all constraints, equations, dimensions and variable links associated with the current sketch are executed."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to regenerate the current sketch with all its constraints and dimensions?"
            },
            {
                "role": "assistant",
                "content": "cvxSkRegen\n\nUse the function to solve the current sketch automatically, all constraints, equations, dimensions and variable links associated with the current sketch are executed."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a variable to the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkVarAdd\nVariable [in] definition of a variable\n\nAdds the specified variable to the active sketch."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to define a variable in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkVarAdd\nVariable [in] definition of a variable\n\nAdds the specified variable to the active sketch."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to add a variable to the sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkVarAdd\nVariable [in] definition of a variable\n\nAdds the specified variable to the active sketch."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to search for a variable in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkVarGet\nVariable [inout] variable data\n\nSearches the active sketch for the variable named \"Variable->Name\".\nThe value of the specified variable is output via \n\n \"Variable->Value\" in database units (mm, deg).\nIf \"Variable->Name\" is a string variable, the associated \n\n text is output via \"Variable->Expression\". Strings longer \n\n than 256 bytes are truncated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the value of a specified variable in database units?"
            },
            {
                "role": "assistant",
                "content": "cvxSkVarGet\nVariable [inout] variable data\n\nSearches the active sketch for the variable named \"Variable->Name\".\nThe value of the specified variable is output via \n\n \"Variable->Value\" in database units (mm, deg).\nIf \"Variable->Name\" is a string variable, the associated \n\n text is output via \"Variable->Expression\". Strings longer \n\n than 256 bytes are truncated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the text associated with a string variable in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkVarGet\nVariable [inout] variable data\n\nSearches the active sketch for the variable named \"Variable->Name\".\nThe value of the specified variable is output via \n\n \"Variable->Value\" in database units (mm, deg).\nIf \"Variable->Name\" is a string variable, the associated \n\n text is output via \"Variable->Expression\". Strings longer \n\n than 256 bytes are truncated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update sketch variables?"
            },
            {
                "role": "assistant",
                "content": "cvxSkVarSet\nCount [in] number of variables\nVariables [in] list of variables\n\nUpdates the sketch variables specified by \"Variables\" \n\n and regenerates the active sketch with the modified values."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to modify sketch variables?"
            },
            {
                "role": "assistant",
                "content": "cvxSkVarSet\nCount [in] number of variables\nVariables [in] list of variables\n\nUpdates the sketch variables specified by \"Variables\" \n\n and regenerates the active sketch with the modified values."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to regenerate the active sketch with modified values?"
            },
            {
                "role": "assistant",
                "content": "cvxSkVarSet\nCount [in] number of variables\nVariables [in] list of variables\n\nUpdates the sketch variables specified by \"Variables\" \n\n and regenerates the active sketch with the modified values."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of variables in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqVars\nCount [out] number of variables\nVariables [out] list of variables\n\nOutputs a list of variables that belong to the active sketch. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain a list of variables in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqVars\nCount [out] number of variables\nVariables [out] list of variables\n\nOutputs a list of variables that belong to the active sketch. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the variables belonging to the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqVars\nCount [out] number of variables\nVariables [out] list of variables\n\nOutputs a list of variables that belong to the active sketch. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the text associated with a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTextInq\nidText [in] id of text entity\nText [out] copy of entity text string\n\nGets a copy of the null-terminated ascii text string associated with \n\n the specified entity (idText) in the active target file.\nThis function allocates memory for the text string and outputs a pointer \n\n to the memory via \"char **Text\". The calling procedure is responsible \n\n for deallocating the memory. A NULL pointer is output if no text is \n\n found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the text of a particular entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTextInq\nidText [in] id of text entity\nText [out] copy of entity text string\n\nGets a copy of the null-terminated ascii text string associated with \n\n the specified entity (idText) in the active target file.\nThis function allocates memory for the text string and outputs a pointer \n\n to the memory via \"char **Text\". The calling procedure is responsible \n\n for deallocating the memory. A NULL pointer is output if no text is \n\n found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the text string of a specified entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTextInq\nidText [in] id of text entity\nText [out] copy of entity text string\n\nGets a copy of the null-terminated ascii text string associated with \n\n the specified entity (idText) in the active target file.\nThis function allocates memory for the text string and outputs a pointer \n\n to the memory via \"char **Text\". The calling procedure is responsible \n\n for deallocating the memory. A NULL pointer is output if no text is \n\n found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to replace the text associated with a specific text entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTextMod\nidText [in] id of text entity\nText [in] null-terminated ascii text string to assign to entity\n\nReplaces the text currently associated with \"idText\" with the input text string (Text)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to modify the text of a text entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTextMod\nidText [in] id of text entity\nText [in] null-terminated ascii text string to assign to entity\n\nReplaces the text currently associated with \"idText\" with the input text string (Text)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I update the text content of a text entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTextMod\nidText [in] id of text entity\nText [in] null-terminated ascii text string to assign to entity\n\nReplaces the text currently associated with \"idText\" with the input text string (Text)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get attributes of a specified text?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTextAtGet\nidText [in] text id\nAt [out] attributes if text\n\nOutputs the attributes of specified text."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the attributes of a specific text entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTextAtGet\nidText [in] text id\nAt [out] attributes if text\n\nOutputs the attributes of specified text."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to obtain the attributes of a specified text?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTextAtGet\nidText [in] text id\nAt [out] attributes if text\n\nOutputs the attributes of specified text."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set attributes of specified text?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTextAtSet\nidText [in] text id\nAt [in] attributes if text\n\nSets the attributes of specified text."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set text attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTextAtSet\nidText [in] text id\nAt [in] attributes if text\n\nSets the attributes of specified text."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the attributes of a specific text?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTextAtSet\nidText [in] text id\nAt [in] attributes if text\n\nSets the attributes of specified text."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the location of a specified text?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTextLocGet\nidText [in] text id\nloc [out] location\n\nOutputs the location of specified text."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the location of text by its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTextLocGet\nidText [in] text id\nloc [out] location\n\nOutputs the location of specified text."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the location of a specific text entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTextLocGet\nidText [in] text id\nloc [out] location\n\nOutputs the location of specified text."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the entity path of a specified entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathInit\nidEntity [in] index of entity\nidParent [in] index of parent of entity (sketch, curve list, 0 to ignore)\nentPath [out] entity path of entity\n\nOutputs the entity path of the specified entity relative to the currently active root object, the entity must be an entity under the currently active root object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the entity path of an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathInit\nidEntity [in] index of entity\nidParent [in] index of parent of entity (sketch, curve list, 0 to ignore)\nentPath [out] entity path of entity\n\nOutputs the entity path of the specified entity relative to the currently active root object, the entity must be an entity under the currently active root object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the entity path of a specific entity under the active root object?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathInit\nidEntity [in] index of entity\nidParent [in] index of parent of entity (sketch, curve list, 0 to ignore)\nentPath [out] entity path of entity\n\nOutputs the entity path of the specified entity relative to the currently active root object, the entity must be an entity under the currently active root object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the entity path of the active entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathInqActive\nentPath [out] entity path of entity\n\nOutputs current active entity path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to inquire about the active entity path?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathInqActive\nentPath [out] entity path of entity\n\nOutputs current active entity path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the entity path of the currently active entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathInqActive\nentPath [out] entity path of entity\n\nOutputs current active entity path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to append an entity to the end of a specified entity path?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathAppendEnt\nentPath [inout] entity path\nidEntity [in] index of entity\n\nAppends an entity to the end of the specified entity path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add an entity to an entity path?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathAppendEnt\nentPath [inout] entity path\nidEntity [in] index of entity\n\nAppends an entity to the end of the specified entity path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I append an entity to an entity path?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathAppendEnt\nentPath [inout] entity path\nidEntity [in] index of entity\n\nAppends an entity to the end of the specified entity path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to append an entity path to another entity path?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathAppendPath\ndstPath [inout] entity path that be appended\nsrcPath [in] the appended entity path\n\nAppends an entity path to the end of the specified entity path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a path to an existing entity path?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathAppendPath\ndstPath [inout] entity path that be appended\nsrcPath [in] the appended entity path\n\nAppends an entity path to the end of the specified entity path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to append one entity path to another?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathAppendPath\ndstPath [inout] entity path that be appended\nsrcPath [in] the appended entity path\n\nAppends an entity path to the end of the specified entity path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to convert an entity path to an absolute path?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathToRoot\nEntPath [inout] entity path\n\nConverts the input entity path from a path that is defined relative to the active target object to an \"absolute\" path that begins with the parent file of the target object. It is assumed that the entity path is an evaluated (i.e. non-persistent) entity path. \n\n For example: \n\n If the input EntPath's Id[0] = -1, such as Id = { -1, COMP, COMP, FACE}; \n\n the output EntPath's Id = { -2, PART, COMP, PART COMP, PART, FACE};"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to convert a relative entity path to an absolute path?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathToRoot\nEntPath [inout] entity path\n\nConverts the input entity path from a path that is defined relative to the active target object to an \"absolute\" path that begins with the parent file of the target object. It is assumed that the entity path is an evaluated (i.e. non-persistent) entity path. \n\n For example: \n\n If the input EntPath's Id[0] = -1, such as Id = { -1, COMP, COMP, FACE}; \n\n the output EntPath's Id = { -2, PART, COMP, PART COMP, PART, FACE};"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle evaluated entity paths in CAD software?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathToRoot\nEntPath [inout] entity path\n\nConverts the input entity path from a path that is defined relative to the active target object to an \"absolute\" path that begins with the parent file of the target object. It is assumed that the entity path is an evaluated (i.e. non-persistent) entity path. \n\n For example: \n\n If the input EntPath's Id[0] = -1, such as Id = { -1, COMP, COMP, FACE}; \n\n the output EntPath's Id = { -2, PART, COMP, PART COMP, PART, FACE};"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to compare two entity paths?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathCmp\nEntPath1 [in] entity path\nEntPath2 [in] entity path\n\nThe subroutine is used for comparison two entity paths."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to compare entity paths?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathCmp\nEntPath1 [in] entity path\nEntPath2 [in] entity path\n\nThe subroutine is used for comparison two entity paths."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What subroutine can be used to compare entity paths?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathCmp\nEntPath1 [in] entity path\nEntPath2 [in] entity path\n\nThe subroutine is used for comparison two entity paths."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the parent component of a specified entity path?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathGetParentComp\nentPath [in] entity path\nparentComp [out] entity path of parent component\n\nOutputs the entity path of the parent component of the specified entity path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the entity path of the parent component?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathGetParentComp\nentPath [in] entity path\nparentComp [out] entity path of parent component\n\nOutputs the entity path of the parent component of the specified entity path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the entity path of the parent component?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathGetParentComp\nentPath [in] entity path\nparentComp [out] entity path of parent component\n\nOutputs the entity path of the parent component of the specified entity path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the current index of an item in a combobox widget?"
            },
            {
                "role": "assistant",
                "content": "cvxComboCurrentItem\nsForm [in] form name\nfldId [in] field id\ncurIdx [out] current index\n\nGet the item index in the combobox widget of a form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the item index in a combobox widget of a form?"
            },
            {
                "role": "assistant",
                "content": "cvxComboCurrentItem\nsForm [in] form name\nfldId [in] field id\ncurIdx [out] current index\n\nGet the item index in the combobox widget of a form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I get the index of the current item in a combobox widget?"
            },
            {
                "role": "assistant",
                "content": "cvxComboCurrentItem\nsForm [in] form name\nfldId [in] field id\ncurIdx [out] current index\n\nGet the item index in the combobox widget of a form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the current selected item by form name and field number?"
            },
            {
                "role": "assistant",
                "content": "cvxComboSetCurrentItem\nsForm [in] form name\nfield [in] field number\nitem [in] index\n\nSet the id of current selected item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to change the current selected item by index?"
            },
            {
                "role": "assistant",
                "content": "cvxComboSetCurrentItem\nsForm [in] form name\nfield [in] field number\nitem [in] index\n\nSet the id of current selected item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the function to set the current item in a combo box?"
            },
            {
                "role": "assistant",
                "content": "cvxComboSetCurrentItem\nsForm [in] form name\nfield [in] field number\nitem [in] index\n\nSet the id of current selected item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the current text of a combobox widget?"
            },
            {
                "role": "assistant",
                "content": "cvxComboCurrentText\nsForm [in] form name\nidField [in] field id\ntext [out] current text\nsizeText [in] sizeof test\n\nGet the item text in the combobox widget of a form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the item text in a combobox widget?"
            },
            {
                "role": "assistant",
                "content": "cvxComboCurrentText\nsForm [in] form name\nidField [in] field id\ntext [out] current text\nsizeText [in] sizeof test\n\nGet the item text in the combobox widget of a form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the text of a specific field in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxComboCurrentText\nsForm [in] form name\nidField [in] field id\ntext [out] current text\nsizeText [in] sizeof test\n\nGet the item text in the combobox widget of a form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the text in the combobox widget of a form?"
            },
            {
                "role": "assistant",
                "content": "cvxComboCurrentTextSet\nsForm [in] form name\nidField [in] field id\ntext [in] current text\n\nSet the item text in the combobox widget of a form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to change the current text in the combobox widget?"
            },
            {
                "role": "assistant",
                "content": "cvxComboCurrentTextSet\nsForm [in] form name\nidField [in] field id\ntext [in] current text\n\nSet the item text in the combobox widget of a form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the item text in the combobox of a form?"
            },
            {
                "role": "assistant",
                "content": "cvxComboCurrentTextSet\nsForm [in] form name\nidField [in] field id\ntext [in] current text\n\nSet the item text in the combobox widget of a form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of items in a combobox widget?"
            },
            {
                "role": "assistant",
                "content": "cvxComboItemCount\nsForm [in] form name\nidField [in] field id\ncount [out] count of items\n\nGet the count of items in the combobox widget of a form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the number of items in a combobox widget?"
            },
            {
                "role": "assistant",
                "content": "cvxComboItemCount\nsForm [in] form name\nidField [in] field id\ncount [out] count of items\n\nGet the count of items in the combobox widget of a form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the count of items in a combobox widget?"
            },
            {
                "role": "assistant",
                "content": "cvxComboItemCount\nsForm [in] form name\nidField [in] field id\ncount [out] count of items\n\nGet the count of items in the combobox widget of a form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a GUI form in memory?"
            },
            {
                "role": "assistant",
                "content": "cvxFormCreate\nForm [in] GUI form name\nDisplay [in] 1 to display form after it is created; else 0\n\nCreates the specified form in memory and displays it if requested."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to display a form after creating it?"
            },
            {
                "role": "assistant",
                "content": "cvxFormCreate\nForm [in] GUI form name\nDisplay [in] 1 to display form after it is created; else 0\n\nCreates the specified form in memory and displays it if requested."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a form and display it in the GUI?"
            },
            {
                "role": "assistant",
                "content": "cvxFormCreate\nForm [in] GUI form name\nDisplay [in] 1 to display form after it is created; else 0\n\nCreates the specified form in memory and displays it if requested."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a specified GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormShow\nForm [in] GUI form name\n\nShows (i.e. display) the specified GUI form.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to show a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormShow\nForm [in] GUI form name\n\nShows (i.e. display) the specified GUI form.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to show an Options form using this function?"
            },
            {
                "role": "assistant",
                "content": "cvxFormShow\nForm [in] GUI form name\n\nShows (i.e. display) the specified GUI form.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to hide a specific GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormHide\nForm [in] GUI form name\n\nHide the specified GUI form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to hide a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormHide\nForm [in] GUI form name\n\nHide the specified GUI form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I make a GUI form invisible?"
            },
            {
                "role": "assistant",
                "content": "cvxFormHide\nForm [in] GUI form name\n\nHide the specified GUI form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to cancel and undisplay a specified GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormKill\nForm [in] GUI form name\n\nKills (i.e. cancel and undisplay) the specified GUI form.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to kill a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormKill\nForm [in] GUI form name\n\nKills (i.e. cancel and undisplay) the specified GUI form.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to apply the function to an 'Options' form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormKill\nForm [in] GUI form name\n\nKills (i.e. cancel and undisplay) the specified GUI form.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to log a specified form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormLogKill\nForm [in] form name\n\nLog specified form, the form will be auto kill when root object exit."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to automatically kill a form when the root object exits?"
            },
            {
                "role": "assistant",
                "content": "cvxFormLogKill\nForm [in] form name\n\nLog specified form, the form will be auto kill when root object exit."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to refresh the display of a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormRefresh\nForm [in] GUI form name\n\nRefreshes display of the specified GUI form. \n\n Input \"OptForm\" to apply this function to the active \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to refresh the active 'Options' form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormRefresh\nForm [in] GUI form name\n\nRefreshes display of the specified GUI form. \n\n Input \"OptForm\" to apply this function to the active \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to update the GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormRefresh\nForm [in] GUI form name\n\nRefreshes display of the specified GUI form. \n\n Input \"OptForm\" to apply this function to the active \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a specified GUI form and wait for user input?"
            },
            {
                "role": "assistant",
                "content": "cvxFormWait\nForm [in] GUI form name (null-terminated ascii string)\n\nThis function displays the specified GUI form and waits for the \n\n user to press the \"Okay\", \"Apply\" or \"Cancel\" button on the form. \n\n It returns 0 if the user pressed \"Cancel\", 1 if the user pressed \n\n \"Okay\" or 2 if the user pressed \"Apply\".\nIf you want to cause another widget on the form to cause cvxFormWait() \n\n to return, attach a callback function that invokes cvxFormWaitExit() to \n\n the widget. Whatever integer value is passed to cvxFormWaitExit() will \n\n be returned by this function.\nIf \"Okay\" or \"Cancel\" are pressed, the GUI form is automatically \n\n undisplayed. If this functions returns because the user pressed \"Apply\" \n\n or because cvxFormWaitExit() was called, the GUI form remains displayed \n\n until the calling application undisplays it using cvxFormKill().\nnote:\ncvxFormKill() can be applied to a form that has already been \n\n undisplayed without any bad consequences."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the possible return values when using cvxFormWait?"
            },
            {
                "role": "assistant",
                "content": "cvxFormWait\nForm [in] GUI form name (null-terminated ascii string)\n\nThis function displays the specified GUI form and waits for the \n\n user to press the \"Okay\", \"Apply\" or \"Cancel\" button on the form. \n\n It returns 0 if the user pressed \"Cancel\", 1 if the user pressed \n\n \"Okay\" or 2 if the user pressed \"Apply\".\nIf you want to cause another widget on the form to cause cvxFormWait() \n\n to return, attach a callback function that invokes cvxFormWaitExit() to \n\n the widget. Whatever integer value is passed to cvxFormWaitExit() will \n\n be returned by this function.\nIf \"Okay\" or \"Cancel\" are pressed, the GUI form is automatically \n\n undisplayed. If this functions returns because the user pressed \"Apply\" \n\n or because cvxFormWaitExit() was called, the GUI form remains displayed \n\n until the calling application undisplays it using cvxFormKill().\nnote:\ncvxFormKill() can be applied to a form that has already been \n\n undisplayed without any bad consequences."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to return from cvxFormWait using a callback function?"
            },
            {
                "role": "assistant",
                "content": "cvxFormWait\nForm [in] GUI form name (null-terminated ascii string)\n\nThis function displays the specified GUI form and waits for the \n\n user to press the \"Okay\", \"Apply\" or \"Cancel\" button on the form. \n\n It returns 0 if the user pressed \"Cancel\", 1 if the user pressed \n\n \"Okay\" or 2 if the user pressed \"Apply\".\nIf you want to cause another widget on the form to cause cvxFormWait() \n\n to return, attach a callback function that invokes cvxFormWaitExit() to \n\n the widget. Whatever integer value is passed to cvxFormWaitExit() will \n\n be returned by this function.\nIf \"Okay\" or \"Cancel\" are pressed, the GUI form is automatically \n\n undisplayed. If this functions returns because the user pressed \"Apply\" \n\n or because cvxFormWaitExit() was called, the GUI form remains displayed \n\n until the calling application undisplays it using cvxFormKill().\nnote:\ncvxFormKill() can be applied to a form that has already been \n\n undisplayed without any bad consequences."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if the user presses 'Apply' in cvxFormWait?"
            },
            {
                "role": "assistant",
                "content": "cvxFormWait\nForm [in] GUI form name (null-terminated ascii string)\n\nThis function displays the specified GUI form and waits for the \n\n user to press the \"Okay\", \"Apply\" or \"Cancel\" button on the form. \n\n It returns 0 if the user pressed \"Cancel\", 1 if the user pressed \n\n \"Okay\" or 2 if the user pressed \"Apply\".\nIf you want to cause another widget on the form to cause cvxFormWait() \n\n to return, attach a callback function that invokes cvxFormWaitExit() to \n\n the widget. Whatever integer value is passed to cvxFormWaitExit() will \n\n be returned by this function.\nIf \"Okay\" or \"Cancel\" are pressed, the GUI form is automatically \n\n undisplayed. If this functions returns because the user pressed \"Apply\" \n\n or because cvxFormWaitExit() was called, the GUI form remains displayed \n\n until the calling application undisplays it using cvxFormKill().\nnote:\ncvxFormKill() can be applied to a form that has already been \n\n undisplayed without any bad consequences."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should cvxFormKill() be used?"
            },
            {
                "role": "assistant",
                "content": "cvxFormWait\nForm [in] GUI form name (null-terminated ascii string)\n\nThis function displays the specified GUI form and waits for the \n\n user to press the \"Okay\", \"Apply\" or \"Cancel\" button on the form. \n\n It returns 0 if the user pressed \"Cancel\", 1 if the user pressed \n\n \"Okay\" or 2 if the user pressed \"Apply\".\nIf you want to cause another widget on the form to cause cvxFormWait() \n\n to return, attach a callback function that invokes cvxFormWaitExit() to \n\n the widget. Whatever integer value is passed to cvxFormWaitExit() will \n\n be returned by this function.\nIf \"Okay\" or \"Cancel\" are pressed, the GUI form is automatically \n\n undisplayed. If this functions returns because the user pressed \"Apply\" \n\n or because cvxFormWaitExit() was called, the GUI form remains displayed \n\n until the calling application undisplays it using cvxFormKill().\nnote:\ncvxFormKill() can be applied to a form that has already been \n\n undisplayed without any bad consequences."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to exit cvxFormWait and return an integer value?"
            },
            {
                "role": "assistant",
                "content": "cvxFormWaitExit\nReturnValue [in] integer value to pass to cvxFormWait ()\n\nWhen a GUI form is displayed with cvxFormWait(), invoking this function \n\n will cause cvxFormWait() to exit and return the integer value passed to \n\n this function. Ordinarily, this function would be invoked from a callback \n\n function associated with the form actively displayed by cvxFormWait()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to make cvxFormWait exit and return a specific integer value?"
            },
            {
                "role": "assistant",
                "content": "cvxFormWaitExit\nReturnValue [in] integer value to pass to cvxFormWait ()\n\nWhen a GUI form is displayed with cvxFormWait(), invoking this function \n\n will cause cvxFormWait() to exit and return the integer value passed to \n\n this function. Ordinarily, this function would be invoked from a callback \n\n function associated with the form actively displayed by cvxFormWait()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxFormWaitExit to exit cvxFormWait and pass an integer value?"
            },
            {
                "role": "assistant",
                "content": "cvxFormWaitExit\nReturnValue [in] integer value to pass to cvxFormWait ()\n\nWhen a GUI form is displayed with cvxFormWait(), invoking this function \n\n will cause cvxFormWait() to exit and return the integer value passed to \n\n this function. Ordinarily, this function would be invoked from a callback \n\n function associated with the form actively displayed by cvxFormWait()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the size of a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormGetSize\nForm [in] form name\nWidth [out] width of the form\nHeight [out] height of the form\n\nGet the size of specified GUI form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the width and height of a specific form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormGetSize\nForm [in] form name\nWidth [out] width of the form\nHeight [out] height of the form\n\nGet the size of specified GUI form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the dimensions of a form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormGetSize\nForm [in] form name\nWidth [out] width of the form\nHeight [out] height of the form\n\nGet the size of specified GUI form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to resize a form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormResize\nForm [in] form name\nWidth [in] width of the form\nHeight [in] height of the form\n\nSet the size of specified form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the size of a form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormResize\nForm [in] form name\nWidth [in] width of the form\nHeight [in] height of the form\n\nSet the size of specified form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the width and height of a form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormResize\nForm [in] form name\nWidth [in] width of the form\nHeight [in] height of the form\n\nSet the size of specified form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to automatically adjust the size of a form when its children are modified?"
            },
            {
                "role": "assistant",
                "content": "cvxFormAdjustSize\nForm [in] form name\n\nAuto adjust the form size when its children are changed (hidden or modified)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to adjust the form size based on changes in its children?"
            },
            {
                "role": "assistant",
                "content": "cvxFormAdjustSize\nForm [in] form name\n\nAuto adjust the form size when its children are changed (hidden or modified)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle form size adjustment when its children are hidden or modified?"
            },
            {
                "role": "assistant",
                "content": "cvxFormAdjustSize\nForm [in] form name\n\nAuto adjust the form size when its children are changed (hidden or modified)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a form to the file browser?"
            },
            {
                "role": "assistant",
                "content": "cvxFormAddTo\nForm [in] form name\naddTo [in] form type that the \"Form\" add to\n\nAdd specified form to file browser."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to specify the form type to add to the file browser?"
            },
            {
                "role": "assistant",
                "content": "cvxFormAddTo\nForm [in] form name\naddTo [in] form type that the \"Form\" add to\n\nAdd specified form to file browser."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to add a form to another form in the file browser?"
            },
            {
                "role": "assistant",
                "content": "cvxFormAddTo\nForm [in] form name\naddTo [in] form type that the \"Form\" add to\n\nAdd specified form to file browser."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a form to a file browser or UI manager?"
            },
            {
                "role": "assistant",
                "content": "cvxFormInsertTo\nFormInfo [in] form information that the \"Form\" add to\nIndex [in] position that the form insert to, only support VX_UI_MANAGER type\nAddTo [in] form type that the \"Form\" add to\n\nAdd specified form to file browser or ui manager. We show in all environments as default. \n\n If want to hide in some environment, please use cvxFormVisibleSet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to insert a form to a specific position in the UI manager?"
            },
            {
                "role": "assistant",
                "content": "cvxFormInsertTo\nFormInfo [in] form information that the \"Form\" add to\nIndex [in] position that the form insert to, only support VX_UI_MANAGER type\nAddTo [in] form type that the \"Form\" add to\n\nAdd specified form to file browser or ui manager. We show in all environments as default. \n\n If want to hide in some environment, please use cvxFormVisibleSet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the form type to add to the UI manager?"
            },
            {
                "role": "assistant",
                "content": "cvxFormInsertTo\nFormInfo [in] form information that the \"Form\" add to\nIndex [in] position that the form insert to, only support VX_UI_MANAGER type\nAddTo [in] form type that the \"Form\" add to\n\nAdd specified form to file browser or ui manager. We show in all environments as default. \n\n If want to hide in some environment, please use cvxFormVisibleSet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove a specified form from the file browser?"
            },
            {
                "role": "assistant",
                "content": "cvxFormRemoveFrom\nForm [in] form name\nremoveFrom [in] form type that the \"Form\" add to\n\nRemove specified form to file browser."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove a form from a specific form type in the file browser?"
            },
            {
                "role": "assistant",
                "content": "cvxFormRemoveFrom\nForm [in] form name\nremoveFrom [in] form type that the \"Form\" add to\n\nRemove specified form to file browser."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I remove a form from a particular form type in the file browser?"
            },
            {
                "role": "assistant",
                "content": "cvxFormRemoveFrom\nForm [in] form name\nremoveFrom [in] form type that the \"Form\" add to\n\nRemove specified form to file browser."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the title of a specific GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormTitleGet\nForm [in] GUI form name\nNumBytes [in] number of bytes of memory referenced by \"Title\"\nTitle [out] form title (null-terminated text string)\n\nGets the specified form's caption title (if it has one) and stores it \n\n as a null-terminated string in the memory referenced by \"Title\". If \n\n the string is longer than \"NumBytes\", it is truncated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the caption title of a form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormTitleGet\nForm [in] GUI form name\nNumBytes [in] number of bytes of memory referenced by \"Title\"\nTitle [out] form title (null-terminated text string)\n\nGets the specified form's caption title (if it has one) and stores it \n\n as a null-terminated string in the memory referenced by \"Title\". If \n\n the string is longer than \"NumBytes\", it is truncated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I store the form title as a null-terminated string in memory?"
            },
            {
                "role": "assistant",
                "content": "cvxFormTitleGet\nForm [in] GUI form name\nNumBytes [in] number of bytes of memory referenced by \"Title\"\nTitle [out] form title (null-terminated text string)\n\nGets the specified form's caption title (if it has one) and stores it \n\n as a null-terminated string in the memory referenced by \"Title\". If \n\n the string is longer than \"NumBytes\", it is truncated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the title of a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormTitleSet\nForm [in] GUI form name\nTitle [in] form title (null-terminated text string)\n\nAssigns the specified text to the specified form's title bar."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to assign text to a form's title bar?"
            },
            {
                "role": "assistant",
                "content": "cvxFormTitleSet\nForm [in] GUI form name\nTitle [in] form title (null-terminated text string)\n\nAssigns the specified text to the specified form's title bar."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the title of a form in the GUI?"
            },
            {
                "role": "assistant",
                "content": "cvxFormTitleSet\nForm [in] GUI form name\nTitle [in] form title (null-terminated text string)\n\nAssigns the specified text to the specified form's title bar."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to encode the data associated with a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormDataGet\nForm [in] GUI form name\nData [out] GUI data encoded in a null-terminated string\n\nEncodes the data associated with the specified GUI form in a \n\n null-terminated ascii string. Memory for the output string \n\n is allocated by this function and should be deallocated by \n\n the calling procedure. Only field items numbered 1 or more \n\n are encoded.\nThe string has the following format:\nVersion,FormName,Field_Id,ItemCnt,IsOn,ItemData,IsOn,ItemData..., \n\n Field_Id,ItemCnt,...\nIt is assumed no item exceeds 1024 bytes in its text-encoded form. \n\n\nIf a field is flagged with the \"is_distance\" option, the text string \n\n associated with it is converted from user to database units if the \n\n string contains a constant value."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get GUI data encoded in a null-terminated string?"
            },
            {
                "role": "assistant",
                "content": "cvxFormDataGet\nForm [in] GUI form name\nData [out] GUI data encoded in a null-terminated string\n\nEncodes the data associated with the specified GUI form in a \n\n null-terminated ascii string. Memory for the output string \n\n is allocated by this function and should be deallocated by \n\n the calling procedure. Only field items numbered 1 or more \n\n are encoded.\nThe string has the following format:\nVersion,FormName,Field_Id,ItemCnt,IsOn,ItemData,IsOn,ItemData..., \n\n Field_Id,ItemCnt,...\nIt is assumed no item exceeds 1024 bytes in its text-encoded form. \n\n\nIf a field is flagged with the \"is_distance\" option, the text string \n\n associated with it is converted from user to database units if the \n\n string contains a constant value."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate memory for the output string after using cvxFormDataGet?"
            },
            {
                "role": "assistant",
                "content": "cvxFormDataGet\nForm [in] GUI form name\nData [out] GUI data encoded in a null-terminated string\n\nEncodes the data associated with the specified GUI form in a \n\n null-terminated ascii string. Memory for the output string \n\n is allocated by this function and should be deallocated by \n\n the calling procedure. Only field items numbered 1 or more \n\n are encoded.\nThe string has the following format:\nVersion,FormName,Field_Id,ItemCnt,IsOn,ItemData,IsOn,ItemData..., \n\n Field_Id,ItemCnt,...\nIt is assumed no item exceeds 1024 bytes in its text-encoded form. \n\n\nIf a field is flagged with the \"is_distance\" option, the text string \n\n associated with it is converted from user to database units if the \n\n string contains a constant value."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize a GUI form using encoded data?"
            },
            {
                "role": "assistant",
                "content": "cvxFormDataSet\nForm [in] GUI form name\nData [in] GUI data encoded in a null-terminated string\n\nUses the data encoded in \"text\" to initialize the specified GUI form.\nsee:\ncvxFormDataGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to use data to set up a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormDataSet\nForm [in] GUI form name\nData [in] GUI data encoded in a null-terminated string\n\nUses the data encoded in \"text\" to initialize the specified GUI form.\nsee:\ncvxFormDataGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use encoded data to initialize a specific GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormDataSet\nForm [in] GUI form name\nData [in] GUI data encoded in a null-terminated string\n\nUses the data encoded in \"text\" to initialize the specified GUI form.\nsee:\ncvxFormDataGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to register a function in a GUI form template definition?"
            },
            {
                "role": "assistant",
                "content": "cvxFormFunc\nName [in] function name\nFunction [in] function pointer\nCode [in] ZW3D licensing code or 0.0\n\nRegisters a function referenced by the \"function=\" field in \n\n a GUI form template definition.\nCallback functions should be registered in the \"Init\" function \n\n called when your library is dynamically loaded by ZW3D at runtime.\nThe function should be the following type:\nint FormFunction(int FormAction, int *UnusedInteger)\nSee evxFormAction for possible values of \"int FormAction\".\nSee the \"Gui Forms\" section of the API documentation for a \n\n description of how to define a GUI form using a text-based \n\n template.\nIf developer wants to unload the DLL plug in file dynamically. \n\n It is a MUST to run cvxCmdFuncUnload() in the exit function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What type of function should be registered in the Init function?"
            },
            {
                "role": "assistant",
                "content": "cvxFormFunc\nName [in] function name\nFunction [in] function pointer\nCode [in] ZW3D licensing code or 0.0\n\nRegisters a function referenced by the \"function=\" field in \n\n a GUI form template definition.\nCallback functions should be registered in the \"Init\" function \n\n called when your library is dynamically loaded by ZW3D at runtime.\nThe function should be the following type:\nint FormFunction(int FormAction, int *UnusedInteger)\nSee evxFormAction for possible values of \"int FormAction\".\nSee the \"Gui Forms\" section of the API documentation for a \n\n description of how to define a GUI form using a text-based \n\n template.\nIf developer wants to unload the DLL plug in file dynamically. \n\n It is a MUST to run cvxCmdFuncUnload() in the exit function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process for defining a GUI form using a text-based template?"
            },
            {
                "role": "assistant",
                "content": "cvxFormFunc\nName [in] function name\nFunction [in] function pointer\nCode [in] ZW3D licensing code or 0.0\n\nRegisters a function referenced by the \"function=\" field in \n\n a GUI form template definition.\nCallback functions should be registered in the \"Init\" function \n\n called when your library is dynamically loaded by ZW3D at runtime.\nThe function should be the following type:\nint FormFunction(int FormAction, int *UnusedInteger)\nSee evxFormAction for possible values of \"int FormAction\".\nSee the \"Gui Forms\" section of the API documentation for a \n\n description of how to define a GUI form using a text-based \n\n template.\nIf developer wants to unload the DLL plug in file dynamically. \n\n It is a MUST to run cvxCmdFuncUnload() in the exit function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to register a callback function in a GUI form template field?"
            },
            {
                "role": "assistant",
                "content": "cvxFormCallback\nName [in] function name\nFunction [in] function pointer\n\nRegisters a pointer to a callback function referenced by name \n\n in the definition of a GUI form template field (e.g. \"callback=MyCallback\").\nFunction pointers should be registered in the \"Init\" function \n\n called when your library is dynamically loaded by ZW3D at runtime.\nThe callback function should be of the following type:\nint Callback(char *FormName, int idField, int idItem)\nIf developer wants to unload the DLL plug in file dynamically. \n\n It is a MUST to run cvxCmdFuncUnload() in the exit function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to register a function pointer in the Init function?"
            },
            {
                "role": "assistant",
                "content": "cvxFormCallback\nName [in] function name\nFunction [in] function pointer\n\nRegisters a pointer to a callback function referenced by name \n\n in the definition of a GUI form template field (e.g. \"callback=MyCallback\").\nFunction pointers should be registered in the \"Init\" function \n\n called when your library is dynamically loaded by ZW3D at runtime.\nThe callback function should be of the following type:\nint Callback(char *FormName, int idField, int idItem)\nIf developer wants to unload the DLL plug in file dynamically. \n\n It is a MUST to run cvxCmdFuncUnload() in the exit function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What type of callback function should be used for registering the pointer?"
            },
            {
                "role": "assistant",
                "content": "cvxFormCallback\nName [in] function name\nFunction [in] function pointer\n\nRegisters a pointer to a callback function referenced by name \n\n in the definition of a GUI form template field (e.g. \"callback=MyCallback\").\nFunction pointers should be registered in the \"Init\" function \n\n called when your library is dynamically loaded by ZW3D at runtime.\nThe callback function should be of the following type:\nint Callback(char *FormName, int idField, int idItem)\nIf developer wants to unload the DLL plug in file dynamically. \n\n It is a MUST to run cvxCmdFuncUnload() in the exit function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the callback function of a specified field?"
            },
            {
                "role": "assistant",
                "content": "cvxFormFieldGetCallback\nform [in] form name\nfield [in] field\ncallback [out] callback function\n\nGet callback function of specified field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the callback function for a specific field in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormFieldGetCallback\nform [in] form name\nfield [in] field\ncallback [out] callback function\n\nGet callback function of specified field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to obtain the callback function for a particular field?"
            },
            {
                "role": "assistant",
                "content": "cvxFormFieldGetCallback\nform [in] form name\nfield [in] field\ncallback [out] callback function\n\nGet callback function of specified field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the ID of the active field in a template-driven GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormActiveField\nidField [out] active field id\n\nOutputs the ID of the active field of the active template-driven GUI form. \n\n Outputs \"idField = 0\" if the active field cannot be determined."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine the active field in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormActiveField\nidField [out] active field id\n\nOutputs the ID of the active field of the active template-driven GUI form. \n\n Outputs \"idField = 0\" if the active field cannot be determined."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to retrieve the ID of the active field in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormActiveField\nidField [out] active field id\n\nOutputs the ID of the active field of the active template-driven GUI form. \n\n Outputs \"idField = 0\" if the active field cannot be determined."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine the state of a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormState\nForm [in] GUI form name\n\nDetermine form state."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check the state of a specific GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormState\nForm [in] GUI form name\n\nDetermine form state."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I find out the state of a form in the GUI?"
            },
            {
                "role": "assistant",
                "content": "cvxFormState\nForm [in] GUI form name\n\nDetermine form state."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the visibility of a GUI form in a specific environment?"
            },
            {
                "role": "assistant",
                "content": "cvxFormVisibleSet\nEnvironment [in] environments\nForm [in] GUI form name\nState [in] visibility of form (1: visible; 0: invisible)\nType [in] form type that the \"Form\" set visible\n\nedit the page config about whether to be show in particular environment. the function \n\n currently only supports VX_UI_MANAGER;\nZW3D has entire 13 environments. the corresponding type can see evxEnvironment"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to edit the page configuration for showing a form in a particular environment?"
            },
            {
                "role": "assistant",
                "content": "cvxFormVisibleSet\nEnvironment [in] environments\nForm [in] GUI form name\nState [in] visibility of form (1: visible; 0: invisible)\nType [in] form type that the \"Form\" set visible\n\nedit the page config about whether to be show in particular environment. the function \n\n currently only supports VX_UI_MANAGER;\nZW3D has entire 13 environments. the corresponding type can see evxEnvironment"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the visibility state of a form in VX_UI_MANAGER environment?"
            },
            {
                "role": "assistant",
                "content": "cvxFormVisibleSet\nEnvironment [in] environments\nForm [in] GUI form name\nState [in] visibility of form (1: visible; 0: invisible)\nType [in] form type that the \"Form\" set visible\n\nedit the page config about whether to be show in particular environment. the function \n\n currently only supports VX_UI_MANAGER;\nZW3D has entire 13 environments. the corresponding type can see evxEnvironment"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the available types of forms that can be set visible in a specific environment?"
            },
            {
                "role": "assistant",
                "content": "cvxFormVisibleSet\nEnvironment [in] environments\nForm [in] GUI form name\nState [in] visibility of form (1: visible; 0: invisible)\nType [in] form type that the \"Form\" set visible\n\nedit the page config about whether to be show in particular environment. the function \n\n currently only supports VX_UI_MANAGER;\nZW3D has entire 13 environments. the corresponding type can see evxEnvironment"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the visibility of a field in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormFieldVisSet\nform [in] form name\nfield [in] field id\nstate [in] (1/0)visible or not\n\nSet the visibility of the specified field in the form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to make a specific field visible or not in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormFieldVisSet\nform [in] form name\nfield [in] field id\nstate [in] (1/0)visible or not\n\nSet the visibility of the specified field in the form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to control the visibility of a field in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormFieldVisSet\nform [in] form name\nfield [in] field id\nstate [in] (1/0)visible or not\n\nSet the visibility of the specified field in the form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of template fields in a GUI form template?"
            },
            {
                "role": "assistant",
                "content": "cvxFormInqFld\nName [in] template name\nCount [out] number of template fields\nFields [out] list of template fields\n\nGets abbreviated information about the fields associated \n\n with a GUI form template. The calling procedure MUST \n\n deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of template fields in a GUI form template?"
            },
            {
                "role": "assistant",
                "content": "cvxFormInqFld\nName [in] template name\nCount [out] number of template fields\nFields [out] list of template fields\n\nGets abbreviated information about the fields associated \n\n with a GUI form template. The calling procedure MUST \n\n deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve information about the fields associated with a GUI form template?"
            },
            {
                "role": "assistant",
                "content": "cvxFormInqFld\nName [in] template name\nCount [out] number of template fields\nFields [out] list of template fields\n\nGets abbreviated information about the fields associated \n\n with a GUI form template. The calling procedure MUST \n\n deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of fields for a specified template?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFields\nName [in] template name\nNumFld [out] number of fields\nidFields [out] list of fields id's\n\nOutputs a list of indices of the fields for the specified template.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to obtain a list of field IDs for a specific template?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFields\nName [in] template name\nNumFld [out] number of fields\nidFields [out] list of fields id's\n\nOutputs a list of indices of the fields for the specified template.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list after obtaining the field indices?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFields\nName [in] template name\nNumFld [out] number of fields\nidFields [out] list of fields id's\n\nOutputs a list of indices of the fields for the specified template.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the type of a field for a specified template?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFieldType\nName [in] template name\nidField [in] index of field\nType [out] type of field\n\nGets the type of the specified field for the specified template."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to inquire about the type of a field in a template?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFieldType\nName [in] template name\nidField [in] index of field\nType [out] type of field\n\nGets the type of the specified field for the specified template."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the type of a specific field in a template?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFieldType\nName [in] template name\nidField [in] index of field\nType [out] type of field\n\nGets the type of the specified field for the specified template."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the options string of a specified field for a template?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFieldOptions\nName [in] template name\nidField [in] index of field\nNumBytes [in] no. bytes of option string\nOptions [out] option string\n\nGets the string of the \"options\" of the specified field for the specified template."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the options string for a specific field in a template?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFieldOptions\nName [in] template name\nidField [in] index of field\nNumBytes [in] no. bytes of option string\nOptions [out] option string\n\nGets the string of the \"options\" of the specified field for the specified template."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the options string for a particular field in a template?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFieldOptions\nName [in] template name\nidField [in] index of field\nNumBytes [in] no. bytes of option string\nOptions [out] option string\n\nGets the string of the \"options\" of the specified field for the specified template."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update a field in the active Options form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormUpdate\nidField [in] field id\n\nUpdates the specified field of the active \"Options\" form to \n\n display the numeric input associated with the corresponding \n\n field of the form's data container (i.e. VDATA)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to display numeric input associated with a specific field in the form's data container?"
            },
            {
                "role": "assistant",
                "content": "cvxFormUpdate\nidField [in] field id\n\nUpdates the specified field of the active \"Options\" form to \n\n display the numeric input associated with the corresponding \n\n field of the form's data container (i.e. VDATA)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I update the specified field of the active Options form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormUpdate\nidField [in] field id\n\nUpdates the specified field of the active \"Options\" form to \n\n display the numeric input associated with the corresponding \n\n field of the form's data container (i.e. VDATA)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set focus for user input to a specified field?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldFocusSet\nForm [in] GUI form name\nidField [in] field id\n\nIf possible, sets the focus for user input to the specified field of the specified form.\nIf this function does not work, especially for a command form displayed \n\n in the ZW3D Manager area, try calling cvxCmdSend(\"@@idField\"), \n\n where \"idField\" is the actual integer value of the variable \"idField\". \n\n For example, if \"idField=3\", call cvxCmdSend(\"@@3\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set focus for user input to a field of a specified form?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldFocusSet\nForm [in] GUI form name\nidField [in] field id\n\nIf possible, sets the focus for user input to the specified field of the specified form.\nIf this function does not work, especially for a command form displayed \n\n in the ZW3D Manager area, try calling cvxCmdSend(\"@@idField\"), \n\n where \"idField\" is the actual integer value of the variable \"idField\". \n\n For example, if \"idField=3\", call cvxCmdSend(\"@@3\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set focus for user input in GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldFocusSet\nForm [in] GUI form name\nidField [in] field id\n\nIf possible, sets the focus for user input to the specified field of the specified form.\nIf this function does not work, especially for a command form displayed \n\n in the ZW3D Manager area, try calling cvxCmdSend(\"@@idField\"), \n\n where \"idField\" is the actual integer value of the variable \"idField\". \n\n For example, if \"idField=3\", call cvxCmdSend(\"@@3\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of items associated with a field?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldNumItems\nForm [in] GUI form name\nidField [in] field id\nNumItems [out] number of items associated with the field\n\nGets the number of items associated with a field. This is \n\n primarily for querying the number of items associated with a \n\n w_list, w_opt, w_btn, w_tree, w_combo, w_tab, or w_table widget. \n\n\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to query the number of items associated with a w_list widget?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldNumItems\nForm [in] GUI form name\nidField [in] field id\nNumItems [out] number of items associated with the field\n\nGets the number of items associated with a field. This is \n\n primarily for querying the number of items associated with a \n\n w_list, w_opt, w_btn, w_tree, w_combo, w_tab, or w_table widget. \n\n\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to apply the function to an 'Options' form?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldNumItems\nForm [in] GUI form name\nidField [in] field id\nNumItems [out] number of items associated with the field\n\nGets the number of items associated with a field. This is \n\n primarily for querying the number of items associated with a \n\n w_list, w_opt, w_btn, w_tree, w_combo, w_tab, or w_table widget. \n\n\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete all text items in a specified field?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldClear\nForm [in] GUI form name\nidField [in] field id\n\nDeletes all text items contained in the specified \"w_list\", or \"w_combo\" field.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to clear text items in a specific field?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldClear\nForm [in] GUI form name\nidField [in] field id\n\nDeletes all text items contained in the specified \"w_list\", or \"w_combo\" field.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete text items in a field of a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldClear\nForm [in] GUI form name\nidField [in] field id\n\nDeletes all text items contained in the specified \"w_list\", or \"w_combo\" field.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to disable a field in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldDisable\nForm [in] GUI form name\nidField [in] field id\n\nDisable the specified GUI form field.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to disable a specific field by field id?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldDisable\nForm [in] GUI form name\nidField [in] field id\n\nDisable the specified GUI form field.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to disable a field in the 'Options' form?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldDisable\nForm [in] GUI form name\nidField [in] field id\n\nDisable the specified GUI form field.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to enable a GUI form field?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldEnable\nForm [in] GUI form name\nidField [in] field id\n\nEnable the specified GUI form field.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to enable a field by field id?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldEnable\nForm [in] GUI form name\nidField [in] field id\n\nEnable the specified GUI form field.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to enable a field in the Options form?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldEnable\nForm [in] GUI form name\nidField [in] field id\n\nEnable the specified GUI form field.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the enable state of a form field?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldEnableGet\nForm [in] GUI form name\nidField [in] field id\n\nGet the enable state of the specified form field.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a specific form field is enabled?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldEnableGet\nForm [in] GUI form name\nidField [in] field id\n\nGet the enable state of the specified form field.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxFieldEnableGet function to get the enable state of a form field?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldEnableGet\nForm [in] GUI form name\nidField [in] field id\n\nGet the enable state of the specified form field.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to apply a filter item to the current command's field?"
            },
            {
                "role": "assistant",
                "content": "cvxFilterItemApply\npanelName [in] entity pick filter panel\nfilterItem [in] Filter item name\n\nApply the specified filter item to the current command's field. Make sure \n\n that \"FilterItem\" could be found. \n\n If the specified panel is current pick panel, update the ui of pick tool. \n\n Otherwise, just apply the filter item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to update the UI of the pick tool when applying a filter item?"
            },
            {
                "role": "assistant",
                "content": "cvxFilterItemApply\npanelName [in] entity pick filter panel\nfilterItem [in] Filter item name\n\nApply the specified filter item to the current command's field. Make sure \n\n that \"FilterItem\" could be found. \n\n If the specified panel is current pick panel, update the ui of pick tool. \n\n Otherwise, just apply the filter item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to ensure that the specified filter item can be found before applying it?"
            },
            {
                "role": "assistant",
                "content": "cvxFilterItemApply\npanelName [in] entity pick filter panel\nfilterItem [in] Filter item name\n\nApply the specified filter item to the current command's field. Make sure \n\n that \"FilterItem\" could be found. \n\n If the specified panel is current pick panel, update the ui of pick tool. \n\n Otherwise, just apply the filter item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign an image to a label field?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldImageSet\nForm [in] GUI form name\nidField [in] label field id\nImage [in] image file name\n\nAssigns the specified image to the specified label field. \n\n ZW3D looks in the default search paths for the image file. \n\n See cvxPathFind().\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set an image for a specified GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldImageSet\nForm [in] GUI form name\nidField [in] label field id\nImage [in] image file name\n\nAssigns the specified image to the specified label field. \n\n ZW3D looks in the default search paths for the image file. \n\n See cvxPathFind().\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to assign an image to a label field?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldImageSet\nForm [in] GUI form name\nidField [in] label field id\nImage [in] image file name\n\nAssigns the specified image to the specified label field. \n\n ZW3D looks in the default search paths for the image file. \n\n See cvxPathFind().\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the position of text caret in a GUI form field?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldCaretSet\nForm [in] GUI form name\nidField [in] field id\nPosition [in] character position numbered from zero (-1 to set caret at end)\n\nSets the position of the text caret (i.e. cursor) in the text string \n\n associated with the specified GUI form field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the caret position in a text string?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldCaretSet\nForm [in] GUI form name\nidField [in] field id\nPosition [in] character position numbered from zero (-1 to set caret at end)\n\nSets the position of the text caret (i.e. cursor) in the text string \n\n associated with the specified GUI form field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the character position for the text caret in a GUI form field?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldCaretSet\nForm [in] GUI form name\nidField [in] field id\nPosition [in] character position numbered from zero (-1 to set caret at end)\n\nSets the position of the text caret (i.e. cursor) in the text string \n\n associated with the specified GUI form field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set a tip for a specific form item?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldTipSet\nsForm [in] form name\nidField [in] field id\ntip [in] tip for setting\n\nSet tip to specified item of the form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set a tip for a field by its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldTipSet\nsForm [in] form name\nidField [in] field id\ntip [in] tip for setting\n\nSet tip to specified item of the form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the form name and field ID for setting a tip?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldTipSet\nsForm [in] form name\nidField [in] field id\ntip [in] tip for setting\n\nSet tip to specified item of the form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize an input field for selecting a font?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldInitFont\nForm [in] GUI form name\nidField [in] id of form field for font combo box\nName [in] name of default font, may be NULL\nhasZwFont [in] judge if fonts have ZW fonts.1:include ZW fonts,0:no ZW fonts\n\nInitializes an input field for selecting a font. This function is \n\n intended for use when initializing a form. It can be called during \n\n initialization of a GUI form or from the \"init_after\" callback \n\n function of an \"Options\" form.\nIt is assumed the form has an option (integer) field \"idField\" that \n\n has a combo box widget. Any prior contents of the combo box list are \n\n discarded, and the combo box list is filled with the names of fonts \n\n currently available on the local computer. If \"Name\" is a non-empty \n\n string that matches the name of one of those fonts, that font becomes \n\n the default selection in the combo box.\nTo apply this function to an \"Options\" form, input \"OptForm\" as the \n\n value of the \"Form\" argument.\nIt is recommended that the form's field \"idField\" should reference the \n\n global variable \"VgRdTxtFont\" to hold the index of the selected item. \n\n This will synchronize the default font selection with the font \n\n selection fields in native ZW3D commands. This function updates \n\n \"VgRdTxtFont\" if a match to \"Name\" is found. If \"Name\" does not match \n\n any font name, the current value of \"VgRdTxtFont\" selects the default \n\n item in the combo box list.\nWhen working with an \"Options\" form, the usual practice for managing a \n\n font input field is to use an option field having a combo box for the \n\n font names, and to use a hidden text field in the form's data \n\n container to hold the name of the selected font. In the form's \n\n \"init_after\" callback, call this function with the contents of the \n\n hidden field as the \"Name\" argument. In the form's \"function\" \n\n callback, query the combo box for the text of the selected item, save \n\n the text to the hidden field, and use the text wherever the font name \n\n is needed. If the combo box cannot be queried because the \"Options\" \n\n form is not active (such as during regeneration), use whatever text \n\n was previously saved in the hidden field as the font name. For \n\n example, an \"init_after\" callback might include this snippet of code \n\n to initialize a font selection combo box in field 5, with a hidden \n\n text field 4 that might contain the name of a previously selected font \n\n (the data container is specified by \"idData\").\nnote:\nThe font name will be an empty string if field 4 does not exist:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to fill a combo box with the names of fonts available on the local computer?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldInitFont\nForm [in] GUI form name\nidField [in] id of form field for font combo box\nName [in] name of default font, may be NULL\nhasZwFont [in] judge if fonts have ZW fonts.1:include ZW fonts,0:no ZW fonts\n\nInitializes an input field for selecting a font. This function is \n\n intended for use when initializing a form. It can be called during \n\n initialization of a GUI form or from the \"init_after\" callback \n\n function of an \"Options\" form.\nIt is assumed the form has an option (integer) field \"idField\" that \n\n has a combo box widget. Any prior contents of the combo box list are \n\n discarded, and the combo box list is filled with the names of fonts \n\n currently available on the local computer. If \"Name\" is a non-empty \n\n string that matches the name of one of those fonts, that font becomes \n\n the default selection in the combo box.\nTo apply this function to an \"Options\" form, input \"OptForm\" as the \n\n value of the \"Form\" argument.\nIt is recommended that the form's field \"idField\" should reference the \n\n global variable \"VgRdTxtFont\" to hold the index of the selected item. \n\n This will synchronize the default font selection with the font \n\n selection fields in native ZW3D commands. This function updates \n\n \"VgRdTxtFont\" if a match to \"Name\" is found. If \"Name\" does not match \n\n any font name, the current value of \"VgRdTxtFont\" selects the default \n\n item in the combo box list.\nWhen working with an \"Options\" form, the usual practice for managing a \n\n font input field is to use an option field having a combo box for the \n\n font names, and to use a hidden text field in the form's data \n\n container to hold the name of the selected font. In the form's \n\n \"init_after\" callback, call this function with the contents of the \n\n hidden field as the \"Name\" argument. In the form's \"function\" \n\n callback, query the combo box for the text of the selected item, save \n\n the text to the hidden field, and use the text wherever the font name \n\n is needed. If the combo box cannot be queried because the \"Options\" \n\n form is not active (such as during regeneration), use whatever text \n\n was previously saved in the hidden field as the font name. For \n\n example, an \"init_after\" callback might include this snippet of code \n\n to initialize a font selection combo box in field 5, with a hidden \n\n text field 4 that might contain the name of a previously selected font \n\n (the data container is specified by \"idData\").\nnote:\nThe font name will be an empty string if field 4 does not exist:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set a default font selection in the combo box?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldInitFont\nForm [in] GUI form name\nidField [in] id of form field for font combo box\nName [in] name of default font, may be NULL\nhasZwFont [in] judge if fonts have ZW fonts.1:include ZW fonts,0:no ZW fonts\n\nInitializes an input field for selecting a font. This function is \n\n intended for use when initializing a form. It can be called during \n\n initialization of a GUI form or from the \"init_after\" callback \n\n function of an \"Options\" form.\nIt is assumed the form has an option (integer) field \"idField\" that \n\n has a combo box widget. Any prior contents of the combo box list are \n\n discarded, and the combo box list is filled with the names of fonts \n\n currently available on the local computer. If \"Name\" is a non-empty \n\n string that matches the name of one of those fonts, that font becomes \n\n the default selection in the combo box.\nTo apply this function to an \"Options\" form, input \"OptForm\" as the \n\n value of the \"Form\" argument.\nIt is recommended that the form's field \"idField\" should reference the \n\n global variable \"VgRdTxtFont\" to hold the index of the selected item. \n\n This will synchronize the default font selection with the font \n\n selection fields in native ZW3D commands. This function updates \n\n \"VgRdTxtFont\" if a match to \"Name\" is found. If \"Name\" does not match \n\n any font name, the current value of \"VgRdTxtFont\" selects the default \n\n item in the combo box list.\nWhen working with an \"Options\" form, the usual practice for managing a \n\n font input field is to use an option field having a combo box for the \n\n font names, and to use a hidden text field in the form's data \n\n container to hold the name of the selected font. In the form's \n\n \"init_after\" callback, call this function with the contents of the \n\n hidden field as the \"Name\" argument. In the form's \"function\" \n\n callback, query the combo box for the text of the selected item, save \n\n the text to the hidden field, and use the text wherever the font name \n\n is needed. If the combo box cannot be queried because the \"Options\" \n\n form is not active (such as during regeneration), use whatever text \n\n was previously saved in the hidden field as the font name. For \n\n example, an \"init_after\" callback might include this snippet of code \n\n to initialize a font selection combo box in field 5, with a hidden \n\n text field 4 that might contain the name of a previously selected font \n\n (the data container is specified by \"idData\").\nnote:\nThe font name will be an empty string if field 4 does not exist:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to synchronize the default font selection with the font selection fields in native ZW3D commands?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldInitFont\nForm [in] GUI form name\nidField [in] id of form field for font combo box\nName [in] name of default font, may be NULL\nhasZwFont [in] judge if fonts have ZW fonts.1:include ZW fonts,0:no ZW fonts\n\nInitializes an input field for selecting a font. This function is \n\n intended for use when initializing a form. It can be called during \n\n initialization of a GUI form or from the \"init_after\" callback \n\n function of an \"Options\" form.\nIt is assumed the form has an option (integer) field \"idField\" that \n\n has a combo box widget. Any prior contents of the combo box list are \n\n discarded, and the combo box list is filled with the names of fonts \n\n currently available on the local computer. If \"Name\" is a non-empty \n\n string that matches the name of one of those fonts, that font becomes \n\n the default selection in the combo box.\nTo apply this function to an \"Options\" form, input \"OptForm\" as the \n\n value of the \"Form\" argument.\nIt is recommended that the form's field \"idField\" should reference the \n\n global variable \"VgRdTxtFont\" to hold the index of the selected item. \n\n This will synchronize the default font selection with the font \n\n selection fields in native ZW3D commands. This function updates \n\n \"VgRdTxtFont\" if a match to \"Name\" is found. If \"Name\" does not match \n\n any font name, the current value of \"VgRdTxtFont\" selects the default \n\n item in the combo box list.\nWhen working with an \"Options\" form, the usual practice for managing a \n\n font input field is to use an option field having a combo box for the \n\n font names, and to use a hidden text field in the form's data \n\n container to hold the name of the selected font. In the form's \n\n \"init_after\" callback, call this function with the contents of the \n\n hidden field as the \"Name\" argument. In the form's \"function\" \n\n callback, query the combo box for the text of the selected item, save \n\n the text to the hidden field, and use the text wherever the font name \n\n is needed. If the combo box cannot be queried because the \"Options\" \n\n form is not active (such as during regeneration), use whatever text \n\n was previously saved in the hidden field as the font name. For \n\n example, an \"init_after\" callback might include this snippet of code \n\n to initialize a font selection combo box in field 5, with a hidden \n\n text field 4 that might contain the name of a previously selected font \n\n (the data container is specified by \"idData\").\nnote:\nThe font name will be an empty string if field 4 does not exist:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the recommended practice for managing a font input field in an 'Options' form?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldInitFont\nForm [in] GUI form name\nidField [in] id of form field for font combo box\nName [in] name of default font, may be NULL\nhasZwFont [in] judge if fonts have ZW fonts.1:include ZW fonts,0:no ZW fonts\n\nInitializes an input field for selecting a font. This function is \n\n intended for use when initializing a form. It can be called during \n\n initialization of a GUI form or from the \"init_after\" callback \n\n function of an \"Options\" form.\nIt is assumed the form has an option (integer) field \"idField\" that \n\n has a combo box widget. Any prior contents of the combo box list are \n\n discarded, and the combo box list is filled with the names of fonts \n\n currently available on the local computer. If \"Name\" is a non-empty \n\n string that matches the name of one of those fonts, that font becomes \n\n the default selection in the combo box.\nTo apply this function to an \"Options\" form, input \"OptForm\" as the \n\n value of the \"Form\" argument.\nIt is recommended that the form's field \"idField\" should reference the \n\n global variable \"VgRdTxtFont\" to hold the index of the selected item. \n\n This will synchronize the default font selection with the font \n\n selection fields in native ZW3D commands. This function updates \n\n \"VgRdTxtFont\" if a match to \"Name\" is found. If \"Name\" does not match \n\n any font name, the current value of \"VgRdTxtFont\" selects the default \n\n item in the combo box list.\nWhen working with an \"Options\" form, the usual practice for managing a \n\n font input field is to use an option field having a combo box for the \n\n font names, and to use a hidden text field in the form's data \n\n container to hold the name of the selected font. In the form's \n\n \"init_after\" callback, call this function with the contents of the \n\n hidden field as the \"Name\" argument. In the form's \"function\" \n\n callback, query the combo box for the text of the selected item, save \n\n the text to the hidden field, and use the text wherever the font name \n\n is needed. If the combo box cannot be queried because the \"Options\" \n\n form is not active (such as during regeneration), use whatever text \n\n was previously saved in the hidden field as the font name. For \n\n example, an \"init_after\" callback might include this snippet of code \n\n to initialize a font selection combo box in field 5, with a hidden \n\n text field 4 that might contain the name of a previously selected font \n\n (the data container is specified by \"idData\").\nnote:\nThe font name will be an empty string if field 4 does not exist:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a new item to the end of a list?"
            },
            {
                "role": "assistant",
                "content": "cvxItemAdd\nForm [in] GUI form name\nidField [in] field id\nText [in] item text (NULL to Ignore)\n\nAdds a new item to the end of the list associated with the specified \"w_list\" or \"w_combo\" field.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a new item to the end of a combo box?"
            },
            {
                "role": "assistant",
                "content": "cvxItemAdd\nForm [in] GUI form name\nidField [in] field id\nText [in] item text (NULL to Ignore)\n\nAdds a new item to the end of the list associated with the specified \"w_list\" or \"w_combo\" field.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add an item to a specific field in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxItemAdd\nForm [in] GUI form name\nidField [in] field id\nText [in] item text (NULL to Ignore)\n\nAdds a new item to the end of the list associated with the specified \"w_list\" or \"w_combo\" field.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the text associated with a specified item of a field?"
            },
            {
                "role": "assistant",
                "content": "cvxItemGet\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\nText [inout] item text\n\nGets the text string associated with the specified item of \n\n the specified field. It is assumed that \"Text\" references \n\n sufficient memory to hold the output string. See cvxItemSet() \n\n for the meaning of \"idItem\" for each field type.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to retrieve the text of a specific item in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxItemGet\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\nText [inout] item text\n\nGets the text string associated with the specified item of \n\n the specified field. It is assumed that \"Text\" references \n\n sufficient memory to hold the output string. See cvxItemSet() \n\n for the meaning of \"idItem\" for each field type.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxItemGet to obtain the text of an item in a field?"
            },
            {
                "role": "assistant",
                "content": "cvxItemGet\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\nText [inout] item text\n\nGets the text string associated with the specified item of \n\n the specified field. It is assumed that \"Text\" references \n\n sufficient memory to hold the output string. See cvxItemSet() \n\n for the meaning of \"idItem\" for each field type.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the text associated with a specified item?"
            },
            {
                "role": "assistant",
                "content": "cvxItemSet\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\nText [in] item text (can be NULL)\n\nSet the text associated with the specified item.\nForm: set Form to \"OptForm\" to use currently active form. \n\n idField: use \"$report\" to get the value of the specific field. \n\n idItem: the meaning of \"idItem\" for each field type is documented below.\n1. idField with a label and an input(output) item, such as \"ZsCc::Number\":\n   item = 0: label.\n   item = 1: input(output) item.\n\n2. idField with a label and multiple items in a list, such as \"ZsCc::ComboBox\":\n   item = 0: label.\n   item = N: insert \"Text\" into Nth(start from 1),\n             and the following items move backward in turn.\n\n3. idField with multiple radio buttons(one as well):\n   item = N: Nth item label."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the currently active form in GUI?"
            },
            {
                "role": "assistant",
                "content": "cvxItemSet\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\nText [in] item text (can be NULL)\n\nSet the text associated with the specified item.\nForm: set Form to \"OptForm\" to use currently active form. \n\n idField: use \"$report\" to get the value of the specific field. \n\n idItem: the meaning of \"idItem\" for each field type is documented below.\n1. idField with a label and an input(output) item, such as \"ZsCc::Number\":\n   item = 0: label.\n   item = 1: input(output) item.\n\n2. idField with a label and multiple items in a list, such as \"ZsCc::ComboBox\":\n   item = 0: label.\n   item = N: insert \"Text\" into Nth(start from 1),\n             and the following items move backward in turn.\n\n3. idField with multiple radio buttons(one as well):\n   item = N: Nth item label."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the value of a specific field using idField?"
            },
            {
                "role": "assistant",
                "content": "cvxItemSet\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\nText [in] item text (can be NULL)\n\nSet the text associated with the specified item.\nForm: set Form to \"OptForm\" to use currently active form. \n\n idField: use \"$report\" to get the value of the specific field. \n\n idItem: the meaning of \"idItem\" for each field type is documented below.\n1. idField with a label and an input(output) item, such as \"ZsCc::Number\":\n   item = 0: label.\n   item = 1: input(output) item.\n\n2. idField with a label and multiple items in a list, such as \"ZsCc::ComboBox\":\n   item = 0: label.\n   item = N: insert \"Text\" into Nth(start from 1),\n             and the following items move backward in turn.\n\n3. idField with multiple radio buttons(one as well):\n   item = N: Nth item label."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the text associated with a specified item?"
            },
            {
                "role": "assistant",
                "content": "cvxItemModify\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\nText [in] item text\n\nModifies the text associated with the specified item. See \n\n cvxItemSet() for the meaning of \"idItem\" for each field type.\nIf the field is a w_list, this function changes the item's icon (if \n\n Text is recognized as the path to an image file) or it changes the \n\n item's text (if Text is not an image file path) without otherwise \n\n re-initializing the item as cvxItemSet() would do. A typical use for \n\n this function is to augment cvxItemAdd() or cvxItemSet() to create a \n\n list item that has both text and an icon: specify the path to the icon \n\n image file as the Text argument using one of the latter two functions, \n\n then call this function to add text to the item.\nFor all other field types, this function is the same as cvxItemSet().\nInput \"OptForm\" as the form name to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the item's icon for a w_list field?"
            },
            {
                "role": "assistant",
                "content": "cvxItemModify\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\nText [in] item text\n\nModifies the text associated with the specified item. See \n\n cvxItemSet() for the meaning of \"idItem\" for each field type.\nIf the field is a w_list, this function changes the item's icon (if \n\n Text is recognized as the path to an image file) or it changes the \n\n item's text (if Text is not an image file path) without otherwise \n\n re-initializing the item as cvxItemSet() would do. A typical use for \n\n this function is to augment cvxItemAdd() or cvxItemSet() to create a \n\n list item that has both text and an icon: specify the path to the icon \n\n image file as the Text argument using one of the latter two functions, \n\n then call this function to add text to the item.\nFor all other field types, this function is the same as cvxItemSet().\nInput \"OptForm\" as the form name to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I use this function to add text to an item with an icon?"
            },
            {
                "role": "assistant",
                "content": "cvxItemModify\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\nText [in] item text\n\nModifies the text associated with the specified item. See \n\n cvxItemSet() for the meaning of \"idItem\" for each field type.\nIf the field is a w_list, this function changes the item's icon (if \n\n Text is recognized as the path to an image file) or it changes the \n\n item's text (if Text is not an image file path) without otherwise \n\n re-initializing the item as cvxItemSet() would do. A typical use for \n\n this function is to augment cvxItemAdd() or cvxItemSet() to create a \n\n list item that has both text and an icon: specify the path to the icon \n\n image file as the Text argument using one of the latter two functions, \n\n then call this function to add text to the item.\nFor all other field types, this function is the same as cvxItemSet().\nInput \"OptForm\" as the form name to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete an item from a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxItemDel\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\n\nDeletes the specified item from the specified \"w_list\" or \"w_combo\" field.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove a specific item from a field in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxItemDel\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\n\nDeletes the specified item from the specified \"w_list\" or \"w_combo\" field.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to delete an item from a field in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxItemDel\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\n\nDeletes the specified item from the specified \"w_list\" or \"w_combo\" field.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to search for an item in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxItemFind\nForm [in] GUI form name\nidField [in] field id\nText [in] item text\nidItem [out] item id\n\nSearches the specified \"w_list\" or \"w_combo\" field for \n\n the specified text and outputs the corresponding item id. \n\n \"idItem\" is set to zero if the specified text is not found.\nFor \"Options\" form, the id starts form 1, and 0 means it is not set. So item returns 0, indicating that it is not found.\nFor ListWidget and ComboCheck, the position of the item is transmitted through +1 processing. Therefore, the minimum transmitted position is 0 + 1 =1. Therefore, if the item is 0 ,it means that it is not found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find an item by its text in a field?"
            },
            {
                "role": "assistant",
                "content": "cvxItemFind\nForm [in] GUI form name\nidField [in] field id\nText [in] item text\nidItem [out] item id\n\nSearches the specified \"w_list\" or \"w_combo\" field for \n\n the specified text and outputs the corresponding item id. \n\n \"idItem\" is set to zero if the specified text is not found.\nFor \"Options\" form, the id starts form 1, and 0 means it is not set. So item returns 0, indicating that it is not found.\nFor ListWidget and ComboCheck, the position of the item is transmitted through +1 processing. Therefore, the minimum transmitted position is 0 + 1 =1. Therefore, if the item is 0 ,it means that it is not found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the item id based on the text in a form field?"
            },
            {
                "role": "assistant",
                "content": "cvxItemFind\nForm [in] GUI form name\nidField [in] field id\nText [in] item text\nidItem [out] item id\n\nSearches the specified \"w_list\" or \"w_combo\" field for \n\n the specified text and outputs the corresponding item id. \n\n \"idItem\" is set to zero if the specified text is not found.\nFor \"Options\" form, the id starts form 1, and 0 means it is not set. So item returns 0, indicating that it is not found.\nFor ListWidget and ComboCheck, the position of the item is transmitted through +1 processing. Therefore, the minimum transmitted position is 0 + 1 =1. Therefore, if the item is 0 ,it means that it is not found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set a checkbox for an item in a list widget?"
            },
            {
                "role": "assistant",
                "content": "cvxItemCbxSet\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\nisOn [in] is on or not\n\nThis function is similar to cvxItemSet(), the difference is, this function \n\n is only for checkbox control. \n\n If the field is list widget,add a checkbox for the item.\nnote:\nFor different controls,the processing methods are different when the item is -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set a checkbox for a specific item in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxItemCbxSet\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\nisOn [in] is on or not\n\nThis function is similar to cvxItemSet(), the difference is, this function \n\n is only for checkbox control. \n\n If the field is list widget,add a checkbox for the item.\nnote:\nFor different controls,the processing methods are different when the item is -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if a checkbox for a specific item is on or off?"
            },
            {
                "role": "assistant",
                "content": "cvxItemCbxSet\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\nisOn [in] is on or not\n\nThis function is similar to cvxItemSet(), the difference is, this function \n\n is only for checkbox control. \n\n If the field is list widget,add a checkbox for the item.\nnote:\nFor different controls,the processing methods are different when the item is -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to select a specified item?"
            },
            {
                "role": "assistant",
                "content": "cvxItemSelect\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\n\nSelects the specified item.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to apply the function to an 'Options' form?"
            },
            {
                "role": "assistant",
                "content": "cvxItemSelect\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\n\nSelects the specified item.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxItemSelect with GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxItemSelect\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\n\nSelects the specified item.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to select a specified item in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxItemSelectText\nForm [in] GUI form name\nidField [in] field id\nText [in] item text\n\nSelects the specified item.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to apply the function to an 'Options' form?"
            },
            {
                "role": "assistant",
                "content": "cvxItemSelectText\nForm [in] GUI form name\nidField [in] field id\nText [in] item text\n\nSelects the specified item.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the input required to select an item in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxItemSelectText\nForm [in] GUI form name\nidField [in] field id\nText [in] item text\n\nSelects the specified item.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the selected item in a specified field?"
            },
            {
                "role": "assistant",
                "content": "cvxItemSelected\nForm [in] GUI form name\nidField [in] field id\nidItem [out] item id\n\nOutputs the id of the item currently selected in the specified field. \n\n Items are numbered from 1. Outputs 0 if there isn't a selected item.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if there is a selected item in a field?"
            },
            {
                "role": "assistant",
                "content": "cvxItemSelected\nForm [in] GUI form name\nidField [in] field id\nidItem [out] item id\n\nOutputs the id of the item currently selected in the specified field. \n\n Items are numbered from 1. Outputs 0 if there isn't a selected item.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to apply the function to an 'Options' form?"
            },
            {
                "role": "assistant",
                "content": "cvxItemSelected\nForm [in] GUI form name\nidField [in] field id\nidItem [out] item id\n\nOutputs the id of the item currently selected in the specified field. \n\n Items are numbered from 1. Outputs 0 if there isn't a selected item.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check the status of a GUI item?"
            },
            {
                "role": "assistant",
                "content": "cvxItemStateGet\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\nisOn [out] 1 if item is ON; 0 if it is OFF\n\nGets the ON/OFF status of a GUI item. \n\n Input \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if an item is ON or OFF in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxItemStateGet\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\nisOn [out] 1 if item is ON; 0 if it is OFF\n\nGets the ON/OFF status of a GUI item. \n\n Input \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the ON/OFF status of an item in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxItemStateGet\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\nisOn [out] 1 if item is ON; 0 if it is OFF\n\nGets the ON/OFF status of a GUI item. \n\n Input \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the ON/OFF status of a GUI item?"
            },
            {
                "role": "assistant",
                "content": "cvxItemStateSet\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\nisOn [in] 1 if item is ON; 0 if it is OFF\n\nGets the ON/OFF status of a GUI item. \n\n Input \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the status of a GUI item?"
            },
            {
                "role": "assistant",
                "content": "cvxItemStateSet\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\nisOn [in] 1 if item is ON; 0 if it is OFF\n\nGets the ON/OFF status of a GUI item. \n\n Input \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to apply this function to an 'Options' form?"
            },
            {
                "role": "assistant",
                "content": "cvxItemStateSet\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\nisOn [in] 1 if item is ON; 0 if it is OFF\n\nGets the ON/OFF status of a GUI item. \n\n Input \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the check state of an item in a list Widget?"
            },
            {
                "role": "assistant",
                "content": "cvxItemGetCheckState\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\ncheckState [out] 0:Unchecked, 1:PartiallyChecked, 2:Checked\n\nGet item check state of list Widget or tree view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if an item is partially checked in a tree view?"
            },
            {
                "role": "assistant",
                "content": "cvxItemGetCheckState\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\ncheckState [out] 0:Unchecked, 1:PartiallyChecked, 2:Checked\n\nGet item check state of list Widget or tree view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the check state of an item in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxItemGetCheckState\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\ncheckState [out] 0:Unchecked, 1:PartiallyChecked, 2:Checked\n\nGet item check state of list Widget or tree view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the visibility of a specialized item in a form field?"
            },
            {
                "role": "assistant",
                "content": "cvxItemVisibleSet\nForm [in] form name\nidField [in] field id\nidItem [in] item number\nstate [in] 1 is visible ,0 is hide\n\nSet the visibility of the field's specialized item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to hide a specific item in a form field?"
            },
            {
                "role": "assistant",
                "content": "cvxItemVisibleSet\nForm [in] form name\nidField [in] field id\nidItem [in] item number\nstate [in] 1 is visible ,0 is hide\n\nSet the visibility of the field's specialized item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I make a particular item visible in a form field?"
            },
            {
                "role": "assistant",
                "content": "cvxItemVisibleSet\nForm [in] form name\nidField [in] field id\nidItem [in] item number\nstate [in] 1 is visible ,0 is hide\n\nSet the visibility of the field's specialized item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a specific item is visible in a form field?"
            },
            {
                "role": "assistant",
                "content": "cvxItemVisibleGet\nForm [in] form name\nidField [in] field id\nidItem [in] item number\nstate [out] 1 is visible ,0 is hide\n\nGet the visibility of the field's specialized item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the visibility state of a specific item in a form field?"
            },
            {
                "role": "assistant",
                "content": "cvxItemVisibleGet\nForm [in] form name\nidField [in] field id\nidItem [in] item number\nstate [out] 1 is visible ,0 is hide\n\nGet the visibility of the field's specialized item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I determine if a particular item is hidden or visible in a form field?"
            },
            {
                "role": "assistant",
                "content": "cvxItemVisibleGet\nForm [in] form name\nidField [in] field id\nidItem [in] item number\nstate [out] 1 is visible ,0 is hide\n\nGet the visibility of the field's specialized item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of UI settings?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsCount\n\nGet the count of ui settings"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the number of UI settings?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsCount\n\nGet the count of ui settings"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function can be used to obtain the count of UI settings?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsCount\n\nGet the count of ui settings"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a new UI settings based on given settings?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsCreate\nName [in] the name of the Settings\nBase [in] the name of the base Settings\n\nCreate a new ui settings based on the given settings"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to create UI settings with a specific name and base?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsCreate\nName [in] the name of the Settings\nBase [in] the name of the base Settings\n\nCreate a new ui settings based on the given settings"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to create a new UI settings?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsCreate\nName [in] the name of the Settings\nBase [in] the name of the base Settings\n\nCreate a new ui settings based on the given settings"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to rename UI settings?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsRename\nName [in] the name of the Settings to be renamed\nDest [in] the new name of the Settings\n\nRename the specified ui settings to the given name"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to change the name of UI settings?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsRename\nName [in] the name of the Settings to be renamed\nDest [in] the new name of the Settings\n\nRename the specified ui settings to the given name"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to rename UI settings?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsRename\nName [in] the name of the Settings to be renamed\nDest [in] the new name of the Settings\n\nRename the specified ui settings to the given name"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove specific UI settings?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsRemove\nName [in] the name of the Settings to be removed\n\nRemove the specified ui settings"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to delete UI settings by name?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsRemove\nName [in] the name of the Settings to be removed\n\nRemove the specified ui settings"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to remove UI settings?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsRemove\nName [in] the name of the Settings to be removed\n\nRemove the specified ui settings"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to import UI settings file?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsImport\nPath [in] the path of the settings file to be imported\n\nImport the ui settings file"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to import UI settings from a file?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsImport\nPath [in] the path of the settings file to be imported\n\nImport the ui settings file"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to import UI settings?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsImport\nPath [in] the path of the settings file to be imported\n\nImport the ui settings file"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to export UI settings to a specific path?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsExport\nName [in] the name of the settings to be exported\nPath [in] the path of the settings file exported\n\nExport the specified ui settings to a given path"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to export UI settings by specifying the name?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsExport\nName [in] the name of the settings to be exported\nPath [in] the path of the settings file exported\n\nExport the specified ui settings to a given path"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to save UI settings to a file?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsExport\nName [in] the name of the settings to be exported\nPath [in] the path of the settings file exported\n\nExport the specified ui settings to a given path"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to test the existence of a UI setting by name?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsExists\nName [in] the name of the settings\n\nTest the existence of ui setting by the given name"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if a specific UI setting exists?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsExists\nName [in] the name of the settings\n\nTest the existence of ui setting by the given name"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I verify the existence of a UI setting using its name?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsExists\nName [in] the name of the settings\n\nTest the existence of ui setting by the given name"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to apply specific UI settings?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsApply\nName [in] the name of the Settings\n\nApply the specified ui settings"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to apply UI settings by name?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsApply\nName [in] the name of the Settings\n\nApply the specified ui settings"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I apply UI settings for a specific name?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsApply\nName [in] the name of the Settings\n\nApply the specified ui settings"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to reset the specified UI settings to its original state?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsReset\nName [in] the name of the settings\n\nSet the specified ui settings to its original state"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to revert the UI settings to their default state?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsReset\nName [in] the name of the settings\n\nSet the specified ui settings to its original state"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I reset the UI settings by specifying the name?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsReset\nName [in] the name of the settings\n\nSet the specified ui settings to its original state"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to fetch UI settings by index?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsFetch\ni [in] the index of the settings to be fetched\nName [out] the name of the settings to be fetched\n\nGet the ui settings name by the given index."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the name of UI settings by index?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsFetch\ni [in] the index of the settings to be fetched\nName [out] the name of the settings to be fetched\n\nGet the ui settings name by the given index."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the name of UI settings using the index?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsFetch\ni [in] the index of the settings to be fetched\nName [out] the name of the settings to be fetched\n\nGet the ui settings name by the given index."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the active mouse cursor to a specified type?"
            },
            {
                "role": "assistant",
                "content": "cvxCursorSet\nType [in] cursor type\n\nChanges the active mouse cursor to the specified type. \n\n A call to this function should always be paired with \n\n a subsequent callto cvxCursorRestore()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the cursor type?"
            },
            {
                "role": "assistant",
                "content": "cvxCursorSet\nType [in] cursor type\n\nChanges the active mouse cursor to the specified type. \n\n A call to this function should always be paired with \n\n a subsequent callto cvxCursorRestore()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to pair a call to cvxCursorSet with cvxCursorRestore?"
            },
            {
                "role": "assistant",
                "content": "cvxCursorSet\nType [in] cursor type\n\nChanges the active mouse cursor to the specified type. \n\n A call to this function should always be paired with \n\n a subsequent callto cvxCursorRestore()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to restore the cursor type that was active prior to the last call to cvxCursorSet?"
            },
            {
                "role": "assistant",
                "content": "cvxCursorRestore\n\nRestores the cursor type that was active prior to the last call to cvxCursorSet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display percent progress using GUI callback function?"
            },
            {
                "role": "assistant",
                "content": "cvxProgress\niprogress [in] percent progress (0-100)\n\nInvoke GUI callback function to display percent progress \n\n or to clear the progress meter if \"iprogress < 0\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to clear the progress meter?"
            },
            {
                "role": "assistant",
                "content": "cvxProgress\niprogress [in] percent progress (0-100)\n\nInvoke GUI callback function to display percent progress \n\n or to clear the progress meter if \"iprogress < 0\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to invoke GUI callback function to show progress?"
            },
            {
                "role": "assistant",
                "content": "cvxProgress\niprogress [in] percent progress (0-100)\n\nInvoke GUI callback function to display percent progress \n\n or to clear the progress meter if \"iprogress < 0\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get callback parameters for the list widget?"
            },
            {
                "role": "assistant",
                "content": "cvxListCallbackParamGet\nform [in] form name\nidField [in] field id\nparam [out] param\n\nGet callback parameters for the list widget when the callback function being invoked, \n\n the interface should be used in the callback function.\nnote:\nTo use the function, you should add a property of type string-list with the property \n\n name \"eventsEnabled\" and add the property value \"dbl_clk\" to the list widget control \n\n in UI file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the interface in the callback function?"
            },
            {
                "role": "assistant",
                "content": "cvxListCallbackParamGet\nform [in] form name\nidField [in] field id\nparam [out] param\n\nGet callback parameters for the list widget when the callback function being invoked, \n\n the interface should be used in the callback function.\nnote:\nTo use the function, you should add a property of type string-list with the property \n\n name \"eventsEnabled\" and add the property value \"dbl_clk\" to the list widget control \n\n in UI file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to add a property of type string-list with the property name 'eventsEnabled'?"
            },
            {
                "role": "assistant",
                "content": "cvxListCallbackParamGet\nform [in] form name\nidField [in] field id\nparam [out] param\n\nGet callback parameters for the list widget when the callback function being invoked, \n\n the interface should be used in the callback function.\nnote:\nTo use the function, you should add a property of type string-list with the property \n\n name \"eventsEnabled\" and add the property value \"dbl_clk\" to the list widget control \n\n in UI file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set a tooltip for a specified row item of a list widget?"
            },
            {
                "role": "assistant",
                "content": "cvxListItemToolTipSet\nform [in] form name\nfield [in] field id\nrow [in] item row\ntoolTip [in] tooltip\n\nSet the tooltip for specified row item of listWdiget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set a tooltip for a specific field in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxListItemToolTipSet\nform [in] form name\nfield [in] field id\nrow [in] item row\ntoolTip [in] tooltip\n\nSet the tooltip for specified row item of listWdiget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the tooltip for a particular row item in a list widget?"
            },
            {
                "role": "assistant",
                "content": "cvxListItemToolTipSet\nform [in] form name\nfield [in] field id\nrow [in] item row\ntoolTip [in] tooltip\n\nSet the tooltip for specified row item of listWdiget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the tooltip of a specified row item for a listWidget?"
            },
            {
                "role": "assistant",
                "content": "cvxListItemToolTipGet\nform [in] form name\nfield [in] field id\nrow [in] item row\ntoolTip [out] tooltip\nsize [in] max size of tooltip\n\nGet the tooltip of specified row item for listWdiget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the tooltip for a specific row item in a listWidget?"
            },
            {
                "role": "assistant",
                "content": "cvxListItemToolTipGet\nform [in] form name\nfield [in] field id\nrow [in] item row\ntoolTip [out] tooltip\nsize [in] max size of tooltip\n\nGet the tooltip of specified row item for listWdiget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to obtain the tooltip for a particular row item in a listWidget?"
            },
            {
                "role": "assistant",
                "content": "cvxListItemToolTipGet\nform [in] form name\nfield [in] field id\nrow [in] item row\ntoolTip [out] tooltip\nsize [in] max size of tooltip\n\nGet the tooltip of specified row item for listWdiget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to show a specific popup menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupShow\nname [in] popup menu name\n\nShow the specified popup menu. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to display a popup menu by its name?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupShow\nname [in] popup menu name\n\nShow the specified popup menu. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I access and show a specific popup menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupShow\nname [in] popup menu name\n\nShow the specified popup menu. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a specific pop up menu exists?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupDefine\nname [in] popup menu name\n\nDetermine if the specified pop up menu exists. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine the existence of a pop up menu by its name?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupDefine\nname [in] popup menu name\n\nDetermine if the specified pop up menu exists. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the name of a pop up menu using $report or configuration file?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupDefine\nname [in] popup menu name\n\nDetermine if the specified pop up menu exists. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update a specified pop up menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupUpdate\nName [in] menu name\n\nUpdate the specified pop up menu. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name of a pop up menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupUpdate\nName [in] menu name\n\nUpdate the specified pop up menu. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to view the configuration file to find the pop up menu name?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupUpdate\nName [in] menu name\n\nUpdate the specified pop up menu. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the visibility of a specific pop up menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSetVisible\nname [in] popup menu name\nvisible [in] visible or not\n\nSet the visible state for the specified pop up menu. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to make a specific pop up menu visible or not?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSetVisible\nname [in] popup menu name\nvisible [in] visible or not\n\nSet the visible state for the specified pop up menu. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I change the visibility of a pop up menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSetVisible\nname [in] popup menu name\nvisible [in] visible or not\n\nSet the visible state for the specified pop up menu. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of actions in a popup menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupMenuCnt\nName [in] menu name\ncnt [out] count of actions\n\nGet count of menu actions. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the menu name for a popup menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupMenuCnt\nName [in] menu name\ncnt [out] count of actions\n\nGet count of menu actions. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to view the configuration file to find the popup menu name?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupMenuCnt\nName [in] menu name\ncnt [out] count of actions\n\nGet count of menu actions. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of actions in a sub-menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSubMenuCnt\nName [in] menu name\nSub [in] sub-menu name\ncnt [out] count of actions\n\nGet count of sub-menu actions. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the count of actions in a specific sub-menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSubMenuCnt\nName [in] menu name\nSub [in] sub-menu name\ncnt [out] count of actions\n\nGet count of sub-menu actions. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the number of actions in a sub-menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSubMenuCnt\nName [in] menu name\nSub [in] sub-menu name\ncnt [out] count of actions\n\nGet count of sub-menu actions. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert an item to a specific sub-menu in a menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSubMenuItemInsert\nName [in] menu name\nSub [in] sub-menu name\nindex [in] index in the sub-menu\nActName [in] action name of item\nLabel [in] label of item\nScript [in] action of the item\nIcon [in] icon of item\n\nInsert a item to specific sub-menu in menu. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/). \n\n If index = -1, it is inserted lase, otherwise it is inserted before index."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the popup menu name?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSubMenuItemInsert\nName [in] menu name\nSub [in] sub-menu name\nindex [in] index in the sub-menu\nActName [in] action name of item\nLabel [in] label of item\nScript [in] action of the item\nIcon [in] icon of item\n\nInsert a item to specific sub-menu in menu. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/). \n\n If index = -1, it is inserted lase, otherwise it is inserted before index."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert an item at the end of a sub-menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSubMenuItemInsert\nName [in] menu name\nSub [in] sub-menu name\nindex [in] index in the sub-menu\nActName [in] action name of item\nLabel [in] label of item\nScript [in] action of the item\nIcon [in] icon of item\n\nInsert a item to specific sub-menu in menu. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/). \n\n If index = -1, it is inserted lase, otherwise it is inserted before index."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert an item before a specific index in a sub-menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSubMenuItemInsert\nName [in] menu name\nSub [in] sub-menu name\nindex [in] index in the sub-menu\nActName [in] action name of item\nLabel [in] label of item\nScript [in] action of the item\nIcon [in] icon of item\n\nInsert a item to specific sub-menu in menu. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/). \n\n If index = -1, it is inserted lase, otherwise it is inserted before index."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove a specific item from a sub-menu in a menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSubMenuItemRemove\nname [in] menu name\nSub [in] sub-menu name\nindex [in] index in the sub-menu\n\nRemove a item from specific sub-menu in menu. \n\n The function of this interface is similar to cvxPopupSubMenuActionsRemove(). \n\n If index = -1, remove all. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove all items from a sub-menu in a menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSubMenuItemRemove\nname [in] menu name\nSub [in] sub-menu name\nindex [in] index in the sub-menu\n\nRemove a item from specific sub-menu in menu. \n\n The function of this interface is similar to cvxPopupSubMenuActionsRemove(). \n\n If index = -1, remove all. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the popup menu name for removal?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSubMenuItemRemove\nname [in] menu name\nSub [in] sub-menu name\nindex [in] index in the sub-menu\n\nRemove a item from specific sub-menu in menu. \n\n The function of this interface is similar to cvxPopupSubMenuActionsRemove(). \n\n If index = -1, remove all. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove all actions from a specific sub-menu in a menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSubMenuActionsRemove\nName [in] menu name\nSub [in] sub-menu name\niFirst [in] index in the sub-menu\niLast [in] index in the sub-menu\n\nRemove action from specific sub-menu in menu. \n\n If iLast = -1 and iFirst = 0, remove all. \n\n If iLast = iFirst = -1, remove all. \n\n The function of this interface is similar to cvxPopupSubMenuItemRemove(). \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove a specific action from a sub-menu in a menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSubMenuActionsRemove\nName [in] menu name\nSub [in] sub-menu name\niFirst [in] index in the sub-menu\niLast [in] index in the sub-menu\n\nRemove action from specific sub-menu in menu. \n\n If iLast = -1 and iFirst = 0, remove all. \n\n If iLast = iFirst = -1, remove all. \n\n The function of this interface is similar to cvxPopupSubMenuItemRemove(). \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove all actions from all sub-menus in a menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSubMenuActionsRemove\nName [in] menu name\nSub [in] sub-menu name\niFirst [in] index in the sub-menu\niLast [in] index in the sub-menu\n\nRemove action from specific sub-menu in menu. \n\n If iLast = -1 and iFirst = 0, remove all. \n\n If iLast = iFirst = -1, remove all. \n\n The function of this interface is similar to cvxPopupSubMenuItemRemove(). \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a separator to a specific sub-menu in a menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSubMenuSeparatorInsert\nName [in] menu name\nSub [in] sub-menu name\n\nInsert a separator to specific sub-menu in menu. \n\n This interface can only insert separator at the end of the sub-menu. \n\n If there is no \"action\" after the separator, the separator is not displayed. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the popup menu name for inserting a separator?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSubMenuSeparatorInsert\nName [in] menu name\nSub [in] sub-menu name\n\nInsert a separator to specific sub-menu in menu. \n\n This interface can only insert separator at the end of the sub-menu. \n\n If there is no \"action\" after the separator, the separator is not displayed. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the sub-menu name for inserting a separator?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSubMenuSeparatorInsert\nName [in] menu name\nSub [in] sub-menu name\n\nInsert a separator to specific sub-menu in menu. \n\n This interface can only insert separator at the end of the sub-menu. \n\n If there is no \"action\" after the separator, the separator is not displayed. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the visibility of a specific pop-up sub-menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSubMenuSetVisible\nname [in] popup menu name\nsub [in] popup sub-menu name\nvisible [in] visible or not\n\nSet the visible state for the specified pop up sub-menu. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to change the visibility of a pop-up sub-menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSubMenuSetVisible\nname [in] popup menu name\nsub [in] popup sub-menu name\nvisible [in] visible or not\n\nSet the visible state for the specified pop up sub-menu. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I control the visibility of a specific pop-up sub-menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSubMenuSetVisible\nname [in] popup menu name\nsub [in] popup sub-menu name\nvisible [in] visible or not\n\nSet the visible state for the specified pop up sub-menu. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a special menu item exists?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemIsExist\nname [in] menu name\naction [in] action name\n\nCheck if special menu item is exist. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to verify the existence of a menu item?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemIsExist\nname [in] menu name\naction [in] action name\n\nCheck if special menu item is exist. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I determine if a specific menu item is present?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemIsExist\nname [in] menu name\naction [in] action name\n\nCheck if special menu item is exist. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a specified popup item?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemInsert\nname [in] menu name\nindex [in] index in the menu\nLabel [in] label name\nAction [in] action name\n\nInsert specified popup item. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/). \n\n If this menu is NULL, \"index\" = -1. \n\n If this menu is not NULL, \"index\" >=0"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the popup menu name?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemInsert\nname [in] menu name\nindex [in] index in the menu\nLabel [in] label name\nAction [in] action name\n\nInsert specified popup item. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/). \n\n If this menu is NULL, \"index\" = -1. \n\n If this menu is not NULL, \"index\" >=0"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the index in the menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemInsert\nname [in] menu name\nindex [in] index in the menu\nLabel [in] label name\nAction [in] action name\n\nInsert specified popup item. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/). \n\n If this menu is NULL, \"index\" = -1. \n\n If this menu is not NULL, \"index\" >=0"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to label a popup item?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemInsert\nname [in] menu name\nindex [in] index in the menu\nLabel [in] label name\nAction [in] action name\n\nInsert specified popup item. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/). \n\n If this menu is NULL, \"index\" = -1. \n\n If this menu is not NULL, \"index\" >=0"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify an action for a popup item?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemInsert\nname [in] menu name\nindex [in] index in the menu\nLabel [in] label name\nAction [in] action name\n\nInsert specified popup item. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/). \n\n If this menu is NULL, \"index\" = -1. \n\n If this menu is not NULL, \"index\" >=0"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove a specific popup item from a menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemRemove\nname [in] menu name\nindex [in] index in the menu\n\nRemove specified popup item. \n\n If index = -1, remove all. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove all items from a popup menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemRemove\nname [in] menu name\nindex [in] index in the menu\n\nRemove specified popup item. \n\n If index = -1, remove all. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the popup menu name for removal?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemRemove\nname [in] menu name\nindex [in] index in the menu\n\nRemove specified popup item. \n\n If index = -1, remove all. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the action name of a specific menu item?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemActionGet\nname [in] menu name\nitem [in] menu item\nAction [out] action name\nnByte [in] max size of Action\n\nGet item action name by specified menu name and menu item. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the action associated with a menu item?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemActionGet\nname [in] menu name\nitem [in] menu item\nAction [out] action name\nnByte [in] max size of Action\n\nGet item action name by specified menu name and menu item. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the action name for a particular menu item?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemActionGet\nname [in] menu name\nitem [in] menu item\nAction [out] action name\nnByte [in] max size of Action\n\nGet item action name by specified menu name and menu item. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the action of a menu specified item?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemSetAction\nname [in] menu name\nindex [in] action index\nAction [in] action script\n\nSet the action of menu specified item \n\n This interface cannot change the action label. \n\n The \"index\" can't be less than 0. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to change the action of a menu item?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemSetAction\nname [in] menu name\nindex [in] action index\nAction [in] action script\n\nSet the action of menu specified item \n\n This interface cannot change the action label. \n\n The \"index\" can't be less than 0. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the popup menu name?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemSetAction\nname [in] menu name\nindex [in] action index\nAction [in] action script\n\nSet the action of menu specified item \n\n This interface cannot change the action label. \n\n The \"index\" can't be less than 0. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the minimum value for the action index?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemSetAction\nname [in] menu name\nindex [in] action index\nAction [in] action script\n\nSet the action of menu specified item \n\n This interface cannot change the action label. \n\n The \"index\" can't be less than 0. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the label name of a menu item?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemLabelGet\nname [in] menu name\nitem [in] menu item\nLabel [out] Label name\nnByte [in] max size of Label\n\nGet the menu item label name. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the label of a specific menu item?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemLabelGet\nname [in] menu name\nitem [in] menu item\nLabel [out] Label name\nnByte [in] max size of Label\n\nGet the menu item label name. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to obtain the label name of a menu item?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemLabelGet\nname [in] menu name\nitem [in] menu item\nLabel [out] Label name\nnByte [in] max size of Label\n\nGet the menu item label name. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the checked state of a menu item?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemCheckedGet\nname [in] menu name\ngroup [in] menu group\nitem [in] menu item\nCheck [out] checked state\n\nGet the action's checked state. \n\n Menu item must have the \"GroupItem\" attribute to call this interface. \n\n Only one of the checked properties of all actions in a group can be true. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a menu item is checked?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemCheckedGet\nname [in] menu name\ngroup [in] menu group\nitem [in] menu item\nCheck [out] checked state\n\nGet the action's checked state. \n\n Menu item must have the \"GroupItem\" attribute to call this interface. \n\n Only one of the checked properties of all actions in a group can be true. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the checked state of a specific menu item?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemCheckedGet\nname [in] menu name\ngroup [in] menu group\nitem [in] menu item\nCheck [out] checked state\n\nGet the action's checked state. \n\n Menu item must have the \"GroupItem\" attribute to call this interface. \n\n Only one of the checked properties of all actions in a group can be true. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the visible state of a menu item?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemVisibleGet\nname [in] menu name\nitem [in] menu item\nVisible [out] visible state\n\nGet the action's visible state. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if a specific menu item is visible?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemVisibleGet\nname [in] menu name\nitem [in] menu item\nVisible [out] visible state\n\nGet the action's visible state. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the visibility state of a menu item?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemVisibleGet\nname [in] menu name\nitem [in] menu item\nVisible [out] visible state\n\nGet the action's visible state. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the visibility of an action in the quick bar?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemSetVisibleByAction\nname [in] menu name\naction [in] action name\nvisible [in] action visibility\n\nSet the action visibility of quick bar, popup bar according to the specified \n\n menu name and action name. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the visibility of an action in the popup bar?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemSetVisibleByAction\nname [in] menu name\naction [in] action name\nvisible [in] action visibility\n\nSet the action visibility of quick bar, popup bar according to the specified \n\n menu name and action name. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the menu name for setting action visibility?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemSetVisibleByAction\nname [in] menu name\naction [in] action name\nvisible [in] action visibility\n\nSet the action visibility of quick bar, popup bar according to the specified \n\n menu name and action name. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the action state of quick bar?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemSetEnabledByAction\nname [in] menu name\naction [in] action name\nenabled [in] action state\n\nSet the action state of quick bar, popup bar according to the specified \n\n menu name and action name. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the action state of popup bar?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemSetEnabledByAction\nname [in] menu name\naction [in] action name\nenabled [in] action state\n\nSet the action state of quick bar, popup bar according to the specified \n\n menu name and action name. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the popup menu name for a specific action?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemSetEnabledByAction\nname [in] menu name\naction [in] action name\nenabled [in] action state\n\nSet the action state of quick bar, popup bar according to the specified \n\n menu name and action name. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the checked state of an action in the quick bar?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemSetCheckedByAction\nname [in] menu name\naction [in] action name\nchecked [in] action's checked state\n\nSet the action's checked state of quick bar, popup bar according to the specified \n\n menu name and action name. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the checked state of an action in the popup bar?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemSetCheckedByAction\nname [in] menu name\naction [in] action name\nchecked [in] action's checked state\n\nSet the action's checked state of quick bar, popup bar according to the specified \n\n menu name and action name. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the menu name for a popup menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemSetCheckedByAction\nname [in] menu name\naction [in] action name\nchecked [in] action's checked state\n\nSet the action's checked state of quick bar, popup bar according to the specified \n\n menu name and action name. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxRibbonSetStatus\nenable [in] 1: enable the ribbon. 0: disable the ribbon\n\nEnable or disable the ribbon."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxRibbonSetStatus\nenable [in] 1: enable the ribbon. 0: disable the ribbon\n\nEnable or disable the ribbon."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxRibbonSetStatus\nenable [in] 1: enable the ribbon. 0: disable the ribbon\n\nEnable or disable the ribbon."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the append string after the window title?"
            },
            {
                "role": "assistant",
                "content": "cvxSetTitleAppend\npStr [in] Set/clear the string to display after the window title\n\nSet the append string to display after the title area of the base GUI window. \n\n pStr is NULL or a blank string to clear the append title string."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to clear the append title string?"
            },
            {
                "role": "assistant",
                "content": "cvxSetTitleAppend\npStr [in] Set/clear the string to display after the window title\n\nSet the append string to display after the title area of the base GUI window. \n\n pStr is NULL or a blank string to clear the append title string."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a string after the title area of the base GUI window?"
            },
            {
                "role": "assistant",
                "content": "cvxSetTitleAppend\npStr [in] Set/clear the string to display after the window title\n\nSet the append string to display after the title area of the base GUI window. \n\n pStr is NULL or a blank string to clear the append title string."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the minimum and maximum values of a slider?"
            },
            {
                "role": "assistant",
                "content": "cvxSliderLimitGet\nForm [in] form name\nidfield [in] id of field\nmin [out] slider minimum\nmax [out] slider maximum\n\nUse this function to get slider's minimum and maximum. \n\n Activate the form before calling this function.\nsee:\ncvxSliderLimitSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to retrieve the slider limits?"
            },
            {
                "role": "assistant",
                "content": "cvxSliderLimitGet\nForm [in] form name\nidfield [in] id of field\nmin [out] slider minimum\nmax [out] slider maximum\n\nUse this function to get slider's minimum and maximum. \n\n Activate the form before calling this function.\nsee:\ncvxSliderLimitSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the minimum and maximum values of a slider by form and field ID?"
            },
            {
                "role": "assistant",
                "content": "cvxSliderLimitGet\nForm [in] form name\nidfield [in] id of field\nmin [out] slider minimum\nmax [out] slider maximum\n\nUse this function to get slider's minimum and maximum. \n\n Activate the form before calling this function.\nsee:\ncvxSliderLimitSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the minimum and maximum of a slider?"
            },
            {
                "role": "assistant",
                "content": "cvxSliderLimitSet\nForm [in] form name\nidfield [in] id of field\nmin [in] slider minimum\nmax [in] slider maximum\n\nUse this function to set slider's minimum and maximum. \n\n Activate the form before calling this function.\nsee:\ncvxSliderLimitGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to set the limits of a slider?"
            },
            {
                "role": "assistant",
                "content": "cvxSliderLimitSet\nForm [in] form name\nidfield [in] id of field\nmin [in] slider minimum\nmax [in] slider maximum\n\nUse this function to set slider's minimum and maximum. \n\n Activate the form before calling this function.\nsee:\ncvxSliderLimitGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to activate the form before setting the slider limits?"
            },
            {
                "role": "assistant",
                "content": "cvxSliderLimitSet\nForm [in] form name\nidfield [in] id of field\nmin [in] slider minimum\nmax [in] slider maximum\n\nUse this function to set slider's minimum and maximum. \n\n Activate the form before calling this function.\nsee:\ncvxSliderLimitGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxTableAtSet()?"
            },
            {
                "role": "assistant",
                "content": "cvxTableAtSetInit\ndata [out] table attributes\n\nInitialize the parameters of the cvxTableAtSet().\nnote:\nDo not assign a value to variable \"data\" before calling this function. \n\n The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything inside the interface?"
            },
            {
                "role": "assistant",
                "content": "cvxTableAtSetInit\ndata [out] table attributes\n\nInitialize the parameters of the cvxTableAtSet().\nnote:\nDo not assign a value to variable \"data\" before calling this function. \n\n The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get table attributes without assigning a value to the variable?"
            },
            {
                "role": "assistant",
                "content": "cvxTableAtSetInit\ndata [out] table attributes\n\nInitialize the parameters of the cvxTableAtSet().\nnote:\nDo not assign a value to variable \"data\" before calling this function. \n\n The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to apply attributes to a GUI table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableAtSet\nForm [in] GUI form name\nidTable [in] table field id\nAt [in] table attributes\n\nApplies the attributes specified in \"At\" to the GUI table identified \n\n by \"Form\" and \"idTable\".\nnote:\nInterface cvxTableAtSetInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set table attributes in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxTableAtSet\nForm [in] GUI form name\nidTable [in] table field id\nAt [in] table attributes\n\nApplies the attributes specified in \"At\" to the GUI table identified \n\n by \"Form\" and \"idTable\".\nnote:\nInterface cvxTableAtSetInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to identify and apply attributes to a specific table in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxTableAtSet\nForm [in] GUI form name\nidTable [in] table field id\nAt [in] table attributes\n\nApplies the attributes specified in \"At\" to the GUI table identified \n\n by \"Form\" and \"idTable\".\nnote:\nInterface cvxTableAtSetInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the number of rows in a specified table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSizeSet\nForm [in] GUI form name\nidTable [in] table field id\nNumRow [in] number of rows (0 to ignore)\nNumCol [in] number of columns (0 to ignore)\n\nSets the number of rows and columns in the specified table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the number of columns in a specified table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSizeSet\nForm [in] GUI form name\nidTable [in] table field id\nNumRow [in] number of rows (0 to ignore)\nNumCol [in] number of columns (0 to ignore)\n\nSets the number of rows and columns in the specified table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to ignore setting the number of rows in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSizeSet\nForm [in] GUI form name\nidTable [in] table field id\nNumRow [in] number of rows (0 to ignore)\nNumCol [in] number of columns (0 to ignore)\n\nSets the number of rows and columns in the specified table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to ignore setting the number of columns in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSizeSet\nForm [in] GUI form name\nidTable [in] table field id\nNumRow [in] number of rows (0 to ignore)\nNumCol [in] number of columns (0 to ignore)\n\nSets the number of rows and columns in the specified table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the selected range of a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSetSelRange\nForm [in] GUI form name\nidTable [in] table field id\nSelRange [in] select range \n\n left: left column \n\n right: right column \n\n top: top row \n\n bottom: bottom row\nbSelect [in] select the range or not,1 for select\n\nSet selected range of the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to select a specific range in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSetSelRange\nForm [in] GUI form name\nidTable [in] table field id\nSelRange [in] select range \n\n left: left column \n\n right: right column \n\n top: top row \n\n bottom: bottom row\nbSelect [in] select the range or not,1 for select\n\nSet selected range of the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the function to select a range in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSetSelRange\nForm [in] GUI form name\nidTable [in] table field id\nSelRange [in] select range \n\n left: left column \n\n right: right column \n\n top: top row \n\n bottom: bottom row\nbSelect [in] select the range or not,1 for select\n\nSet selected range of the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the selected range of a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableGetSelRange\nForm [in] GUI form name\nidTable [in] table field id\nRangeCnt [out] number of ranges\nSelRange [out] selected range \n\n left: left column \n\n right: right column \n\n top: top row \n\n bottom: bottom row\n\nGet selected range of the table, The calling procedure MUST deallocate \n\n the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the number of ranges in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableGetSelRange\nForm [in] GUI form name\nidTable [in] table field id\nRangeCnt [out] number of ranges\nSelRange [out] selected range \n\n left: left column \n\n right: right column \n\n top: top row \n\n bottom: bottom row\n\nGet selected range of the table, The calling procedure MUST deallocate \n\n the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the selected range by GUI form and table field id?"
            },
            {
                "role": "assistant",
                "content": "cvxTableGetSelRange\nForm [in] GUI form name\nidTable [in] table field id\nRangeCnt [out] number of ranges\nSelRange [out] selected range \n\n left: left column \n\n right: right column \n\n top: top row \n\n bottom: bottom row\n\nGet selected range of the table, The calling procedure MUST deallocate \n\n the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to unselect all items in a table field?"
            },
            {
                "role": "assistant",
                "content": "cvxTableUnselectAll\nForm [in] GUI form name\nidTable [in] table field id\n\nUnselect all items"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to unselect all items in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableUnselectAll\nForm [in] GUI form name\nidTable [in] table field id\n\nUnselect all items"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to unselect all items in a specific GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxTableUnselectAll\nForm [in] GUI form name\nidTable [in] table field id\n\nUnselect all items"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get callback parameters for the table widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCallBackParamGet\nform [in] form name\nidTable [in] field id\nparam [out] assigned with table cell callback function parameter pointer\n\nGet callback parameters for the table widget when the callback function being invoked. \n\n For specific usage, please refer to the case TableSet in ApiExample.\nThe function will allocate memory to \"param\", please call cvxTableCallBackParamFree() function to free memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to allocate memory to the callback parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCallBackParamGet\nform [in] form name\nidTable [in] field id\nparam [out] assigned with table cell callback function parameter pointer\n\nGet callback parameters for the table widget when the callback function being invoked. \n\n For specific usage, please refer to the case TableSet in ApiExample.\nThe function will allocate memory to \"param\", please call cvxTableCallBackParamFree() function to free memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to free memory allocated to the callback parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCallBackParamGet\nform [in] form name\nidTable [in] field id\nparam [out] assigned with table cell callback function parameter pointer\n\nGet callback parameters for the table widget when the callback function being invoked. \n\n For specific usage, please refer to the case TableSet in ApiExample.\nThe function will allocate memory to \"param\", please call cvxTableCallBackParamFree() function to free memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free memory for struct svxTableCallBackParam pointer?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCallBackParamFree\nparam [in] address of pointer to be Free\n\nFrees memory for struct svxTableCallBackParam pointer. \n\n Sets pointer to NULL if memory was freed successfully."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set pointer to NULL after freeing memory?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCallBackParamFree\nparam [in] address of pointer to be Free\n\nFrees memory for struct svxTableCallBackParam pointer. \n\n Sets pointer to NULL if memory was freed successfully."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to release memory for svxTableCallBackParam pointer?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCallBackParamFree\nparam [in] address of pointer to be Free\n\nFrees memory for struct svxTableCallBackParam pointer. \n\n Sets pointer to NULL if memory was freed successfully."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the row count of a specified table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableRowCnt\nForm [in] GUI form name\nidTable [in] table field id\n\nGet the row count the specified table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the number of rows in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableRowCnt\nForm [in] GUI form name\nidTable [in] table field id\n\nGet the row count the specified table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the count of rows in a specific table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableRowCnt\nForm [in] GUI form name\nidTable [in] table field id\n\nGet the row count the specified table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the column count of a specified table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableColCnt\nForm [in] GUI form name\nidTable [in] table field id\n\nGet the column count of the specified table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the number of columns in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableColCnt\nForm [in] GUI form name\nidTable [in] table field id\n\nGet the column count of the specified table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the count of columns in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableColCnt\nForm [in] GUI form name\nidTable [in] table field id\n\nGet the column count of the specified table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a row to a table in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxTableRowInsert\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] Row id (>=0)\n\nInsert a row to table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a row to a table field?"
            },
            {
                "role": "assistant",
                "content": "cvxTableRowInsert\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] Row id (>=0)\n\nInsert a row to table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to insert a new row in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableRowInsert\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] Row id (>=0)\n\nInsert a row to table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove a row from a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableRowRemove\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] Row id (>=0)\n\nRemove a row from table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to delete a specific row from a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableRowRemove\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] Row id (>=0)\n\nRemove a row from table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What parameters are required to remove a row from a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableRowRemove\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] Row id (>=0)\n\nRemove a row from table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a column to a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableColInsert\nForm [in] GUI form name\nidTable [in] table field id\nCol [in] Column id (>=0)\n\nInsert a column to table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to add a column to a table using GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxTableColInsert\nForm [in] GUI form name\nidTable [in] table field id\nCol [in] Column id (>=0)\n\nInsert a column to table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to insert a new column to a table field?"
            },
            {
                "role": "assistant",
                "content": "cvxTableColInsert\nForm [in] GUI form name\nidTable [in] table field id\nCol [in] Column id (>=0)\n\nInsert a column to table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove a column from a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableColRemove\nForm [in] GUI form name\nidTable [in] table field id\nCol [in] Column id (>=0)\n\nRemove a column from table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to delete a column from a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableColRemove\nForm [in] GUI form name\nidTable [in] table field id\nCol [in] Column id (>=0)\n\nRemove a column from table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove a specific column from a table by its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxTableColRemove\nForm [in] GUI form name\nidTable [in] table field id\nCol [in] Column id (>=0)\n\nRemove a column from table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set a combo box for a specific cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableComboSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nOptions [in] null-terminated, comma-delimited list of text labels\n\nMakes the table cell identified by \"Row\" and \"Col\" a combo box of options \n\n specified by the input list of comma-delimited text labels.\nOptions: each option is separated by ',' (\"1,2,3\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to make a table cell a combo box with a list of options?"
            },
            {
                "role": "assistant",
                "content": "cvxTableComboSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nOptions [in] null-terminated, comma-delimited list of text labels\n\nMakes the table cell identified by \"Row\" and \"Col\" a combo box of options \n\n specified by the input list of comma-delimited text labels.\nOptions: each option is separated by ',' (\"1,2,3\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to specify a list of text labels for a combo box in a table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableComboSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nOptions [in] null-terminated, comma-delimited list of text labels\n\nMakes the table cell identified by \"Row\" and \"Col\" a combo box of options \n\n specified by the input list of comma-delimited text labels.\nOptions: each option is separated by ',' (\"1,2,3\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set a combo box for a specific cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableComboSet2\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nOptions [in] null-terminated, comma-delimited list of text labels\nImages [in] null-terminated, comma-delimited list of image, it will be ignored when it is NULL\n\nMakes the table cell identified by \"Row\" and \"Col\" a combo box of options \n\n specified by the input list of comma-delimited text labels and images.\nOptions: each option is separated by ',' (\"1,2,3\"). \n\n Images: each image is separated by ',' (\"A.png,B.png,C.png\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the options for a combo box in a table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableComboSet2\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nOptions [in] null-terminated, comma-delimited list of text labels\nImages [in] null-terminated, comma-delimited list of image, it will be ignored when it is NULL\n\nMakes the table cell identified by \"Row\" and \"Col\" a combo box of options \n\n specified by the input list of comma-delimited text labels and images.\nOptions: each option is separated by ',' (\"1,2,3\"). \n\n Images: each image is separated by ',' (\"A.png,B.png,C.png\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set images for the options in a combo box for a table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableComboSet2\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nOptions [in] null-terminated, comma-delimited list of text labels\nImages [in] null-terminated, comma-delimited list of image, it will be ignored when it is NULL\n\nMakes the table cell identified by \"Row\" and \"Col\" a combo box of options \n\n specified by the input list of comma-delimited text labels and images.\nOptions: each option is separated by ',' (\"1,2,3\"). \n\n Images: each image is separated by ',' (\"A.png,B.png,C.png\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the selected index and text from a combo box in a specified table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableComboGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nIndex [out] Selected index\nText [out] Selected text\nnBytes [in] string max size of text\n\nGet the data for the specified table cell defined as combo box or indexed combo box or editable combo box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the data for a specific combo box in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableComboGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nIndex [out] Selected index\nText [out] Selected text\nnBytes [in] string max size of text\n\nGet the data for the specified table cell defined as combo box or indexed combo box or editable combo box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I get the selected text and index from a combo box in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableComboGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nIndex [out] Selected index\nText [out] Selected text\nnBytes [in] string max size of text\n\nGet the data for the specified table cell defined as combo box or indexed combo box or editable combo box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set a table cell as an indexed combo box?"
            },
            {
                "role": "assistant",
                "content": "cvxTableIndexComboSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nOptions [in] null-terminated, comma-delimited list of text labels\n\nMakes the table cell identified by \"Row\" and \"Col\" a indexed combo box of options \n\n specified by the input list of comma-delimited text labels.\nOptions: each option is separated by ',' (\"1,2,3\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the options for an indexed combo box in a table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableIndexComboSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nOptions [in] null-terminated, comma-delimited list of text labels\n\nMakes the table cell identified by \"Row\" and \"Col\" a indexed combo box of options \n\n specified by the input list of comma-delimited text labels.\nOptions: each option is separated by ',' (\"1,2,3\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to make a table cell an indexed combo box in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxTableIndexComboSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nOptions [in] null-terminated, comma-delimited list of text labels\n\nMakes the table cell identified by \"Row\" and \"Col\" a indexed combo box of options \n\n specified by the input list of comma-delimited text labels.\nOptions: each option is separated by ',' (\"1,2,3\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set a table cell as an editable combo box?"
            },
            {
                "role": "assistant",
                "content": "cvxTableInputComboSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nOptions [in] null-terminated, comma-delimited list of text labels\n\nMakes the table cell identified by \"Row\" and \"Col\" a editable combo box of options \n\n specified by the input list of comma-delimited text labels.\nOptions: each option is separated by ',' (\"1,2,3\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the options for a combo box in a table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableInputComboSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nOptions [in] null-terminated, comma-delimited list of text labels\n\nMakes the table cell identified by \"Row\" and \"Col\" a editable combo box of options \n\n specified by the input list of comma-delimited text labels.\nOptions: each option is separated by ',' (\"1,2,3\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to make a specific cell in a table editable with a combo box?"
            },
            {
                "role": "assistant",
                "content": "cvxTableInputComboSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nOptions [in] null-terminated, comma-delimited list of text labels\n\nMakes the table cell identified by \"Row\" and \"Col\" a editable combo box of options \n\n specified by the input list of comma-delimited text labels.\nOptions: each option is separated by ',' (\"1,2,3\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set a table cell as an indexed combo box?"
            },
            {
                "role": "assistant",
                "content": "cvxTableIndexComboSet2\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nOptions [in] null-terminated, comma-delimited list of text labels\nImages [in] null-terminated, comma-delimited list of image, it will be ignored when it is NULL\n\nMakes the table cell identified by \"Row\" and \"Col\" a indexed combo box of options \n\n specified by the input list of comma-delimited text labels and images.\nOptions: each option is separated by ',' (\"1,2,3\").\nImages: each image is separated by ',' (\"A.png,B.png,C.png\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify options for a table cell combo box?"
            },
            {
                "role": "assistant",
                "content": "cvxTableIndexComboSet2\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nOptions [in] null-terminated, comma-delimited list of text labels\nImages [in] null-terminated, comma-delimited list of image, it will be ignored when it is NULL\n\nMakes the table cell identified by \"Row\" and \"Col\" a indexed combo box of options \n\n specified by the input list of comma-delimited text labels and images.\nOptions: each option is separated by ',' (\"1,2,3\").\nImages: each image is separated by ',' (\"A.png,B.png,C.png\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify images for a table cell combo box?"
            },
            {
                "role": "assistant",
                "content": "cvxTableIndexComboSet2\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nOptions [in] null-terminated, comma-delimited list of text labels\nImages [in] null-terminated, comma-delimited list of image, it will be ignored when it is NULL\n\nMakes the table cell identified by \"Row\" and \"Col\" a indexed combo box of options \n\n specified by the input list of comma-delimited text labels and images.\nOptions: each option is separated by ',' (\"1,2,3\").\nImages: each image is separated by ',' (\"A.png,B.png,C.png\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set a table cell as a combo box with text labels and images?"
            },
            {
                "role": "assistant",
                "content": "cvxTableIndexComboSet2\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nOptions [in] null-terminated, comma-delimited list of text labels\nImages [in] null-terminated, comma-delimited list of image, it will be ignored when it is NULL\n\nMakes the table cell identified by \"Row\" and \"Col\" a indexed combo box of options \n\n specified by the input list of comma-delimited text labels and images.\nOptions: each option is separated by ',' (\"1,2,3\").\nImages: each image is separated by ',' (\"A.png,B.png,C.png\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to make a table cell an editable combo box?"
            },
            {
                "role": "assistant",
                "content": "cvxTableInputComboSet2\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nOptions [in] null-terminated, comma-delimited list of text labels\nImages [in] null-terminated, comma-delimited list of image it will be ignored when it is NULL\n\nMakes the table cell identified by \"Row\" and \"Col\" a editable combo box of options \n\n specified by the input list of comma-delimited text labels and images.\nOptions: each option is separated by ',' (\"1,2,3\").\nImages: each image is separated by ',' (\"A.png,B.png,C.png\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set options for a table cell combo box?"
            },
            {
                "role": "assistant",
                "content": "cvxTableInputComboSet2\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nOptions [in] null-terminated, comma-delimited list of text labels\nImages [in] null-terminated, comma-delimited list of image it will be ignored when it is NULL\n\nMakes the table cell identified by \"Row\" and \"Col\" a editable combo box of options \n\n specified by the input list of comma-delimited text labels and images.\nOptions: each option is separated by ',' (\"1,2,3\").\nImages: each image is separated by ',' (\"A.png,B.png,C.png\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set images for a table cell combo box?"
            },
            {
                "role": "assistant",
                "content": "cvxTableInputComboSet2\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nOptions [in] null-terminated, comma-delimited list of text labels\nImages [in] null-terminated, comma-delimited list of image it will be ignored when it is NULL\n\nMakes the table cell identified by \"Row\" and \"Col\" a editable combo box of options \n\n specified by the input list of comma-delimited text labels and images.\nOptions: each option is separated by ',' (\"1,2,3\").\nImages: each image is separated by ',' (\"A.png,B.png,C.png\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the GUI form for table cell combo box?"
            },
            {
                "role": "assistant",
                "content": "cvxTableInputComboSet2\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nOptions [in] null-terminated, comma-delimited list of text labels\nImages [in] null-terminated, comma-delimited list of image it will be ignored when it is NULL\n\nMakes the table cell identified by \"Row\" and \"Col\" a editable combo box of options \n\n specified by the input list of comma-delimited text labels and images.\nOptions: each option is separated by ',' (\"1,2,3\").\nImages: each image is separated by ',' (\"A.png,B.png,C.png\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the option index for a specified table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableComboSetOption\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nIndex [in] Option index\nIdxText [in] null-terminated, Option text\n\nSet the option index for the specified table cell defined as combo box or indexed combo box or editable combo box. \n\n If variable Index is not equal to -1, variable IdxText can be empty, \n\n and when variable Index equals -1, set variable IdxText to the selected text."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the selected text for a specified table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableComboSetOption\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nIndex [in] Option index\nIdxText [in] null-terminated, Option text\n\nSet the option index for the specified table cell defined as combo box or indexed combo box or editable combo box. \n\n If variable Index is not equal to -1, variable IdxText can be empty, \n\n and when variable Index equals -1, set variable IdxText to the selected text."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the option index for a combo box in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableComboSetOption\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nIndex [in] Option index\nIdxText [in] null-terminated, Option text\n\nSet the option index for the specified table cell defined as combo box or indexed combo box or editable combo box. \n\n If variable Index is not equal to -1, variable IdxText can be empty, \n\n and when variable Index equals -1, set variable IdxText to the selected text."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the type of a table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableTypeGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nType [out] Table cell type\n\nGet the type of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to identify the type of a specific table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableTypeGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nType [out] Table cell type\n\nGet the type of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine the type of a cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableTypeGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nType [out] Table cell type\n\nGet the type of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the visibility of a specific cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableVisSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\n\nMakes sure the table cell identified by \"Row\" and \"Col\" is visible \n\n within a table that may scroll vertically or horizontally beyond the \n\n limits of the display area on its parent form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to ensure a specific cell in a table is visible within the display area?"
            },
            {
                "role": "assistant",
                "content": "cvxTableVisSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\n\nMakes sure the table cell identified by \"Row\" and \"Col\" is visible \n\n within a table that may scroll vertically or horizontally beyond the \n\n limits of the display area on its parent form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to make sure a table cell is visible within the table limits?"
            },
            {
                "role": "assistant",
                "content": "cvxTableVisSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\n\nMakes sure the table cell identified by \"Row\" and \"Col\" is visible \n\n within a table that may scroll vertically or horizontally beyond the \n\n limits of the display area on its parent form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check the state of a table cell in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxTableIsCheck\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\n\nGet check state of the table cell identified by \"Row\" and \"Col\" defined as check box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the check state of a specific table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableIsCheck\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\n\nGet check state of the table cell identified by \"Row\" and \"Col\" defined as check box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to identify the check state of a table cell in a specified row and column?"
            },
            {
                "role": "assistant",
                "content": "cvxTableIsCheck\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\n\nGet check state of the table cell identified by \"Row\" and \"Col\" defined as check box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set a check box in a specific cell of a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCheckSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nCheck [in] 1-check, 0-uncheck\n\nMakes the table cell identified by \"Row\" and \"Col\" a check box \n\n specified by variable check."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check or uncheck a specific cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCheckSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nCheck [in] 1-check, 0-uncheck\n\nMakes the table cell identified by \"Row\" and \"Col\" a check box \n\n specified by variable check."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to make a table cell a check box?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCheckSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nCheck [in] 1-check, 0-uncheck\n\nMakes the table cell identified by \"Row\" and \"Col\" a check box \n\n specified by variable check."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the text of a specific table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCellTextGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\ntext [out] text to get\nnBytes [in] string max size of text\n\nGet the text of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the text from a table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCellTextGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\ntext [out] text to get\nnBytes [in] string max size of text\n\nGet the text of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the text from a table cell using GUI form and table field id?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCellTextGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\ntext [out] text to get\nnBytes [in] string max size of text\n\nGet the text of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to enable a specific cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCellEnableSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nState [in] 0 - disable, 1 - enable, 2 - enable & editable\n\nchange a cell in table which was specified by VmUiItem2RC(item, iRow, iCol) to \"selectable\" ."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the state of a cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCellEnableSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nState [in] 0 - disable, 1 - enable, 2 - enable & editable\n\nchange a cell in table which was specified by VmUiItem2RC(item, iRow, iCol) to \"selectable\" ."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to enable and make a cell editable in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCellEnableSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nState [in] 0 - disable, 1 - enable, 2 - enable & editable\n\nchange a cell in table which was specified by VmUiItem2RC(item, iRow, iCol) to \"selectable\" ."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the tooltip for a specific table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCellTipSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=-1)\nCol [in] table column (>=-1)\ntip [in] tooltip string\n\nSet the tooltip of the table cell identified by \"Row\" and \"Col\".\nnote:\nThe row and column can not both be -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set the tooltip for a table cell based on row and column?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCellTipSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=-1)\nCol [in] table column (>=-1)\ntip [in] tooltip string\n\nSet the tooltip of the table cell identified by \"Row\" and \"Col\".\nnote:\nThe row and column can not both be -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the tooltip for a particular cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCellTipSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=-1)\nCol [in] table column (>=-1)\ntip [in] tooltip string\n\nSet the tooltip of the table cell identified by \"Row\" and \"Col\".\nnote:\nThe row and column can not both be -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the tooltip of a specific table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCellTipGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=-1)\nCol [in] table column (>=-1)\ntip [out] tooltip string\nnBytes [in] max size of tooltip string\n\nGet the tooltip of the table cell identified by \"Row\" and \"Col\".\nnote:\nThe row and column can not both be -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the tooltip of a table cell by specifying the row and column?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCellTipGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=-1)\nCol [in] table column (>=-1)\ntip [out] tooltip string\nnBytes [in] max size of tooltip string\n\nGet the tooltip of the table cell identified by \"Row\" and \"Col\".\nnote:\nThe row and column can not both be -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to obtain the tooltip of a table cell in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCellTipGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=-1)\nCol [in] table column (>=-1)\ntip [out] tooltip string\nnBytes [in] max size of tooltip string\n\nGet the tooltip of the table cell identified by \"Row\" and \"Col\".\nnote:\nThe row and column can not both be -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the text of a specific table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCellTextSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\ntext [in] text to set\n\nSet the text of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the text of a table cell by row and column?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCellTextSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\ntext [in] text to set\n\nSet the text of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the text of a table cell in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCellTextSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\ntext [in] text to set\n\nSet the text of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the text of a specific cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCellTextSet2\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nText [in] null-terminated, cell text, it will be ignored when it is NULL\nImage [in] null-terminated, image, it will be ignored when it is NULL\n\nSet the text and image of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set an image in a specific cell of a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCellTextSet2\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nText [in] null-terminated, cell text, it will be ignored when it is NULL\nImage [in] null-terminated, image, it will be ignored when it is NULL\n\nSet the text and image of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the content of a table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCellTextSet2\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nText [in] null-terminated, cell text, it will be ignored when it is NULL\nImage [in] null-terminated, image, it will be ignored when it is NULL\n\nSet the text and image of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set a date editor for a specific cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableDateSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nDate [in] Date to set (time in seconds elapsed since 00:00:00 Jan 1, 1970)\nDateType [in] Date type to set\n\nMakes the table cell identified by \"Row\" and \"Col\" a date editor."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set a date in a table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableDateSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nDate [in] Date to set (time in seconds elapsed since 00:00:00 Jan 1, 1970)\nDateType [in] Date type to set\n\nMakes the table cell identified by \"Row\" and \"Col\" a date editor."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the date type for a table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableDateSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nDate [in] Date to set (time in seconds elapsed since 00:00:00 Jan 1, 1970)\nDateType [in] Date type to set\n\nMakes the table cell identified by \"Row\" and \"Col\" a date editor."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the date of a specific cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableDateGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nDate [out] Date to get (time in seconds elapsed since 00:00:00 Jan 1, 1970)\nDateType [out] Date type to get\n\nGet the date of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the date type of a cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableDateGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nDate [out] Date to get (time in seconds elapsed since 00:00:00 Jan 1, 1970)\nDateType [out] Date type to get\n\nGet the date of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I get the date from a table using the GUI form and table field id?"
            },
            {
                "role": "assistant",
                "content": "cvxTableDateGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nDate [out] Date to get (time in seconds elapsed since 00:00:00 Jan 1, 1970)\nDateType [out] Date type to get\n\nGet the date of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set a true color for a table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableColorSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nColor [in] true color, such as RGB(255,0,0)\nClrIdx [in] index color (V_COLOR_NULL ~ V_COLOR_LAST)\nType [in] color type: 0-true color, 1-index color\n\nMakes the table cell identified by \"Row\" and \"Col\" a color type editor."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set an index color for a table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableColorSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nColor [in] true color, such as RGB(255,0,0)\nClrIdx [in] index color (V_COLOR_NULL ~ V_COLOR_LAST)\nType [in] color type: 0-true color, 1-index color\n\nMakes the table cell identified by \"Row\" and \"Col\" a color type editor."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to make a table cell a color type editor?"
            },
            {
                "role": "assistant",
                "content": "cvxTableColorSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nColor [in] true color, such as RGB(255,0,0)\nClrIdx [in] index color (V_COLOR_NULL ~ V_COLOR_LAST)\nType [in] color type: 0-true color, 1-index color\n\nMakes the table cell identified by \"Row\" and \"Col\" a color type editor."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the GUI form name for setting table cell color?"
            },
            {
                "role": "assistant",
                "content": "cvxTableColorSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nColor [in] true color, such as RGB(255,0,0)\nClrIdx [in] index color (V_COLOR_NULL ~ V_COLOR_LAST)\nType [in] color type: 0-true color, 1-index color\n\nMakes the table cell identified by \"Row\" and \"Col\" a color type editor."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the color of a specific cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableColorGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nColor [out] true color, such as RGB(255,0,0)\nClrIdx [out] index color (V_COLOR_NULL ~ V_COLOR_LAST)\nType [out] color type: 0-true color, 1-index color\n\nGet the color of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the true color of a table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableColorGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nColor [out] true color, such as RGB(255,0,0)\nClrIdx [out] index color (V_COLOR_NULL ~ V_COLOR_LAST)\nType [out] color type: 0-true color, 1-index color\n\nGet the color of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the index color of a particular cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableColorGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nColor [out] true color, such as RGB(255,0,0)\nClrIdx [out] index color (V_COLOR_NULL ~ V_COLOR_LAST)\nType [out] color type: 0-true color, 1-index color\n\nGet the color of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to get the color type of a table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableColorGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nColor [out] true color, such as RGB(255,0,0)\nClrIdx [out] index color (V_COLOR_NULL ~ V_COLOR_LAST)\nType [out] color type: 0-true color, 1-index color\n\nGet the color of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set a table cell as a number editor?"
            },
            {
                "role": "assistant",
                "content": "cvxTableNumSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nNum [in] null-terminated, number value\n\nMakes the table cell identified by \"Row\" and \"Col\" a number editor."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to make a specific table cell editable as a number?"
            },
            {
                "role": "assistant",
                "content": "cvxTableNumSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nNum [in] null-terminated, number value\n\nMakes the table cell identified by \"Row\" and \"Col\" a number editor."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change a table cell to accept only numbers?"
            },
            {
                "role": "assistant",
                "content": "cvxTableNumSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nNum [in] null-terminated, number value\n\nMakes the table cell identified by \"Row\" and \"Col\" a number editor."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number from a specific cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableNumGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nNum [out] Number to get\nBytes [in] string max size of Num\n\nGet number of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the number from a table cell using the GUI form name and table field id?"
            },
            {
                "role": "assistant",
                "content": "cvxTableNumGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nNum [out] Number to get\nBytes [in] string max size of Num\n\nGet number of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the number from a particular row and column in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableNumGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nNum [out] Number to get\nBytes [in] string max size of Num\n\nGet number of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get text from a specific cell in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxTableGetText\nForm [in] form name\nidTable [in] form field\nrow [in] row number\ncol [in] column number\ntext [out] text to store the output text\nsizeText [in] text size\n\nGet the text of the specified cell, the invoker should make sure that the For now we support 'ZeTextCell', 'ZeStrComboCell', 'ZeIndexComboCell', 'ZeInputComboCell' type cell."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the text from a particular row and column in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableGetText\nForm [in] form name\nidTable [in] form field\nrow [in] row number\ncol [in] column number\ntext [out] text to store the output text\nsizeText [in] text size\n\nGet the text of the specified cell, the invoker should make sure that the For now we support 'ZeTextCell', 'ZeStrComboCell', 'ZeIndexComboCell', 'ZeInputComboCell' type cell."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to store the output text from a specified cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableGetText\nForm [in] form name\nidTable [in] form field\nrow [in] row number\ncol [in] column number\ntext [out] text to store the output text\nsizeText [in] text size\n\nGet the text of the specified cell, the invoker should make sure that the For now we support 'ZeTextCell', 'ZeStrComboCell', 'ZeIndexComboCell', 'ZeInputComboCell' type cell."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the supported types of cells for retrieving text?"
            },
            {
                "role": "assistant",
                "content": "cvxTableGetText\nForm [in] form name\nidTable [in] form field\nrow [in] row number\ncol [in] column number\ntext [out] text to store the output text\nsizeText [in] text size\n\nGet the text of the specified cell, the invoker should make sure that the For now we support 'ZeTextCell', 'ZeStrComboCell', 'ZeIndexComboCell', 'ZeInputComboCell' type cell."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the horizontal header string list to a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSetHorHeaderList\nForm [in] form name\nidTable [in] field id\nnum [in] number of header list\npHeaderList [in] header string list\n\nSet the Horizontal header string list to table.\nThis interface means the header represented by the top row of the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to represent the header in the top row of the table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSetHorHeaderList\nForm [in] form name\nidTable [in] field id\nnum [in] number of header list\npHeaderList [in] header string list\n\nSet the Horizontal header string list to table.\nThis interface means the header represented by the top row of the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the form name and field id for the horizontal header list?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSetHorHeaderList\nForm [in] form name\nidTable [in] field id\nnum [in] number of header list\npHeaderList [in] header string list\n\nSet the Horizontal header string list to table.\nThis interface means the header represented by the top row of the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the vertical header string list to a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSetVerHeaderList\nForm [in] form name\nidTable [in] field id\nnum [in] number of header list\npHeaderList [in] header string list\n\nSet the Vertical header string list to table.\nThis interface means the header represented by the leftmost column of the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the form name for setting the vertical header list?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSetVerHeaderList\nForm [in] form name\nidTable [in] field id\nnum [in] number of header list\npHeaderList [in] header string list\n\nSet the Vertical header string list to table.\nThis interface means the header represented by the leftmost column of the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set the number of header lists for a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSetVerHeaderList\nForm [in] form name\nidTable [in] field id\nnum [in] number of header list\npHeaderList [in] header string list\n\nSet the Vertical header string list to table.\nThis interface means the header represented by the leftmost column of the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the header text alignment for a specific form?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSetHeaderAlignment\nForm [in] form name\nidTable [in] field id\nisVertical [in] Direction: 0-Horizontal, 1-Vertical\nalign [in] Alignment mode\n\nSet header text alignment direction: Center, Left, Right."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to align the header text in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSetHeaderAlignment\nForm [in] form name\nidTable [in] field id\nisVertical [in] Direction: 0-Horizontal, 1-Vertical\nalign [in] Alignment mode\n\nSet header text alignment direction: Center, Left, Right."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set the header text alignment direction to center, left, or right?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSetHeaderAlignment\nForm [in] form name\nidTable [in] field id\nisVertical [in] Direction: 0-Horizontal, 1-Vertical\nalign [in] Alignment mode\n\nSet header text alignment direction: Center, Left, Right."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the header resize mode of a specific column?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSetHeaderColResizeMode\nForm [in] form name\nidTable [in] field id\ncol [in] column index(>=0)\nmode [in] resize mode\n\nset header resize mode of col index,\n0 for QHeaderView::Interactive,\n1 for QHeaderView::Stretch,\n2 for QHeaderView::Fixed,\n3 for QHeaderView::ResizeToContents"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the available resize modes for the header of a column?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSetHeaderColResizeMode\nForm [in] form name\nidTable [in] field id\ncol [in] column index(>=0)\nmode [in] resize mode\n\nset header resize mode of col index,\n0 for QHeaderView::Interactive,\n1 for QHeaderView::Stretch,\n2 for QHeaderView::Fixed,\n3 for QHeaderView::ResizeToContents"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to specify the resize mode for a specific column in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSetHeaderColResizeMode\nForm [in] form name\nidTable [in] field id\ncol [in] column index(>=0)\nmode [in] resize mode\n\nset header resize mode of col index,\n0 for QHeaderView::Interactive,\n1 for QHeaderView::Stretch,\n2 for QHeaderView::Fixed,\n3 for QHeaderView::ResizeToContents"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the header column size limitation for a specific form?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSetHeaderSectionSize\nForm [in] form name\nidTable [in] field id\nsize [in] the header section limited size(>=-1)\nisMin [in] if it is 1, means minimum limitation, else maximum\n\nset header column size limitation to affect the behavior of resizing and display for columns' width."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to limit the header section size for a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSetHeaderSectionSize\nForm [in] form name\nidTable [in] field id\nsize [in] the header section limited size(>=-1)\nisMin [in] if it is 1, means minimum limitation, else maximum\n\nset header column size limitation to affect the behavior of resizing and display for columns' width."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I affect the behavior of column width resizing and display in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSetHeaderSectionSize\nForm [in] form name\nidTable [in] field id\nsize [in] the header section limited size(>=-1)\nisMin [in] if it is 1, means minimum limitation, else maximum\n\nset header column size limitation to affect the behavior of resizing and display for columns' width."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the checked state of a specific item in the vertical header of a table widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTableHeaderCellCheck\nForm [in] form name\nidTable [in] form field\nisVertical [in] 1-vertical, 0-horizontal\nitem [in] item number\ncheck [in] 1-check, 0-uncheck\n\nSet header item checked state in table Widget.\nWhen isVertical = 1, set current vertical header item check state.\nWhen isVertical = 0, set current horizontal header item check state."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the unchecked state of a specific item in the horizontal header of a table widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTableHeaderCellCheck\nForm [in] form name\nidTable [in] form field\nisVertical [in] 1-vertical, 0-horizontal\nitem [in] item number\ncheck [in] 1-check, 0-uncheck\n\nSet header item checked state in table Widget.\nWhen isVertical = 1, set current vertical header item check state.\nWhen isVertical = 0, set current horizontal header item check state."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check or uncheck a specific item in the table widget header?"
            },
            {
                "role": "assistant",
                "content": "cvxTableHeaderCellCheck\nForm [in] form name\nidTable [in] form field\nisVertical [in] 1-vertical, 0-horizontal\nitem [in] item number\ncheck [in] 1-check, 0-uncheck\n\nSet header item checked state in table Widget.\nWhen isVertical = 1, set current vertical header item check state.\nWhen isVertical = 0, set current horizontal header item check state."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the visibility of a specific tab widget field's specialized item?"
            },
            {
                "role": "assistant",
                "content": "cvxTabWidgetItemVisibleSet\nForm [in] form name\ntabIdField [in] id of the tab widget\ntabIndex [in] tab index ,start from 0\nbVisible [in] true is visible ,false is hide\n\nSet the visibility of the specific(tab widget) field's specialized item. cvxItemVisibleSet has the similar function also."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to hide a tab widget field's specialized item?"
            },
            {
                "role": "assistant",
                "content": "cvxTabWidgetItemVisibleSet\nForm [in] form name\ntabIdField [in] id of the tab widget\ntabIndex [in] tab index ,start from 0\nbVisible [in] true is visible ,false is hide\n\nSet the visibility of the specific(tab widget) field's specialized item. cvxItemVisibleSet has the similar function also."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to make a tab widget field's specialized item visible?"
            },
            {
                "role": "assistant",
                "content": "cvxTabWidgetItemVisibleSet\nForm [in] form name\ntabIdField [in] id of the tab widget\ntabIndex [in] tab index ,start from 0\nbVisible [in] true is visible ,false is hide\n\nSet the visibility of the specific(tab widget) field's specialized item. cvxItemVisibleSet has the similar function also."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the icon for a specific section of the tree header in TreeView?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetHeaderIcon\nname [in] form name\nfield [in] field number\nsection [in] section of tree header\nicon [in] tree header icon name\n\nSet the icon of tree header according to specified section. \n\n This interface is used for the widget TreeView."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to change the icon for a particular section of the tree header in TreeView?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetHeaderIcon\nname [in] form name\nfield [in] field number\nsection [in] section of tree header\nicon [in] tree header icon name\n\nSet the icon of tree header according to specified section. \n\n This interface is used for the widget TreeView."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I specify the icon for a specific section of the tree header in TreeView?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetHeaderIcon\nname [in] form name\nfield [in] field number\nsection [in] section of tree header\nicon [in] tree header icon name\n\nSet the icon of tree header according to specified section. \n\n This interface is used for the widget TreeView."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the label for the header of a specified column in the tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetHeaderText\nform [in] form name\nfield [in] field id\ncol [in] column\ntext [in] text\n\nThis function sets the label for the header of the specified column of the tree widget.\nnote:\nWhen the user does not use this interface to set the header information of the tree node, \n\n user cannot do other processing on the header information. \n\n For example, user cannot set the alignment of the header information.(cvxTreeSetHeaderTextAlignment)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the header text of a tree widget column?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetHeaderText\nform [in] form name\nfield [in] field id\ncol [in] column\ntext [in] text\n\nThis function sets the label for the header of the specified column of the tree widget.\nnote:\nWhen the user does not use this interface to set the header information of the tree node, \n\n user cannot do other processing on the header information. \n\n For example, user cannot set the alignment of the header information.(cvxTreeSetHeaderTextAlignment)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I specify the text for the header of a column in a tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetHeaderText\nform [in] form name\nfield [in] field id\ncol [in] column\ntext [in] text\n\nThis function sets the label for the header of the specified column of the tree widget.\nnote:\nWhen the user does not use this interface to set the header information of the tree node, \n\n user cannot do other processing on the header information. \n\n For example, user cannot set the alignment of the header information.(cvxTreeSetHeaderTextAlignment)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the width of a specified tree widget header item?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeHeaderGetSize\nform [in] form name\nfield [in] the item id\nwidth [out] width of the item\nheight [out] height of the item\n\nThis function gets the header size of the specified tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the height of a specified tree widget header item?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeHeaderGetSize\nform [in] form name\nfield [in] the item id\nwidth [out] width of the item\nheight [out] height of the item\n\nThis function gets the header size of the specified tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the header size of a tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeHeaderGetSize\nform [in] form name\nfield [in] the item id\nwidth [out] width of the item\nheight [out] height of the item\n\nThis function gets the header size of the specified tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the header text alignment of a tree view by column index?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetHeaderTextAlignment\nform [in] form name\nfield [in] field number\ncol [in] column to set\nalign [in] alignment flag\n\nThis function sets the tree view header text alignment by column index.\nnote:\nWhen the user does not use the cvxTreeSetHeaderText() interface to set the header information of the tree control, calling this interface will have no effect."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to align the header text of a specific column in a tree view?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetHeaderTextAlignment\nform [in] form name\nfield [in] field number\ncol [in] column to set\nalign [in] alignment flag\n\nThis function sets the tree view header text alignment by column index.\nnote:\nWhen the user does not use the cvxTreeSetHeaderText() interface to set the header information of the tree control, calling this interface will have no effect."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to set the text alignment of the header in a tree view for a specific column?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetHeaderTextAlignment\nform [in] form name\nfield [in] field number\ncol [in] column to set\nalign [in] alignment flag\n\nThis function sets the tree view header text alignment by column index.\nnote:\nWhen the user does not use the cvxTreeSetHeaderText() interface to set the header information of the tree control, calling this interface will have no effect."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the number of columns in a specified tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetColumnCount\nform [in] form name\nfield [in] field id\ncount [out] count\n\nThis function sets the number of columns displayed in the specified tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the column count in a tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetColumnCount\nform [in] form name\nfield [in] field id\ncount [out] count\n\nThis function sets the number of columns displayed in the specified tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the number of columns displayed in a tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetColumnCount\nform [in] form name\nfield [in] field id\ncount [out] count\n\nThis function sets the number of columns displayed in the specified tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of columns in a specified tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetColumnCount\nform [in] form name\nfield [in] field id\n\nThis function get the number of columns displayed in the specified tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find out the count of columns in a tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetColumnCount\nform [in] form name\nfield [in] field id\n\nThis function get the number of columns displayed in the specified tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I get the column count of a specific tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetColumnCount\nform [in] form name\nfield [in] field id\n\nThis function get the number of columns displayed in the specified tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the width of a column in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetColumnWidth\nform [in] form name\nfield [in] field number\ncol [in] column to set\nwidth [in] width\n\nSet the width of the given column to the width specified."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to specify the width of a column in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetColumnWidth\nform [in] form name\nfield [in] field number\ncol [in] column to set\nwidth [in] width\n\nSet the width of the given column to the width specified."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the width of a specific column in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetColumnWidth\nform [in] form name\nfield [in] field number\ncol [in] column to set\nwidth [in] width\n\nSet the width of the given column to the width specified."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the width of a specific column in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetColumnWidth\nform [in] form name\nfield [in] field number\ncol [in] column to get\n\nGet the width of the given column."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the width of a column in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetColumnWidth\nform [in] form name\nfield [in] field number\ncol [in] column to get\n\nGet the width of the given column."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the width of a particular column in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetColumnWidth\nform [in] form name\nfield [in] field number\ncol [in] column to get\n\nGet the width of the given column."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to hide a specific column in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetColumnHidden\nform [in] form name\nfield [in] field number\ncol [in] column to set\nhide [in] whether to hide the column (1 to hide, 0 to show)\n\nHide or show the specified column."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to show a specific column in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetColumnHidden\nform [in] form name\nfield [in] field number\ncol [in] column to set\nhide [in] whether to hide the column (1 to hide, 0 to show)\n\nHide or show the specified column."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I set a column to be hidden in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetColumnHidden\nform [in] form name\nfield [in] field number\ncol [in] column to set\nhide [in] whether to hide the column (1 to hide, 0 to show)\n\nHide or show the specified column."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a specific column is hidden in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeIsColumnHidden\nform [in] form name\nfield [in] field number\ncol [in] column to query\n\nGet visible state of the specified column."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine the visibility of a column in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeIsColumnHidden\nform [in] form name\nfield [in] field number\ncol [in] column to query\n\nGet visible state of the specified column."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I get the visible state of a particular column in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeIsColumnHidden\nform [in] form name\nfield [in] field number\ncol [in] column to query\n\nGet visible state of the specified column."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to resize a specific column in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeAutoResizeColumn\nform [in] form name\nfield [in] field number\ncol [in] column (-1 to resize all columns)\n\nResize the width of the special column to show their contents completely."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to resize all columns in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeAutoResizeColumn\nform [in] form name\nfield [in] field number\ncol [in] column (-1 to resize all columns)\n\nResize the width of the special column to show their contents completely."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to adjust the width of a column to show its contents completely?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeAutoResizeColumn\nform [in] form name\nfield [in] field number\ncol [in] column (-1 to resize all columns)\n\nResize the width of the special column to show their contents completely."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to expand all nodes of a tree?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeExpandAll\nform [in] form name\nfield [in] field number\n\nExpand all the nodes of the tree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to expand all nodes of a specific form?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeExpandAll\nform [in] form name\nfield [in] field number\n\nExpand all the nodes of the tree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to expand all nodes of a tree based on a field number?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeExpandAll\nform [in] form name\nfield [in] field number\n\nExpand all the nodes of the tree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to collapse all nodes of a tree?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeCollapseAll\nform [in] form name\nfield [in] field number\n\nCollapse all the nodes of the tree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to collapse nodes of a specific form?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeCollapseAll\nform [in] form name\nfield [in] field number\n\nCollapse all the nodes of the tree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to collapse nodes based on field number?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeCollapseAll\nform [in] form name\nfield [in] field number\n\nCollapse all the nodes of the tree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to un-select all highlighted nodes of the tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeUnselectAll\nform [in] form name\nfield [in] field id\n\nThis function is to un-select all highlighted nodes of the tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to un-select all nodes of the tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeUnselectAll\nform [in] form name\nfield [in] field id\n\nThis function is to un-select all highlighted nodes of the tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to un-select nodes in the tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeUnselectAll\nform [in] form name\nfield [in] field id\n\nThis function is to un-select all highlighted nodes of the tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the selection mode of a tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetSelectionMode\nform [in] form name\nfield [in] field number\nmode [in] tree view control selection mode \n\n 0: No selection; \n\n 1: Single selection; \n\n 2: Multiple selection; \n\n 3: Extended selection; \n\n 4: Contiguous selection\n\nThis function sets the selection mode of a tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the different selection modes available for a tree view control?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetSelectionMode\nform [in] form name\nfield [in] field number\nmode [in] tree view control selection mode \n\n 0: No selection; \n\n 1: Single selection; \n\n 2: Multiple selection; \n\n 3: Extended selection; \n\n 4: Contiguous selection\n\nThis function sets the selection mode of a tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the selection mode of a tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetSelectionMode\nform [in] form name\nfield [in] field number\nmode [in] tree view control selection mode \n\n 0: No selection; \n\n 1: Single selection; \n\n 2: Multiple selection; \n\n 3: Extended selection; \n\n 4: Contiguous selection\n\nThis function sets the selection mode of a tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the selection behavior for a tree view control?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetSelectionBehavior\nform [in] form name\nfield [in] field number\nbehavior [in] tree view control selection behavior\n\nThis function sets the tree view control selection behavior. \n\n behavior 0 for select items, 1 for select rows, and 2 for select columns."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the options for tree view control selection behavior?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetSelectionBehavior\nform [in] form name\nfield [in] field number\nbehavior [in] tree view control selection behavior\n\nThis function sets the tree view control selection behavior. \n\n behavior 0 for select items, 1 for select rows, and 2 for select columns."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the form and field for setting the selection behavior?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetSelectionBehavior\nform [in] form name\nfield [in] field number\nbehavior [in] tree view control selection behavior\n\nThis function sets the tree view control selection behavior. \n\n behavior 0 for select items, 1 for select rows, and 2 for select columns."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get callback parameters for the tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetCbParam\nform [in] form name\nfield [in] filed id\nitemId [in] item id\ncbp [out] assigned with tree callback function parameter pointer\n\nGet callback parameters for the tree widget when the callback function being invoked."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve callback function parameter pointer for the tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetCbParam\nform [in] form name\nfield [in] filed id\nitemId [in] item id\ncbp [out] assigned with tree callback function parameter pointer\n\nGet callback parameters for the tree widget when the callback function being invoked."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to obtain callback parameters for the tree widget when the callback function is invoked?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetCbParam\nform [in] form name\nfield [in] filed id\nitemId [in] item id\ncbp [out] assigned with tree callback function parameter pointer\n\nGet callback parameters for the tree widget when the callback function being invoked."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the total nodes of a tree in a specified tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeItemsCount\nform [in] form name\nfield [in] field id\n\nThis function gets and return the total nodes of tree in the specified tree widget, including children nodes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to count the total nodes including children nodes in a tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeItemsCount\nform [in] form name\nfield [in] field id\n\nThis function gets and return the total nodes of tree in the specified tree widget, including children nodes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the total count of nodes in a specific tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeItemsCount\nform [in] form name\nfield [in] field id\n\nThis function gets and return the total nodes of tree in the specified tree widget, including children nodes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a new node to the tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeAddItem\nform [in] form name\nfield [in] field number\nparentId [in] Parent node id, if without parent, assign 0\nsiblingId [in] Prev sibling node id, if without previous node, assign VX_INSERT_LAST\nlabel [in] Node label text\nimgIdx [in] Index of the item's expanded image in the imagelist\nfolderIdx [in] Index of the item's collapsed image in the imagelist\nitemType [in] Node type\ndbIdx [in] Object index in database\nitemflag [in] evxTreeItemFlag\noutItemId [out] new added node's id\ncmdName [in] icon name\n\nAdd a node with specified informations to the tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to add a node to the tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeAddItem\nform [in] form name\nfield [in] field number\nparentId [in] Parent node id, if without parent, assign 0\nsiblingId [in] Prev sibling node id, if without previous node, assign VX_INSERT_LAST\nlabel [in] Node label text\nimgIdx [in] Index of the item's expanded image in the imagelist\nfolderIdx [in] Index of the item's collapsed image in the imagelist\nitemType [in] Node type\ndbIdx [in] Object index in database\nitemflag [in] evxTreeItemFlag\noutItemId [out] new added node's id\ncmdName [in] icon name\n\nAdd a node with specified informations to the tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to specify the form and field for adding a node to the tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeAddItem\nform [in] form name\nfield [in] field number\nparentId [in] Parent node id, if without parent, assign 0\nsiblingId [in] Prev sibling node id, if without previous node, assign VX_INSERT_LAST\nlabel [in] Node label text\nimgIdx [in] Index of the item's expanded image in the imagelist\nfolderIdx [in] Index of the item's collapsed image in the imagelist\nitemType [in] Node type\ndbIdx [in] Object index in database\nitemflag [in] evxTreeItemFlag\noutItemId [out] new added node's id\ncmdName [in] icon name\n\nAdd a node with specified informations to the tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set flags for specified nodes in a tree?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetItemFlag\nform [in] form name\nfield [in] field number\ncount [in] number of nodes to set\nids [in] tree node ids\nflag [in] tree node flag (evxTreeItemFlag)\n\nSet the specified nodes' flags."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set flags for tree nodes?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetItemFlag\nform [in] form name\nfield [in] field number\ncount [in] number of nodes to set\nids [in] tree node ids\nflag [in] tree node flag (evxTreeItemFlag)\n\nSet the specified nodes' flags."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set flags for a specific form and field in a tree?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetItemFlag\nform [in] form name\nfield [in] field number\ncount [in] number of nodes to set\nids [in] tree node ids\nflag [in] tree node flag (evxTreeItemFlag)\n\nSet the specified nodes' flags."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the flag of a specified node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetItemFlag\nform [in] form name\nfield [in] field number\nid [in] tree node id\nflag [out] tree node flag (evxTreeItemFlag)\n\nGet flag of the specified node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the flag of a tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetItemFlag\nform [in] form name\nfield [in] field number\nid [in] tree node id\nflag [out] tree node flag (evxTreeItemFlag)\n\nGet flag of the specified node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to obtain the flag of a specific node in the tree?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetItemFlag\nform [in] form name\nfield [in] field number\nid [in] tree node id\nflag [out] tree node flag (evxTreeItemFlag)\n\nGet flag of the specified node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the icon for a specific column of a tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetItemIconNameByColumn\nform [in] form name\nfield [in] field number\nid [in] tree node id\ncol [in] column to set\niconName [in] icon name without extension name\n\nSet the cell item (the specified column of the specified tree node) icon by name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set the icon for a specific column of a tree node by name?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetItemIconNameByColumn\nform [in] form name\nfield [in] field number\nid [in] tree node id\ncol [in] column to set\niconName [in] icon name without extension name\n\nSet the cell item (the specified column of the specified tree node) icon by name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the icon name for a particular column of a tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetItemIconNameByColumn\nform [in] form name\nfield [in] field number\nid [in] tree node id\ncol [in] column to set\niconName [in] icon name without extension name\n\nSet the cell item (the specified column of the specified tree node) icon by name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the text of a specific column for a tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetItemTextByColumn\nform [in] form name\nfield [in] field id\nid [in] tree item id\ncol [in] column\ntext [in] column text\n\nSet the cell item text for the specified column of the specified tree node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to update the text of a column for a tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetItemTextByColumn\nform [in] form name\nfield [in] field id\nid [in] tree item id\ncol [in] column\ntext [in] column text\n\nSet the cell item text for the specified column of the specified tree node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I change the text of a specific column for a tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetItemTextByColumn\nform [in] form name\nfield [in] field id\nid [in] tree item id\ncol [in] column\ntext [in] column text\n\nSet the cell item text for the specified column of the specified tree node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the text of a specific column in a tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetItemTextByColumn\nform [in] form name\nfield [in] field id\nid [in] tree item id\ncol [in] column\ntext [out] column text\nsize [in] column text size\n\nGet the cell item text of the specified column of the tree node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the text of a column in a tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetItemTextByColumn\nform [in] form name\nfield [in] field id\nid [in] tree item id\ncol [in] column\ntext [out] column text\nsize [in] column text size\n\nGet the cell item text of the specified column of the tree node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the text of a particular column in a tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetItemTextByColumn\nform [in] form name\nfield [in] field id\nid [in] tree item id\ncol [in] column\ntext [out] column text\nsize [in] column text size\n\nGet the cell item text of the specified column of the tree node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set text color of a specified cell in a tree item?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetItemTextColor\nform [in] form name\nfield [in] field id\nid [in] tree item id\ncol [in] column id (-1 to set whole row)\ncolor [in] color\n\nSet text's RGB color of specified cell."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the text color of a specific cell in a tree item?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetItemTextColor\nform [in] form name\nfield [in] field id\nid [in] tree item id\ncol [in] column id (-1 to set whole row)\ncolor [in] color\n\nSet text's RGB color of specified cell."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the RGB color of a cell in a tree item?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetItemTextColor\nform [in] form name\nfield [in] field id\nid [in] tree item id\ncol [in] column id (-1 to set whole row)\ncolor [in] color\n\nSet text's RGB color of specified cell."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the object index in the database associated with a specified node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetDBIdByItem\nform [in] form name\nfield [in] field id\nid [in] tree node id\nobjectIndex [out] object index in database matched to node\n\nGet object index in database which the specified node is associated to."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the object index in the database for a specific node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetDBIdByItem\nform [in] form name\nfield [in] field id\nid [in] tree node id\nobjectIndex [out] object index in database matched to node\n\nGet object index in database which the specified node is associated to."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the object index in the database for a given node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetDBIdByItem\nform [in] form name\nfield [in] field id\nid [in] tree node id\nobjectIndex [out] object index in database matched to node\n\nGet object index in database which the specified node is associated to."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a specific tree node and its descendants?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeDeleteItem\nform [in] form name\nfield [in] field id\nid [in] node to be deleted (-1 to delete all nodes)\n\nDelete specified tree node and its descendants. if id is VX_INVALID_ITEM, then delete all."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to delete all nodes in a tree?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeDeleteItem\nform [in] form name\nfield [in] field id\nid [in] node to be deleted (-1 to delete all nodes)\n\nDelete specified tree node and its descendants. if id is VX_INVALID_ITEM, then delete all."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a node by form and field?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeDeleteItem\nform [in] form name\nfield [in] field id\nid [in] node to be deleted (-1 to delete all nodes)\n\nDelete specified tree node and its descendants. if id is VX_INVALID_ITEM, then delete all."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete descendants of a specified node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeDeleteSubItem\nform [in] form name\nfield [in] field id\nid [in] node to be deleted\n\nDelete specified node's descendants. if id is INVALID_TNODE_ID, return directly."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to delete all descendants of a node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeDeleteSubItem\nform [in] form name\nfield [in] field id\nid [in] node to be deleted\n\nDelete specified node's descendants. if id is INVALID_TNODE_ID, return directly."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a specific node's descendants?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeDeleteSubItem\nform [in] form name\nfield [in] field id\nid [in] node to be deleted\n\nDelete specified node's descendants. if id is INVALID_TNODE_ID, return directly."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to activate a node for editing using line edit?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeEditItemByLineEdit\nform [in] form name\nfield [in] field number\nid [in] tree node id\ncol [in] column\ndefaultLabel [in] default text when editing\n\nActivate the specified node to edit by a line edit."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to edit a specified node using line edit?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeEditItemByLineEdit\nform [in] form name\nfield [in] field number\nid [in] tree node id\ncol [in] column\ndefaultLabel [in] default text when editing\n\nActivate the specified node to edit by a line edit."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the node to edit using line edit?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeEditItemByLineEdit\nform [in] form name\nfield [in] field number\nid [in] tree node id\ncol [in] column\ndefaultLabel [in] default text when editing\n\nActivate the specified node to edit by a line edit."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to make a cell a indexed combo box of options?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeEditItemByComboBox\nform [in] form name\nfield [in] field id\nid [in] tree item id\ncol [in] column\nOptions [in] null-terminated, comma-delimited list of text labels (NULL to ignore)\nImages [in] null-terminated, comma-delimited list of image (NULL to ignore)\ncurIndex [in] the current index of combobox\n\nMakes the cell identified by \"id\" and \"col\" a indexed combo box of options \n\n specified by the input list of comma-delimited text labels and images.\nOptions: each option is separated by ',' (\"1,2,3\").\nImages: each image is separated by ',' (\"A.png,B.png,C.png\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the input list of text labels and images for a combo box?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeEditItemByComboBox\nform [in] form name\nfield [in] field id\nid [in] tree item id\ncol [in] column\nOptions [in] null-terminated, comma-delimited list of text labels (NULL to ignore)\nImages [in] null-terminated, comma-delimited list of image (NULL to ignore)\ncurIndex [in] the current index of combobox\n\nMakes the cell identified by \"id\" and \"col\" a indexed combo box of options \n\n specified by the input list of comma-delimited text labels and images.\nOptions: each option is separated by ',' (\"1,2,3\").\nImages: each image is separated by ',' (\"A.png,B.png,C.png\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the current index of a combo box?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeEditItemByComboBox\nform [in] form name\nfield [in] field id\nid [in] tree item id\ncol [in] column\nOptions [in] null-terminated, comma-delimited list of text labels (NULL to ignore)\nImages [in] null-terminated, comma-delimited list of image (NULL to ignore)\ncurIndex [in] the current index of combobox\n\nMakes the cell identified by \"id\" and \"col\" a indexed combo box of options \n\n specified by the input list of comma-delimited text labels and images.\nOptions: each option is separated by ',' (\"1,2,3\").\nImages: each image is separated by ',' (\"A.png,B.png,C.png\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the previous sibling node of a tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetPrevSiblingItem\nform [in] form name\nfield [in] field number\nid [in] tree node id\nprevId [out] previous sibling node id\n\nGet previous sibling node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the previous sibling node of a specific tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetPrevSiblingItem\nform [in] form name\nfield [in] field number\nid [in] tree node id\nprevId [out] previous sibling node id\n\nGet previous sibling node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to retrieve the previous sibling node of a tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetPrevSiblingItem\nform [in] form name\nfield [in] field number\nid [in] tree node id\nprevId [out] previous sibling node id\n\nGet previous sibling node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the next sibling node in a tree?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetNextSiblingItem\nform [in] form name\nfield [in] field number\nid [in] tree node id\nnextId [out] next sibling node id\n\nGet next sibling node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the next sibling node of a specific tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetNextSiblingItem\nform [in] form name\nfield [in] field number\nid [in] tree node id\nnextId [out] next sibling node id\n\nGet next sibling node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to obtain the next sibling node in a tree?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetNextSiblingItem\nform [in] form name\nfield [in] field number\nid [in] tree node id\nnextId [out] next sibling node id\n\nGet next sibling node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the first child node id of a specified node from the tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetChildItem\nform [in] form name\nfield [in] field id\nid [in] parent node id\nindex [in] index of node, 0 based\nchild_id [out] first child node id\n\nGet the nth(index) child item of the specified node from the tree widget. \n\n If the node has no child node or index is not valid, child_id will be VX_INVALID_ITEM."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the nth child item of a node in the tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetChildItem\nform [in] form name\nfield [in] field id\nid [in] parent node id\nindex [in] index of node, 0 based\nchild_id [out] first child node id\n\nGet the nth(index) child item of the specified node from the tree widget. \n\n If the node has no child node or index is not valid, child_id will be VX_INVALID_ITEM."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the child node id at a specific index from a specified node in the tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetChildItem\nform [in] form name\nfield [in] field id\nid [in] parent node id\nindex [in] index of node, 0 based\nchild_id [out] first child node id\n\nGet the nth(index) child item of the specified node from the tree widget. \n\n If the node has no child node or index is not valid, child_id will be VX_INVALID_ITEM."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of child nodes for a specified node in the tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetChildrenCount\nform [in] form name\nfield [in] field id\nid [in] parent node id\ncount [out] count of the child nodes\n\nGet the count of the child nodes for the specified node from the tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find out the number of child nodes for a specific node in the tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetChildrenCount\nform [in] form name\nfield [in] field id\nid [in] parent node id\ncount [out] count of the child nodes\n\nGet the count of the child nodes for the specified node from the tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the count of child nodes for a particular node in the tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetChildrenCount\nform [in] form name\nfield [in] field id\nid [in] parent node id\ncount [out] count of the child nodes\n\nGet the count of the child nodes for the specified node from the tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the parent node id for a specified tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetParentItem\nform [in] form name\nfield [in] field id\nid [in] tree node id\nparent [out] parent node id\n\nGet the parent node id for the specified tree node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the parent node id of a tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetParentItem\nform [in] form name\nfield [in] field id\nid [in] tree node id\nparent [out] parent node id\n\nGet the parent node id for the specified tree node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the parent node id for a specific tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetParentItem\nform [in] form name\nfield [in] field id\nid [in] tree node id\nparent [out] parent node id\n\nGet the parent node id for the specified tree node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to move tree nodes to a specified position?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeMoveItems\nform [in] form name\nfield [in] field number\nnumNodes [in] number of nodes moved\nids [in] list of nodes moved\ninsParentId [in] destination node's parent. If none, pass with 0\nsiblingId [in] destination node's prev sibling, \n\n if insert as first child, pass with VX_INSERT_FIRST, \n\n if insert as last child, pass with VX_INSERT_LAST\n\nMove tree nodes to the specified position with all its descendants."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to move nodes with all its descendants?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeMoveItems\nform [in] form name\nfield [in] field number\nnumNodes [in] number of nodes moved\nids [in] list of nodes moved\ninsParentId [in] destination node's parent. If none, pass with 0\nsiblingId [in] destination node's prev sibling, \n\n if insert as first child, pass with VX_INSERT_FIRST, \n\n if insert as last child, pass with VX_INSERT_LAST\n\nMove tree nodes to the specified position with all its descendants."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to move nodes with a specific form and field number?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeMoveItems\nform [in] form name\nfield [in] field number\nnumNodes [in] number of nodes moved\nids [in] list of nodes moved\ninsParentId [in] destination node's parent. If none, pass with 0\nsiblingId [in] destination node's prev sibling, \n\n if insert as first child, pass with VX_INSERT_FIRST, \n\n if insert as last child, pass with VX_INSERT_LAST\n\nMove tree nodes to the specified position with all its descendants."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get all descendants of a specified parent node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetDescendants\nform [in] form name\nfield [in] form field id\nisAll [in] 1-all descendants, 0-only children\nparent [in] parent id\nnum [out] number of nodes\nids [out] node IDs\n\nGet all descendants or only children of the specified parent node. The calling \n\n procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get only children of a specified parent node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetDescendants\nform [in] form name\nfield [in] form field id\nisAll [in] 1-all descendants, 0-only children\nparent [in] parent id\nnum [out] number of nodes\nids [out] node IDs\n\nGet all descendants or only children of the specified parent node. The calling \n\n procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list after getting descendants?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetDescendants\nform [in] form name\nfield [in] form field id\nisAll [in] 1-all descendants, 0-only children\nparent [in] parent id\nnum [out] number of nodes\nids [out] node IDs\n\nGet all descendants or only children of the specified parent node. The calling \n\n procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the selected nodes of a tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetSelectedItems\nform [in] form name\nfield [in] field number\ncount [out] number of nodes\nids [out] IDs of selected nodes\n\nGet all of the current selected nodes of the tree widget. The calling procedure \n\n MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list of selected nodes?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetSelectedItems\nform [in] form name\nfield [in] field number\ncount [out] number of nodes\nids [out] IDs of selected nodes\n\nGet all of the current selected nodes of the tree widget. The calling procedure \n\n MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the IDs of the selected nodes in a tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetSelectedItems\nform [in] form name\nfield [in] field number\ncount [out] number of nodes\nids [out] IDs of selected nodes\n\nGet all of the current selected nodes of the tree widget. The calling procedure \n\n MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a tree node is selected?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeIsItemSelected\nform [in] form name\nfield [in] filed id\nid [in] node to be checked\n\nJudge whether the tree node is selected."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a specific node in the tree is selected?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeIsItemSelected\nform [in] form name\nfield [in] filed id\nid [in] node to be checked\n\nJudge whether the tree node is selected."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I judge whether a tree node is selected?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeIsItemSelected\nform [in] form name\nfield [in] filed id\nid [in] node to be checked\n\nJudge whether the tree node is selected."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to select a node in a tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSelectItem\nform [in] form name\nfield [in] field id\nid [in] tree node id\n\nThis function is to select the specified node of the tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to specify a node in a tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSelectItem\nform [in] form name\nfield [in] field id\nid [in] tree node id\n\nThis function is to select the specified node of the tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxTreeSelectItem to select a node in a tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSelectItem\nform [in] form name\nfield [in] field id\nid [in] tree node id\n\nThis function is to select the specified node of the tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the checkable state of a tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetItemCheckable\nform [in] form name\nfield [in] field number\nid [in] tree node id\ncheckable [in] checkable\n\nSet the checkable state of the specified tree node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to make a tree node checkable?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetItemCheckable\nform [in] form name\nfield [in] field number\nid [in] tree node id\ncheckable [in] checkable\n\nSet the checkable state of the specified tree node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the checkable state of a specific tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetItemCheckable\nform [in] form name\nfield [in] field number\nid [in] tree node id\ncheckable [in] checkable\n\nSet the checkable state of the specified tree node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the check state of a tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetItemCheckState\nform [in] form name\nfield [in] field number\nid [in] tree node id\n\nGet check state of the tree node identified by id defined as check box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check the state of a tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetItemCheckState\nform [in] form name\nfield [in] field number\nid [in] tree node id\n\nGet check state of the tree node identified by id defined as check box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to identify the check state of a tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetItemCheckState\nform [in] form name\nfield [in] field number\nid [in] tree node id\n\nGet check state of the tree node identified by id defined as check box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the check state of a tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetItemCheckState\nform [in] form name\nfield [in] field number\nid [in] tree node id\ncheckState [in] check state\nextToChild [in] flag to set children nodes check state\n\nSet check state of the tree node identified by id defined as check box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to define the check state of a tree node by its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetItemCheckState\nform [in] form name\nfield [in] field number\nid [in] tree node id\ncheckState [in] check state\nextToChild [in] flag to set children nodes check state\n\nSet check state of the tree node identified by id defined as check box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the check state of a tree node's children nodes?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetItemCheckState\nform [in] form name\nfield [in] field number\nid [in] tree node id\ncheckState [in] check state\nextToChild [in] flag to set children nodes check state\n\nSet check state of the tree node identified by id defined as check box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a specific tree node is expanded?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeItemIsExpand\nform [in] form name\nfield [in] field number\nid [in] tree node id\n\nCheck whether the specified node is expanded."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a node is expanded in a tree?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeItemIsExpand\nform [in] form name\nfield [in] field number\nid [in] tree node id\n\nCheck whether the specified node is expanded."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to check if a node is expanded in a tree?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeItemIsExpand\nform [in] form name\nfield [in] field number\nid [in] tree node id\n\nCheck whether the specified node is expanded."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to expand a specified tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeExpandItem\nform [in] form name\nfield [in] field number\nid [in] tree node id\noption [in] status (1 to expand, 2 to collapse, 3 to toggle)\n\nSet expand status of specified tree node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to collapse a specified tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeExpandItem\nform [in] form name\nfield [in] field number\nid [in] tree node id\noption [in] status (1 to expand, 2 to collapse, 3 to toggle)\n\nSet expand status of specified tree node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to toggle the expand status of a tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeExpandItem\nform [in] form name\nfield [in] field number\nid [in] tree node id\noption [in] status (1 to expand, 2 to collapse, 3 to toggle)\n\nSet expand status of specified tree node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the expand status of a tree node by form name and field number?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeExpandItem\nform [in] form name\nfield [in] field number\nid [in] tree node id\noption [in] status (1 to expand, 2 to collapse, 3 to toggle)\n\nSet expand status of specified tree node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get angle input from the user?"
            },
            {
                "role": "assistant",
                "content": "cvxGetAngle\nPrompt [in] text prompt\nAngle [out] angle (deg)\n\nGets angle input from the user, using the specified prompt."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to prompt the user for an angle?"
            },
            {
                "role": "assistant",
                "content": "cvxGetAngle\nPrompt [in] text prompt\nAngle [out] angle (deg)\n\nGets angle input from the user, using the specified prompt."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve an angle with a specified prompt?"
            },
            {
                "role": "assistant",
                "content": "cvxGetAngle\nPrompt [in] text prompt\nAngle [out] angle (deg)\n\nGets angle input from the user, using the specified prompt."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get distance input from the user?"
            },
            {
                "role": "assistant",
                "content": "cvxGetDistance\nPrompt [in] text prompt\nDistance [out] distance (mm)\n\nGets distance input from the user, using the specified prompt."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to prompt the user for distance input?"
            },
            {
                "role": "assistant",
                "content": "cvxGetDistance\nPrompt [in] text prompt\nDistance [out] distance (mm)\n\nGets distance input from the user, using the specified prompt."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the distance using a specified prompt?"
            },
            {
                "role": "assistant",
                "content": "cvxGetDistance\nPrompt [in] text prompt\nDistance [out] distance (mm)\n\nGets distance input from the user, using the specified prompt."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get numeric input from the user?"
            },
            {
                "role": "assistant",
                "content": "cvxGetNumber\nPrompt [in] text prompt\nNumber [out] number (dimensionless)\n\nGets numeric input from the user, using the specified prompt."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to prompt the user for a number?"
            },
            {
                "role": "assistant",
                "content": "cvxGetNumber\nPrompt [in] text prompt\nNumber [out] number (dimensionless)\n\nGets numeric input from the user, using the specified prompt."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxGetNumber to get a dimensionless number?"
            },
            {
                "role": "assistant",
                "content": "cvxGetNumber\nPrompt [in] text prompt\nNumber [out] number (dimensionless)\n\nGets numeric input from the user, using the specified prompt."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a prompt and wait for user to pick an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxGetEnt\nPrompt [in] text prompt\nOpt [in] entity input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nidEntity [out] entity id (0 if undefined)\n\nDisplays the specified \"Prompt\" and waits for the user to pick an entity whose id is output via \"idEntity\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the entity id after user picks an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxGetEnt\nPrompt [in] text prompt\nOpt [in] entity input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nidEntity [out] entity id (0 if undefined)\n\nDisplays the specified \"Prompt\" and waits for the user to pick an entity whose id is output via \"idEntity\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the options for entity input?"
            },
            {
                "role": "assistant",
                "content": "cvxGetEnt\nPrompt [in] text prompt\nOpt [in] entity input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nidEntity [out] entity id (0 if undefined)\n\nDisplays the specified \"Prompt\" and waits for the user to pick an entity whose id is output via \"idEntity\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a prompt and wait for user to pick entities?"
            },
            {
                "role": "assistant",
                "content": "cvxGetEnts\nPrompt [in] text prompt\nOpt [in] entity input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nCount [out] number of entity picks\nidEnts [out] list of entity id's\n\nDisplays the specified \"Prompt\" and waits for the user to pick \n\n a list of entities, which is output via \"idEnts\". The calling \n\n procedure is responsible for deallocating the entity list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the count of entity picks?"
            },
            {
                "role": "assistant",
                "content": "cvxGetEnts\nPrompt [in] text prompt\nOpt [in] entity input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nCount [out] number of entity picks\nidEnts [out] list of entity id's\n\nDisplays the specified \"Prompt\" and waits for the user to pick \n\n a list of entities, which is output via \"idEnts\". The calling \n\n procedure is responsible for deallocating the entity list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the entity list after picking?"
            },
            {
                "role": "assistant",
                "content": "cvxGetEnts\nPrompt [in] text prompt\nOpt [in] entity input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nCount [out] number of entity picks\nidEnts [out] list of entity id's\n\nDisplays the specified \"Prompt\" and waits for the user to pick \n\n a list of entities, which is output via \"idEnts\". The calling \n\n procedure is responsible for deallocating the entity list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxGetEntPath\nPrompt [in] text prompt\nOpt [in] entity input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nPath [out] entity path\n\nDisplays the specified \"Prompt\" and waits for the user to pick an entity whose path is output via \"Path\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxGetEntPath\nPrompt [in] text prompt\nOpt [in] entity input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nPath [out] entity path\n\nDisplays the specified \"Prompt\" and waits for the user to pick an entity whose path is output via \"Path\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxGetEntPath\nPrompt [in] text prompt\nOpt [in] entity input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nPath [out] entity path\n\nDisplays the specified \"Prompt\" and waits for the user to pick an entity whose path is output via \"Path\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a prompt and wait for user to pick a list of entities?"
            },
            {
                "role": "assistant",
                "content": "cvxGetEntPaths\nPrompt [in] text prompt\nOpt [in] entity input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nCount [out] number of entity picks\nPaths [out] list of entity path\n\nDisplays the specified \"Prompt\" and waits for the user to pick \n\n a list of entities, which is output via \"Paths\". The calling \n\n procedure is responsible for deallocating the entity path list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the number of entity picks?"
            },
            {
                "role": "assistant",
                "content": "cvxGetEntPaths\nPrompt [in] text prompt\nOpt [in] entity input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nCount [out] number of entity picks\nPaths [out] list of entity path\n\nDisplays the specified \"Prompt\" and waits for the user to pick \n\n a list of entities, which is output via \"Paths\". The calling \n\n procedure is responsible for deallocating the entity path list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the entity path list after getting the paths?"
            },
            {
                "role": "assistant",
                "content": "cvxGetEntPaths\nPrompt [in] text prompt\nOpt [in] entity input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nCount [out] number of entity picks\nPaths [out] list of entity path\n\nDisplays the specified \"Prompt\" and waits for the user to pick \n\n a list of entities, which is output via \"Paths\". The calling \n\n procedure is responsible for deallocating the entity path list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a prompt and wait for user to pick entities?"
            },
            {
                "role": "assistant",
                "content": "cvxGetEntsMultiFilter\nPrompt [in] text prompt\npOpt [in] entity input option array pointer\nnpOpt [in] entity input option array elements` number\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nCount [out] number of entity picks\nidEnts [out] list of entity id's\n\nDisplays the specified \"Prompt\" and waits for the user to pick \n\n a list of entities whose type already exists in the entity option array by himself, which is output via \"idEnts\". The calling \n\n procedure is responsible for deallocating the entity list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to allow <middle-click> without input?"
            },
            {
                "role": "assistant",
                "content": "cvxGetEntsMultiFilter\nPrompt [in] text prompt\npOpt [in] entity input option array pointer\nnpOpt [in] entity input option array elements` number\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nCount [out] number of entity picks\nidEnts [out] list of entity id's\n\nDisplays the specified \"Prompt\" and waits for the user to pick \n\n a list of entities whose type already exists in the entity option array by himself, which is output via \"idEnts\". The calling \n\n procedure is responsible for deallocating the entity list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of entity picks?"
            },
            {
                "role": "assistant",
                "content": "cvxGetEntsMultiFilter\nPrompt [in] text prompt\npOpt [in] entity input option array pointer\nnpOpt [in] entity input option array elements` number\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nCount [out] number of entity picks\nidEnts [out] list of entity id's\n\nDisplays the specified \"Prompt\" and waits for the user to pick \n\n a list of entities whose type already exists in the entity option array by himself, which is output via \"idEnts\". The calling \n\n procedure is responsible for deallocating the entity list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the entity list after picking?"
            },
            {
                "role": "assistant",
                "content": "cvxGetEntsMultiFilter\nPrompt [in] text prompt\npOpt [in] entity input option array pointer\nnpOpt [in] entity input option array elements` number\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nCount [out] number of entity picks\nidEnts [out] list of entity id's\n\nDisplays the specified \"Prompt\" and waits for the user to pick \n\n a list of entities whose type already exists in the entity option array by himself, which is output via \"idEnts\". The calling \n\n procedure is responsible for deallocating the entity list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a prompt and wait for user to pick a list of entities?"
            },
            {
                "role": "assistant",
                "content": "cvxGetEntPathsMultiFilter\nPrompt [in] text prompt\npOpt [in] entity input option array pointer\nnpOpt [in] entity input option array elements` number\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nCount [out] number of entity picks\nPaths [out] list of entity path\n\nDisplays the specified \"Prompt\" and waits for the user to pick \n\n a list of entities whose type already exists in the entity option array by himself, which is output via \"Paths\". \n\n The calling procedure is responsible for deallocating the entity path list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to allow <middle-click> without input?"
            },
            {
                "role": "assistant",
                "content": "cvxGetEntPathsMultiFilter\nPrompt [in] text prompt\npOpt [in] entity input option array pointer\nnpOpt [in] entity input option array elements` number\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nCount [out] number of entity picks\nPaths [out] list of entity path\n\nDisplays the specified \"Prompt\" and waits for the user to pick \n\n a list of entities whose type already exists in the entity option array by himself, which is output via \"Paths\". \n\n The calling procedure is responsible for deallocating the entity path list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the entity path list after picking entities?"
            },
            {
                "role": "assistant",
                "content": "cvxGetEntPathsMultiFilter\nPrompt [in] text prompt\npOpt [in] entity input option array pointer\nnpOpt [in] entity input option array elements` number\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nCount [out] number of entity picks\nPaths [out] list of entity path\n\nDisplays the specified \"Prompt\" and waits for the user to pick \n\n a list of entities whose type already exists in the entity option array by himself, which is output via \"Paths\". \n\n The calling procedure is responsible for deallocating the entity path list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a prompt and wait for user to select a point based on input option?"
            },
            {
                "role": "assistant",
                "content": "cvxGetExternalPick\nPrompt [in] text prompt\nOpt [in] point input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nPoint [out] point defined in the local space of its parent entity\nEntPath [out] entity pick-path (Entity->Count=0 if undefined)\nMatrix [out] transform that maps point from local space to space of active target\n\nDisplays the specified \"prompt\" and waits for the user to select \n\n a point based on the input option (evxPntInpOpt). This function \n\n is especially designed to manage the selection of points on entities \n\n that lie outside of the active target object, such as a point on a \n\n face of an assembly component. Your objective may be to get the \n\n coordinates of a point that lies external to the active object (e.g. part), \n\n the pick-path of an external entity (e.g. an assembly face), or both.\nThe selected point's coordinates are output in the local space of the point's \n\n parent entity. \"Matrix\" may be used to transform the point (and entity) \n\n coordinates from their local space to the space of the target object that \n\n was active at the time the point was selected (see cvxPntTransform(), \n\n cvxCrvTransform()and cvxSrfTransform()).\nIf the point was selected by snapping to an entity, the pick-path of the \n\n entity is output via \"EntPath\". A pick-path defines the sequence of object \n\n references (i.e. nested assembly components) that locate the entity relative \n\n to the active target object. A pick-path could lead to an entity that lies \n\n in a different file or object than the active file/object.\nAPI functions for querying entities generally require that an entity's parent \n\n file and object(i.e. part, sketch, plan, drawing) be active. If you want to \n\n query information about an entity, such as its geometry, use cvxEntPathActivate() \n\n to activate the entity's parent file and object, and to get the entity's id. \n\n Query the geometry and, if desired, transform it into the space of the original \n\n target object using \"Matrix\". When you are done querying the geometry, restore \n\n the original target file and object with cvxEntPathActivate()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to manage the selection of points on entities outside of the active target object?"
            },
            {
                "role": "assistant",
                "content": "cvxGetExternalPick\nPrompt [in] text prompt\nOpt [in] point input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nPoint [out] point defined in the local space of its parent entity\nEntPath [out] entity pick-path (Entity->Count=0 if undefined)\nMatrix [out] transform that maps point from local space to space of active target\n\nDisplays the specified \"prompt\" and waits for the user to select \n\n a point based on the input option (evxPntInpOpt). This function \n\n is especially designed to manage the selection of points on entities \n\n that lie outside of the active target object, such as a point on a \n\n face of an assembly component. Your objective may be to get the \n\n coordinates of a point that lies external to the active object (e.g. part), \n\n the pick-path of an external entity (e.g. an assembly face), or both.\nThe selected point's coordinates are output in the local space of the point's \n\n parent entity. \"Matrix\" may be used to transform the point (and entity) \n\n coordinates from their local space to the space of the target object that \n\n was active at the time the point was selected (see cvxPntTransform(), \n\n cvxCrvTransform()and cvxSrfTransform()).\nIf the point was selected by snapping to an entity, the pick-path of the \n\n entity is output via \"EntPath\". A pick-path defines the sequence of object \n\n references (i.e. nested assembly components) that locate the entity relative \n\n to the active target object. A pick-path could lead to an entity that lies \n\n in a different file or object than the active file/object.\nAPI functions for querying entities generally require that an entity's parent \n\n file and object(i.e. part, sketch, plan, drawing) be active. If you want to \n\n query information about an entity, such as its geometry, use cvxEntPathActivate() \n\n to activate the entity's parent file and object, and to get the entity's id. \n\n Query the geometry and, if desired, transform it into the space of the original \n\n target object using \"Matrix\". When you are done querying the geometry, restore \n\n the original target file and object with cvxEntPathActivate()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the coordinates of a point that lies external to the active object?"
            },
            {
                "role": "assistant",
                "content": "cvxGetExternalPick\nPrompt [in] text prompt\nOpt [in] point input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nPoint [out] point defined in the local space of its parent entity\nEntPath [out] entity pick-path (Entity->Count=0 if undefined)\nMatrix [out] transform that maps point from local space to space of active target\n\nDisplays the specified \"prompt\" and waits for the user to select \n\n a point based on the input option (evxPntInpOpt). This function \n\n is especially designed to manage the selection of points on entities \n\n that lie outside of the active target object, such as a point on a \n\n face of an assembly component. Your objective may be to get the \n\n coordinates of a point that lies external to the active object (e.g. part), \n\n the pick-path of an external entity (e.g. an assembly face), or both.\nThe selected point's coordinates are output in the local space of the point's \n\n parent entity. \"Matrix\" may be used to transform the point (and entity) \n\n coordinates from their local space to the space of the target object that \n\n was active at the time the point was selected (see cvxPntTransform(), \n\n cvxCrvTransform()and cvxSrfTransform()).\nIf the point was selected by snapping to an entity, the pick-path of the \n\n entity is output via \"EntPath\". A pick-path defines the sequence of object \n\n references (i.e. nested assembly components) that locate the entity relative \n\n to the active target object. A pick-path could lead to an entity that lies \n\n in a different file or object than the active file/object.\nAPI functions for querying entities generally require that an entity's parent \n\n file and object(i.e. part, sketch, plan, drawing) be active. If you want to \n\n query information about an entity, such as its geometry, use cvxEntPathActivate() \n\n to activate the entity's parent file and object, and to get the entity's id. \n\n Query the geometry and, if desired, transform it into the space of the original \n\n target object using \"Matrix\". When you are done querying the geometry, restore \n\n the original target file and object with cvxEntPathActivate()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to transform the point coordinates from local space to the space of the target object?"
            },
            {
                "role": "assistant",
                "content": "cvxGetExternalPick\nPrompt [in] text prompt\nOpt [in] point input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nPoint [out] point defined in the local space of its parent entity\nEntPath [out] entity pick-path (Entity->Count=0 if undefined)\nMatrix [out] transform that maps point from local space to space of active target\n\nDisplays the specified \"prompt\" and waits for the user to select \n\n a point based on the input option (evxPntInpOpt). This function \n\n is especially designed to manage the selection of points on entities \n\n that lie outside of the active target object, such as a point on a \n\n face of an assembly component. Your objective may be to get the \n\n coordinates of a point that lies external to the active object (e.g. part), \n\n the pick-path of an external entity (e.g. an assembly face), or both.\nThe selected point's coordinates are output in the local space of the point's \n\n parent entity. \"Matrix\" may be used to transform the point (and entity) \n\n coordinates from their local space to the space of the target object that \n\n was active at the time the point was selected (see cvxPntTransform(), \n\n cvxCrvTransform()and cvxSrfTransform()).\nIf the point was selected by snapping to an entity, the pick-path of the \n\n entity is output via \"EntPath\". A pick-path defines the sequence of object \n\n references (i.e. nested assembly components) that locate the entity relative \n\n to the active target object. A pick-path could lead to an entity that lies \n\n in a different file or object than the active file/object.\nAPI functions for querying entities generally require that an entity's parent \n\n file and object(i.e. part, sketch, plan, drawing) be active. If you want to \n\n query information about an entity, such as its geometry, use cvxEntPathActivate() \n\n to activate the entity's parent file and object, and to get the entity's id. \n\n Query the geometry and, if desired, transform it into the space of the original \n\n target object using \"Matrix\". When you are done querying the geometry, restore \n\n the original target file and object with cvxEntPathActivate()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the pick-path of an external entity?"
            },
            {
                "role": "assistant",
                "content": "cvxGetExternalPick\nPrompt [in] text prompt\nOpt [in] point input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nPoint [out] point defined in the local space of its parent entity\nEntPath [out] entity pick-path (Entity->Count=0 if undefined)\nMatrix [out] transform that maps point from local space to space of active target\n\nDisplays the specified \"prompt\" and waits for the user to select \n\n a point based on the input option (evxPntInpOpt). This function \n\n is especially designed to manage the selection of points on entities \n\n that lie outside of the active target object, such as a point on a \n\n face of an assembly component. Your objective may be to get the \n\n coordinates of a point that lies external to the active object (e.g. part), \n\n the pick-path of an external entity (e.g. an assembly face), or both.\nThe selected point's coordinates are output in the local space of the point's \n\n parent entity. \"Matrix\" may be used to transform the point (and entity) \n\n coordinates from their local space to the space of the target object that \n\n was active at the time the point was selected (see cvxPntTransform(), \n\n cvxCrvTransform()and cvxSrfTransform()).\nIf the point was selected by snapping to an entity, the pick-path of the \n\n entity is output via \"EntPath\". A pick-path defines the sequence of object \n\n references (i.e. nested assembly components) that locate the entity relative \n\n to the active target object. A pick-path could lead to an entity that lies \n\n in a different file or object than the active file/object.\nAPI functions for querying entities generally require that an entity's parent \n\n file and object(i.e. part, sketch, plan, drawing) be active. If you want to \n\n query information about an entity, such as its geometry, use cvxEntPathActivate() \n\n to activate the entity's parent file and object, and to get the entity's id. \n\n Query the geometry and, if desired, transform it into the space of the original \n\n target object using \"Matrix\". When you are done querying the geometry, restore \n\n the original target file and object with cvxEntPathActivate()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to query information about an entity's geometry and transform it into the space of the original target object?"
            },
            {
                "role": "assistant",
                "content": "cvxGetExternalPick\nPrompt [in] text prompt\nOpt [in] point input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nPoint [out] point defined in the local space of its parent entity\nEntPath [out] entity pick-path (Entity->Count=0 if undefined)\nMatrix [out] transform that maps point from local space to space of active target\n\nDisplays the specified \"prompt\" and waits for the user to select \n\n a point based on the input option (evxPntInpOpt). This function \n\n is especially designed to manage the selection of points on entities \n\n that lie outside of the active target object, such as a point on a \n\n face of an assembly component. Your objective may be to get the \n\n coordinates of a point that lies external to the active object (e.g. part), \n\n the pick-path of an external entity (e.g. an assembly face), or both.\nThe selected point's coordinates are output in the local space of the point's \n\n parent entity. \"Matrix\" may be used to transform the point (and entity) \n\n coordinates from their local space to the space of the target object that \n\n was active at the time the point was selected (see cvxPntTransform(), \n\n cvxCrvTransform()and cvxSrfTransform()).\nIf the point was selected by snapping to an entity, the pick-path of the \n\n entity is output via \"EntPath\". A pick-path defines the sequence of object \n\n references (i.e. nested assembly components) that locate the entity relative \n\n to the active target object. A pick-path could lead to an entity that lies \n\n in a different file or object than the active file/object.\nAPI functions for querying entities generally require that an entity's parent \n\n file and object(i.e. part, sketch, plan, drawing) be active. If you want to \n\n query information about an entity, such as its geometry, use cvxEntPathActivate() \n\n to activate the entity's parent file and object, and to get the entity's id. \n\n Query the geometry and, if desired, transform it into the space of the original \n\n target object using \"Matrix\". When you are done querying the geometry, restore \n\n the original target file and object with cvxEntPathActivate()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a prompt for user to input a point?"
            },
            {
                "role": "assistant",
                "content": "cvxGetPoint\nPrompt [in] text prompt\nOpt [in] point input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nPoint [out] point input\nidEntity [out] entity id (input NULL to ignore)\n\nDisplays the specified \"prompt\" and waits for the user to input \n\n a point, which is output via \"Point\". If the user used a \n\n \"point-on-entity\" option, the entity index is output via \"idEntity\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the options for point input?"
            },
            {
                "role": "assistant",
                "content": "cvxGetPoint\nPrompt [in] text prompt\nOpt [in] point input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nPoint [out] point input\nidEntity [out] entity id (input NULL to ignore)\n\nDisplays the specified \"prompt\" and waits for the user to input \n\n a point, which is output via \"Point\". If the user used a \n\n \"point-on-entity\" option, the entity index is output via \"idEntity\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is it possible to ignore the entity id when getting a point input?"
            },
            {
                "role": "assistant",
                "content": "cvxGetPoint\nPrompt [in] text prompt\nOpt [in] point input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nPoint [out] point input\nidEntity [out] entity id (input NULL to ignore)\n\nDisplays the specified \"prompt\" and waits for the user to input \n\n a point, which is output via \"Point\". If the user used a \n\n \"point-on-entity\" option, the entity index is output via \"idEntity\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a text prompt for point input?"
            },
            {
                "role": "assistant",
                "content": "cvxGetPoints\nPrompt [in] text prompt\nOpt [in] point input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nCount [out] number of point picks\nPoints [out] list of points\n\nDisplays the specified \"Prompt\" and waits for the user to input \n\n a list of points, which is output via \"Points\". The calling \n\n procedure is responsible for deallocating the point list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to wait for user input for a list of points?"
            },
            {
                "role": "assistant",
                "content": "cvxGetPoints\nPrompt [in] text prompt\nOpt [in] point input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nCount [out] number of point picks\nPoints [out] list of points\n\nDisplays the specified \"Prompt\" and waits for the user to input \n\n a list of points, which is output via \"Points\". The calling \n\n procedure is responsible for deallocating the point list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of point picks?"
            },
            {
                "role": "assistant",
                "content": "cvxGetPoints\nPrompt [in] text prompt\nOpt [in] point input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nCount [out] number of point picks\nPoints [out] list of points\n\nDisplays the specified \"Prompt\" and waits for the user to input \n\n a list of points, which is output via \"Points\". The calling \n\n procedure is responsible for deallocating the point list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the point list after input?"
            },
            {
                "role": "assistant",
                "content": "cvxGetPoints\nPrompt [in] text prompt\nOpt [in] point input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nCount [out] number of point picks\nPoints [out] list of points\n\nDisplays the specified \"Prompt\" and waits for the user to input \n\n a list of points, which is output via \"Points\". The calling \n\n procedure is responsible for deallocating the point list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a prompt for user input?"
            },
            {
                "role": "assistant",
                "content": "cvxGetPointOnEnt\nprompt [in] text prompt\nopt [in] point input option\nemptyOk [in] 1 if <middle-click> without input is okay; else 0\npoint [out] point input\npath [out] entity path (input NULL to ignore)\n\nDisplays the specified \"prompt\" and waits for the user to input \n\n a point, which is output via \"Point\". \n\n If the user used a \"point-on-entity\" option, the entity index is output via \"path\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to wait for user to input a point?"
            },
            {
                "role": "assistant",
                "content": "cvxGetPointOnEnt\nprompt [in] text prompt\nopt [in] point input option\nemptyOk [in] 1 if <middle-click> without input is okay; else 0\npoint [out] point input\npath [out] entity path (input NULL to ignore)\n\nDisplays the specified \"prompt\" and waits for the user to input \n\n a point, which is output via \"Point\". \n\n If the user used a \"point-on-entity\" option, the entity index is output via \"path\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle the case when user uses 'point-on-entity' option?"
            },
            {
                "role": "assistant",
                "content": "cvxGetPointOnEnt\nprompt [in] text prompt\nopt [in] point input option\nemptyOk [in] 1 if <middle-click> without input is okay; else 0\npoint [out] point input\npath [out] entity path (input NULL to ignore)\n\nDisplays the specified \"prompt\" and waits for the user to input \n\n a point, which is output via \"Point\". \n\n If the user used a \"point-on-entity\" option, the entity index is output via \"path\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to ignore the entity path input?"
            },
            {
                "role": "assistant",
                "content": "cvxGetPointOnEnt\nprompt [in] text prompt\nopt [in] point input option\nemptyOk [in] 1 if <middle-click> without input is okay; else 0\npoint [out] point input\npath [out] entity path (input NULL to ignore)\n\nDisplays the specified \"prompt\" and waits for the user to input \n\n a point, which is output via \"Point\". \n\n If the user used a \"point-on-entity\" option, the entity index is output via \"path\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a prompt and wait for user input for a list of points and paths?"
            },
            {
                "role": "assistant",
                "content": "cvxGetPointsOnEnts\nprompt [in] text prompt\nopt [in] point input option\nemptyOk [in] 1 if <middle-click> without input is okay; else 0\ncount [out] number of point picks\npoints [out] list of points\npaths [out] list of paths(path of point on entity, NULL to ignore)\n\nDisplays the specified \"Prompt\" and waits for the user to input \n\n a list of points and paths, which is output via \"points\" and \"paths\". \n\n The calling procedure is responsible for deallocating the point and path list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the number of point picks?"
            },
            {
                "role": "assistant",
                "content": "cvxGetPointsOnEnts\nprompt [in] text prompt\nopt [in] point input option\nemptyOk [in] 1 if <middle-click> without input is okay; else 0\ncount [out] number of point picks\npoints [out] list of points\npaths [out] list of paths(path of point on entity, NULL to ignore)\n\nDisplays the specified \"Prompt\" and waits for the user to input \n\n a list of points and paths, which is output via \"points\" and \"paths\". \n\n The calling procedure is responsible for deallocating the point and path list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle the deallocation of point and path list after user input?"
            },
            {
                "role": "assistant",
                "content": "cvxGetPointsOnEnts\nprompt [in] text prompt\nopt [in] point input option\nemptyOk [in] 1 if <middle-click> without input is okay; else 0\ncount [out] number of point picks\npoints [out] list of points\npaths [out] list of paths(path of point on entity, NULL to ignore)\n\nDisplays the specified \"Prompt\" and waits for the user to input \n\n a list of points and paths, which is output via \"points\" and \"paths\". \n\n The calling procedure is responsible for deallocating the point and path list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display the file browser with a specific prompt and default folder?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFile\nOpen [in] 1 to open files, 0 to save files\nPrompt [in] null-terminated text prompt\nDefault [in] default directory (null-terminated string)\nFilter [in] file filter (null-terminated string)\nPath [out] user-selected file path(must be 512 bytes)\n\nDisplays the file browser with the specified \"Prompt\" and initialized \n\n to the \"Default\" folder. The browser will display the files specified \n\n by \"Filter\", which is a string like the following examples:\nShow all files: \"All Files (*.*)|*.*|\" \n\n Show DXF and DWG files: \"DWG File (*.dwg)|*.dwg|DXF File (*.dxf)|*.dxf|\" \n\n\nIf \"Open = 1\", the file browser will come up in the configuration \n\n used to select a file to be opened.\nIf \"Open = 0\", the file browser will come up in the configuration \n\n used to specify a file to be saved. If the file already exists, the \n\n user will be asked whether he wants to overwrite it.\nTo initialize the file browser to both a default directory and file selection, input \"Default\" as the desired directory, followed by a comma, followed by the desired file name.\nnote:\nThe path of the file selected by the user is output via the string \n\n variable \"Path\". If there is an error, or the user presses cancel, \n\n an empty string is output. \n\n \"Path\" must reference 512 bytes of memory. \n\n Better to use cvxGetFileByLongPath(), this function needs to set the length of the path.\nsee:\ncvxGetFileActiveField()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the file filter for the file browser?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFile\nOpen [in] 1 to open files, 0 to save files\nPrompt [in] null-terminated text prompt\nDefault [in] default directory (null-terminated string)\nFilter [in] file filter (null-terminated string)\nPath [out] user-selected file path(must be 512 bytes)\n\nDisplays the file browser with the specified \"Prompt\" and initialized \n\n to the \"Default\" folder. The browser will display the files specified \n\n by \"Filter\", which is a string like the following examples:\nShow all files: \"All Files (*.*)|*.*|\" \n\n Show DXF and DWG files: \"DWG File (*.dwg)|*.dwg|DXF File (*.dxf)|*.dxf|\" \n\n\nIf \"Open = 1\", the file browser will come up in the configuration \n\n used to select a file to be opened.\nIf \"Open = 0\", the file browser will come up in the configuration \n\n used to specify a file to be saved. If the file already exists, the \n\n user will be asked whether he wants to overwrite it.\nTo initialize the file browser to both a default directory and file selection, input \"Default\" as the desired directory, followed by a comma, followed by the desired file name.\nnote:\nThe path of the file selected by the user is output via the string \n\n variable \"Path\". If there is an error, or the user presses cancel, \n\n an empty string is output. \n\n \"Path\" must reference 512 bytes of memory. \n\n Better to use cvxGetFileByLongPath(), this function needs to set the length of the path.\nsee:\ncvxGetFileActiveField()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the user-selected file path from the file browser?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFile\nOpen [in] 1 to open files, 0 to save files\nPrompt [in] null-terminated text prompt\nDefault [in] default directory (null-terminated string)\nFilter [in] file filter (null-terminated string)\nPath [out] user-selected file path(must be 512 bytes)\n\nDisplays the file browser with the specified \"Prompt\" and initialized \n\n to the \"Default\" folder. The browser will display the files specified \n\n by \"Filter\", which is a string like the following examples:\nShow all files: \"All Files (*.*)|*.*|\" \n\n Show DXF and DWG files: \"DWG File (*.dwg)|*.dwg|DXF File (*.dxf)|*.dxf|\" \n\n\nIf \"Open = 1\", the file browser will come up in the configuration \n\n used to select a file to be opened.\nIf \"Open = 0\", the file browser will come up in the configuration \n\n used to specify a file to be saved. If the file already exists, the \n\n user will be asked whether he wants to overwrite it.\nTo initialize the file browser to both a default directory and file selection, input \"Default\" as the desired directory, followed by a comma, followed by the desired file name.\nnote:\nThe path of the file selected by the user is output via the string \n\n variable \"Path\". If there is an error, or the user presses cancel, \n\n an empty string is output. \n\n \"Path\" must reference 512 bytes of memory. \n\n Better to use cvxGetFileByLongPath(), this function needs to set the length of the path.\nsee:\ncvxGetFileActiveField()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the difference between opening and saving files using the file browser?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFile\nOpen [in] 1 to open files, 0 to save files\nPrompt [in] null-terminated text prompt\nDefault [in] default directory (null-terminated string)\nFilter [in] file filter (null-terminated string)\nPath [out] user-selected file path(must be 512 bytes)\n\nDisplays the file browser with the specified \"Prompt\" and initialized \n\n to the \"Default\" folder. The browser will display the files specified \n\n by \"Filter\", which is a string like the following examples:\nShow all files: \"All Files (*.*)|*.*|\" \n\n Show DXF and DWG files: \"DWG File (*.dwg)|*.dwg|DXF File (*.dxf)|*.dxf|\" \n\n\nIf \"Open = 1\", the file browser will come up in the configuration \n\n used to select a file to be opened.\nIf \"Open = 0\", the file browser will come up in the configuration \n\n used to specify a file to be saved. If the file already exists, the \n\n user will be asked whether he wants to overwrite it.\nTo initialize the file browser to both a default directory and file selection, input \"Default\" as the desired directory, followed by a comma, followed by the desired file name.\nnote:\nThe path of the file selected by the user is output via the string \n\n variable \"Path\". If there is an error, or the user presses cancel, \n\n an empty string is output. \n\n \"Path\" must reference 512 bytes of memory. \n\n Better to use cvxGetFileByLongPath(), this function needs to set the length of the path.\nsee:\ncvxGetFileActiveField()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display the file browser with a specified prompt?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFileByLongPath\nOpen [in] 1 to open files, 0 to save files\nPrompt [in] null-terminated text prompt\nDefault [in] default directory (null-terminated string)\nFilter [in] file filter (null-terminated string)\nPath [out] user-selected file path\nsizePath [unknown] sizePath max size of Path user-selected file path\n\nDisplays the file browser with the specified \"Prompt\" and initialized to the \"Default\" folder. The browser will display the files specified by \"Filter\", which is a string like the following examples:\nShow all files: \"All Files (*.*)|*.*|\" Show DXF and DWG files: \"DWG File (*.dwg)|*.dwg|DXF File (*.dxf)|*.dxf|\"\nIf \"Open = 1\", the file browser will come up in the configuration used to select a file to be opened.\nIf \"Open = 0\", the file browser will come up in the configuration used to specify a file to be saved. If the file already exists, the user will be asked whether he wants to overwrite it.\nThe path of the file selected by the user is output via the string variable \"Path\". If there is an error, or the user presses cancel, an empty string is output. It is assumed that \"Path\" references sufficient memory to hold the output path (max = 512 bytes).\nTo initialize the file browser to both a default directory and file selection, input \"Default\" as the desired directory, followed by a comma, followed by the desired file name.\nA Path that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes.\nsee:\ncvxGetFileActiveField()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the file browser to a default folder?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFileByLongPath\nOpen [in] 1 to open files, 0 to save files\nPrompt [in] null-terminated text prompt\nDefault [in] default directory (null-terminated string)\nFilter [in] file filter (null-terminated string)\nPath [out] user-selected file path\nsizePath [unknown] sizePath max size of Path user-selected file path\n\nDisplays the file browser with the specified \"Prompt\" and initialized to the \"Default\" folder. The browser will display the files specified by \"Filter\", which is a string like the following examples:\nShow all files: \"All Files (*.*)|*.*|\" Show DXF and DWG files: \"DWG File (*.dwg)|*.dwg|DXF File (*.dxf)|*.dxf|\"\nIf \"Open = 1\", the file browser will come up in the configuration used to select a file to be opened.\nIf \"Open = 0\", the file browser will come up in the configuration used to specify a file to be saved. If the file already exists, the user will be asked whether he wants to overwrite it.\nThe path of the file selected by the user is output via the string variable \"Path\". If there is an error, or the user presses cancel, an empty string is output. It is assumed that \"Path\" references sufficient memory to hold the output path (max = 512 bytes).\nTo initialize the file browser to both a default directory and file selection, input \"Default\" as the desired directory, followed by a comma, followed by the desired file name.\nA Path that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes.\nsee:\ncvxGetFileActiveField()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the file filter for the file browser?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFileByLongPath\nOpen [in] 1 to open files, 0 to save files\nPrompt [in] null-terminated text prompt\nDefault [in] default directory (null-terminated string)\nFilter [in] file filter (null-terminated string)\nPath [out] user-selected file path\nsizePath [unknown] sizePath max size of Path user-selected file path\n\nDisplays the file browser with the specified \"Prompt\" and initialized to the \"Default\" folder. The browser will display the files specified by \"Filter\", which is a string like the following examples:\nShow all files: \"All Files (*.*)|*.*|\" Show DXF and DWG files: \"DWG File (*.dwg)|*.dwg|DXF File (*.dxf)|*.dxf|\"\nIf \"Open = 1\", the file browser will come up in the configuration used to select a file to be opened.\nIf \"Open = 0\", the file browser will come up in the configuration used to specify a file to be saved. If the file already exists, the user will be asked whether he wants to overwrite it.\nThe path of the file selected by the user is output via the string variable \"Path\". If there is an error, or the user presses cancel, an empty string is output. It is assumed that \"Path\" references sufficient memory to hold the output path (max = 512 bytes).\nTo initialize the file browser to both a default directory and file selection, input \"Default\" as the desired directory, followed by a comma, followed by the desired file name.\nA Path that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes.\nsee:\ncvxGetFileActiveField()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to select a file to be opened using the file browser?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFileByLongPath\nOpen [in] 1 to open files, 0 to save files\nPrompt [in] null-terminated text prompt\nDefault [in] default directory (null-terminated string)\nFilter [in] file filter (null-terminated string)\nPath [out] user-selected file path\nsizePath [unknown] sizePath max size of Path user-selected file path\n\nDisplays the file browser with the specified \"Prompt\" and initialized to the \"Default\" folder. The browser will display the files specified by \"Filter\", which is a string like the following examples:\nShow all files: \"All Files (*.*)|*.*|\" Show DXF and DWG files: \"DWG File (*.dwg)|*.dwg|DXF File (*.dxf)|*.dxf|\"\nIf \"Open = 1\", the file browser will come up in the configuration used to select a file to be opened.\nIf \"Open = 0\", the file browser will come up in the configuration used to specify a file to be saved. If the file already exists, the user will be asked whether he wants to overwrite it.\nThe path of the file selected by the user is output via the string variable \"Path\". If there is an error, or the user presses cancel, an empty string is output. It is assumed that \"Path\" references sufficient memory to hold the output path (max = 512 bytes).\nTo initialize the file browser to both a default directory and file selection, input \"Default\" as the desired directory, followed by a comma, followed by the desired file name.\nA Path that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes.\nsee:\ncvxGetFileActiveField()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify a file to be saved using the file browser?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFileByLongPath\nOpen [in] 1 to open files, 0 to save files\nPrompt [in] null-terminated text prompt\nDefault [in] default directory (null-terminated string)\nFilter [in] file filter (null-terminated string)\nPath [out] user-selected file path\nsizePath [unknown] sizePath max size of Path user-selected file path\n\nDisplays the file browser with the specified \"Prompt\" and initialized to the \"Default\" folder. The browser will display the files specified by \"Filter\", which is a string like the following examples:\nShow all files: \"All Files (*.*)|*.*|\" Show DXF and DWG files: \"DWG File (*.dwg)|*.dwg|DXF File (*.dxf)|*.dxf|\"\nIf \"Open = 1\", the file browser will come up in the configuration used to select a file to be opened.\nIf \"Open = 0\", the file browser will come up in the configuration used to specify a file to be saved. If the file already exists, the user will be asked whether he wants to overwrite it.\nThe path of the file selected by the user is output via the string variable \"Path\". If there is an error, or the user presses cancel, an empty string is output. It is assumed that \"Path\" references sufficient memory to hold the output path (max = 512 bytes).\nTo initialize the file browser to both a default directory and file selection, input \"Default\" as the desired directory, followed by a comma, followed by the desired file name.\nA Path that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes.\nsee:\ncvxGetFileActiveField()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle the case when the user wants to overwrite an existing file?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFileByLongPath\nOpen [in] 1 to open files, 0 to save files\nPrompt [in] null-terminated text prompt\nDefault [in] default directory (null-terminated string)\nFilter [in] file filter (null-terminated string)\nPath [out] user-selected file path\nsizePath [unknown] sizePath max size of Path user-selected file path\n\nDisplays the file browser with the specified \"Prompt\" and initialized to the \"Default\" folder. The browser will display the files specified by \"Filter\", which is a string like the following examples:\nShow all files: \"All Files (*.*)|*.*|\" Show DXF and DWG files: \"DWG File (*.dwg)|*.dwg|DXF File (*.dxf)|*.dxf|\"\nIf \"Open = 1\", the file browser will come up in the configuration used to select a file to be opened.\nIf \"Open = 0\", the file browser will come up in the configuration used to specify a file to be saved. If the file already exists, the user will be asked whether he wants to overwrite it.\nThe path of the file selected by the user is output via the string variable \"Path\". If there is an error, or the user presses cancel, an empty string is output. It is assumed that \"Path\" references sufficient memory to hold the output path (max = 512 bytes).\nTo initialize the file browser to both a default directory and file selection, input \"Default\" as the desired directory, followed by a comma, followed by the desired file name.\nA Path that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes.\nsee:\ncvxGetFileActiveField()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the path of the file selected by the user?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFileByLongPath\nOpen [in] 1 to open files, 0 to save files\nPrompt [in] null-terminated text prompt\nDefault [in] default directory (null-terminated string)\nFilter [in] file filter (null-terminated string)\nPath [out] user-selected file path\nsizePath [unknown] sizePath max size of Path user-selected file path\n\nDisplays the file browser with the specified \"Prompt\" and initialized to the \"Default\" folder. The browser will display the files specified by \"Filter\", which is a string like the following examples:\nShow all files: \"All Files (*.*)|*.*|\" Show DXF and DWG files: \"DWG File (*.dwg)|*.dwg|DXF File (*.dxf)|*.dxf|\"\nIf \"Open = 1\", the file browser will come up in the configuration used to select a file to be opened.\nIf \"Open = 0\", the file browser will come up in the configuration used to specify a file to be saved. If the file already exists, the user will be asked whether he wants to overwrite it.\nThe path of the file selected by the user is output via the string variable \"Path\". If there is an error, or the user presses cancel, an empty string is output. It is assumed that \"Path\" references sufficient memory to hold the output path (max = 512 bytes).\nTo initialize the file browser to both a default directory and file selection, input \"Default\" as the desired directory, followed by a comma, followed by the desired file name.\nA Path that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes.\nsee:\ncvxGetFileActiveField()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if there is an error or the user presses cancel in the file browser?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFileByLongPath\nOpen [in] 1 to open files, 0 to save files\nPrompt [in] null-terminated text prompt\nDefault [in] default directory (null-terminated string)\nFilter [in] file filter (null-terminated string)\nPath [out] user-selected file path\nsizePath [unknown] sizePath max size of Path user-selected file path\n\nDisplays the file browser with the specified \"Prompt\" and initialized to the \"Default\" folder. The browser will display the files specified by \"Filter\", which is a string like the following examples:\nShow all files: \"All Files (*.*)|*.*|\" Show DXF and DWG files: \"DWG File (*.dwg)|*.dwg|DXF File (*.dxf)|*.dxf|\"\nIf \"Open = 1\", the file browser will come up in the configuration used to select a file to be opened.\nIf \"Open = 0\", the file browser will come up in the configuration used to specify a file to be saved. If the file already exists, the user will be asked whether he wants to overwrite it.\nThe path of the file selected by the user is output via the string variable \"Path\". If there is an error, or the user presses cancel, an empty string is output. It is assumed that \"Path\" references sufficient memory to hold the output path (max = 512 bytes).\nTo initialize the file browser to both a default directory and file selection, input \"Default\" as the desired directory, followed by a comma, followed by the desired file name.\nA Path that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes.\nsee:\ncvxGetFileActiveField()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle a path that is too long in the file browser?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFileByLongPath\nOpen [in] 1 to open files, 0 to save files\nPrompt [in] null-terminated text prompt\nDefault [in] default directory (null-terminated string)\nFilter [in] file filter (null-terminated string)\nPath [out] user-selected file path\nsizePath [unknown] sizePath max size of Path user-selected file path\n\nDisplays the file browser with the specified \"Prompt\" and initialized to the \"Default\" folder. The browser will display the files specified by \"Filter\", which is a string like the following examples:\nShow all files: \"All Files (*.*)|*.*|\" Show DXF and DWG files: \"DWG File (*.dwg)|*.dwg|DXF File (*.dxf)|*.dxf|\"\nIf \"Open = 1\", the file browser will come up in the configuration used to select a file to be opened.\nIf \"Open = 0\", the file browser will come up in the configuration used to specify a file to be saved. If the file already exists, the user will be asked whether he wants to overwrite it.\nThe path of the file selected by the user is output via the string variable \"Path\". If there is an error, or the user presses cancel, an empty string is output. It is assumed that \"Path\" references sufficient memory to hold the output path (max = 512 bytes).\nTo initialize the file browser to both a default directory and file selection, input \"Default\" as the desired directory, followed by a comma, followed by the desired file name.\nA Path that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes.\nsee:\ncvxGetFileActiveField()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the file browser to a default directory and file selection?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFileByLongPath\nOpen [in] 1 to open files, 0 to save files\nPrompt [in] null-terminated text prompt\nDefault [in] default directory (null-terminated string)\nFilter [in] file filter (null-terminated string)\nPath [out] user-selected file path\nsizePath [unknown] sizePath max size of Path user-selected file path\n\nDisplays the file browser with the specified \"Prompt\" and initialized to the \"Default\" folder. The browser will display the files specified by \"Filter\", which is a string like the following examples:\nShow all files: \"All Files (*.*)|*.*|\" Show DXF and DWG files: \"DWG File (*.dwg)|*.dwg|DXF File (*.dxf)|*.dxf|\"\nIf \"Open = 1\", the file browser will come up in the configuration used to select a file to be opened.\nIf \"Open = 0\", the file browser will come up in the configuration used to specify a file to be saved. If the file already exists, the user will be asked whether he wants to overwrite it.\nThe path of the file selected by the user is output via the string variable \"Path\". If there is an error, or the user presses cancel, an empty string is output. It is assumed that \"Path\" references sufficient memory to hold the output path (max = 512 bytes).\nTo initialize the file browser to both a default directory and file selection, input \"Default\" as the desired directory, followed by a comma, followed by the desired file name.\nA Path that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes.\nsee:\ncvxGetFileActiveField()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to open or save files using a form with an active string field?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFileActiveField\nOpen [in] 1 to open files, 0 to save files\nPrompt [in] null-terminated text prompt\nDefault [in] default directory (null-terminated string)\nFilter [in] file filter (null-terminated string)\n\nSimilar to cvxGetFile(), this function is intended for use when a form \n\n is open and a string field is active. The file browser is initialized \n\n using the parent folder of the file path from the active field. If \n\n the active field is empty, the file browser is initialized using the \n\n \"Default\" folder string. The specified \"Prompt\" is shown to the user \n\n when the file browser opens, and the browser displays the files \n\n specified by \"Filter\". Refer to cvxGetFile() for more information about \n\n the syntax of the \"Filter\" string.\nWhen the user closes the file browser, the path to the file selected \n\n by the user is sent to the active field. If the user cancels the \n\n browser, or if an error occurs, the active field is not changed. \n\n\nIf \"Open = 1\", the file browser will be configured to select a file to be opened.\nIf \"Open = 0\", the file browser will be configured to select or name a \n\n file to be saved. If the file already exists, the user will be asked \n\n to confirm that the file is to be replaced.\nA default will be provided if the \"Prompt\", \"Default\" or \"Filter\" \n\n argument is NULL. When \"Open\" is 1, the default filter allows any \n\n file to be selected, but when \"Open\" is 0 the caller should always \n\n provide the filter, although this function will use a default in this \n\n case, too, if necessary guessing at the type of file to be saved.\nWhen saving (\"Open\" is 0), the file browser can be configured to show \n\n a default folder and also pre-select a specified file. Do this by \n\n assigning the path to the desired folder to \"Default\", followed by a \n\n comma, followed by the desired file name.\nUnlike the cvxGetFile() function, this function does not allow multiple \n\n selections. Only a single file selection is sent to the active field \n\n when the user closes the file browser.\nThis function is particularly helpful for implementing command \n\n functions that automatically display the file browser when the user \n\n activates a string input field. For example, a function that displays \n\n the file browser to open a text file might look like this:\nand after installing a symbol with the same name as the function, \n\n using the cvxCmdFunc() function, it can be referenced in the string \n\n field's options property by preceding the symbol name with a tilde \n\n character:\n~TextFileCb,\nsee:\ncvxGetFile()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the file browser using the parent folder of the file path from the active field?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFileActiveField\nOpen [in] 1 to open files, 0 to save files\nPrompt [in] null-terminated text prompt\nDefault [in] default directory (null-terminated string)\nFilter [in] file filter (null-terminated string)\n\nSimilar to cvxGetFile(), this function is intended for use when a form \n\n is open and a string field is active. The file browser is initialized \n\n using the parent folder of the file path from the active field. If \n\n the active field is empty, the file browser is initialized using the \n\n \"Default\" folder string. The specified \"Prompt\" is shown to the user \n\n when the file browser opens, and the browser displays the files \n\n specified by \"Filter\". Refer to cvxGetFile() for more information about \n\n the syntax of the \"Filter\" string.\nWhen the user closes the file browser, the path to the file selected \n\n by the user is sent to the active field. If the user cancels the \n\n browser, or if an error occurs, the active field is not changed. \n\n\nIf \"Open = 1\", the file browser will be configured to select a file to be opened.\nIf \"Open = 0\", the file browser will be configured to select or name a \n\n file to be saved. If the file already exists, the user will be asked \n\n to confirm that the file is to be replaced.\nA default will be provided if the \"Prompt\", \"Default\" or \"Filter\" \n\n argument is NULL. When \"Open\" is 1, the default filter allows any \n\n file to be selected, but when \"Open\" is 0 the caller should always \n\n provide the filter, although this function will use a default in this \n\n case, too, if necessary guessing at the type of file to be saved.\nWhen saving (\"Open\" is 0), the file browser can be configured to show \n\n a default folder and also pre-select a specified file. Do this by \n\n assigning the path to the desired folder to \"Default\", followed by a \n\n comma, followed by the desired file name.\nUnlike the cvxGetFile() function, this function does not allow multiple \n\n selections. Only a single file selection is sent to the active field \n\n when the user closes the file browser.\nThis function is particularly helpful for implementing command \n\n functions that automatically display the file browser when the user \n\n activates a string input field. For example, a function that displays \n\n the file browser to open a text file might look like this:\nand after installing a symbol with the same name as the function, \n\n using the cvxCmdFunc() function, it can be referenced in the string \n\n field's options property by preceding the symbol name with a tilde \n\n character:\n~TextFileCb,\nsee:\ncvxGetFile()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to configure the file browser to select a file to be opened or to select/named a file to be saved?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFileActiveField\nOpen [in] 1 to open files, 0 to save files\nPrompt [in] null-terminated text prompt\nDefault [in] default directory (null-terminated string)\nFilter [in] file filter (null-terminated string)\n\nSimilar to cvxGetFile(), this function is intended for use when a form \n\n is open and a string field is active. The file browser is initialized \n\n using the parent folder of the file path from the active field. If \n\n the active field is empty, the file browser is initialized using the \n\n \"Default\" folder string. The specified \"Prompt\" is shown to the user \n\n when the file browser opens, and the browser displays the files \n\n specified by \"Filter\". Refer to cvxGetFile() for more information about \n\n the syntax of the \"Filter\" string.\nWhen the user closes the file browser, the path to the file selected \n\n by the user is sent to the active field. If the user cancels the \n\n browser, or if an error occurs, the active field is not changed. \n\n\nIf \"Open = 1\", the file browser will be configured to select a file to be opened.\nIf \"Open = 0\", the file browser will be configured to select or name a \n\n file to be saved. If the file already exists, the user will be asked \n\n to confirm that the file is to be replaced.\nA default will be provided if the \"Prompt\", \"Default\" or \"Filter\" \n\n argument is NULL. When \"Open\" is 1, the default filter allows any \n\n file to be selected, but when \"Open\" is 0 the caller should always \n\n provide the filter, although this function will use a default in this \n\n case, too, if necessary guessing at the type of file to be saved.\nWhen saving (\"Open\" is 0), the file browser can be configured to show \n\n a default folder and also pre-select a specified file. Do this by \n\n assigning the path to the desired folder to \"Default\", followed by a \n\n comma, followed by the desired file name.\nUnlike the cvxGetFile() function, this function does not allow multiple \n\n selections. Only a single file selection is sent to the active field \n\n when the user closes the file browser.\nThis function is particularly helpful for implementing command \n\n functions that automatically display the file browser when the user \n\n activates a string input field. For example, a function that displays \n\n the file browser to open a text file might look like this:\nand after installing a symbol with the same name as the function, \n\n using the cvxCmdFunc() function, it can be referenced in the string \n\n field's options property by preceding the symbol name with a tilde \n\n character:\n~TextFileCb,\nsee:\ncvxGetFile()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to provide a default folder and pre-select a specified file when saving a file?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFileActiveField\nOpen [in] 1 to open files, 0 to save files\nPrompt [in] null-terminated text prompt\nDefault [in] default directory (null-terminated string)\nFilter [in] file filter (null-terminated string)\n\nSimilar to cvxGetFile(), this function is intended for use when a form \n\n is open and a string field is active. The file browser is initialized \n\n using the parent folder of the file path from the active field. If \n\n the active field is empty, the file browser is initialized using the \n\n \"Default\" folder string. The specified \"Prompt\" is shown to the user \n\n when the file browser opens, and the browser displays the files \n\n specified by \"Filter\". Refer to cvxGetFile() for more information about \n\n the syntax of the \"Filter\" string.\nWhen the user closes the file browser, the path to the file selected \n\n by the user is sent to the active field. If the user cancels the \n\n browser, or if an error occurs, the active field is not changed. \n\n\nIf \"Open = 1\", the file browser will be configured to select a file to be opened.\nIf \"Open = 0\", the file browser will be configured to select or name a \n\n file to be saved. If the file already exists, the user will be asked \n\n to confirm that the file is to be replaced.\nA default will be provided if the \"Prompt\", \"Default\" or \"Filter\" \n\n argument is NULL. When \"Open\" is 1, the default filter allows any \n\n file to be selected, but when \"Open\" is 0 the caller should always \n\n provide the filter, although this function will use a default in this \n\n case, too, if necessary guessing at the type of file to be saved.\nWhen saving (\"Open\" is 0), the file browser can be configured to show \n\n a default folder and also pre-select a specified file. Do this by \n\n assigning the path to the desired folder to \"Default\", followed by a \n\n comma, followed by the desired file name.\nUnlike the cvxGetFile() function, this function does not allow multiple \n\n selections. Only a single file selection is sent to the active field \n\n when the user closes the file browser.\nThis function is particularly helpful for implementing command \n\n functions that automatically display the file browser when the user \n\n activates a string input field. For example, a function that displays \n\n the file browser to open a text file might look like this:\nand after installing a symbol with the same name as the function, \n\n using the cvxCmdFunc() function, it can be referenced in the string \n\n field's options property by preceding the symbol name with a tilde \n\n character:\n~TextFileCb,\nsee:\ncvxGetFile()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can the file browser be configured to show a default folder and pre-select a specified file when saving?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFileActiveField\nOpen [in] 1 to open files, 0 to save files\nPrompt [in] null-terminated text prompt\nDefault [in] default directory (null-terminated string)\nFilter [in] file filter (null-terminated string)\n\nSimilar to cvxGetFile(), this function is intended for use when a form \n\n is open and a string field is active. The file browser is initialized \n\n using the parent folder of the file path from the active field. If \n\n the active field is empty, the file browser is initialized using the \n\n \"Default\" folder string. The specified \"Prompt\" is shown to the user \n\n when the file browser opens, and the browser displays the files \n\n specified by \"Filter\". Refer to cvxGetFile() for more information about \n\n the syntax of the \"Filter\" string.\nWhen the user closes the file browser, the path to the file selected \n\n by the user is sent to the active field. If the user cancels the \n\n browser, or if an error occurs, the active field is not changed. \n\n\nIf \"Open = 1\", the file browser will be configured to select a file to be opened.\nIf \"Open = 0\", the file browser will be configured to select or name a \n\n file to be saved. If the file already exists, the user will be asked \n\n to confirm that the file is to be replaced.\nA default will be provided if the \"Prompt\", \"Default\" or \"Filter\" \n\n argument is NULL. When \"Open\" is 1, the default filter allows any \n\n file to be selected, but when \"Open\" is 0 the caller should always \n\n provide the filter, although this function will use a default in this \n\n case, too, if necessary guessing at the type of file to be saved.\nWhen saving (\"Open\" is 0), the file browser can be configured to show \n\n a default folder and also pre-select a specified file. Do this by \n\n assigning the path to the desired folder to \"Default\", followed by a \n\n comma, followed by the desired file name.\nUnlike the cvxGetFile() function, this function does not allow multiple \n\n selections. Only a single file selection is sent to the active field \n\n when the user closes the file browser.\nThis function is particularly helpful for implementing command \n\n functions that automatically display the file browser when the user \n\n activates a string input field. For example, a function that displays \n\n the file browser to open a text file might look like this:\nand after installing a symbol with the same name as the function, \n\n using the cvxCmdFunc() function, it can be referenced in the string \n\n field's options property by preceding the symbol name with a tilde \n\n character:\n~TextFileCb,\nsee:\ncvxGetFile()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is it possible to implement a command function that automatically displays the file browser when the user activates a string input field?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFileActiveField\nOpen [in] 1 to open files, 0 to save files\nPrompt [in] null-terminated text prompt\nDefault [in] default directory (null-terminated string)\nFilter [in] file filter (null-terminated string)\n\nSimilar to cvxGetFile(), this function is intended for use when a form \n\n is open and a string field is active. The file browser is initialized \n\n using the parent folder of the file path from the active field. If \n\n the active field is empty, the file browser is initialized using the \n\n \"Default\" folder string. The specified \"Prompt\" is shown to the user \n\n when the file browser opens, and the browser displays the files \n\n specified by \"Filter\". Refer to cvxGetFile() for more information about \n\n the syntax of the \"Filter\" string.\nWhen the user closes the file browser, the path to the file selected \n\n by the user is sent to the active field. If the user cancels the \n\n browser, or if an error occurs, the active field is not changed. \n\n\nIf \"Open = 1\", the file browser will be configured to select a file to be opened.\nIf \"Open = 0\", the file browser will be configured to select or name a \n\n file to be saved. If the file already exists, the user will be asked \n\n to confirm that the file is to be replaced.\nA default will be provided if the \"Prompt\", \"Default\" or \"Filter\" \n\n argument is NULL. When \"Open\" is 1, the default filter allows any \n\n file to be selected, but when \"Open\" is 0 the caller should always \n\n provide the filter, although this function will use a default in this \n\n case, too, if necessary guessing at the type of file to be saved.\nWhen saving (\"Open\" is 0), the file browser can be configured to show \n\n a default folder and also pre-select a specified file. Do this by \n\n assigning the path to the desired folder to \"Default\", followed by a \n\n comma, followed by the desired file name.\nUnlike the cvxGetFile() function, this function does not allow multiple \n\n selections. Only a single file selection is sent to the active field \n\n when the user closes the file browser.\nThis function is particularly helpful for implementing command \n\n functions that automatically display the file browser when the user \n\n activates a string input field. For example, a function that displays \n\n the file browser to open a text file might look like this:\nand after installing a symbol with the same name as the function, \n\n using the cvxCmdFunc() function, it can be referenced in the string \n\n field's options property by preceding the symbol name with a tilde \n\n character:\n~TextFileCb,\nsee:\ncvxGetFile()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a dialogue for browsing and selecting a file folder?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFolder\nPrompt [in] prompt displayed on directory browser title bar\nDefault [in] default folder (null-terminated string)\npath [out] path of selected folder (outputs NULL pointer if \"Cancel\" is selected)\n\nDisplays a dialogue for browsing and selecting a file folder. \n\n This function grabs all events and does not return until \"OK\" or \"Cancel\" is selected.\nThe path of the folder selected by the user is output via the string \n\n variable \"Path\". If there is an error, or the user presses cancel, \n\n an empty string is output. It is assumed that \"Path\" references \n\n sufficient memory to hold the output path (max = 512 bytes).\nsee:\ncvxGetFolderActiveField()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the path of the selected folder?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFolder\nPrompt [in] prompt displayed on directory browser title bar\nDefault [in] default folder (null-terminated string)\npath [out] path of selected folder (outputs NULL pointer if \"Cancel\" is selected)\n\nDisplays a dialogue for browsing and selecting a file folder. \n\n This function grabs all events and does not return until \"OK\" or \"Cancel\" is selected.\nThe path of the folder selected by the user is output via the string \n\n variable \"Path\". If there is an error, or the user presses cancel, \n\n an empty string is output. It is assumed that \"Path\" references \n\n sufficient memory to hold the output path (max = 512 bytes).\nsee:\ncvxGetFolderActiveField()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle errors or user pressing cancel while selecting a folder?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFolder\nPrompt [in] prompt displayed on directory browser title bar\nDefault [in] default folder (null-terminated string)\npath [out] path of selected folder (outputs NULL pointer if \"Cancel\" is selected)\n\nDisplays a dialogue for browsing and selecting a file folder. \n\n This function grabs all events and does not return until \"OK\" or \"Cancel\" is selected.\nThe path of the folder selected by the user is output via the string \n\n variable \"Path\". If there is an error, or the user presses cancel, \n\n an empty string is output. It is assumed that \"Path\" references \n\n sufficient memory to hold the output path (max = 512 bytes).\nsee:\ncvxGetFolderActiveField()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a dialogue for browsing and selecting a file folder?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFolderByLongPath\nPrompt [in] prompt displayed on directory browser title bar\nDefault [in] default folder (null-terminated string)\nPath [out] path of selected folder (outputs NULL pointer if \"Cancel\" is selected)\nsizePath [in] max size of path\n\nDisplays a dialogue for browsing and selecting a file folder. This function grabs all events and does not return until \"OK\" or \"Cancel\" is selected.\nThe path of the folder selected by the user is output via the string variable \"Path\". If there is an error, or the user presses cancel, an empty string is output. It is assumed that \"Path\" references sufficient memory to hold the output path (max = 512 bytes).\nA Path that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes.\nsee:\ncvxGetFolderActiveField()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the path of the selected folder?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFolderByLongPath\nPrompt [in] prompt displayed on directory browser title bar\nDefault [in] default folder (null-terminated string)\nPath [out] path of selected folder (outputs NULL pointer if \"Cancel\" is selected)\nsizePath [in] max size of path\n\nDisplays a dialogue for browsing and selecting a file folder. This function grabs all events and does not return until \"OK\" or \"Cancel\" is selected.\nThe path of the folder selected by the user is output via the string variable \"Path\". If there is an error, or the user presses cancel, an empty string is output. It is assumed that \"Path\" references sufficient memory to hold the output path (max = 512 bytes).\nA Path that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes.\nsee:\ncvxGetFolderActiveField()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if the user presses cancel in the folder selection dialogue?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFolderByLongPath\nPrompt [in] prompt displayed on directory browser title bar\nDefault [in] default folder (null-terminated string)\nPath [out] path of selected folder (outputs NULL pointer if \"Cancel\" is selected)\nsizePath [in] max size of path\n\nDisplays a dialogue for browsing and selecting a file folder. This function grabs all events and does not return until \"OK\" or \"Cancel\" is selected.\nThe path of the folder selected by the user is output via the string variable \"Path\". If there is an error, or the user presses cancel, an empty string is output. It is assumed that \"Path\" references sufficient memory to hold the output path (max = 512 bytes).\nA Path that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes.\nsee:\ncvxGetFolderActiveField()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the folder browser using the path found in the active field?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFolderActiveField\nPrompt [in] prompt displayed on folder browser title bar\nDefault [in] default folder (null-terminated string)\n\nSimilar to cvxGetFolder(), this function is intended for use when a form \n\n is open and a string field is active. The folder browser is \n\n initialized using the path found in the active field. If the active \n\n field is empty, the folder browser is initialized using the \"Default\" \n\n folder string. The specified \"Prompt\" is shown to the user when the \n\n folder browser opens.\nWhen the user closes the folder browser, the path to the folder \n\n selected by the user is sent to the active field. If the user cancels \n\n the browser, or if an error occurs, the active field is not changed. \n\n\nIf the \"Prompt\" or \"Default\" argument is NULL, a default will be provided.\nThis function is particularly helpful for implementing command \n\n functions that automatically display the folder browser when the user \n\n activates a string input field. For example, a function that displays \n\n the browser for selecting an output folder might look like this:\nand after installing a symbol with the same name as the function, \n\n using the cvxCmdFunc() function, it can be referenced in the string \n\n field's options property by preceding the symbol name with a tilde \n\n character:\n~OutputDirCb,\nsee:\ncvxGetFolder()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if the user cancels the browser or if an error occurs?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFolderActiveField\nPrompt [in] prompt displayed on folder browser title bar\nDefault [in] default folder (null-terminated string)\n\nSimilar to cvxGetFolder(), this function is intended for use when a form \n\n is open and a string field is active. The folder browser is \n\n initialized using the path found in the active field. If the active \n\n field is empty, the folder browser is initialized using the \"Default\" \n\n folder string. The specified \"Prompt\" is shown to the user when the \n\n folder browser opens.\nWhen the user closes the folder browser, the path to the folder \n\n selected by the user is sent to the active field. If the user cancels \n\n the browser, or if an error occurs, the active field is not changed. \n\n\nIf the \"Prompt\" or \"Default\" argument is NULL, a default will be provided.\nThis function is particularly helpful for implementing command \n\n functions that automatically display the folder browser when the user \n\n activates a string input field. For example, a function that displays \n\n the browser for selecting an output folder might look like this:\nand after installing a symbol with the same name as the function, \n\n using the cvxCmdFunc() function, it can be referenced in the string \n\n field's options property by preceding the symbol name with a tilde \n\n character:\n~OutputDirCb,\nsee:\ncvxGetFolder()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a default provided if the 'Prompt' or 'Default' argument is NULL?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFolderActiveField\nPrompt [in] prompt displayed on folder browser title bar\nDefault [in] default folder (null-terminated string)\n\nSimilar to cvxGetFolder(), this function is intended for use when a form \n\n is open and a string field is active. The folder browser is \n\n initialized using the path found in the active field. If the active \n\n field is empty, the folder browser is initialized using the \"Default\" \n\n folder string. The specified \"Prompt\" is shown to the user when the \n\n folder browser opens.\nWhen the user closes the folder browser, the path to the folder \n\n selected by the user is sent to the active field. If the user cancels \n\n the browser, or if an error occurs, the active field is not changed. \n\n\nIf the \"Prompt\" or \"Default\" argument is NULL, a default will be provided.\nThis function is particularly helpful for implementing command \n\n functions that automatically display the folder browser when the user \n\n activates a string input field. For example, a function that displays \n\n the browser for selecting an output folder might look like this:\nand after installing a symbol with the same name as the function, \n\n using the cvxCmdFunc() function, it can be referenced in the string \n\n field's options property by preceding the symbol name with a tilde \n\n character:\n~OutputDirCb,\nsee:\ncvxGetFolder()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a message and wait for user response?"
            },
            {
                "role": "assistant",
                "content": "cvxGetResponse\nOption [in] see \"DESCRIPTION\"\nMessage [in] null-terminated text message\n\nDisplays the input message string in a GUI window and waits for a user \n\n response based on \"Option\". Occurrences of the \"@\" character \n\n in the message string will be replaced with a newline character. \n\n\nA numeric value indicating the user's response is returned. \n\n Valid options and corresponding return values are shown below:\nOption=1: Display \"Continue\". Return 1 when the user selects \"Continue\". \n\n Option=2: Display \"Yes\" and \"No\". Return 1 for \"Yes\", 0 for \"No\". \n\n Option=3: Display \"Yes\", \"No\" and \"Cancel\". Return 1 for \"Yes\", 0 for \"No\" and -1 for \"Cancel\". \n\n Option=4: Display \"Yes\", \"Yes All\", \"No\" and \"Cancel\". Return 1 for \"Yes\", 2 for \"Yes All\", 0 for \"No\" and -1 for \"Cancel\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the valid options and corresponding return values for user response?"
            },
            {
                "role": "assistant",
                "content": "cvxGetResponse\nOption [in] see \"DESCRIPTION\"\nMessage [in] null-terminated text message\n\nDisplays the input message string in a GUI window and waits for a user \n\n response based on \"Option\". Occurrences of the \"@\" character \n\n in the message string will be replaced with a newline character. \n\n\nA numeric value indicating the user's response is returned. \n\n Valid options and corresponding return values are shown below:\nOption=1: Display \"Continue\". Return 1 when the user selects \"Continue\". \n\n Option=2: Display \"Yes\" and \"No\". Return 1 for \"Yes\", 0 for \"No\". \n\n Option=3: Display \"Yes\", \"No\" and \"Cancel\". Return 1 for \"Yes\", 0 for \"No\" and -1 for \"Cancel\". \n\n Option=4: Display \"Yes\", \"Yes All\", \"No\" and \"Cancel\". Return 1 for \"Yes\", 2 for \"Yes All\", 0 for \"No\" and -1 for \"Cancel\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle occurrences of the '@' character in the message string?"
            },
            {
                "role": "assistant",
                "content": "cvxGetResponse\nOption [in] see \"DESCRIPTION\"\nMessage [in] null-terminated text message\n\nDisplays the input message string in a GUI window and waits for a user \n\n response based on \"Option\". Occurrences of the \"@\" character \n\n in the message string will be replaced with a newline character. \n\n\nA numeric value indicating the user's response is returned. \n\n Valid options and corresponding return values are shown below:\nOption=1: Display \"Continue\". Return 1 when the user selects \"Continue\". \n\n Option=2: Display \"Yes\" and \"No\". Return 1 for \"Yes\", 0 for \"No\". \n\n Option=3: Display \"Yes\", \"No\" and \"Cancel\". Return 1 for \"Yes\", 0 for \"No\" and -1 for \"Cancel\". \n\n Option=4: Display \"Yes\", \"Yes All\", \"No\" and \"Cancel\". Return 1 for \"Yes\", 2 for \"Yes All\", 0 for \"No\" and -1 for \"Cancel\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get string input from the user?"
            },
            {
                "role": "assistant",
                "content": "cvxGetString\nPrompt [in] null-terminated text prompt\nDefault [in] default input string (or empty string)\nNumBytes [in] no. bytes of storage referenced by \"String\"\nString [out] user input text string\n\nGets string input from the user. \n\n The string input is placed in the memory referenced by \"String\". \n\n If necessary, the input string is truncated to fit the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to prompt the user for a text input?"
            },
            {
                "role": "assistant",
                "content": "cvxGetString\nPrompt [in] null-terminated text prompt\nDefault [in] default input string (or empty string)\nNumBytes [in] no. bytes of storage referenced by \"String\"\nString [out] user input text string\n\nGets string input from the user. \n\n The string input is placed in the memory referenced by \"String\". \n\n If necessary, the input string is truncated to fit the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle user input string in memory?"
            },
            {
                "role": "assistant",
                "content": "cvxGetString\nPrompt [in] null-terminated text prompt\nDefault [in] default input string (or empty string)\nNumBytes [in] no. bytes of storage referenced by \"String\"\nString [out] user input text string\n\nGets string input from the user. \n\n The string input is placed in the memory referenced by \"String\". \n\n If necessary, the input string is truncated to fit the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get all the equations of a specified equation set?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEqnSetMembers\nidSet [in] equation set id\ncount [out] number of idList\nidList [out] list of equation id\n\nOutput all the equations of equation set. In specified equation set,if no equation, *count=0 and *idList=NULL.\nThe memory referenced by \"idList\" is allocated by this function. The calling procedure is responsible to free it (cvxMemFree((void**)idList))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the count of equations in an equation set?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEqnSetMembers\nidSet [in] equation set id\ncount [out] number of idList\nidList [out] list of equation id\n\nOutput all the equations of equation set. In specified equation set,if no equation, *count=0 and *idList=NULL.\nThe memory referenced by \"idList\" is allocated by this function. The calling procedure is responsible to free it (cvxMemFree((void**)idList))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the list of equation IDs in a specific equation set?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEqnSetMembers\nidSet [in] equation set id\ncount [out] number of idList\nidList [out] list of equation id\n\nOutput all the equations of equation set. In specified equation set,if no equation, *count=0 and *idList=NULL.\nThe memory referenced by \"idList\" is allocated by this function. The calling procedure is responsible to free it (cvxMemFree((void**)idList))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the equation set containing a specified equation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEqnAssociatedSet\nidEqn [in] equation id\nidSet [out] equation set id\n\nGet equation set containing specified equation. \n\n If cannot find, *idSet = -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the equation set id by equation id?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEqnAssociatedSet\nidEqn [in] equation id\nidSet [out] equation set id\n\nGet equation set containing specified equation. \n\n If cannot find, *idSet = -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to retrieve the equation set containing a specific equation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEqnAssociatedSet\nidEqn [in] equation id\nidSet [out] equation set id\n\nGet equation set containing specified equation. \n\n If cannot find, *idSet = -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find an equation object by its variable name?"
            },
            {
                "role": "assistant",
                "content": "cvxEqGetExpByName\nname [in] object name\nexp [inout] output of expression\nsize [in] size of expression\n\nLooking for an equation object(VEQ) whose variable name matches the input name. \n\n Output expression of the equation object with variable \"exp\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the expression of an equation object by its name?"
            },
            {
                "role": "assistant",
                "content": "cvxEqGetExpByName\nname [in] object name\nexp [inout] output of expression\nsize [in] size of expression\n\nLooking for an equation object(VEQ) whose variable name matches the input name. \n\n Output expression of the equation object with variable \"exp\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the output expression of an equation object using its variable name?"
            },
            {
                "role": "assistant",
                "content": "cvxEqGetExpByName\nname [in] object name\nexp [inout] output of expression\nsize [in] size of expression\n\nLooking for an equation object(VEQ) whose variable name matches the input name. \n\n Output expression of the equation object with variable \"exp\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find an equation object by its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxEqGetDescById\nidEqn [in] object id\ndesc [inout] output of description\nsize [in] size of description\n\nLooking for an equation object(VEQ) whose variable id matches the input id. \n\n Output description of the equation object with variable \"desc\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the description of an equation object by its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxEqGetDescById\nidEqn [in] object id\ndesc [inout] output of description\nsize [in] size of description\n\nLooking for an equation object(VEQ) whose variable id matches the input id. \n\n Output description of the equation object with variable \"desc\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the description of an equation object using its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxEqGetDescById\nidEqn [in] object id\ndesc [inout] output of description\nsize [in] size of description\n\nLooking for an equation object(VEQ) whose variable id matches the input id. \n\n Output description of the equation object with variable \"desc\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the description of a specified equation by its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxEqSetDescById\nidEqn [in] equation id\ndesc [in] description that defines the equation\n\nUpdate the specified equation's description without regard for how \n\n the equation was generated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to change the description of an equation without considering its generation method?"
            },
            {
                "role": "assistant",
                "content": "cvxEqSetDescById\nidEqn [in] equation id\ndesc [in] description that defines the equation\n\nUpdate the specified equation's description without regard for how \n\n the equation was generated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I modify the description of an equation using its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxEqSetDescById\nidEqn [in] equation id\ndesc [in] description that defines the equation\n\nUpdate the specified equation's description without regard for how \n\n the equation was generated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to substitute variable values into a string for all occurrences of variable references?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarSubstitute\nStr [inout] null-terminated string, may be NULL\nnBytes [in] maximum size of Str array in bytes\nTruncated [out] 1 if string was truncated, 0 if not; may be NULL\n\nSubstitute variable values into a string for all occurrences of \n\n variable references. The syntax for each variable reference is [$VAR] \n\n where VAR is the name of a variable in the active target. References \n\n for which the variable cannot be found are left in the string.\nThis function is not limited to parts, but can be used when the active \n\n target is any type of root object in which variables may exist.\nThe maximum number of bytes allowed in the \"Str\" character array is \n\n \"nBytes\" including a terminating '\\0' byte. When this function \n\n returns, \"Truncated\" is set to 0 if the string with variable \n\n substitutions fits within this maximum size. If a variable \n\n substitution would cause the string to exceed this size, the string is \n\n truncated and \"Truncated\" is set to 1. The caller may pass NULL in \n\n place of the \"Truncated\" argument if this result is not of interest.\nIt is not an error if \"Str\" is NULL or empty, nor is it an error if the \n\n string has no [$VAR] references, but it is an error if a variable \n\n specified in such a reference cannot be found in the active target.\nsee:\ncvxPartVarSubstituteResize() for a similar function that never \n\n truncates, but instead resizes a string."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the syntax for each variable reference in the active target?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarSubstitute\nStr [inout] null-terminated string, may be NULL\nnBytes [in] maximum size of Str array in bytes\nTruncated [out] 1 if string was truncated, 0 if not; may be NULL\n\nSubstitute variable values into a string for all occurrences of \n\n variable references. The syntax for each variable reference is [$VAR] \n\n where VAR is the name of a variable in the active target. References \n\n for which the variable cannot be found are left in the string.\nThis function is not limited to parts, but can be used when the active \n\n target is any type of root object in which variables may exist.\nThe maximum number of bytes allowed in the \"Str\" character array is \n\n \"nBytes\" including a terminating '\\0' byte. When this function \n\n returns, \"Truncated\" is set to 0 if the string with variable \n\n substitutions fits within this maximum size. If a variable \n\n substitution would cause the string to exceed this size, the string is \n\n truncated and \"Truncated\" is set to 1. The caller may pass NULL in \n\n place of the \"Truncated\" argument if this result is not of interest.\nIt is not an error if \"Str\" is NULL or empty, nor is it an error if the \n\n string has no [$VAR] references, but it is an error if a variable \n\n specified in such a reference cannot be found in the active target.\nsee:\ncvxPartVarSubstituteResize() for a similar function that never \n\n truncates, but instead resizes a string."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check if the string with variable substitutions fits within the maximum size?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarSubstitute\nStr [inout] null-terminated string, may be NULL\nnBytes [in] maximum size of Str array in bytes\nTruncated [out] 1 if string was truncated, 0 if not; may be NULL\n\nSubstitute variable values into a string for all occurrences of \n\n variable references. The syntax for each variable reference is [$VAR] \n\n where VAR is the name of a variable in the active target. References \n\n for which the variable cannot be found are left in the string.\nThis function is not limited to parts, but can be used when the active \n\n target is any type of root object in which variables may exist.\nThe maximum number of bytes allowed in the \"Str\" character array is \n\n \"nBytes\" including a terminating '\\0' byte. When this function \n\n returns, \"Truncated\" is set to 0 if the string with variable \n\n substitutions fits within this maximum size. If a variable \n\n substitution would cause the string to exceed this size, the string is \n\n truncated and \"Truncated\" is set to 1. The caller may pass NULL in \n\n place of the \"Truncated\" argument if this result is not of interest.\nIt is not an error if \"Str\" is NULL or empty, nor is it an error if the \n\n string has no [$VAR] references, but it is an error if a variable \n\n specified in such a reference cannot be found in the active target.\nsee:\ncvxPartVarSubstituteResize() for a similar function that never \n\n truncates, but instead resizes a string."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to substitute variable values into a string for all occurrences of variable references?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarSubstituteResize\nStr [inout] null-terminated string, may be NULL\n\nSubstitute variable values into a string for all occurrences of \n\n variable references. The syntax for each variable reference is [$VAR] \n\n where VAR is the name of a variable in the active target. References \n\n for which the variable cannot be found are left in the string. \n\n\nThis function is not limited to parts, but can be used when the active \n\n target is any type of root object in which variables may exist.\nThe string will be reallocated (if necessary) to insert the variable values.\nIt is not an error if \"Str\" is NULL or empty, nor is it an error if the \n\n string has no [$VAR] references, but it is an error if a variable \n\n specified in such a reference cannot be found in the active target.\nThe string is reallocated if substituting the variable values produces \n\n a longer string. The string is not reallocated if it becomes shorter \n\n or stays the same length.\nIf the block of memory used for the string is larger than needed for \n\n the string (i.e. larger than the number of bytes in the string plus \n\n 1), this function might make the block smaller. That is because \n\n reallocation requests only the amount of memory needed for the string, \n\n and might not consider unused space in the block. There is no need to \n\n allocate more memory than the string needs before calling this function.\nsee:\ncvxPartVarSubstitute() for a similar function that truncates a string instead of resizing it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to resize a string after substituting variable values?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarSubstituteResize\nStr [inout] null-terminated string, may be NULL\n\nSubstitute variable values into a string for all occurrences of \n\n variable references. The syntax for each variable reference is [$VAR] \n\n where VAR is the name of a variable in the active target. References \n\n for which the variable cannot be found are left in the string. \n\n\nThis function is not limited to parts, but can be used when the active \n\n target is any type of root object in which variables may exist.\nThe string will be reallocated (if necessary) to insert the variable values.\nIt is not an error if \"Str\" is NULL or empty, nor is it an error if the \n\n string has no [$VAR] references, but it is an error if a variable \n\n specified in such a reference cannot be found in the active target.\nThe string is reallocated if substituting the variable values produces \n\n a longer string. The string is not reallocated if it becomes shorter \n\n or stays the same length.\nIf the block of memory used for the string is larger than needed for \n\n the string (i.e. larger than the number of bytes in the string plus \n\n 1), this function might make the block smaller. That is because \n\n reallocation requests only the amount of memory needed for the string, \n\n and might not consider unused space in the block. There is no need to \n\n allocate more memory than the string needs before calling this function.\nsee:\ncvxPartVarSubstitute() for a similar function that truncates a string instead of resizing it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the syntax for variable references in the string?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarSubstituteResize\nStr [inout] null-terminated string, may be NULL\n\nSubstitute variable values into a string for all occurrences of \n\n variable references. The syntax for each variable reference is [$VAR] \n\n where VAR is the name of a variable in the active target. References \n\n for which the variable cannot be found are left in the string. \n\n\nThis function is not limited to parts, but can be used when the active \n\n target is any type of root object in which variables may exist.\nThe string will be reallocated (if necessary) to insert the variable values.\nIt is not an error if \"Str\" is NULL or empty, nor is it an error if the \n\n string has no [$VAR] references, but it is an error if a variable \n\n specified in such a reference cannot be found in the active target.\nThe string is reallocated if substituting the variable values produces \n\n a longer string. The string is not reallocated if it becomes shorter \n\n or stays the same length.\nIf the block of memory used for the string is larger than needed for \n\n the string (i.e. larger than the number of bytes in the string plus \n\n 1), this function might make the block smaller. That is because \n\n reallocation requests only the amount of memory needed for the string, \n\n and might not consider unused space in the block. There is no need to \n\n allocate more memory than the string needs before calling this function.\nsee:\ncvxPartVarSubstitute() for a similar function that truncates a string instead of resizing it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can this function be used for any type of root object in which variables may exist?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarSubstituteResize\nStr [inout] null-terminated string, may be NULL\n\nSubstitute variable values into a string for all occurrences of \n\n variable references. The syntax for each variable reference is [$VAR] \n\n where VAR is the name of a variable in the active target. References \n\n for which the variable cannot be found are left in the string. \n\n\nThis function is not limited to parts, but can be used when the active \n\n target is any type of root object in which variables may exist.\nThe string will be reallocated (if necessary) to insert the variable values.\nIt is not an error if \"Str\" is NULL or empty, nor is it an error if the \n\n string has no [$VAR] references, but it is an error if a variable \n\n specified in such a reference cannot be found in the active target.\nThe string is reallocated if substituting the variable values produces \n\n a longer string. The string is not reallocated if it becomes shorter \n\n or stays the same length.\nIf the block of memory used for the string is larger than needed for \n\n the string (i.e. larger than the number of bytes in the string plus \n\n 1), this function might make the block smaller. That is because \n\n reallocation requests only the amount of memory needed for the string, \n\n and might not consider unused space in the block. There is no need to \n\n allocate more memory than the string needs before calling this function.\nsee:\ncvxPartVarSubstitute() for a similar function that truncates a string instead of resizing it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to import equations from an excel file?"
            },
            {
                "role": "assistant",
                "content": "cvxEqLoadFile\nfullpath [in] fullpath of excel to import\noption [in] option of equation\n\nUse this function to add equations by importing excel."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the options available for importing equations from an excel file?"
            },
            {
                "role": "assistant",
                "content": "cvxEqLoadFile\nfullpath [in] fullpath of excel to import\noption [in] option of equation\n\nUse this function to add equations by importing excel."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add equations by importing an excel file?"
            },
            {
                "role": "assistant",
                "content": "cvxEqLoadFile\nfullpath [in] fullpath of excel to import\noption [in] option of equation\n\nUse this function to add equations by importing excel."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxEqRegen\nidEqn [in] -1 to regen all equation; equation id to regen specified equation\n\nRegenerate all/specified equations."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxEqRegen\nidEqn [in] -1 to regen all equation; equation id to regen specified equation\n\nRegenerate all/specified equations."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxEqRegen\nidEqn [in] -1 to regen all equation; equation id to regen specified equation\n\nRegenerate all/specified equations."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete all equations?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEqnDelete\nidEqn [in] equation id or equation set id\n\nDelete all equation if idEqn = -1. Delete equation set or equation by specified idEqn."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a specific equation by its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEqnDelete\nidEqn [in] equation id or equation set id\n\nDelete all equation if idEqn = -1. Delete equation set or equation by specified idEqn."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to delete an equation set by its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEqnDelete\nidEqn [in] equation id or equation set id\n\nDelete all equation if idEqn = -1. Delete equation set or equation by specified idEqn."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if a view is a section view?"
            },
            {
                "role": "assistant",
                "content": "cvxViewIsSection\nidView [in] id view\n\nDetermine whether the view is a section view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if a view is a section view?"
            },
            {
                "role": "assistant",
                "content": "cvxViewIsSection\nidView [in] id view\n\nDetermine whether the view is a section view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to identify if a view is a section view?"
            },
            {
                "role": "assistant",
                "content": "cvxViewIsSection\nidView [in] id view\n\nDetermine whether the view is a section view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a view is a standard view?"
            },
            {
                "role": "assistant",
                "content": "cvxViewIsStandard\nidView [in] id view\n\nDetermine whether the view is a standard view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a view is a standard view?"
            },
            {
                "role": "assistant",
                "content": "cvxViewIsStandard\nidView [in] id view\n\nDetermine whether the view is a standard view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function can be used to identify if a view is a standard view?"
            },
            {
                "role": "assistant",
                "content": "cvxViewIsStandard\nidView [in] id view\n\nDetermine whether the view is a standard view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the type of a standard view?"
            },
            {
                "role": "assistant",
                "content": "cvxViewInqStandardType\nidView [in] id view\ntype [out] view type\n\nGets the specified type of the standard view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to inquire the type of a specific view?"
            },
            {
                "role": "assistant",
                "content": "cvxViewInqStandardType\nidView [in] id view\ntype [out] view type\n\nGets the specified type of the standard view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the type of a standard view?"
            },
            {
                "role": "assistant",
                "content": "cvxViewInqStandardType\nidView [in] id view\ntype [out] view type\n\nGets the specified type of the standard view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to activate a specific view?"
            },
            {
                "role": "assistant",
                "content": "cvxViewActivate\nidView [in] id view\n\nActivate the specified view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to activate a view by its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxViewActivate\nidView [in] id view\n\nActivate the specified view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I switch to a particular view?"
            },
            {
                "role": "assistant",
                "content": "cvxViewActivate\nidView [in] id view\n\nActivate the specified view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the view extent in CAD software?"
            },
            {
                "role": "assistant",
                "content": "cvxViewExtent\nExtent [in] view extent (mm)\n\nSets the active view extent."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the active view extent?"
            },
            {
                "role": "assistant",
                "content": "cvxViewExtent\nExtent [in] view extent (mm)\n\nSets the active view extent."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the view extent using the API function?"
            },
            {
                "role": "assistant",
                "content": "cvxViewExtent\nExtent [in] view extent (mm)\n\nSets the active view extent."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to align the active view with a specified coordinate frame?"
            },
            {
                "role": "assistant",
                "content": "cvxViewGet\nFrame [out] align active view with specified coordinate frame\nExtent [out] view extent\n\nRetrieves the position, orientation and extent of the active view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the position and orientation of the active view?"
            },
            {
                "role": "assistant",
                "content": "cvxViewGet\nFrame [out] align active view with specified coordinate frame\nExtent [out] view extent\n\nRetrieves the position, orientation and extent of the active view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the view extent of the active view?"
            },
            {
                "role": "assistant",
                "content": "cvxViewGet\nFrame [out] align active view with specified coordinate frame\nExtent [out] view extent\n\nRetrieves the position, orientation and extent of the active view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to align the active view with a specified coordinate frame?"
            },
            {
                "role": "assistant",
                "content": "cvxViewSet\nFrame [in] align active view with specified coordinate frame\nExtent [in] view extent\n\nAligns the active view with the specified frame and sets the specified view extent."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set the view extent in the active view?"
            },
            {
                "role": "assistant",
                "content": "cvxViewSet\nFrame [in] align active view with specified coordinate frame\nExtent [in] view extent\n\nAligns the active view with the specified frame and sets the specified view extent."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I align the active view with a specific frame and set the view extent?"
            },
            {
                "role": "assistant",
                "content": "cvxViewSet\nFrame [in] align active view with specified coordinate frame\nExtent [in] view extent\n\nAligns the active view with the specified frame and sets the specified view extent."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to move the origin of the active view to a specified point?"
            },
            {
                "role": "assistant",
                "content": "cvxViewOrigin\nOrigin [in] new view origin\n\nMoves the origin of the active view to the specified point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the view origin to a specific point?"
            },
            {
                "role": "assistant",
                "content": "cvxViewOrigin\nOrigin [in] new view origin\n\nMoves the origin of the active view to the specified point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I set the origin of the active view to a new point?"
            },
            {
                "role": "assistant",
                "content": "cvxViewOrigin\nOrigin [in] new view origin\n\nMoves the origin of the active view to the specified point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the orientation of the active view to a specified standard view type?"
            },
            {
                "role": "assistant",
                "content": "cvxViewStd\nType [in] standard view type\nNullExtent [in] view extent used if no geometry\n\nChanges the orientation of the active view (part, sketch, cam plan) \n\n to the specified standard view type and then does a \"zoom all\".\nnote:\nthe input view extent is only used if the \"zoom all\" doesn't find any geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to perform a 'zoom all' after changing the view orientation?"
            },
            {
                "role": "assistant",
                "content": "cvxViewStd\nType [in] standard view type\nNullExtent [in] view extent used if no geometry\n\nChanges the orientation of the active view (part, sketch, cam plan) \n\n to the specified standard view type and then does a \"zoom all\".\nnote:\nthe input view extent is only used if the \"zoom all\" doesn't find any geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When is the input view extent used in the 'cvxViewStd' function?"
            },
            {
                "role": "assistant",
                "content": "cvxViewStd\nType [in] standard view type\nNullExtent [in] view extent used if no geometry\n\nChanges the orientation of the active view (part, sketch, cam plan) \n\n to the specified standard view type and then does a \"zoom all\".\nnote:\nthe input view extent is only used if the \"zoom all\" doesn't find any geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to make a specified bounding box visible in world coordinates?"
            },
            {
                "role": "assistant",
                "content": "cvxViewSetBndBox\nScale [in] scale factor\nBndBox [in] the 3D bounding box\n\nMake specified bounding box visible in world coordinates."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set the scale factor for a bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxViewSetBndBox\nScale [in] scale factor\nBndBox [in] the 3D bounding box\n\nMake specified bounding box visible in world coordinates."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to visualize a 3D bounding box in world coordinates?"
            },
            {
                "role": "assistant",
                "content": "cvxViewSetBndBox\nScale [in] scale factor\nBndBox [in] the 3D bounding box\n\nMake specified bounding box visible in world coordinates."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the top left and bottom right coordinates of the active view?"
            },
            {
                "role": "assistant",
                "content": "cvxGetViewRect\nincludeFrame [in] 1=include window frame; 0=exclude window frame;\nisGlobal [in] 1=get global coordinates; 0=get client coordinates;\ntlX [out] top left X\ntlY [out] top left Y\nbrX [out] bottom right X\nbrY [out] bottom right Y\n\nGet the global or client coordinates of active View."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to include the window frame in the view coordinates?"
            },
            {
                "role": "assistant",
                "content": "cvxGetViewRect\nincludeFrame [in] 1=include window frame; 0=exclude window frame;\nisGlobal [in] 1=get global coordinates; 0=get client coordinates;\ntlX [out] top left X\ntlY [out] top left Y\nbrX [out] bottom right X\nbrY [out] bottom right Y\n\nGet the global or client coordinates of active View."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to differentiate between global and client coordinates of the active view?"
            },
            {
                "role": "assistant",
                "content": "cvxGetViewRect\nincludeFrame [in] 1=include window frame; 0=exclude window frame;\nisGlobal [in] 1=get global coordinates; 0=get client coordinates;\ntlX [out] top left X\ntlY [out] top left Y\nbrX [out] bottom right X\nbrY [out] bottom right Y\n\nGet the global or client coordinates of active View."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a custom view?"
            },
            {
                "role": "assistant",
                "content": "cvxCustomViewAdd\nName [in] custom view name\nLyrVis [in] store current layer visibility(1 to store, 0 not to store)\nObjVis [in] store current object visibility(1 to store, 0 not to store)\nidView [out] index of view (NULL to ignore)\n\nAdd a custom view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to store current layer visibility while adding a custom view?"
            },
            {
                "role": "assistant",
                "content": "cvxCustomViewAdd\nName [in] custom view name\nLyrVis [in] store current layer visibility(1 to store, 0 not to store)\nObjVis [in] store current object visibility(1 to store, 0 not to store)\nidView [out] index of view (NULL to ignore)\n\nAdd a custom view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to store current object visibility while adding a custom view?"
            },
            {
                "role": "assistant",
                "content": "cvxCustomViewAdd\nName [in] custom view name\nLyrVis [in] store current layer visibility(1 to store, 0 not to store)\nObjVis [in] store current object visibility(1 to store, 0 not to store)\nidView [out] index of view (NULL to ignore)\n\nAdd a custom view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get the index of the custom view after adding it?"
            },
            {
                "role": "assistant",
                "content": "cvxCustomViewAdd\nName [in] custom view name\nLyrVis [in] store current layer visibility(1 to store, 0 not to store)\nObjVis [in] store current object visibility(1 to store, 0 not to store)\nidView [out] index of view (NULL to ignore)\n\nAdd a custom view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the orientation of the active view to a custom view?"
            },
            {
                "role": "assistant",
                "content": "cvxCustomViewActivate\nidView [in] index of custom view\n\nChanges the orientation of the active view (part, sketch, cam plan) \n\n to the specified custom view type and then does a \"zoom all\".\nnote:\nthe input view extent is only used if the \"zoom all\" doesn't find any geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to activate a custom view by index?"
            },
            {
                "role": "assistant",
                "content": "cvxCustomViewActivate\nidView [in] index of custom view\n\nChanges the orientation of the active view (part, sketch, cam plan) \n\n to the specified custom view type and then does a \"zoom all\".\nnote:\nthe input view extent is only used if the \"zoom all\" doesn't find any geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to perform a 'zoom all' after changing to a custom view?"
            },
            {
                "role": "assistant",
                "content": "cvxCustomViewActivate\nidView [in] index of custom view\n\nChanges the orientation of the active view (part, sketch, cam plan) \n\n to the specified custom view type and then does a \"zoom all\".\nnote:\nthe input view extent is only used if the \"zoom all\" doesn't find any geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a specified custom view?"
            },
            {
                "role": "assistant",
                "content": "cvxCustomViewDel\nidView [in] index of custom view\n\nDelete specified custom view.\nnote:\nthe view can not be the current active view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove a custom view?"
            },
            {
                "role": "assistant",
                "content": "cvxCustomViewDel\nidView [in] index of custom view\n\nDelete specified custom view.\nnote:\nthe view can not be the current active view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to delete a custom view by index?"
            },
            {
                "role": "assistant",
                "content": "cvxCustomViewDel\nidView [in] index of custom view\n\nDelete specified custom view.\nnote:\nthe view can not be the current active view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of a custom view by name?"
            },
            {
                "role": "assistant",
                "content": "cvxCustomViewId\nName [in] custom view name\nidView [out] index of custom view\n\nGet index of custom view of specified name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the index of a custom view using its name?"
            },
            {
                "role": "assistant",
                "content": "cvxCustomViewId\nName [in] custom view name\nidView [out] index of custom view\n\nGet index of custom view of specified name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the index of a custom view based on its name?"
            },
            {
                "role": "assistant",
                "content": "cvxCustomViewId\nName [in] custom view name\nidView [out] index of custom view\n\nGet index of custom view of specified name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of operations in the current transaction?"
            },
            {
                "role": "assistant",
                "content": "cvxOpCount\n\nReturns the current number of operations in the current transaction. \n\n This number is passed to cvxEntNew() or cvxEntNewList() as a \n\n reference point for finding entities created after completion of a \n\n particular operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to find entities created after a particular operation?"
            },
            {
                "role": "assistant",
                "content": "cvxOpCount\n\nReturns the current number of operations in the current transaction. \n\n This number is passed to cvxEntNew() or cvxEntNewList() as a \n\n reference point for finding entities created after completion of a \n\n particular operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the operation count as a reference point for finding entities?"
            },
            {
                "role": "assistant",
                "content": "cvxOpCount\n\nReturns the current number of operations in the current transaction. \n\n This number is passed to cvxEntNew() or cvxEntNewList() as a \n\n reference point for finding entities created after completion of a \n\n particular operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the present undo step count?"
            },
            {
                "role": "assistant",
                "content": "cvxXnUndoCount\n\nGet the present undo step count."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the present undo step count?"
            },
            {
                "role": "assistant",
                "content": "cvxXnUndoCount\n\nGet the present undo step count."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the current undo step count?"
            },
            {
                "role": "assistant",
                "content": "cvxXnUndoCount\n\nGet the present undo step count."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create and log an undo-redo transaction marker?"
            },
            {
                "role": "assistant",
                "content": "cvxUndoRedoMarker\nName [out] name of undo-redo transaction marker\n\nCreates and logs an undo-redo transaction with a unique name, \n\n which is output via \"Name\". The transaction is essentially \n\n empty, but serves as a marker in the undo-redo transaction \n\n list. The marker can be passed to cvxUndoRedoTo() to undo or redo \n\n all transactions up to, and including, the marker.\nThis function will cause any recently-logged database operations \n\n to be flushed to an undo-redo transaction linked to the last-logged \n\n transaction.\nThis function assumes \"Name\" is a character pointer to at least \n\n sizeof(vxName) bytes of memory allocated by the calling procedure.\nsee:\ncvxCmdMarker()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name of the undo-redo transaction marker?"
            },
            {
                "role": "assistant",
                "content": "cvxUndoRedoMarker\nName [out] name of undo-redo transaction marker\n\nCreates and logs an undo-redo transaction with a unique name, \n\n which is output via \"Name\". The transaction is essentially \n\n empty, but serves as a marker in the undo-redo transaction \n\n list. The marker can be passed to cvxUndoRedoTo() to undo or redo \n\n all transactions up to, and including, the marker.\nThis function will cause any recently-logged database operations \n\n to be flushed to an undo-redo transaction linked to the last-logged \n\n transaction.\nThis function assumes \"Name\" is a character pointer to at least \n\n sizeof(vxName) bytes of memory allocated by the calling procedure.\nsee:\ncvxCmdMarker()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to undo or redo all transactions up to a specific marker?"
            },
            {
                "role": "assistant",
                "content": "cvxUndoRedoMarker\nName [out] name of undo-redo transaction marker\n\nCreates and logs an undo-redo transaction with a unique name, \n\n which is output via \"Name\". The transaction is essentially \n\n empty, but serves as a marker in the undo-redo transaction \n\n list. The marker can be passed to cvxUndoRedoTo() to undo or redo \n\n all transactions up to, and including, the marker.\nThis function will cause any recently-logged database operations \n\n to be flushed to an undo-redo transaction linked to the last-logged \n\n transaction.\nThis function assumes \"Name\" is a character pointer to at least \n\n sizeof(vxName) bytes of memory allocated by the calling procedure.\nsee:\ncvxCmdMarker()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to undo the last operation?"
            },
            {
                "role": "assistant",
                "content": "cvxUndoRedo\nUndo [in] 1-undo, 0-redo\n\nIf \"Undo\" is non-zero, undo the last operation. \n\n If \"Undo\" is zero, redo the last undone operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to redo the last undone operation?"
            },
            {
                "role": "assistant",
                "content": "cvxUndoRedo\nUndo [in] 1-undo, 0-redo\n\nIf \"Undo\" is non-zero, undo the last operation. \n\n If \"Undo\" is zero, redo the last undone operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to perform undo/redo up to a specific transaction?"
            },
            {
                "role": "assistant",
                "content": "cvxUndoRedoTo\nUndo [in] 1-undo, 0-redo\nName [in] undo-redo transaction name\n\nUndo/redo up to, and including, the specified transaction \n\n or to the start/end of the undo-redo transaction list \n\n whichever is encountered first.\nsee:\ncvxCmdMarker()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to undo/redo to a specific transaction by name?"
            },
            {
                "role": "assistant",
                "content": "cvxUndoRedoTo\nUndo [in] 1-undo, 0-redo\nName [in] undo-redo transaction name\n\nUndo/redo up to, and including, the specified transaction \n\n or to the start/end of the undo-redo transaction list \n\n whichever is encountered first.\nsee:\ncvxCmdMarker()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to navigate to the start or end of the undo-redo transaction list?"
            },
            {
                "role": "assistant",
                "content": "cvxUndoRedoTo\nUndo [in] 1-undo, 0-redo\nName [in] undo-redo transaction name\n\nUndo/redo up to, and including, the specified transaction \n\n or to the start/end of the undo-redo transaction list \n\n whichever is encountered first.\nsee:\ncvxCmdMarker()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign a new name to the last history operation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartNameLastOp\nNewName [in] new name for last history operation\n\nIf history regen is not active, the input name is assigned to \n\n the last operation in the active part's history. The name is \n\n forced to be unique within the active history by appending an \n\n id to it if necessary. The seed name should be short enough \n\n that a 4 character id can be appended to it without making the \n\n name longer than 31 single-byte characters."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the maximum length for the new name of the last history operation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartNameLastOp\nNewName [in] new name for last history operation\n\nIf history regen is not active, the input name is assigned to \n\n the last operation in the active part's history. The name is \n\n forced to be unique within the active history by appending an \n\n id to it if necessary. The seed name should be short enough \n\n that a 4 character id can be appended to it without making the \n\n name longer than 31 single-byte characters."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to force the new name to be unique within the active history?"
            },
            {
                "role": "assistant",
                "content": "cvxPartNameLastOp\nNewName [in] new name for last history operation\n\nIf history regen is not active, the input name is assigned to \n\n the last operation in the active part's history. The name is \n\n forced to be unique within the active history by appending an \n\n id to it if necessary. The seed name should be short enough \n\n that a 4 character id can be appended to it without making the \n\n name longer than 31 single-byte characters."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to bundle steps into a new transaction?"
            },
            {
                "role": "assistant",
                "content": "cvxXnBundle\niCount [in] special step count\nxn_name [in] transaction name\n\nBundle the steps from the iCount+1 to the present into a new step(transaction).\nMake sure the present steps is greater than iCount, use cvxXnUndoCount() to get it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a new step with a specific transaction name?"
            },
            {
                "role": "assistant",
                "content": "cvxXnBundle\niCount [in] special step count\nxn_name [in] transaction name\n\nBundle the steps from the iCount+1 to the present into a new step(transaction).\nMake sure the present steps is greater than iCount, use cvxXnUndoCount() to get it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxXnUndoCount() to ensure present steps is greater than iCount?"
            },
            {
                "role": "assistant",
                "content": "cvxXnBundle\niCount [in] special step count\nxn_name [in] transaction name\n\nBundle the steps from the iCount+1 to the present into a new step(transaction).\nMake sure the present steps is greater than iCount, use cvxXnUndoCount() to get it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to start a bundled undo-redo transaction with display update disabled?"
            },
            {
                "role": "assistant",
                "content": "cvxUndoBundleStart\nDisableManager [in] 1 to disable update of the Manager form, else 0\nSettings [inout] pointer to an empty array of 8 integers\n\nThis function causes subsequent undo-redo transactions to be \n\n bundled into one transaction with display update disabled. \n\n The input array \"Settings\" is used to back up settings modified \n\n by this function. This function MUST ALWAYS be paired with a \n\n subsequent call to cvxUndoBundleEnd() which requires \"Settings\" \n\n as input.\nIf a custom operation is not active at the time this function is \n\n called, a new undo-redo transaction will automatically be initiated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to back up settings modified by the undo-redo transaction?"
            },
            {
                "role": "assistant",
                "content": "cvxUndoBundleStart\nDisableManager [in] 1 to disable update of the Manager form, else 0\nSettings [inout] pointer to an empty array of 8 integers\n\nThis function causes subsequent undo-redo transactions to be \n\n bundled into one transaction with display update disabled. \n\n The input array \"Settings\" is used to back up settings modified \n\n by this function. This function MUST ALWAYS be paired with a \n\n subsequent call to cvxUndoBundleEnd() which requires \"Settings\" \n\n as input.\nIf a custom operation is not active at the time this function is \n\n called, a new undo-redo transaction will automatically be initiated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initiate a new undo-redo transaction if a custom operation is not active?"
            },
            {
                "role": "assistant",
                "content": "cvxUndoBundleStart\nDisableManager [in] 1 to disable update of the Manager form, else 0\nSettings [inout] pointer to an empty array of 8 integers\n\nThis function causes subsequent undo-redo transactions to be \n\n bundled into one transaction with display update disabled. \n\n The input array \"Settings\" is used to back up settings modified \n\n by this function. This function MUST ALWAYS be paired with a \n\n subsequent call to cvxUndoBundleEnd() which requires \"Settings\" \n\n as input.\nIf a custom operation is not active at the time this function is \n\n called, a new undo-redo transaction will automatically be initiated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to terminate undo-redo transaction bundling?"
            },
            {
                "role": "assistant",
                "content": "cvxUndoBundleEnd\nRefreshDisplay [in] 1 to refresh the display, else 0\nSettings [in] array of 8 integer settings output by cvxUndoBundleStart()\nisError [in] 1 if there was an error during the transaction, else 0\n\nTerminates undo-redo transaction bundling initiated by a previous call to \n\n cvxUndoBundleStart(). Refreshes the display if \"Redraw\" is non-zero. \n\n This function MUST ALWAYS be paired with a call to cvxUndoBundleStart() \n\n and absolutely requires the \"Settings\" output by cvxUndoBundleStart() \n\n as input in order to properly restore the original settings.\nIf a custom operation is not active at the time this function is \n\n called, the current undo-redo transaction will be closed."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of cvxUndoBundleEnd function?"
            },
            {
                "role": "assistant",
                "content": "cvxUndoBundleEnd\nRefreshDisplay [in] 1 to refresh the display, else 0\nSettings [in] array of 8 integer settings output by cvxUndoBundleStart()\nisError [in] 1 if there was an error during the transaction, else 0\n\nTerminates undo-redo transaction bundling initiated by a previous call to \n\n cvxUndoBundleStart(). Refreshes the display if \"Redraw\" is non-zero. \n\n This function MUST ALWAYS be paired with a call to cvxUndoBundleStart() \n\n and absolutely requires the \"Settings\" output by cvxUndoBundleStart() \n\n as input in order to properly restore the original settings.\nIf a custom operation is not active at the time this function is \n\n called, the current undo-redo transaction will be closed."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to refresh the display after terminating undo-redo transaction bundling?"
            },
            {
                "role": "assistant",
                "content": "cvxUndoBundleEnd\nRefreshDisplay [in] 1 to refresh the display, else 0\nSettings [in] array of 8 integer settings output by cvxUndoBundleStart()\nisError [in] 1 if there was an error during the transaction, else 0\n\nTerminates undo-redo transaction bundling initiated by a previous call to \n\n cvxUndoBundleStart(). Refreshes the display if \"Redraw\" is non-zero. \n\n This function MUST ALWAYS be paired with a call to cvxUndoBundleStart() \n\n and absolutely requires the \"Settings\" output by cvxUndoBundleStart() \n\n as input in order to properly restore the original settings.\nIf a custom operation is not active at the time this function is \n\n called, the current undo-redo transaction will be closed."
            }
        ]
    }
]