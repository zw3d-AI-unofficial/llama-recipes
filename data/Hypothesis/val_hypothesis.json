[
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of assembly features in a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAsmFtrList\nFile [in] object file name (File[0]=0 or NULL for active file)\nPart [in] part/root object name (Part[0]=0 or NULL for active target object)\nCount [out] number of assembly features in the specified part\nFeatures [out] list of id's of assembly features in the specified part\n\nOutputs a list of database id's of assembly features in the specified part. If there are no features, \"*Count\" is output as zero and \"*Features\" as NULL.\nThis function allocates memory for the array output via \"Features\". The calling procedure is responsible for deallocating the memory with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to filter suppressed components in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqComps2\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nOption [in] 1 for filter suppressed components, otherwise for 0\nCount [out] number of components\nComps [out] list of component id's\n\nAccording to the Option to output a list of indices of the components that belong to the specified part.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the count of components for a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCompsInfoByLongPath\nPath [in] full file path (Null to the active file)\nName [in] root object name (Null to all root objects)\nCount [out] number of components\nPaths [out] list of components' path\nNames [out] list of components' root object name\n\nOutputs 2 lists of path and root object name of the components that belong to the specified part.\nThe difference between cvxPartInqComps() and cvxPartInqCompsInfo() is cvxPartInqComps() just get the file name and part name, and cvxPartInqCompsInfo() get the path(include file name) and part name.\nnote:\nJust file name output as the path if the components haven't been saved. The calling procedure MUST deallocate the output lists."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name of the file instanced by a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqPartByPath\nCompPath [in] pick path of component in active file\nfileName [out] name of the file instanced by the component\npartName [out] name of the part instanced by the component\n\nGets the names of the file and part referenced by the pick path of specified component.\nsee:\ncvxCompInqPart"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the file names referenced by the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxCompGetRefPart\nCount [out] the number of names in each output array\nBinName [out] array of \"*Count\" files referenced by active part\nRootName [out] array of \"*Count\" part names referenced by active part\n\nGet the file names and part names in the active assembly or part. This function determines the number of unique parts referenced by the active assembly or part and assigns that value to *Count, then allocates arrays of that size for BinName and RootName, and fills them with the referenced parts' file names and root names, respectively.\nThe caller is responsible for freeing the output arrays with the cvxMemFree() function.\nIf an error occurs, *Count will be 0, but either or both BinName and RootName might be a non-NULL pointer to an array that the caller must free."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find out if a component is flexible or not?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAsmIsFlex\nidComp [in] index of component\nisFlexible [out] 1 if flexible; 0 if not\n\nDetermine whether the component is flexible.\nsee:\ncvxPartInqAsmIsFlexByPath"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the suppress state of a specified component path?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSuppressGetByPath\npath [in] component path\nsuppress [out] the component suppress state\n\nOutputs the suppress state of specified component path. \n\n 1-suppressed 0-unsuppressed."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the visibility status of a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompVisGet\nCompPath [in] pick-path of component\nVis [out] 1-visible, 0-blank\n\nGet the visibility of specified component.\nsee:\ncvxAssemCompVisAll"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use CompPath to un-highlight a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompUnHighlight\nCompPath [in] pick-path of component\n\nUn-Highlight the specified component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the render mode of a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqRenderMode\nCompPath [in] pick path of component\nRenderMode [out] render mode\n\nGet component render mode."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a component is unplaced based on its pick path?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsUnplacedByPath\npath [in] pick path of component\nisUnplaced [out] 1 is unplaced, 0 is not unplaced\n\nGet component unplaced state by pick-path.\nsee:\ncvxCompIsUnplaced"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I determine if a node is expanded or not?"
            },
            {
                "role": "assistant",
                "content": "cvxCompExpandStateGet\npath [in] component path\nisExpand [out] 1 is expand state, else 0\n\nCheck whether the specified node is expanded."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the selected status of a specified node?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSelectedStateSet\npath [in] component path\nselected [in] 1 is selected state ; 0 is non-selected state.\n\nUpdate whether the specified node's selected status."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the display content of the 3D BOM table?"
            },
            {
                "role": "assistant",
                "content": "cvxCompBomSettingGet\ndata [out] settings data of 3d bom table\n\nGet the display content of the 3D BOM table through the interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list after retrieving the BOM table data?"
            },
            {
                "role": "assistant",
                "content": "cvxCompBomDispDataGet\ndata [out] table data\n\nGet row infos for display in bom table. The calling procedure MUST deallocate the output list with cvxBomDataFree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to enable component regen for a specific component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompRegenSet\nidComp [in] component entity id\nRegen [in] 1 to enable component regen; 0 to disable it\n\nFlags the input component to regen (Regen=1) or not regen (Regen=0) the part it instances when the it's parent part is regenerated.\nThe specified component (idComp) should belong to the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to ignore hidden components and shapes while checking for open shapes?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqOpenShapes\nCompPath [in] pick path of the component/shape in the component, NULL to check all components\nIgnoreHide [in] whether to ignore hidden components and hidden shapes(1 is ignore hidden, 0 is not ignore hidden)\nnumShps [out] number of open shapes\nshpPaths [out] pick-paths of open shapes\n\nGet the open shapes in input components or shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the configuration id using the component's pick path?"
            },
            {
                "role": "assistant",
                "content": "cvxCompCfgIdGet\npath [in] pick path of component\nidCfg [out] config id\n\nGet the id of the specified component configuration."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxCompFromAsmFtr to identify if a component is from assembly feature?"
            },
            {
                "role": "assistant",
                "content": "cvxCompFromAsmFtr\npath [in] pick path of component\nisFromAsmFtr [out] 1 if this component is from assembly feature. else 0.\n\nDetermine whether component are generated through assembly feature.\nThe cvxPartInqEntFtr interface can obtain the feature id through the component id.\nThe cvxPartInqFtrTemplate interface can obtain the template command of the feature and determine the feature type through the template command.\nAsm Feature Type | Template Command\nassembly pattern | AsmPtnAll\nassembly mirror  | AsmMirrorAll\npulley           | AsMcmPulley\nspur gear        | CdSpurGear\nbevel gear       | CdBevelGear"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to flag a part as a standalone part?"
            },
            {
                "role": "assistant",
                "content": "cvxSubPartFlag\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nisSubPart [in] 1=sub-part; 0=ordinary part; -1=ordinary part hidden in root object list\n\nIf \"isSubPart = 1\", the specified part is flagged as a sub-part. It will be skipped when gathering parts for a BoM or assembly-part-list. It will not be displayed in the parent file's root object list.\nIf \"isSubPart = -1\", the specified part is flagged as a pseudo sub-part. It is hidden in the root object list, but is still counted as a free-standing part for BoM or assembly-part-list purposes.\nIf \"isSubPart = 0\", the part is assumed to be a standalone part (i.e. not a sub-part inextricably linked to its parent part).\nGenerally speaking, this function should not be used to change the status of a genuine sub-part unless you 100% know what you are doing, but it may be used to suppress display of a regular part in the root object list (isSubPart = -1).\nnote:\nThis interface had been discarded because the platform can no longer support this operation. If there is a need to get a sub-part, use cvxSubPartIns() to do it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update user attribute data for a component in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxCompUserAtSet\nComp [in] pick path of component\nCount [in] number of user attributes\nUserAt [in] list of user attributes\n\nSet user attribute data of the specified component in the current active file. a new user attribute is inserted if the user attribute for the specified label does not exist."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change display attributes of specified components?"
            },
            {
                "role": "assistant",
                "content": "cvxCompFaceAtSet\nCount [in] number of component\nCompPath [in] list of pick path of components\nAt [in] face attribute\n\nChanges display attributes of the specified components. It is assumed the specified components reside in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the count of entities associated with a constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxConsInqRefEnts\nidCons [in] index of constraint\ncount [out] number of entities associated with constraint\nentPaths [out] list of entity paths associated with constraint\n\nOutputs a list of pick path of entities associated with the specified constraint.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I check the constraint state of a component or shape?"
            },
            {
                "role": "assistant",
                "content": "cvxCompInqConsState\nidComp [in] index of component or shape\nconsState [out] constraint state of component\n\nGet the constraint state of specified component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a sub-assembly with multiple components?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmGrpComp\ndata [in] group as sub-assembly data\n\nThis function can create a sub-assembly with some several components, and also allow to save sub-assembly with new file format or new object.\nnote:\nThe consumer can initialize the structure using the cvxMemZero((void*)data,sizeof(svxAsmGrpCompData)). \n\n data.isPartOnly is used only for components in multi-object files. \n\n data.isVirtual is used only for components in single-object files. \n\n data.file is used only when data.isPartOnly is 0, otherwise data.file is ignored.\nA\n|- B\n|- C\n|- D\n\nA\n|- B\n|- G\n   |- C\n   |- D"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to enable Favorites for adding a component?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmAddToFavorites\npath [in] component pick path\n\nAdd the pick component to Favorites.\nnote:\nIf the return value is ZW_API_INPUT_ERROR, you can use the interface cvxAsmFavoritesEnable() to determine the reason for the interface failure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update component reference in an assembly?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmUpdateCompRef\nOldRootName [in] the old root name of the target part\nNewRootName [in] the new root name of the target part\n\nTraverse the assembly of the active part, find components that reference current file name and OldRootName, then replace the old reference (OldRootName) with the new one (NewRootName)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to edit a part by specifying its component path?"
            },
            {
                "role": "assistant",
                "content": "cvxCompEditPartByPath\ncompPath [in] path of component in active file\n\nActivate the part instanced by the specified component path for editing. It is assumed the component (compPath) resides in the active assembly. Use cvxPartExit() to exit the part to its parent assembly part.\nsee:\ncvxCompEditPart()"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to instance a part from a specific file?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSetPart\nidComp [in] id of component in active file\nFile [in] name of the file containing the part to instance\nPart [in] name of the part to instance from \"File\"\n\nChanges the part instanced by the specified component in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxCompSetRenderMode\nCompPath [in] pick path of component\nRenderMode [in] render mode\n\nSet component render mode."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to unsuppress a specified component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompSuppress\nidComp [in] component id\nsuppress [in] 1-suppress, 0-unsuppress\n\nSuppress or unsuppress the specified component. idComp is the component of the top assembly.\nsee:\ncvxCompSuppressByPath() to suppress the some components by the entity path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the visibility of a component?"
            },
            {
                "role": "assistant",
                "content": "cvxCompVisSet\nCompPath [in] pick-path of component\nVis [in] 1-visible, 0-blank\n\nSet the visibility of specified component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to enable a specific constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxConsEnable\ncount [in] count of constraints\nidCons [in] list of constraint ids\nenable [in] 1-enable, 0-disable\n\nEnable or disable the specified constraints."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to tag a sub-part for automatic regeneration?"
            },
            {
                "role": "assistant",
                "content": "cvxSubPartIns\nName [in] sub-part name\nAutoRegen [in] 1 to tag sub-part for automatic regeneration, else 0\nMergeDimen [in] 1 to merge sub-part dimensions, 2 to merge sub-part wireframe entities, 3 to merge both (0 to merge neither dimensions nor wireframe\n\nInserts and activates a sub-part in the active part. If \"Name\" is a blank string, a default name is assigned to the new sub-part. Use cvxPartExit() to exit the sub-part, re-activating its parent part.\nnote:\nIf \"Name\" is the name of an existing sub-part in the active part, the existing sub-part is activated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use component data to insert a part as a shape?"
            },
            {
                "role": "assistant",
                "content": "cvxInstPartAsShp\nComp [in] component data\n\nInsert the specified part at the specified location as shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the type of a specified edge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgeType\nidEdge [in] edge id (in active file)\nEdgeType [out] edge type\n\nGets the type of specified edge."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve a list of pre-edges associated with a specified edge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgePreEdges\nidEdge [in] edge id\nCount [out] number of pre-edges associated with the specified edge\nPreEdges [out] list of pre-edges associated with the specified edge\n\nGets a list of the pre-edges associated with the specified edge. Memory for the list is allocated by this function and must be freed by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire about the shape connected to an edge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEdgeShape\nidEdge [in] index of edge\nidShape [out] index of shape\n\nOutputs the shape connected to an edge in the active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get shader attributes of a specified face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceSh\nidFace [in] face id\nSh [out] face shader attributes\n\nOutputs shader attributes of the specified face. \"Sh->name[0]\" is set to \"0\" (i.e. empty string) if no shader is defined for the face.\nIt is assumed the specified face (idFace) resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the area of a face by its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceGetArea\nfaceId [in] The face id in the db\ntolerance [in] The tolerance\narea [out] The area of the face to return\n\nGet the face area of the face which id is \"faceId\" in the db."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set the face display attributes without assigning a value to the variable first?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSetFaceAtInit\ndata [out] face display attributes\n\nInitialize the parameters of the cvxPartSetFaceAt().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove a texture from a specific face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDelFaceTx\nCount [in] number of faces (or shapes)\nidFaces [in] list of face or shape id's\n\nRemove a texture or a texture map previously assigned to the specified shape or the specified face. it is assumed the specified face or shape (idFace) resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the original image file path for a texture map on a specific face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceTxFileByLongPath\nidFace [in] face id\nPath [out] path to texture map's original image file\nsizePath [in] max size of Path\n\nOutputs path to the original image file if a texture map has been \n\n applied to a face. Unlike cvxPartInqFaceTx(), which may output the \n\n path to a copy of the original image file that ZW3D has put in its \n\n temp directory, this function outputs the path that was originally \n\n used to create the texture map. The file might no longer exist, \n\n although the image may still exist as an embedded object. \n\n\nIt is assumed the specified face (idFace) resides in the active part.\nZW3D's native texture map command (!CdTMap) does not save the path to \n\n the original image file when a texture map is applied to a face with \n\n the embed option selected. For faces that have been assigned a \n\n texture map using the texture map command rather than the \n\n cvxPartSetFaceTx() function, this function outputs the path that the \n\n texture map command saves with the face, which will be the path to a \n\n copy of the image file in ZW3D's temp directory.\nA Path that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes.\nsee:\ncvxPartInqFaceTx() for a function that outputs all texture map attributes. \nsee:\ncvxPartInqFaceTxFile()"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the internal data of each trim curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceCrvs\nidFace [in] face id\nCount [out] number of trim curves\nTrimCurves [out] list of trim curves\n\nOutputs a list of the trim curves that bound a face in the active part. The calling application must sort these curves into inner and outer loops as desired. To get the them in sorted order, you must traverse the face and its loops using cvxPartInqFaceLoops(), cvxPartInqLoopEdges() and cvxPartInqEdgeCrv().\nThe calling procedure MUST deallocate the internal data in each element of the output list by calling cvxCurveFree(), after which the output list MUST be deallocated using cvxMemFree((void**)TrimCurves)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list for loops?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceLoops\nidFace [in] face id\nInner [in] 1 to include inner loops; 0 for just the outer loops\nCount [out] number of loops\nLoops [out] list of loop id's\n\nOutputs a list of indices of the loops (outer and inner) that belong to a face in the active file.\nOuter loops proceed counterclockwise relative to the natural normal of the parent surface. Inner loops are clockwise.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get surface geometry for a specified face entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceSrfPrim\nidFace [in] face id\nSrfPrim [out] face's untrimmed NURBS surface geometry\n\nGets surface geometry for the specified face entity. It is assumed the specified face (idFace) resides in the active part.\nThe calling procedure is responsible for deallocating the memory assigned by this function to the \"SrfPrim\" structure using cvxSurfaceFree(&SrfPrim->srfData.srf) when SrfPrim->srfType = VX_SF_PRIM_NURB."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the parent shape of a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceShape\nidFace [in] face id\nidShape [out] id face's parent shape\n\nGets the id of the specified face's parent shape (within the active file)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the flag indicating if a face is a fillet face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceFillet\nidFace [in] face id\nisFilletFace [out] fillet flag (1 is fillet face, else is 0)\n\nGet the flag indicating if the specified face is a fillet face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine the K-factor of a face?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceInqBend\nidFace [in] index of face\nbendFlag [out] whether the face is a bending surface (1 to yes; 0 to no)\nbendRad [out] bend radius (NULL to ignore)\nneutralRad [out] neutral radius (NULL to ignore)\nangle [out] bend angle (NULL to ignore)\nthick [out] thickness (NULL to ignore)\nkFactor [out] K-factor (NULL to ignore)\nflatTol [out] flat tolerance (NULL to ignore)\n\nGet bend information of specified face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I verify if a face is planar?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceIsPlanar\nidFace [in] index of face\n\nCheck if the specified face is real planar face.\nnote:\nThe face of the VX_SRF_GEN type may also be a planar face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to evaluate the NURBS representation of a face entity?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceEval2\nidFace [in] face entity id\nU [in] U parameter value on face\nV [in] V parameter value on face\nPoint [out] point on face (input NULL to ignore)\nNormal [out] normal at point on face (input NULL to ignore)\nUtan [out] U tangent direction (input NULL to ignore)\nVtan [out] V tangent direction (input NULL to ignore)\n\nEvaluates the NURBS representation of the face entity specified by \"idFace\". Outputs the 3D point coordinates (Point), normal direction (Normal) and UV tangent directions at the specified U,V location on the surface. Use cvxFaceParam() to get the face's parameter limits.\nnote:\nThe direction of \"Normal\" is set to reflect the outward normal of the face, where \"outward\" means the direction that points towards the outside of the shape that the face is associated with. This may be opposite the natural normal of the NURBS surface associated with the face. \n\n If you want the natural normal of the NURBS surface associated with the face, call cvxPartInqFaceSrf() to get the \"Srf\", and if Srf->OutNormal= 0, call cvxVecReverse() to reverse the \"Normal\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine the location of a point on a face relative to the face's trim boundaries?"
            },
            {
                "role": "assistant",
                "content": "cvxFacePntLoc\nidFace [in] face entity id\nU [in] U parameter value on face\nV [in] V parameter value on face\nLoc [out] point location relative to face boundaries\n\nDetermines the location of the specified point on the specified face relative to the face's trim boundaries."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to obtain radial integrity ratio value in U and V?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceRadialIntegrity\nidFace [in] face entity id\nURatio [out] radial integrity ratio value in U\nVRatio [out] radial integrity ratio value in V\n\nGet radial integrity ratio value of specified surface. the ratio value is set to 0.0 when it is invalid, and then function is only applicable to cylinder, cone and torus."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of edge id's in a loop?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqLoopEdges\nidLoop [in] loop id\nCount [out] number of edges\nEdges [out] list of edge id's\n\nOutputs a list of indices of the edges that belong to a loop on a face in the active file. Edges are output in the order they occur in the loop.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nOuter loops proceed counterclockwise relative to the natural normal of the parent surface. Inner loops are clockwise relative to the natural surface normal."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the PreEdges belonging to a loop?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqLoopPreEdges\nidLoop [in] loop id\nCount [out] number of PreEdges\nPreEdges [out] list of PreEdge id's\n\nOutputs a list of indices of the PreEdges that belong to a loop on a face in the active file. PreEdges are output in the order they occur in the loop.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nOuter loops proceed counterclockwise relative to the natural normal of the parent surface. Inner loops are clockwise relative to the natural surface normal."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the parent edge of a PreEdge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPreEdgeStartPnt\nidPreEdge [in] id of PreEdge within a loop on a face\nidEdge [out] id of PreEdge's parent edge\nStartPnt [out] coordinates of PreEdge start point\n\nGets the coordinates of the specified PreEdge's start point relative to its parent loop direction. Also, outputs the id of the PreEdge's parent edge."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the attribute item data for a specific shell and item?"
            },
            {
                "role": "assistant",
                "content": "cvxShellAtItemGet\nidShape [in] the shell index\nitemId [in] item id\nAt [inout] attribute item data\n\nOutputs the attribute of specified item for the specified shell.\nThe itemId includes part items of evxAtItemId (VX_AT_USER~VX_AT_HEIGHT).\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must be assigned to At->label before calling this function. For all other itemId values, At->label can be an empty string (At->label[0]=0) when this function is called."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I get the open flag for a specific shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeOpen\nidShape [in] shape id (in active file)\nisOpen [out] open flag for shape (1=open, 0=closed)\n\nGet the flag indicating if shape is open."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the structural attributes of a specified shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShapeStructGet\nidShape [in] entity id\nat [out] structural attributes\n\nOutputs the structural attributes of specified shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a shape was merged from a component?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeComp\nidShape [in] shape id (in active file)\nidComp [out] shape's parent component (0 if undefined)\n\nOutputs the id of the component from which the specified shape was merged. Outputs \"idComp = 0\" if the shape was not merged from a component."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about the faces of a shape in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeFaces\nidShape [in] shape id\nCount [out] number of faces\nFaces [out] list of face id's\n\nOutputs a list of indices of the faces that belong to the specified shape in the active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list obtained from getting extreme points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqShapeExtreme\nidShape [in] id of shape in active part\nDir [in] direction\nCount [out] number of faces or edges (NULL to ignore)\nidEnts [out] list of faces or edges (NULL to ignore)\nPoint [out] extreme point (NULL to ignore)\n\nGets the extreme point of shape in the specified direction, if the farthest end of the specified direction are faces or edges, the function also outputs the list of faces or edges, in this case, the extreme point output is only any point on a face or edge.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of edges associated with a specific vertex of an edge?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqVertexEdges\nidEdge [in] the index of edge\nEndPnt [in] 0 to use the starting vertex of the edge, 1 to use the end vertex of the edge\nCount [out] the count of edges\nEdges [out] the list of edges\n\nGets all associated edges of the specified vertex of edge in the active file.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to buffer a command string for execution?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdBuffer\nString [in] command string\nPriority [in] priority of execution (0 or 1)\n\nBuffers the input command string for execution after the current command and any previously-buffered command events are finished executing.\nIf \"Priority\" is input as 1, the input command string is given higher priority for execution than command strings buffered with \"Priority = 0\".\nFor example, if you register a pointer to a \"void MyFunction(void)\" callback function using cvxCmdFunc(), you can cause the function to be invoked after pending commands have executed using cvxCmdBuffer(\"~MyFunction\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to verify the validity of a license for a particular command?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdChkLic\nName [in] Command name\n\nCheck whether license is valid."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to register a callback function for a command string?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdFunc\nName [in] function name\nFunction [in] function pointer\nCode [in] ZW3D licensing code (e.g. VX_CODE_ADV_MODELING or VX_CODE_GENERAL)\n\nRegisters a function referenced by the \"function=\" or \"custom=\" fields in a command template definition. The function is registered with a ZW3D licensing code. ZW3D ensures the user has the appropriate license before allowing access to the function.\nCallback functions should be registered in the \"Init\" function called when your library is dynamically loaded by ZW3D at runtime.\nFor a standard command operation, the function should be the following type:\nint StandardCommand(int idInputData, int *idOutputData)\nFor a custom command operation, the function should be the following type:\nint CustomOperation(int idInputData)\nFor a callback function invoked by a command string that is the function name preceded by a \"tilda\" (e.g. ~MyFunction), the function should be one of the following types:\nvoid MyFunction(void) or...\nvoid MyFunction(char *string) invoked by sending the string \"~MyFunction(\"text string\")\" using cvxCmdSend() or cvxCmdBuffer().\nThe API functions beginning with cvxData...() are used to compose and to query the data containers referenced by \"idInputData\" or \"idOutputData\".\nFor documentation on the the callback function registered in the header of a GUI template, see cvxFormFunc().\nIf developer wants to unload the DLL plug in file dynamically. It is a MUST to run cvxCmdFuncUnload() in the exit function.\nIn this case, the pre-existing symbol is kept and the input function is ignored."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to unload a specified function?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdFuncUnload\nName [in] function name\n\nUnload specified function registered via cvxCmdFunc()/cvxCmdCallback()/ cvxFormFunc()/cvxFormCallback() if developer wants to unload the DLL plug in file dynamically. The input name must be the same as the one used in cvxCmdFunc()/cvxCmdCallback()/cvxFormFunc()/cvxFormCallback()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to dynamically unload the DLL plug in file?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdVariableUnload\nName [in] Variable name\n\nUnload the variable registered via cvxCmdVariable() if developer wants to unload the DLL plug in file dynamically. The input name must be the same as the one used in cvxCmdVariable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the input name required to unregister a Qt resource file?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdUnRegisterRcc\nFile [in] file name\n\nUnregister the Qt resource file(rcc file) registered via cvxCmdRegisterRcc(). If developer wants to unload the DLL plug in file dynamically. The input name must be the same as the one used in cvxCmdRegisterRcc()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxMacroInqPath\npath [out] path of macro (NULL to ignore)\nfile [out] file name of macro (NULL to ignore)\n\nGets the path and file name of the currently running macro. If no running macro, path[0] = 0 and file[0] = 0. The path and file cannot both be NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a new component in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIns\nComp [in] component data\nidComp [inout] of new component,as input when this function is called from custom history operation\n\nInserts a new component in the active part. If \"idComp\" is not NULL, the id of the new component is output.\nIf this function is called from a custom history operation, the component will be associated with the custom operation and will be deleted automatically when the custom operation is regenerated and re-inserts the component.\nnote:\nWhen this function is called from within a custom history operation, if \"idComp\" is not NULL, \"*idComp\" must be a value greater than 0, and if this function is Cyclically called from within a custom history operation, \"*idComp\" CAN'T BE THE SAME in every calling, otherwise this function will return \"ZW_API_INPUT_ERROR\". value will be encoded in the component's persistent label to differentiate it from other components added by the custom operation. After the value of \"idComp\" is used to label the new component, the database id of the new component will be output via \"idComp\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to merge a component and its sub-components using this function?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMerge\nCombine [in] combination method\nidComp [in] component id (0 for last feature)\nidShape [out] shape id (pass in NULL to ignore)\n\nMerges a component with the active part using the specified combination method. Only the component's top-level geometry is merged. Sub-components of the component are not merged.\nUse cvxCompShift() to merge the component and its sub-components.\nIf \"idShape\" is not NULL, the id of the last shape created by merging the component is output. \"isShape=0\" is output if no shape was created by the merge.\nnote:\nMerging a component could add multiple shapes, or other types of geometry, to the active part. If there is a possibility that the merge created more than a single shape, use cvxEntNewList() to retrieve the new entities created by the merge. \n\n This function can be overloaded to force merging of component dimensions by inputting the component id with a negative sign."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to map a shape into part space using a local coordinate frame?"
            },
            {
                "role": "assistant",
                "content": "cvxCompExtract\nidShape [in] id of shape to extract\nFrame [in] local coordinate frame to map shape into part space\nName [in] name of new part/component\nNewFile [in] 1 to put new part in a new file; 0 for active file\nOverwrite [in] response to \"overwrite existing part?\" query\nidComp [out] id of new component (NULL to ignore)\n\nExtracts a shape from the active part into a new part that is instanced back into the active part as a component (i.e. converts a shape into a component). If the shape was merged from a pre-existing component, \"Frame\" and \"Name\" are ignored and the shape is extracted to the original component using its local frame and name.\nIf \"Frame\" is input as NULL, the identity matrix is used.\nIf \"Name\" is input as NULL, a default name is assigned to the component.\nIf \"idComp\" is not NULL, the id of the new component is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I add geometry to an existing destination part when exporting?"
            },
            {
                "role": "assistant",
                "content": "cvxPartGeomExportII\nData [in] data that defines geometry to be exported\n\nExports the specified geometry from the active target part to an external part. If the destination part does not exist, it is created. If the destination part already exists, the geometry is added to it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a tangent constraint between two entities?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddTangentCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a tangent constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to create a parallel constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddParallelCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a parallel constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use custom data for creating an angular constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddAngularCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a angular constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to add a distance constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddDistanceCons\nEnt1 [in] pick-path of first entity (edge,curve,face,datum,point,datum axis)\nPnt1 [in] coordinate of the coincidence point on the first entity (NULL to ignore)\nEnt2 [in] pick-path of second entity (edge,curve,face,datum,point,datum axis)\nPnt2 [in] coordinate of the coincidence point on the second entity (NULL to ignore)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a distance constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to customize the constraint data when adding a symmetry constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddSymmetryCons\nPlane [in] pick-path of plane (face,datum)\nSymEnt1 [in] pick-path of first symmetric entity(edge,curve,face,datum,point,datum axis)\nSymEnt2 [in] pick-path of second symmetric entity(edge,curve,face,datum,point,datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a symmetry constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a path constraint using cvxCompAddPathCons function?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddPathCons\nPnt [in] point on component (edge, curve, face, datum plane, point)\nnPaths [in] number of paths\nPaths [in] pick-path list of paths to align to, the curves must be G1 continuous (edge, curve)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a path constraint. If multiple curves or edges are input as constraint paths, all curves or edges are required to come from the same component and G1 continuous between curves or edges."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to add a rack and pinion constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddRackPinionCons\nRack [in] pick-path of first entity (edge, curve, face, datum plane, point, datum axis)\nPinion [in] pick-path of second entity (edge, curve, face, datum plane, point, datum axis)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a rack and pinion constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to add a slot constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddSlotCons\nEnt [in] pick-path of the first entity (edge, curve, face, datum plane, point, datum axis)\nnSlots [in] number of slot faces\nSlots [in] pick-path list of slot faces\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a slot constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to specify the first and second hinge points for the universal joint constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxCompAddUniJointCons\nShaft1 [in] pick-path of first cross or propeller entity (edge, curve, face, datum axis)\nHingePnt1 [in] the first hinge point on entity (edge, curve, face, datum, point) (NULL to ignore)\nShaft2 [in] pick-path of second cross or propeller entity (edge, curve, face, datum axis)\nHingePnt2 [in] the second hinge point on entity (edge, curve, face, datum, point) (NULL to ignore)\nConsData [in] constraint custom data (NULL to use default value)\nidCons [out] index of new constraint (NULL to ignore)\n\nUse the function to create a universal joint constraint."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to fix the position of a component or shape in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAnchor\nidEntity [in] component or shape id in active part\n\nAnchors the specified component or shape so that it does not move when alignment constraints are created between it and another component/shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the assembly move data structure?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMoveInit\ntype [in] assembly move type\ndata [out] assembly move data\n\nInitialize the svxAsmMoveData structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize svxAsmMirror structure?"
            },
            {
                "role": "assistant",
                "content": "cvxCompMirrorInit\ntype [in] assembly mirror type\ndata [out] assembly mirror data\n\nInitialize the svxAsmMirror structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize the svxAsmCut structure?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmCutInit\ndata [out] assembly cut data\n\nInitialize the svxAsmCut structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxAsmFillet\ndata [in] assembly fillet input data\nidFllt [out] id of fillet feature (NULL to ignore)\n\nUse this function to build assembly fillet. Three different methods of fillet are available, each method requires different types of input.\nnote:\nInterface cvxAsmFilletInit() can initialize variables assembly fillet of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the different methods available for assembly chamfer?"
            },
            {
                "role": "assistant",
                "content": "cvxAsmChamfer\ndata [in] assembly chamfer input data\nidChmf [out] id of chamfer feature (NULL to ignore)\n\nUse this function to build assembly chamfer. Two different methods of chamfer are available, each method requires different types of input.\nnote:\nInterface cvxAsmChamferInit() can initialize variables assembly chamfer of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I find out if there is an intersection between two shapes from different components?"
            },
            {
                "role": "assistant",
                "content": "cvxCompIsectShpChk2\nBaseShpPath [in] the first shape in a component\nOpShpPath [in] the second shape in other component\nfClosedChk [in] option to control whether check the open shell 1 is excluding the open shell. otherwise is 0\nfInterfer [out] if found interference, output V_TRUE, otherwise output V_FALSE\n\nDetermine exist or not exist intersection between the input two shapes which come from two components."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to ignore hidden components while checking clearance?"
            },
            {
                "role": "assistant",
                "content": "cvxCompClearCheck\nCount [in] number of components or shapes (0 to check the whole assembly)\nComps [in] list of components or shapes (NULL to check the whole assembly)\nClear [in] clearance threshold, only results with clearance value less than the threshold are output\nChkCompShp [in] whether to check clearance between component and top shape (0 = no, 1 = yes)\nIgnoreHidden [in] whether to ignore hidden components (0 = no, 1 = yes)\nChkSubAsm [in] whether to check sub-assembly internal parts clearance (0 = no, 1 = yes)\nClrCnt [out] number of clearance check results\nClrDatas [out] list of clearance check results\n\nCalculate the clearance between the input components and output the clearance result. all components in current assembly are checked when the input component paths are NULL.\nThe memory referenced by \"ClrDatas\" is allocated by this function. The calling procedure is responsible to free it (cvxMemFree((void**)ClrDatas))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a publication set for specified entities?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPublishSet\nName [in] name of publication set (NULL to use default name)\nCount [in] number of entities to publish\nidEnts [in] list of entity ids to publish (shape, face, edge, curve, point, sketch, datum plane, datum axis, datum CSYS)\nidPubSet [out] id of new publication set (NULL to ignore)\n\nUse the function to create a publication set to publish the specified entity.\nsee:\ncvxPartInqPublishSets(): get a list of indices of the publication set. \nsee:\ncvxPartInqPublishSet(): query data of the specified publication set. \nsee:\ncvxPartPublishSetDel(): delete the specified publication sets."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a datum plane to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDatum\nFrame [in] transformation matrix\nidDatum [out] id of new datum\n\nAdds a datum plane to the active part, aligned with the specified local coordinate frame. If \"idDatum\" is not NULL, the id of the new datum is output.\nIf Frame is invalid, it will use the identity matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the difference between cvxPartNewDatum and cvxPartDatum?"
            },
            {
                "role": "assistant",
                "content": "cvxPartNewDatum\nFrame [in] transformation matrix\nidDatum [out] id of new datum\n\nThis function add a new datum plane to the active part according to the Frame. \n\n It is different to cvxPartDatum(). If \"idDatum\" is not NULL, the id of the new datum is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a datum plane normal to a specified curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlnCrv2\nidCrv [in] id of curve entity\nOrigin [in] point at or near plane origin on curve\nXaxis [in] point lying on plane of new datum's X axis (or NULL)\nFlip [in] 0-ignore this input; \n\n 1-flip plane 180 degrees about X axis; \n\n 2-flip plane about Y axis; \n\n 3-flip about Z axis\nidPln [out] id of new datum plane (or NULL)\n\nAdds a datum plane to the active part that is normal to the specified curve \"idCrv\", with its origin located at the point on \"idCrv\" that lies closest to the input \"Origin\" point.\nIf the reference point \"Xaxis\" is specified (i.e. not NULL), the new datum plane is oriented so that its X axis lies in the plane that contains \"Xaxis\" and the new datum's Z axis. That is, the point \"Xaxis\" specifies the XZ plane of the new datum.\nIf \"Flip\" is non-zero, flip the datum plane 180 degrees about the specified axis.\nBesides the \"Flip\" argument, the difference between this function and cvxPartPlnCrv() is that \"Origin\" and \"Xaxis\" can be defined more flexibly using the parameters available in \"svxData\". The calling procedure is responsible for defining \"svxData\" correctly.\nnote:\nMake sure you zero the entire \"svxData\" structure before initializing specific parameters {svxData Origin; cvxMemZero(&Origin,sizeof(Origin);}."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to control the orientation of the datum plane using a 3D point?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlnSrf2\nidFace [in] id of face entity\nOrigin [in] point at or near plane origin on face\nXZ [in] point on XZ plane (NULL to ignore)\nFlip [in] flip plane about an axis (see DESCRIPTION)\nidPln [out] id of new datum plane (NULL to ignore)\n\nAdds a datum plane to the active part that is tangent to the surface of the specified face \"idFace\", with its origin located at the point on \"idFace\" that lies closest to the input \"Origin\" point and its Z axis pointing along the face's outward normal at \"Origin\".\nIf \"XZ\" is a non-NULL pointer to a 3D point, the point is used to control the plane's orientation by rotating the plane about its Z axis (face's outward normal) until its XZ plane intersects the point.\nIf \"Flip\" is non-zero, the plane is flipped 180 degrees about its X axis (Flip=1), Y axis (Flip=2) or Z axis (Flip=3)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before adding a new plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPlaneAddInit\nmethod [in] New Plane Methods\ndata [out] New template command Plane input data\n\nInitialize the parameters of the cvxPartPlaneAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a new datum CSYS to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCSYSNew\nCSYS [in] CSYS data\nidCSYS [out] id of new CSYS (NULL to ignore)\n\nThis function add a new datum CSYS to the active part according to the Frame. If \"idCSYS\" is not NULL, the id of the new datum CSYS is output.\nnote:\nInterface cvxPartCSYSNewInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything inside the svxDEMove structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEMoveInit\ntype [in] part or assembly DE(Direct Edit) move type\ndata [out] part or assembly DE(Direct Edit) move data\n\nInitialize the svxDEMove structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything inside the svxDEAlignMove structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEAlignMoveInit\ntype [in] DE(Direct Edit) align move type\ndata [out] DE(Direct Edit) align move data\n\nInitialize the svxDEAlignMove structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to move DE(Direct Edit) dimension faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEDimMove\ndata [in] DE(Direct Edit) dim move input data\nidMove [out] id of DE(Direct Edit) dim move feature (NULL to ignore)\n\nUse this function to DE(Direct Edit) dim move faces. Two different methods of move are available, each method requires different types of input.\nnote:\nInterface cvxPartDEDimMoveInit() can initialize variables DE(Direct Edit) move of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for Direct Edit face offset?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEOffset\ndata [in] DE(Direct Edit) face offset input data\nidOffset [out] id of DE(Direct Edit) face offset feature (NULL to ignore)\n\nUse this function to change DE(Direct Edit) face offset.\nnote:\nInterface cvxPartDEOffsetInit() can initialize variables DE(Direct Edit) offset of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of DE(Direct Edit) face draft feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEDraft\ndata [in] DE(Direct Edit) face draft input data\nidDraft [out] id of DE(Direct Edit) face draft feature (NULL to ignore)\n\nInitialize the svxDEDraft structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxDEMirror structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEMirrorInit\ndata [out] DE(Direct Edit) face mirror data\n\nInitialize the svxDEMirror structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything inside the svxDEPattern structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEPtnInit\ntype [in] part or assembly DE(Direct Edit) pattern type\ndata [out] part or assembly DE(Direct Edit) pattern data\n\nInitialize the svxDEPattern structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to empty everything and initialize the DE face fillet data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDEFlltInit\ndata [out] DE(Direct Edit) face fillet data\n\nInitialize the svxDEFllt structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify Direct Edit face radius using cvxPartDERad?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDERad\ndata [in] DE(Direct Edit) radius input data\nidRad [out] id of DE(Direct Edit) radius feature (NULL to ignore)\n\nUse this function to modify DE(Direct Edit) face radius.\nnote:\nInterface cvxPartDEMirrorInit() can initialize variables DE(Direct Edit) mirror of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to initialize auto dimension data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAutoDimAddInit\ndata [out] auto dimension data\n\nInitialize the parameters of the cvxDwgAutoDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the type of Baseline dimension line?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgBaseLineDimAdd\npData [in] data of BaseLine dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a Baseline dimension between the specified object in drawing.\npData->sub.cons.type is set by evxDimLineType, as follows: \n\n VX_DIM_LINE_LH \n\n VX_DIM_LINE_LV \n\n VX_DIM_LINE_LA \n\n VX_DIM_LINE_LR \n\n VX_DIM_LINE_LP"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a Linear offset dimension between two specified entities in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgLineOffsetDimAdd\npData [in] data of LineOffset dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a Linear offset dimension between the specified two entities in drawing. Supported entities include two lines, a point and a line\ntype of pData is as follows by evxDimLineOffset: \n\n VX_DIM_OFFSET_LOL offset dimension - line to line \n\n VX_DIM_OFFSET_LOP offset dimension - line to point"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to empty everything before adding linear chamfer dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgLnrChmDimAddInit\ndata [out] the info of the linear chamfer dim\n\nInitialize the parameters of the cvxDwgLnrChmDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to input angular dimension data for creating a dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAngDimAdd\nangDimData [in] angular dimension input data\nidDim [out] id of the angular dimension (input NULL to ignore)\n\nCreate an angular dimension in a drawing sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of Hole Callout dimension addition?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgHoleCallOutDimAddinit\ndata [out] Hole Callout data\n\nInitialize the parameters of the cvxDwgHoleCallOutDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a label coordinate dimension to a specific entity in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgLabelCoorDimAdd\ncoorDimData [in] label coordinate dimension input data\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a label coordinate dimension for the specified entity in drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the dimension created after adding a balloon dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgBalloonDimAdd\npData [in] data of balloon dimension\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a Balloon dimension between the specified points in drawing. pData->condition is set by evxBalloonCon"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of created balloon dimension IDs?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAutoBlnAdd\natBlnData [in] the information of Creating auto balloon\nidDimCount [out] number of created balloon dim id (input NULL to ignore)\nidDimList [out] list of created balloon dim id (input NULL to ignore)\n\nCreate auto balloon. all values of atBllnInfo need initialization.\nnote:\nInterface cvxDwgAutoBlnAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of stacked balloon dim id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgStkBlnAdd\nstkBlnData [in] information of creating stack balloons\nidDimCount [out] number of stacked balloon dim id (input NULL to ignore)\nidDimList [out] list of stacked balloon dim id (input NULL to ignore)\n\nCreate stack balloons in sheeting.\nnote:\nInterface cvxDwgStkBlnAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxDwgDatumTargDimAdd()?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgDatumTargDimAddInit\ndata [out] datum target dim data\n\nInitialize the parameters of the cvxDwgDatumTargDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to empty everything before calling cvxDwgCenterMarkDimAdd()?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCenterMarkDimAddInit\ndata [out] Center Mark data\n\nInitialize the parameters of the cvxDwgCenterMarkDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the center mark circle dimension data initialized?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCenMarkCirDimAddInit\ndata [out] center mark circle dim data\n\nInitialize the parameters of the cvxDwgCenMarkCirDimAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a center line dimension using two lines?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCenterLineDimAdd\npzCenterLine [in] info of two lines or two points\nidDim [out] id of dim (input NULL to ignore)\n\nCreate a center line dimension by two lines or two points.\nBy two lines: should be the same type, one is a straight line, the other must be a straight line; one is a arc or a circle, the other must be a arc or circle;\nBy two points: any point; default value: svxCenterDim cmSize : 4.254534 breakLen : 1.5 overRun : 3.06324 scaleFac : 1\nnote:\nInterface cvxDwgCenterLineDimAddInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to empty everything and initialize weld symbol data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymWeldNewInit\ndata [out] weld symbol data\n\nInitialize the parameters of the cvxDwgSymWeldNew().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of a new surface finish symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymSurfNew\nidEnt [in] id of the parent entity of the reference point (0 to ignore)\nrefPoint [in] coordinate of the reference point\ndata [in] surface finish symbol data\nidSymSurf [out] index of new symbol (NULL to ignore)\n\nCreates a surface finish symbol with specified data.\nnote:\nInterface cvxDwgSymSurfNewInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to empty everything before initializing image symbol data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymImgNewInit\ndata [out] image symbol data\n\nInitialize the parameters of the cvxDwgSymImgNew().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I use the first critical point of the first entity as the reference point for the new user symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgUserSymNew\ncount [in] number of entities that make up the user symbol\nidEnt [in] list of index of entities that make up the user symbol\nBasePnt [in] reference point (NULL to use the first critical point of the first entity)\nName [in] name of new user symbol to create\nidBlock [out] index of new user symbol (NULL to ignore)\n\nUse this function to save a group of entities to the active symbol library for later use. if BasePnt is NULL, the function will use the first critical point of the first entity to make up the user symbol as the reference point, see the function description of cvxEntPnt() for detail of the critical point.\nAll user symbol blocks can be inquired by cvxRootInqSymbol()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to mark holes in a drawing sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgHoleMark\ndata [in] data of hole mark\n\nUse this function to mark holes in drawing sheet.\nnote:\nInterface cvxDwgHoleMarkInit() can initialize variables hole mark of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize the hatch attributes structure?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgCrossHatch\ncountEnts [in] count of \"idEnts\"\nidEnts [in] list of entity id\ncountPnts [in] count of \"insides\"\ninsides [in] list of point\nisSplit [in] 1 if split boundary ,else 0\nhatch [in] hatch attributes (NULL to use default)\nidEnt [out] id of hatch (NULL to ignore).idEnt=0 means that it was not created successfully.\n\nThis function creates a hatch pattern within a boundary.\nnote:\nInterface cvxDwgCrossHatchInit() initializes the svxHatchAttr structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the distance and direction for moving an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgEntMoveAlongDirection\nidEnt [in] id of entity to move\nDirection [in] direction\nDistance [in] distance\nBasePoint [in] base point\nangle [in] angle\nscale [in] scale\n\nThe specified entity within the active drawing moves \"Distance\" distance in the direction of \"Direction\".\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxDwgViewLayoutInit() to initialize variables of this function?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewLayout\ndata [in] layout setting info\n\nInsert view layout. This function can create a 1 to 7 view layout of a 3D part. This interface is used in the engineering drawing environment.\nnote:\nInterface cvxDwgViewLayoutInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a projection view in the engineering drawing environment?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewProjection\nidBaseView [in] id of base view\nlocation [in] location of projection view\nProjection [in] 1 if 1st angle, 2 if 3rd angle\nDimType [in] 0 if projected, 1 if true\nViewAttr [in] view attribute(NULL to use default)\nidProjView [out] id of projection view (NULL to ignore)\n\nInsert projection view. This function can create a view projected from another existing 3D layout view. This interface is used in the engineering drawing environment.\nnote:\nThe value of \"ViewAttr\" can be obtained through cvxDwgViewAtGet(). The default value of \"ViewAttr\" can be obtained through \"cvxDwgViewAtGet(-1,ViewAttr)\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of the auxiliary view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewAuxiliaryInit\ndata [out] Auxiliary view data\n\nInitialize the parameters of the cvxDwgViewAuxiliary().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing full section view data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewFullSectionInit\ndata [out] full section view data\n\nInitialize the parameters of the cvxDwgViewFullSection().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to empty everything before initializing the aligned section view data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewAlignedSectionInit\ndata [out] aligned section view data\n\nInitialize the parameters of the cvxDwgViewAlignedSection().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a broken section view of a part?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewBrokenSection\ndata [in] broken section data\nidView [out] id of section view (NULL to ignore)\n\nThis interface function is broken section. A broken section is a cut-away view of the interior of a part. It is a section view displayed inside a 2D boundary where an existing view of the part has been cut away.\nInterface cvxDwgViewBrokenSectionInit() can initialize variables of this function.\nnote:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for creating a detail view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewDetail\ndata [in] detail data\nidView [out] id of detail view (NULL to ignore)\n\nThis function creates a local detail view.\nnote:\nInterface cvxDwgViewDetailInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the break line that will be created?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewBrkLine\nbrkLineInfo [in] information needed when create break line\nbrkLnViewId [out] id of break line that will create (input NULL to ignore)\n\nCreate a break line.\nnote:\nInterface cvxDwgViewBrkLineInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a table using data?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableInsert\npData [in] data of table\n\nThis function is used to insert table"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the valid values for the insertion position of the table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgUserTableCreateByTemplate\nname [in] table name\ntplPath [in] template file full path\npnt [in] the coordinate of the origin of table\norigin [in] indicate the insertion position(0-8)\nidTable [out] id of new table(NULL to ignore)\n\nCreate a user table through a template. Output the table id if idTable is not NULL.\nVariable origin specifies where the table is inserted, valid values are as follows:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to use cvxDwgRotateView to rotate a view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgRotateView\npData [in] data of Rotate View\n\nThis function is used to Rotate View.\nnote:\nInterface cvxDwgRotateViewInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the ECAD 'Region Set' command?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEcadRgnSet\npRgnSetData [in] region set data\nidFtr [out] id of feature(NULL to ignore)\n\nECAD \"Region Set\" command. The sketch must be cosmetic.\nnote:\nInterface cvxPartEcadRgnSetInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartFilletBlend?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFilletBlendInit\ndata [out] freeForm filletBlend data\n\nInitialize the parameters of the cvxPartFilletBlend().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize N-sided data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartNSidedInit\ndata [out] template command N-sided data\n\nInitialize the parameters of the cvxPartNSided().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the template command Trimmed Plane data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrimmedPlaneInit\ndata [out] template command Trimmed Plane data\n\nInitialize the parameters of the cvxPartTrimmedPlane().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a ruled face with linear cross-sections?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRuled\ndata [in] ruled data to create a new ruled face\nidFace [out] index of new face (NULL to ignore)\n\nUse the function to create a ruled face with linear cross-sections between two path curves.\nnote:\nInterface cvxPartRuledInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to define a circular cross-section between boundary curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCircularBiRail\ndata [in] circular bi rail data to create a new circular face\nidFace [out] id of new face (NULL to ignore)\n\nUse the function to create a face of circular cross-section between two sets of path curves. The radii of the cross-sections are determined by the creation method and are used to define a circle that intersects both boundary curves.\nnote:\nInterface cvxPartCircularBiRailInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to define the conic cross-sections using tangent lines and conic ratio?"
            },
            {
                "role": "assistant",
                "content": "cvxPartConicBiRail\ndata [in] conic bi rail data to create a new conic face\nidFace [out] id of new face (NULL to ignore)\n\nUse the function to create a face with conic cross-sections between two path curves. The radii of the cross-sections are determined by the creation method. This radius defines a circle that intersects both boundary curves. Tangent lines to the circle at the intersection points, along with a conic ratio, define the conic cross-sections.\nnote:\nInterface cvxPartConicBiRailInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartExtendFace()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtendFaceInit\ndata [out] template command Extend Face data\n\nInitialize the parameters of the cvxPartExtendFace().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing trim to faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrimToFacesInit\ndata [out] data of trim to faces\n\nInitialize the parameters of the cvxPartTrimToFaces().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use trimData to trim to curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrimToCrvs\ntrimData [in] trim to curves data\nidTrim [out] trim feature id (pass in NULL to ignore)\n\nUse this function to trim a face or shape to a curve or set of curves."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to reverse the normal direction of a face?"
            },
            {
                "role": "assistant",
                "content": "cvxFaceReverseDir\nnumFaces [in] number of faces in input list\nidFaces [in] pointer to array of integer face id's\n\nReverses the normal direction of each input face, without changing its surface or trim loops. If a face initially bounds a closed shape, this flips the inside and outside with respect to that shape.\nEach ID in the idFaces array may refer to a face or a shape. When an ID refers to a shape, this function reverses all of the shape's faces.\nsee:\ncvxFaceReverse()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of cvxMemZero() inside the interface?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExplodeInit\ndata [out] data of explode command\n\nInitialize the parameters of the cvxPartExplode().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the faces sew data without assigning a value to the variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacesetSewInit\ndata [out] faces sew data\n\nInitialize the parameters of the cvxPartFacesetSew().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the input proximity tolerance in cvxPartSewForce?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSewForce\nTol [in] 3D proximity tolerance (mm) (0.0 for default)\n\nMatches and sews free edges in the active part using the input proximity tolerance. If \"Tol\" is input as 0.0, the active part's default proximity tolerance is used. Unlike cvxPartSew(), this function attempts to \"force\" open edges to sew to adjacent edges that are \"close\" but not within tolerance.\nsee:\ncvxPartFacesetSew() The difference between cvxPartSewForce and cvxPartFacesetSew is this function doesn't need to input the shapes and set \"force object to sew into solid\" to 1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartExtendShape()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtendShapeInit\ndata [out] extend shape data\n\nInitialize the parameters of the cvxPartExtendShape().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize the split faces with curves data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSplitWithCrvInit\ndata [out] split faces with curves data\n\nInitialize the parameters of the cvxPartSplitWithCrv().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the data container for a specified command?"
            },
            {
                "role": "assistant",
                "content": "cvxDataInit\nTemplate [in] command template name\nidData [out] id of data container\n\nCreates and initializes a data container for the specified command. The calling procedure is responsible for deleting the container and its contents using cvxDataFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the color index by input RGB value?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetColor\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nColor [in] rgb color\n\nIf the corresponding color widget's type is index color, find the color index by input \"Color\" rgb value. \n\n If the rgb value is not one of index color, it will return 1, otherwise set the index into specified VDATA field. \n\n If type is true color, encodes the input RGB color values as an integer stored in VDATA field. \n\n Use cvxDataGetColor() to retrieve RGB color from the field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to flag ZW3D to not promote a point-on-entity pick to its parent?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPromote\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nPromote [in] 1 to promote entity pick to parent, else 0\n\nIf \"Promote\" is input as a non-zero value, the point-on-entity pick stored in the specified input field is flagged to tell ZW3D to promote the pick to the parent of the entity instead of the entity itself.\nIf \"Promote\" is input as zero, the point-on-entity pick is flagged to tell ZW3D not to promote the pick to its parent.\nA common case is the promotion of a curve pick to its parent sketch or curve list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use UV parameter space to specify a point on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntOnFace\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nidComp [in] id of component in active part (0 to ignore)\nidFace [in] id of face in active part\n\nLogs a \"point on face\" pick to the specified field of the specified data container. Uses a point on the specified face at the midpoint of the face's bounding box in UV parameter space."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a point on a curve as an element of a data object?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntOnCrvPath\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\ncritPnt [in] whether to map point to critical point of curve\ncrvPath [in] pick path of curve\npnt [in] point on the curve\n\nAdd the specified point on curve as the Nth element (N = idField) of the specified data object (VDATA).\nIf the Nth element is already defined (and it is a list), the point is appended to a list of points referenced by the Nth element.\nIf the NTh element is defined (and it is not a list), the point is overwritten."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to log a point on a surface?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetPntOnEntPath\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\npntData [in] point on entity data\n\nLog the point on the entity or point to the specified field. The point can be on the curve or the surface, datum plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set a matrix to a data field of a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataSetMatrix\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nmat [in] entity matrix\n\nLogs a \"mat\" pick to the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to evaluate user-entered expressions for numeric input fields?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGet\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nData [out] first data item associated with \"idField\"\n\nGets the first item of data associated with the specified field of the specified data container.\nWhen the data come from a numeric input field in an option form, any expression entered by the user will be evaluated to determine a value for the number; the numeric value will be output in \"Data->Num\" and the expression will be output in \"Data->Text\".\nWhen the data come from a text input field, the raw text is output in \"Data->Text\" without replacing expressions. If you wish to support variable reference expressions such as \"[$VAR]\" where VAR is the name of a variable in the active target, the output string from this function can be given to the cvxPartVarSubstitute() function to replace the \"[$VAR]\" expressions with the values of the variables. For example:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I get the parent entity id of a specific data field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetEnt\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nidEnt [out] id of entity associated with field (0 if undefined)\nidParent [out] id of entity parent (0 if undefined; NULL to ignore)\n\nGets the entity id associated with the specified field of the specified data container. Input NULL for \"idParent\" if you are not interested in getting parent information."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve a double precision number from a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetNum\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nNumber [out] double precision number associated with \"idField\"\n\nGets the double precision number associated with the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the first entity pick-path associated with a data field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPath\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nFirstEnt [inout] 1 for first entity; 0-subsequent entities\nEnt [out] entity pick path\n\nGet the entity pick-path associated with \"idField\" of \"idData\".\nThis function does not activate the pick-path.\nIf \"*FirstEnt=1\", the first pick is retrieved, \"*FirstEnt\" is set to zero and static variables inside this function are set up to enable retrieval of the next pick when this function is called again with \"*FirstEnt=0\". If a pick is successfully retrieved, this function returns 0. If no pick was retrieved, it returns -1. If there was a fatal error, it returns 1.\nIf \"FirstEnt=NULL\", the first entity is retrieved without setting things up to get a \"next\" entity.\nThis function should not be called recursively, but no checking is done to insure it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the point associated with a specific field in a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPnt\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nPnt [out] point associated with field\n\nGets the point coordinates associated with the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the point on entity by specifying the data container and field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetPntOnEnt\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\npnt [out] point associated with field\npath [out] path of point on entity(NULL to ignore)\n\nGets the point coordinates and path of point on entity associated with the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the null-terminated ascii text string associated with a specific field of a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetText\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nNumBytes [in] number of bytes of memory referenced by \"Text\"\nText [out] null-terminated ascii string\n\nGets the null-terminated ascii text string associated with the specified field of the specified data container.\nIf necessary, the string copied to the memory referenced by \"Text\" is truncated based on the value of \"NumBytes\".\nThe calling procedure is responsible for allocating and deallocating the memory referenced by \"Text\".\nnote:\nThis function outputs the raw text contained in the specified field. \n\n Expressions embedded in the text to reference ZW3D variables are not automatically replaced by the variable values. \n\n If you wish to support variable references of the form \"[$VAR]\" where VAR is the name of a variable in the active target, the output string from this function can be given to the cvxPartVarSubstitute() or cvxPartVarSubstituteResize() function to replace the \"[$VAR]\" expressions with the values of the variables."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the list of data item indices for a particular field in a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetItemList\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nCount [out] data item count\nidItems [out] list of data item indices associated with field\n\nGet a list of data item indices associated with the specified field of the specified data container.\nThe list referenced by \"**idItems\" is allocated by this function and must be deallocated by the calling procedure. A NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the memory assigned to the field data structure after getting the data?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGetAll\nidData [in] id of data container (i.e. VDATA)\nnumFld [out] number of fields in which valid data exists\nfldData [out] list of field data\n\nGets data for all field in which valid data exists associated with the specified data container.\nIf using cvxPartInqFtrData() to get idData prior to calling this function, set cvxPartInqFtrData()'s iNoEval input argument to 0 to ensure idData will contain evaluated data.\nThe calling procedure is responsible for deallocating the memory assigned by this function to the \"fldData\" structure using cvxFldDataFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete data associated with a specific field in a data container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataDel\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\n\nDelete the data associated with the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove data from a data container based on the field ID?"
            },
            {
                "role": "assistant",
                "content": "cvxDataDelUnHi\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\n\nDelete the data associated with the specified field of the specified data container."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the data item to be removed from a field?"
            },
            {
                "role": "assistant",
                "content": "cvxDataGrpRem\nidData [in] id of data container (i.e. VDATA)\nidField [in] id of data field\nidItem [in] index of data item\n\nRemove the specified data item from specified field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the form name from a VDATA container?"
            },
            {
                "role": "assistant",
                "content": "cvxDataName\nidData [in] id of data container (i.e. VDATA)\n\nGets form name by VDATA.\nreturn:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the origin position of an auxiliary frame?"
            },
            {
                "role": "assistant",
                "content": "cvxAuxFrameSetOrigin\nOrigin [in] origin of aux frame\n\nSet origin position of Aux Frame."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to set the buddy field of an auxiliary frame?"
            },
            {
                "role": "assistant",
                "content": "cvxAuxFrameSetDirXYZOrgBuddy\nidData [in] VDATA\nidXFld [in] x field\nidYFld [in] y field\nidZFld [in] z field\nidOrgFld [in] origin field\n\nSet buddy field of Aux Frame. the function must be called after cvxAuxFrameShow function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set up idData using cvxDataInit() and cvxDataSet()?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdEval\nName [in] name of evaluation function\nidData [in] id of command data container\n\nPasses \"idData\" to the evaluation function identified by \"Name\". It is assumed the function has been registered with ZW3D (see cvxCmdFunc()). The function should be of type \"int function(int idData, int *idOutput)\". Undo-redo transaction logging is managed by this command.\nUse cvxDataInit() and cvxDataSet() to set up \"idData\". Unlike cvxCmdExec(), \"idData\" is not deleted by this function. The calling procedure is responsible for cleaning up \"idData\" using cvxDataFree().\nWhen an echo has been initiated with cvxEchoStart(), this function will call the echo_obj function associated with idData and add the objects to the echo instead of adding them to the database.\nWhen in echo mode (cvxEchoStart() called)"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the difference between cvxCmdExec2 and cvxCmdExec?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdExec2\nidData [in] id of command data container\n\nSame as cvxCmdExec(), except that the VDATA object was not deleted when the command outputs its input."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify data object using new input data?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdInput\nName [in] command template name\nidDataIn [in] optional data container id (0 if undefined)\nidDataOut [out] output data container id (0 if undefined)\n\nUses the specified template to gather input data. Waits in this function until the data has been collected. Then outputs the id of the collected data via \"idxDataOut\".\nAssigns the input data to a new data object if \"idDataIn < 1\". Otherwise, uses new input data to modify the data object defined by \"idDataIn\". It is assumed that \"idDataIn\" was created by cvxDataInit().\nIf \"idDataOut\" is output as 0, \"idDataIn\" is automatically deleted. This means the user tried to execute another command while this function was waiting for input."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to obtain the name of the active command input form?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdInqActive\nName [out] name of active command input form\n\nOutputs the name of the active command input form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the state of a command?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdStateSet\nCmdName [in] command name\nState [in] state of the command\n\nSet the state of the command."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to dynamically unload the DLL plug in file?"
            },
            {
                "role": "assistant",
                "content": "cvxCmdTemplateUnload\nFile [in] file that contains command template(s)\n\nUnload the command template(s) defined in the specified file and registered via cvxCmdTemplate() or cvxFormTemplate() if developer wants to unload the DLL plug in file dynamically. The input file path must be the same as the one used in cvxCmdTemplate()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the color for dynamic echo?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoColorSet\nColor [in] active color for dynamic echo\n\nSets the active color (wireframe and shaded) for dynamic echo."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should cvxEchoCustomStart() be called?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoCustomStart\n\ncvxEchoCustomStart() should only be called at the beginning of the \"echo_obj\" function associated with the currently executing command template. \n\n It should ALWAYS be paired with a call to cvxEchoCustomEnd() at the end of the \"echo_obj\" function.\nCalling this function at the beginning of an \"echo_obj\" function sets up the environment so that you can use other API functions to edit the target object inside the \"echo_obj\" function. \n\n Those edits will persist until the next time the \"echo_obj\" function is called, at which time the edits will automatically be undone prior to the next round of edits to the target object.\nThe function prototype for a custom echo function looks like the following:\nvoid MyCustomEcho(int idData, void *echo)\nThe \"idData\" passed to MyCustomEcho() is the id of the same container of command input data that is passed to the evaluation function associated with the currently executing command template.\nThe \"void *echo\" argument is currently not used but should be included in the echo function's argument list as shown.\nRegister a pointer to the custom echo function as follows:\ncvxCmdFunc(\"MyCustomEcho\",(void*)MyCustomEcho,0.0);\nThe custom echo function is registered in the custom command template as follows:\n<property name=\"echo_obj\">MyCustomEcho</property>\nThis function should not be used in conjunction with cvxEchoStart()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to visualize the echo data of the active form?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoDraw\n\nDraw the echo data of the active form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if cvxEchoEnd() is not called at the end of the echo?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoEnd\n\nInstructs the API to stop sending entities to the echo and start sending them to the database again.\ncvxEchoEnd() MUST be called at the end of the echo that called cvxEchoStart(). Failure to do so will cause most API functions to quit working."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to enable escape checking after it was disabled?"
            },
            {
                "role": "assistant",
                "content": "cvxEchoEscRestore\n\nRestore escape checking previously disabled by a call to cvxEchoEscDisable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the initialization function name for a specified template?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFnInit\nName [in] template name\nNumBytes [in] no. bytes of function name\nFnName [out] name of initialization function\n\nGets the name of the \"init\" function associated with the specified template."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a linear dimension between two entities?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddLineDim\nidEnt1 [in] id of the first entity\nidEnt2 [in] id of the second entity\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI linear dimension between the specified two entities in part. Supported entities include two points, a point and a line,two parallel lines, two parallel faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a PMI angle dimension between two specified entities in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddAngleDim\nidEnt1 [in] id of the first entity\nidEnt2 [in] id of the second entity\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI angle dimension between the specified two entities in part. Supported entities include two points, a point and a line,two parallel lines, two parallel faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a chamfer dimension between two entities?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddChamferDim\nidEnt1 [in] id of the first entity\nidEnt2 [in] id of the second entity\nTextPos [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI chamfer dimension between the specified two entities in part. Supported entities include two points, a point and a line,two parallel lines, two parallel faces."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the ID of the created dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddArcDim\nidEnt [in] id of the first entity\ntext [in] input user text (NULL to ignore)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI arc dimension between the specified entity in part. Supported entities include circle or face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the text placement point for a PMI label dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddLabelDim\nidEnt [in] id of the entity where the leader point is located (0 to ignore)\nleadPnt [in] leader point (NULL to use default point on entity or ignore)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\ntext [in] datum label name\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI label dimension for the specified entity which includes edge, curve, face or datum plane. If leadPnt doesn't on entity, it will be projected into the entity. If leadPnt is null, it will be set to a point on entity. Set idEnt to -1 when there is no entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the supported entities for creating a PMI datum target dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddDatumTargetDim\nidEnt [in] id of the first entity\nradRype [in] type of DatumT dimension\ndiameter [in] diameter\nwidth [in] width\nheight [in] height\nleadPnt [in] point coordinate of text placement point (NULL to use critical point)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\ntext [in] datum label name\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI datum target dimension for the specified entity in part. Supported entities include edge and face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a PMI surface finish dimension for a specified entity in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddSymSrfDim\nidEnt [in] id of the first entity\nleadPnt [in] point coordinate of text placement point (NULL to use critical point)\nTextPnt [in] point coordinate of text placement point (NULL to ignore, automatic calculation)\ntextGrp [in] Roughness PMI text define\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI surface finish dimension for the specified entity in part. Supported entities include edge and face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a center mark dimension for an arc in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddCenMarkDim\nidEnt [in] id of the first entity\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI center mark dimension of the specified entity in part. Supported entity is arc, circle, face."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a balloon annotation in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAddBalloon\nTextPnt [in] point coordinate of text placement point\ntext [in] balloon string\nfImage [in] image flag: 1-image, 0-text\nidPlane [in] id of insertion plane (datum or planar face), 0 to use default view plane\nidDim [out] id of the dimension created (input NULL to ignore)\n\nCreate a PMI balloon annotation in part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to add a box shape to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBox\nBox [in] box definition\nidShape [out] id of new shape\n\nCreates a box shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Box->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\".\nnote:\nInterface cvxPartBoxInit() can initialize variables of this function. \n\n This command doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new shape created by adding a cylinder?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCyl\nCyl [in] cylinder definition\nidShape [out] id of new shape(NULL to ignore)\n\nCreates a cylinder shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Cyl->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\".\nnote:\nInterface cvxPartCylInit() can initialize variables of this function. \n\n This command doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSphere?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSphereInit\ndata [out] sphere data\n\nInitialize the parameters of the cvxPartSphere().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing ellipsoid data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEllipsoidInit\ndata [out] ellipsoid data\n\nInitialize the parameters of the cvxPartEllipsoid().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize the extruded shape data without assigning a value to the variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartExtrudeInit\ndata [out] extruded shape data\n\nInitialize the parameters of the cvxPartExtrude().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to empty everything before initializing the revolve shape data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRevolveInit\ndata [out] revolved shape data\n\nInitialize the parameters of the cvxPartRevolve().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a swept shape and add it to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSweep\nSwp [in] sweep input data\nOptions [in] data pointer reserved for future use (input NULL)\nidShape [out] id of new shape (NULL to ignore)\n\nCreates a swept shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Ext->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\". If multiple shapes could be created, use cvxEntNewList() to get their id's.\nnote:\nInterface cvxPartSweepInit() can initialize variables of this function. \n\n cvxPartSweep doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the id of the new shape created by the spiral sweep?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSpiralSweep\nSpiralSwp [in] sweep input data\nidShape [out] id of new shape (NULL to ignore)\n\nCreates a spiral sweep shape and adds it to the active part using the specified combination method. If \"idShape\" is not NULL and \"Ext->Combine = V_BOOL_NONE\", the id of the shape created by this function is output via \"idShape\". If multiple shapes could be created, use cvxEntNewList() to get their id's.\nnote:\nInterface cvxPartSpiralSweepInit() can initialize variables of this function. \n\n cvxPartSpiralSweep doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the id of the new shape after using cvxPartLoft?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLoft\nLoft [in] loft input data\nidShape [out] id of new shape (NULL to ignore)\n\nUse this function to create a loft feature.\nnote:\nInterface cvxPartLoftInit() can initialize variables of this function. \n\n cvxPartLoft doesn't support multi-base shape since R2024 when boolean type is VX_BOOL_ADD, and it will set the boolean type to VX_BOOL_NONE first, and then add a 'Add shape' feature to do the boolean add operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing the parameters of cvxPartFilletAll()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFilletAllInit\ndata [out] chamfer data\n\nInitialize the parameters of the cvxPartFilletAll().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize face fillet data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceFilletInit\ndata [out] face fillet data\n\nInitialize the parameters of the cvxPartFaceFillet().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add chamfers to specified edges?"
            },
            {
                "role": "assistant",
                "content": "cvxPartChamAng\nCount [in] number of edges to chamfer\nEdges [in] pointer to list of edge id's\nidFace [in] id of face on first side of chamfer\nSetback [in] setback (mm) on first side of chamfer\nAngle [in] angle of chamfer (deg)\n\nAdds chamfers to the specified edges."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing the set-list data?"
            },
            {
                "role": "assistant",
                "content": "cvxChamFlltSetDataInit\ndata [out] set-list data for chamfer or fillet command\n\nInitialize the svxChamFlltSetData structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of a new chamfer feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartChamferAll\nChamfer [in] chamfer data\nidChamfer [out] index of new chamfer feature (NULL to ignore)\n\nUse the function to create symmetric and asymmetric chamfers.\nnote:\nInterface cvxPartChamferAllInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartHole?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHoleInit\nHoleOpt [in] hole method\ntype [in] hole shape type(see description)\ndata [out] hole data\n\nInitialize the parameters of the cvxPartHole().\nHoleOpt = VX_CLEARANCE_HOLE,type use evxClearHoleType; else type use evxHoleType.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the hole data of a specific face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartModifyHoleInit\nidFace [in] id face of the specified hole\ndata [out] hole data to initialize\n\nUse the first input face to initialize the parameters of the cvxPartModifyHole(). It will get the hole data of the input face to initialize the data.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize flag hole data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFlagHolesInit\ndata [out] flag hole data\n\nInitialize the parameters of the cvxPartFlagHoles().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a rib feature using an open profile sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRib\nRib [in] rib input data\nidRib [out] id of rib feature (NULL to ignore)\n\nUse this function to create a rib feature using an open profile sketch, curve, edge or curve list. The required inputs include the profile, rib thickness, draft angle, boundary faces and the draft plane. The boundary faces can limit or expand the extent of the rib feature.\nnote:\nInterface cvxPartRibInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to make drawing sheets recognize features as holes using Flag Ext Thread?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFlagExtThread\ndata [in] flag ext thread data\nidFtr [out] feature id (pass in NULL to ignore)\n\nUse the Flag Ext Thread command to assign hole attributes so drawing sheets will recognize these features as holes.but only visible in 3D.\nnote:\nInterface cvxPartFlagExtThreadInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I create a cosmetic representation of a thread on a face without creating actual geometry?"
            },
            {
                "role": "assistant",
                "content": "cvxPartThreadAt\nidFace [in] face id\nPnt [in] point on or near face identifying thread location\nThread [in] thread definition\n\nAdds thread attribute data (Thread) to the specified face (idFace) of the active part. The thread is placed on the end of the face nearest the input reference point (Pnt). A cosmetic representation of the thread displayed. Actual geometry representing the thread is not created.\nInterface cvxPartThreadAtInit() can initialize variables of this function.\nnote:\ncvxPartFlagExtThread() interface has the same function as this interface. Users can use the cvxPartFlagExtThread() interface to set more parameters."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartStock?"
            },
            {
                "role": "assistant",
                "content": "cvxPartStockInit\ndata [out] template command stock data\n\nInitialize the parameters of the cvxPartStock().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to delete the original surface after offsetting a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceOffset\nidFace [in] face id\nDis [in] offset distance\nKeep [in] 1 to keep \"Original surface\"; 0 to delete it\n\nOffset a face with distance \"Dis\". Original surface will be deleted if \"Keep=0\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the offset feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShapeFaceOffset\nOffset [in] face offset input data\nidOffset [out] id of offset feature (NULL to ignore)\n\nUse this function to offset one or more faces of a shape.\nnote:\nInterface cvxPartShapeFaceOffsetInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartThicken?"
            },
            {
                "role": "assistant",
                "content": "cvxPartThickenInit\ndata [out] template command thicken data\n\nInitialize the parameters of the cvxPartThicken().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to perform boolean combination of shapes with a base shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBool\nType [in] boolean combination method\nidBase [in] id of base shape\nCount [in] no. of shapes to combine with \"idBase\"\nShapes [in] list of id's of shapes to combine with \"idBase\"\nKeep [in] 1 to keep \"Shapes\"; 0 to delete them\n\nCombines one or more shapes with a base shape using a boolean operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to ignore the list of resulting shapes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBool3\nType [in] boolean combination method\nBaseCount [in] number of base shapes\nBaseList [in] list of base shape id's\nOpCount [in] number of operator shapes\nOpList [in] list of operator shape id's\nFaceCount [in] number of bounding faces (0 if undefined)\nFaceList [in] list of bounding faces (NULL if undefined)\nResultCount [out] number of resulting shapes (NULL to ignore)\nResultList [out] list of id's of resulting shapes (NULL to ignore)\n\nCombines one or more operator shapes with one or more base shapes using the specified boolean combination method. If bounding faces are defined (FaceCount and FaceList), an attempt is made to limit the resulting shapes to the regions between the bounding faces.\nThe resulting shape(s) are output via \"ResultList\". The memory referenced by \"ResultList\" is allocated by this function.\nThe calling procedure is responsible to free the memory referenced by \"ResultList\" (cvxMemFree((void**)ResultList)).\nIf you do not need the list of output shapes, input NULL for \"ResultCount\" and \"ResultList\" and no list of results will be output by this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of resulting shapes after division?"
            },
            {
                "role": "assistant",
                "content": "cvxPartDivide\nDivide [in] divide input data\nnumShape [out] number of resulting shapes (NULL to ignore)\nidShapes [out] list of id's of resulting shapes (NULL to ignore)\n\nUse this function to divide a solid or open shape where it intersects with faces, shapes, or datum planes. \n\n The result will be two distinct solids or shapes. \n\n This function can also divide an open shape or result in one or more open shapes.\nnote:\nInterface cvxPartDivideInit() can initialize variables of this function. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of id's of resulting shapes after trimming?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTrim\nTrim [in] trim input data\nnumShape [out] number of resulting shapes (NULL to ignore)\nidShapes [out] list of id's of resulting shapes (NULL to ignore)\n\nTrim a shape by the input trimming data. The trimming face/faceset should extend outside the boundaries of the base face/faceset.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nnote:\nInterface cvxPartTrimInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxPartReplace to replace faces of a shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartReplace\nReplace [in] replace input data\nidReplace [out] id of replace feature (NULL to ignore)\n\nUse this function to replace one or more faces of a shape.\nnote:\nInterface cvxPartReplaceInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a raised or sunken text effect on a face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInlay\nInlay [in] inlay input data\nidInlay [out] id of inlay feature (NULL to ignore)\n\nThe function is used to embed a set of closed loops of curves, as it would be generated by an outline text font, into a face and then offset the new interior faces created by the desired distance, giving a raised or sunken text effect. it will create new faces, edges, vertices, etc., allowing for sharp transitions from the raised surfaces to the base surface.\nnote:\nInterface cvxPartInlayInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can cvxPartSelfX split faces that intersect other faces in the shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSelfX\ndata [in] part resolve self intersection data\nidShape [out] id of shape feature (NULL to ignore)\n\nThe corresponding function of this interface is Shape->Resolve SelfX.\nUse this function to remove self intersections and inverted regions (including inverted inner loop cases) on selected faces as well as can be done.\nFaces that intersect other faces in the shape will be split and the unnecessary faces will be removed. The shape will not be split.\nnote:\nInterface cvxPartSelfXInit() can initialize variables resolve self intersection of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartTwist?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTwistInit\ndata [out] shape twist data\n\nInitialize the parameters of the cvxPartTwist().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing cvxPartTaper?"
            },
            {
                "role": "assistant",
                "content": "cvxPartTaperInit\ndata [out] shape taper data\n\nInitialize the parameters of the cvxPartTaper().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the shape stretch data without assigning a value to the variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartStretchInit\ndata [out] shape stretch data\n\nInitialize the parameters of the cvxPartStretch().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxPartMorphToCrv function to transform shapes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMorphToCrv\nMorphToCrv [in] morph to curve input data\nidMorphToCrv [out] id of morph to curve feature (NULL to ignore)\n\nUse this function to transforms (morphs) shapes by warping face geometry.\nnote:\nInterface cvxPartMorphToCrvInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to pattern shapes, faces, curves, points, sketches, datum planes, and patterns of patterns?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPatternGeom\nCount [in] number of entities for pattern\nidEnts [in] list of id's of entities (supported entities include: shape,face,curve,point,sketch,datum plane,datum axis,datum CSYS)\nPattern [in] pattern input data\nidPattern [out] id of pattern feature (NULL to ignore)\n\nUse this function to pattern any combination of shapes, faces, curves, points, text, sketches, datum planes and patterns of patterns. eight different methods of patterning are available, each method requires different types of input.\nnote:\nInterface cvxPtnDataInit() can initialize variables(Pattern.inpData) of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize variables for pattern input data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPatternFtr\nCount [in] number of entities for pattern\nidFtrs [in] list of id's of features\nPattern [in] pattern input data\nidPattern [out] id of pattern feature (NULL to ignore)\n\nUse this function to pattern any combination of features. eight different methods of patterning are available, each method requires different types of input.\nnote:\nInterface cvxPtnDataInit() can initialize variables(Pattern.inpData) of this function. \n\n Interface cvxPtnVarTblInit() can initialize table variables(svxPtnVarTbl), cvxPtnDataInit() should be called before this Interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of new entities after mirroring?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMirrorGeom\nMirror [in] mirror geometry input data\nNumNewEnts [out] number of new entities (NULL to ignore)\nidNewEnts [out] list of id's of new entities (NULL to ignore)\n\nUse this function to mirror any combination of shapes, components, curves, points, sketches and datum planes.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nnote:\nInterface cvxPartMirrorGeomInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the id of the mirrored feature using cvxPartMirrorFtr?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMirrorFtr\nMirror [in] mirror feature input data\nidFtr [out] id of mirror feature (NULL to ignore)\n\nUse this function to mirror features.\nnote:\nInterface cvxPartMirrorFtrInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to apply general transformation to a list of geometry entities?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMoveTransformList\nCount [in] number of entities to transform\nEntities [in] list of geometry entity ids\nMat [in] transformation matrix\n\nApplies the specified general transformation to a list of geometry entities, moving the entities within the active part.\n\"Entities\" may be NULL only if \"Count\" is 0.\nIf \"Mat\" includes scaling, the scale factors are ignored.\nIt is not an error if \"Count\" is 0."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to copy geometry along a specified direction?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCopyDirDis\nidEntity [in] id of geometry entity to copy\nDir [in] direction\nDis [in] distance\nidCopy [out] id of copied entity (NULL to ignore)\n\nCopies the specified geometry within the active part along specified direction \"Dir\" with distance \"Dis\". If \"idCopy\" is not NULL, the id of the new copy is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new copied entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCopyTransform\nidEntity [in] id of geometry entity to copy\nMat [in] transformation matrix\nidCopy [out] id of new entity (NULL to ignore)\n\nCopies the specified geometry entity and applies the specified general transformation to the copy, moving the copy within the active part. If \"idCopy\" is not NULL, the id of the new copy is output.\nIf \"Mat\" includes scaling, the scale factors are ignored."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a specified Copy to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCopy\nCopy [in] Copy data\nidCopy [out] Copy feature id (NULL to ignore)\n\nAdds the specified Copy(s) to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idCopy\" if the output is not required.\nnote:\nInterface cvxPartCopyInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to scale entities in the active part by input scale factors?"
            },
            {
                "role": "assistant",
                "content": "cvxPartScale2\nCount [in] number of entities\nidEnts [in] list of entity id's\nX_scale [in] X scale factor\nY_scale [in] Y scale factor\nZ_scale [in] Z scale factor\nidDatum [in] optional datum plane entity (input 0 to ignore)\nCentPnt [in] optional center point entity (input NULL to ignore)\n\nScales the specified entities in the active part by the input scale factors relative to the X, Y, Z axes and origin of the active part.\nIf \"idDatum > 0\", the entities(idEnts) are scaled relative to the origin and the X, Y, Z axes of the reference plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a tab feature in sheet metal?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdExtrudeTab\ndata [in] Smd Extrude Tab data\nidExtTab [out] id of tab (NULL to ignore)\n\nUse this function to create sheet metal flange feature, can create tab feature. Extrude a close profile to be a base tab.\nnote:\nInterface cvxPartSmdExtrudeTabInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a bend to a flange feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdExtrudeFlange\ndata [in] smd extrude flange data\nidExtFlange [out] id of smd extrude flange (NULL to ignore)\n\nUse this function to create sheet metal flange feature, can create flange feature. Extrude a close or open profile to be a flange, it will offset the thick and add the bend.\nnote:\nInterface cvxPartSmdExtrudeFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add full face flanges to multi-edges of a sheet metal part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFullFlange\ndata [in] Smd Full Flange data\nidFull [out] id of full flange ,NULL to ignore\n\nUse this function to add full face flanges to the multi-edges of a sheet metal part.\nnote:\nInterface cvxPartSmdFullFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the default values for the parameters of Smd Flange with Profile?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdProfFlangeInit\ndata [out] template command Smd Flange with Profile data\n\nInitialize the parameters of the cvxPartSmdProfFlange().\nDefault values are used when some parameters are set to NULL. When users want to know what the default value is, they can use the interface cvxPartSmdAtGet() to get it.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the default value for Smd Partial Flange data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdPartialFlangeInit\ndata [out] template command Smd Partial Flange data\n\nInitialize the parameters of the cvxPartSmdPartialFlange().\nDefault values are used when some parameters are set to NULL. When users want to know what the default value is, they can use the interface cvxPartSmdAtGet() to get it.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the template command Smd Hem Flange data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdHemFlangeInit\nhemType [in] 0 is Full hem, 1 is Partial hem.\ndata [out] template command Smd Hem Flange data\n\nInitialize the parameters of the cvxPartSmdHemFlange().\nDefault values are used when some parameters are set to NULL. When users want to know what the default value is, they can use the interface cvxPartSmdAtGet() to get it.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a lofted flange using smd lofted flange data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdLftFlange\ndata [in] smd lofted flange data\nidLft [out] feature id(NULL to ignore)\n\nUse this function to create lofted flange. It supports Fold/Unfold Sheet Metal Parts.\nnote:\nInterface cvxPartSmdLftFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for creating a swept flange?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdSweptFlange\ndata [in] smd swept flange data\nidSwept [out] feature id(NULL to ignore)\n\nSwept Flange is similar to Sweep, you need a profile and path to create the flange. To create a swept flange, you need an open profile sketch as the profile, and a series of existing sheet metal edges as the path.\nnote:\nInterface cvxPartSmdSweptFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for the SMD Fold by Line function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFoldByLine\ndata [in] smd Fold by Line data\nidFbl [out] feature id(NULL to ignore)\n\nUse this function to create bends along a line. This line can be a three-dimensional or two-dimensional line.\nnote:\nInterface cvxPartSmdFoldByLineInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSmdExtendFlange()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdExtendFlangeInit\ntype [in] extend flange type\ndata [out] smd extend flange data\n\nInitialize the parameters of the cvxPartSmdExtendFlange().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of cvxPartSmdFlangeInit function?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlangeInit\ndata [out] template command Smd Flange data\n\nInitialize the parameters of the cvxPartSmdFlange().\ncvxPartSmdAtGet();\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of using cvxMemZero() inside the interface?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdBendTaperDefDataInit\ntaperType [in] 0 is linear,Use an angle value or a distance value to taper the bend. 1 is tangent,Use a distance value to taper the bend. The edge of the bend is tangent to the web. default:0\ndata [out] smd bend taper definition side data\n\nInitialize the parameters of the cvxPartSmdBendTaper().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSmdNormalCut?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdNormalCutinit\ndata [out] template command Smd Normal Cut data\n\nInitialize the parameters of the cvxPartSmdNormalCut().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSmdCloseCorner()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdCloseCornerInit\ntype [in] method, 0-close by edge, 1- close by bend(face)\ndata [out] template command Smd Close Corner data\n\nInitialize the parameters of the cvxPartSmdCloseCorner().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing dimple data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdDimpleInit\ndata [out] dimple data\n\nInitialize the parameters of the cvxPartSmdDimple().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing the parameters?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdLouverInit\ndata [out] template command Smd Louver data\n\nInitialize the parameters of the cvxPartSmdLouver().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to perform punching forming on sheet metal?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdPunch\npData [in] Punch data\nidShape [out] id's of resulting shape (NULL to ignore)\n\nUse this function to act on the sheet metal, which can be completed punching forming. Pass in NULL for \"idShape\" if the output is not require, or it will return the new shape.\nnote:\nInterface cvxPartSmdPunchInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to output the id of the corresponding history operation for the added unfold?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdUnfold\nUnfold [in] SmdUnfold data\nidSmdUnfold [out] SmdUnfold id\n\nAdds the specified unfold(s) to the active part and outputs the id of the corresponding history operation.\nPass in NULL for \"idSmdUnfold\" if the output is not required."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to apply flat pattern to a drawing sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlatten\ndata [in] smd flatten data\nidFtr [out] feature id(NULL to ignore)\n\nUse this command to generate flat entity and flat pattern. User can create multiple flatten commands in one file, which generate two sub-nodes of flat entity and flat pattern. Flat pattern applies to drawing sheet.\nIf there had crated flat patten in sheet metal module, when making drawing sheet, user can project flat pattern by \"Standard\".\nnote:\nInterface cvxPartSmdExtendFlangeInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartSmdChangeBend()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdChangeBendInit\ntype [in] change bend type\ndata [out] smd change bend data\n\nInitialize the parameters of the cvxPartSmdChangeBend().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing cvxPartSmdRip()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdRipInit\ndata [out] smd rip data\n\nInitialize the parameters of the cvxPartSmdRip().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdMarkBendInit\ndata [out] smd mark bend data\n\nInitialize the parameters of the cvxPartSmdMarkBend().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the structure for sketch nesting blank data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkNestingBlankDataInit\ndata [out] blank data of sketch nesting.\n\nInitialize the structure svxSkNestingBlankData.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize nesting profile data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkNesting\ndata [in] nesting data of sketch\n\nNesting can directly pick any loop enclosed geometries as Nesting Profiles and Blank to calculate nesting, the result include a sketch block and a report file in HTML format.\nUsers can use cvxSkNestingProfileDataInit() and cvxSkNestingBlankDataInit() to initialize the structures svxSkNestingProfileData and svxSkNestingBlankData respectively.\nThen use cvxSkNestingInit() to initialize the structure svxSkNestingData.This interface will not allocate space for the points in the structure, so the users need toassign values to the sub structure pointers in the structure.\nnote:\nNesting command needs a specified dongle key inserted into user's PC to activate before starting."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a polyline with a list of 2D points?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAddPolyline\ncntPnt [in] count of 2D points\npnts [in] list of 2D points\naddCns [in] 1-add constraint, else 0\n\nCreate the polyline with the input points."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a circle using three points?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCir3pt\nP1 [in] first point on circle\nP2 [in] second point on circle\nP3 [in] third point on circle\nidEnt [out] id of new 2D circle entity(NULL to ignore)\n\nAdds a 2D circle to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new circle entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the id of the new 2D arc entity after adding it to the sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkArc3pt\nStart [in] start point\nEnd [in] end point\nMid [in] mid (i.e. through) point\nidEnt [out] id of new 2D arc entity(NULL to ignore)\n\nAdds a 2D arc to the active sketch or sheet. If \"idEnt\" is not NULL, the id of the new arc entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize ellipse data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkEllipseInit\ndata [out] ellipse data\n\nInitialize the parameters of the cvxSkEllipse().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create points along a curve with equal spacing?"
            },
            {
                "role": "assistant",
                "content": "cvxSkPntsOnCrv\nidCrv [in] id of curve entity in active object\nPnt [in] reference point that specifies which end of the curve to start from; \n\n this input is only necessary if \"Dist\" is defined (i.e. non-zero); \n\n if this argument is NULL, the geometric start point of the curve will be used if needed.\nNum [in] the number of points to create along the curve; if \"Dist\" is zero, then the specified number of points will be created along the curve with equal spacing between them; \n\n if \"Dist\" is \"non-zero\", then \"Num\" points will be created along the curve with \"Dist\" as the spacing between each point; in this case, \"Pnt\" should be input and an extension option should be defined in case the specified number of points at the specified distance exceeds the length of the curve; \n\n if \"Num\" is input as zero, then \"Dist\" must be specified; in this case, points are created the specified distance apart, beginning at the end of the curve closest to \"Pnt\" and ending at/before the other end of the curve.\nDist [in] the distance (mm) between points (see description of \"Num\" argument)\nOpt [in] extension option is \"Dist\" is non-zero\nCount [out] if this argument is not NULL, output the number of points created\nidEnts [out] if \"Count\" is not NULL, and this argument is not NULL, a list of the database id's of the point entities created by this function is output. \n\n Memory for the list is allocated by this function. The calling procedure is responsible to free the memory.\n\nCreates point entities spaced on and along a curve based on the specified input parameters."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize variables for the cvxSkReadyText function?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReadyText\nRdText [in] data of ready sketch text\nidRdText [out] index of the ready sketch text (NULL to ignore)\n\nAdds a ready sketch text to the active sketch.\nPass in NULL for \"idRdText\" if the output is not required.\nnote:\nInterface cvxSkReadyTextInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize sketch polygon data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkNgonsInit\ntype [in] sketch polygon type\ndata [out] sketch polygon data\n\nInitialize the svxSkNgons structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any specific way to assign a value to the variable 'data' before calling this function?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCrvIntInit\ndata [out] 2D interpolated curve data\n\nInitialize the parameters of the cvxSkCrvInt().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize struct svxSplinePnt using cvxSplinePntInit?"
            },
            {
                "role": "assistant",
                "content": "cvxSkSplineInit\ndata [out] Spline data\ncount [in] count of points\n\nInitialize the parameters of the cvxSkSpline(). If count > 0, this function allocates memory to data->Pnts based on the value of count and initializes the data->Pnts structure. Otherwise data->Pnts will be initialized to NULL.\ncvxSplinePntInit() can initialize struct svxSplinePnt (data->Pnts).\nIf the user needs to clear \"data\" and count > 0, the cvxMemFree() interface needs to be called to free \"data->Pnts\" memory.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to initialize the svxConic3ptData through interface cvxSkConic3ptInit()?"
            },
            {
                "role": "assistant",
                "content": "cvxSkConic3pt\nData [in] 3 Point Conic data\nidEnt [out] id of new curve\n\nAdd a 3 Point Conic to the active sketch or Drawing.\nIf \"idEnt\" is not NULL, the id of the new curve entity is output.\nnote:\nStructure svxConic3ptData can be initialized through interface cvxSkConic3ptInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize parameters for svxCrvIntData using interpolated points?"
            },
            {
                "role": "assistant",
                "content": "cvxSkCrvIntScaleInit\nnPnt [in] number of the points\npPnts [in] points list\nstartScale [out] start tangent scale factor(NULL to ignore)\nendScale [out] end tangent scale factor(NULL to ignore)\n\nInitialize the parameters StartScale and EndScale of svxCrvIntData by the interpolated points."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxSkChamfer?"
            },
            {
                "role": "assistant",
                "content": "cvxSkChamferInit\ndata [out] information of chamfer in sheeting or sketch\n\nInitialize the parameters of the cvxSkChamfer().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the input data required for power trim?"
            },
            {
                "role": "assistant",
                "content": "cvxSkPowerTrim\npwTrim [in] power trim input data\n\nUse this function to trim the sketch bewteen start point and end point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to start using the trim/extend input data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimExtInit\ntrimExt [out] trim/extend input data\n\nInitialize the svxSkTrimExt structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to trim a sketch using input data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimSplitCrv\ntrimSpl [in] trim/split input data\n\nUse this function to trim or split the sketch by the input svxSkTrimSplit data.\nnote:\nInterface cvxSkTrimSplitInit() can initialize variables Pattern of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize trim/split input data?"
            },
            {
                "role": "assistant",
                "content": "cvxSkTrimSplitCorInit\ntrimSpl [out] trim/split input data\n\nInitialize the svxSkTrimSplitCor structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxSkDelBowties to delete bowties of curves?"
            },
            {
                "role": "assistant",
                "content": "cvxSkDelBowties\nnumCrv [in] the number of curves\nidCrv [in] the list id of curves\n\nUse this function to delete the bowties of specific curves."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to automatically add constraints and dimensions to the current sketch geometry?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAutoCons\nBasePnt [in] base point (NULL to use the default sketch origin)\nCount [in] number of entities to add constraints and dimensions (0 for all entities)\nidEnts [in] list of entities to add constraints and dimensions (NULL for all entities)\n\nUse the function to analyze the current sketch geometry and add constraints and dimensions automatically."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create coincident constraints for a specific sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAutoAddCoinCons\nidSketch [in] index of sketch (-1 to use the active sketch)\n\nCreate coincident constraints for the specified sketch/current active sketch. This function just add the constraints, not solve the constraints."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to add a linear constraint dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxSkAddConsDim\ntype [in] type of constraint dimension\npData [in] data of constraint dimension\n\nAdd the specified constraint dimension with specified data and the type.\nThe \"pData\" defined by current command. If the \"type\" is VX_SK_CONSDIM_LINEAR or VX_SK_CONSDIM_LINEAR_OFFSET, all the data of \"pData\" should be defined.\nIf the \"type\" is VX_SK_CONSDIM_ANGULAR, the data of \"pData\" should be defined by the type of svxConsDim.\nIf the \"type\" is VX_SK_CONSDIM_RADIAL, the second point and second entity don't need to be defined.\nIf the \"type\" is VX_SK_CONSDIM_ARC_LENGTH, the second point, second entity and the type of svxConsDim don't need to be defined.\nThe function does not yet support the creation of type VX_SK_CONSDIM_SYMMETRY and type VX_SK_CONSDIM_PERIMETER dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxSkReference?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReferenceInit\ndata [in] reference geometry input data\n\nUse this function to initialize the parameters of the cvxSkReference().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxSkMove()?"
            },
            {
                "role": "assistant",
                "content": "cvxSkMoveInit\ntype [in] move method\ndata [out] Region set data\n\nInitialize the parameters of the cvxSkMove().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for rotation?"
            },
            {
                "role": "assistant",
                "content": "cvxSkRotate\ndata [in] Rotate data\ncnt [out] number of Entity ids that created (input NULL to ignore)\nidEnts [out] id of Entities that created (input NULL to ignore)\n\nRotate the specified entity(entities) within the active 2D environment(drawing of sketch). If \"idEnts\" is not NULL and value of Setting is VX_ROTATE_COPY, the ids of the rotate entity is output.\nnote:\nInterface cvxSkRotateInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize variables for mirroring entities?"
            },
            {
                "role": "assistant",
                "content": "cvxSkMirr\ndata [in] mirror data\ncnt [out] number of Entity ids that created (input NULL to ignore)\nidEnts [out] id of Entities that created (input NULL to ignore)\n\nMirror the specified entity(entities) within the active 2D environment(drawing of sketch). If \"idEnts\" is not NULL, the ids of the mirrored entity is output.\nnote:\nInterface cvxSkMirrInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify X and Y scale factors for scaling entities?"
            },
            {
                "role": "assistant",
                "content": "cvxSkScale\nCount [in] number of entities\nidEnts [in] list of entity id's\nX_scale [in] X scale factor\nY_scale [in] Y scale factor\nPnt [in] optional reference point (input NULL to ignore)\n\nScales the specified entities in the active sketch or sheet by the input scale factors relative to the X, Y axes and origin of the active sketch If \"Pnt\" is not NULL, its coordinates are used as the center of scaling."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize variables for the Pattern input in cvxSkPattern function?"
            },
            {
                "role": "assistant",
                "content": "cvxSkPattern\nPattern [in] pattern input data\ncnt [out] count of idEnts(can be NULL)\nidEnts [out] list of new entity id.(can be NULL)\n\nUse this function to pattern of sketches patterns. Three different methods of patterning are available, each method requires different types of input.\nnote:\nInterface cvxSkPtnDataInit() can initialize variables Pattern of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a copy of a sketch in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSkIns\nFile [in] name of ZW3D file that contains the sketch as root object\nName [in] name of sketch root object\nPlane [in] sketch insertion plane\nidSketch [out] id of new sketch (NULL to ignore)\n\nInserts a copy of the specified sketch in the active part on the specified insertion plane. It is assumed that \"File\" resides in one of the default search directories. If \"idSketch\" is not NULL, the id of the new sketch is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to align a new sketch with a specified insertion plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSkNew\nPlane [in] sketch insertion plane\nidSketch [out] id of new sketch\n\nAdds a new sketch to the active part, aligned with the specified insertion plane. The sketch is activated for editing.\nExit the sketch edit mode (back to editing the parent part) using cvxRootExit() or cvxSkActivate(0,0). If \"idSketch\" is not NULL, the id of the new sketch is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxHatchPtnData structure?"
            },
            {
                "role": "assistant",
                "content": "cvxHatchPtnDataInit\ndata [out] cosmetic sketch hatch pattern definition data\n\nInitialize the svxHatchPtnData structure.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the svxSketchData structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCosSkPlane\nSkData [in] sketch input data\nisAddHatPtn [in] 1 if add hatch pattern ,else 0\nPatData [in] hatch pattern input data (NULL to use default)\nidSketch [out] id of new sketch (NULL to ignore)\n\nAdds a new cosmetic sketch to the active part, aligned with the specified insertion plane. The sketch is activated for editing.\nExit the sketch edit mode (back to editing the parent part) using cvxRootExit() or cvxSkActivate(0,0). If \"idSketch\" is not NULL, the id of the new sketch is output.\nnote:\nStructure svxSketchData can be initialized through interface cvxMemZero(). \n\n Structure svxHatchPtnData can be initialized through interface cvxHatchPtnDataInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use critical point while finding a point by two lines?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPntBy2LinesInit\ndata [out] point by two lines data\nuseCirPnt [in] 1- to use critical point, else 0\n\nInitialize the parameters of the svxPntBy2Lines. It will set data->pntOnCrv1.critTyp and data->pntOnCrv2.critTyp to VX_START_POINT if useCirPnt = 1.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to destruct data after executing a user-defined feature command?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFTerm\n\nDestruct data after execute a user define feature command."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the source file of a UDF feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInqPath\nidFtr [in] index of UDF feature\nfile [out] source file path of UDF feature\n\nGet source file full path of specified UDF feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about sub-features in a UDF feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInqSubFtrs\nidFtr [in] index of UDF feature\ncount [out] number of sub-feature in UDF feature\nftrList [out] list of sub-feature in UDF feature\n\nGet sub-feature list in specified UDF feature.\nThis function allocates memory for the array output via \"ftrList\". The calling procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the default open directory for the wizard UDF?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFWizardPathSet\npath [in] full path of UDF\n\nSet the default open directory for the wizard UDF."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the full path of UDF for the UDF wizard?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFWizardPathGet\nDir [out] full path of UDF\n\nGet the default open directory for the wizard UDF."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the path of UDF for insertion?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUDFInsPathGet\nDir [out] full path of UDF\n\nGet the default open directory for the Insert UDF."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add 3D points entity to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPntNew\nCount [in] number of points\nPntData [in] points data\nidAlignPln [in] id of align plane\nPrjToPln [in] whether to project point to alignment plane\nidPntFtr [out] id of new point feature\n\nAdds 3D points entity to the active part.\nIf the id of the alignment plane \"idAlignPln\" is valid and \"PrjToPln\" is 1, the input point is projected onto the specified alignment plane.\nIf \"idPntFtr\" is not NULL, the id of the new point feature is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create points along a curve with specified distance between them?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPntsOnCrv\nidCrv [in] id of curve entity in active object\nPnt [in] reference point that specifies which end of the curve to start from; this input is only necessary if \"Dist\" is defined (i.e. non-zero); if this argument is NULL, the geometric start point of the curve will be used if needed.\nNum [in] the number of points to create along the curve; if \"Dist\" is zero, then the specified number of points will be created along the curve with equal spacing between them; \n\n if \"Dist\" is \"non-zero\", then \"Num\" points will be created along the curve with \"Dist\" as the spacing between each point; in this case, \"Pnt\" should be input and an extension option should be defined in case the specified number of points at the specified distance exceeds the length of the curve; \n\n if \"Num\" is input as zero, then \"Dist\" must be specified; in this case, points are created the specified distance apart, beginning at the end of the curve closest to \"Pnt\" and ending at/before the other end of the curve.\nDist [in] the distance (mm) between points (see description of \"Num\" argument)\nOpt [in] extension option is \"Dist\" is non-zero\nCount [out] if this argument is not NULL, output the number of points created\nidEnts [out] if \"Count\" is not NULL, and this argument is not NULL, a list of the database id's of the point entities created by this function is output. \n\n Memory for the list is allocated by this function. The calling procedure is responsible to free the memory.\n\nCreates point entities spaced on and along a curve based on the specified input parameters."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartLine()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartLineInit\nlineData [out] 3D line data\n\nInitialize the parameters of the cvxPartLine().\nnote:\nDo not assign a value to variable \"lineData\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing cvxPartPolyline?"
            },
            {
                "role": "assistant",
                "content": "cvxPartPolylineInit\ndata [out] 3D polyline data\n\nInitialize the parameters of the cvxPartPolyline().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to create a 3D arc with start, end, and mid points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartArc3pt\nStart [in] start point\nEnd [in] end point\nMid [in] mid (i.e. through) point\nidEnt [out] id of new 3D arc entity\n\nAdds a 3D arc to the active part. If \"idEnt\" is not NULL, the id of the new arc entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to initialize 3D arc data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartArcInit\narcData [out] 3D arc data\n\nInitialize the parameters of the cvxPartArc().\nnote:\nDo not assign a value to variable \"arcData\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to empty everything before initializing circleData?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCircleInit\ncircleData [out] 3D circle data\n\nInitialize the parameters of the cvxPartCircle().\nnote:\nDo not assign a value to variable \"circleData\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 3D rectangle to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRectangle\nrectData [in] rectangle input data\niCnt [out] number of output entities\nidEnt [out] id of new 3D rectangle entities\n\nAdd a 3D rectangle to the active part. The rectangle lies on the specified plane with the specified center. Commonly, the output number \"iCnt\" should be 4. If \"idEnt\" is not NULL, the id of 4 lines of the rectangle is output.\nnote:\nStructure svxRectangleData can be initialized through interface cvxPartRectangleInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 3D circle to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCirRad\nPlane [in] insertion plane\nRadius [in] radius (mm)\nidEnt [out] id of new 2D circle entity\n\nAdds a 3D circle to the active part. The circle lies on the specified plane with its center at the plane's origin. If \"idEnt\" is not NULL, the id of the new entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to specify the center and plane for the 3D ellipse?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEllipse\nellipseData [in] ellipse input data\nidEnt [out] id of new 3D ellipse entity\n\nAdd a 3D ellipse to the active part. The ellipse lies on the specified plane with the specified center. If \"idEnt\" is not NULL, the id of the new entity is output.\nnote:\nStructure svxRectangleData can be initialized through interface cvxPartEllipseInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to initialize parameters by interpolated points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvIntScaleInit\nnPnt [in] number of the points\npPnts [in] points list\nstartScale [out] start tangent scale factor(NULL to ignore)\nendScale [out] end tangent scale factor(NULL to ignore)\n\nInitialize the parameters StartScale and EndScale of svxCrvIntData by the interpolated points."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to clear 'data' when count is greater than 0?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSplineInit\ndata [out] Spline data\ncount [in] count of points\n\nInitialize the parameters of the cvxPartSpline(). If count > 0, this function allocates memory to data->Pnts based on the value of count and initializes the data->Pnts structure. Otherwise data->Pnts will be initialized to NULL.\ncvxSplinePntInit() can initialize struct svxSplinePnt (data->Pnts).\nIf the user needs to clear \"data\" and count > 0, the cvxMemFree interface needs to be called to free \"data->Pnts\" memory.\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the id of the new curve entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSpline\nPntData [in] spline data\nidEnt [out] id of new 2D spline entity (NULL to ignore)\n\nAdds a 3D curve interpolated through through the input points/control points with the specified data to the active part.\nIf \"idEnt\" is not NULL, the id of the new curve entity is output.\nnote:\nStructure svxSplineData can be initialized through interface cvxPartSplineInit()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartInterXCurve()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInterXCurveInit\ndata [out] inter curve data\n\nInitialize the parameters of the cvxPartInterXCurve().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing curve on face through points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvOnFaceThruPtsInit\ndata [out] curve on face through points data\n\nInitialize the parameters of the cvxPartCrvOnFaceThruPts().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing iso-curve on face data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIsoCurveOnFaceInit\ndata [out] iso-curve on face data\ncrvIsoType [in] iso-curve on face methods\n\nInitialize the parameters of the svxIsoCrvOnFaceData for cvxPartIsoCurveOnFace().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to empty everything before initializing the isocline curve data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIsoclineCurveInit\ndata [out] isocline curve data\ntype [in] create isocline curve's type (single angle or multiple angles)\n\nInitialize the parameters of the svxIsoclineCrvData for cvxPartIsoclineCurve().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create new curves by projecting two existing curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCombinedProj\ndata [in] combined projection data\ncntEnts [out] count of new curve entities (NULL to ignore)\nidEnts [out] index of new curve entities (NULL to ignore)\n\nUse this command to create one or more new curves by project two curves. Please note that the projections of two curves must intersect, otherwise ZW3D will alarm this command failed.\nnote:\nThe calling procedure MUST deallocate the output list with cvxMemFree() if cntEnts and idEnts are not NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to initialize the constraints data for blending curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBlendCrvsConsInit\nconsData [out] curve blend constraints data\nobjType [in] object type (curve or face)\n\nInitialize the parameters of the svxCrvBlendCons for cvxPartBlendCrvs().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to initialize variables for creating curve blends?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBlendCrvs\ndata [in] curve blend data\nidEnt [out] id of blend curve (NULL to ignore)\n\nUse this command to create a curve blend between two curves, lines, arcs, face edges or points. If \"idEnt\" is not NULL, the id of the shape created by this function is output via \"idEnt\".\nnote:\nInterface cvxPartBlendCrvsInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a 3D curve-list entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvList\nCount [in] number of curves in curve-list\nCurves [in] pointer to list of 3D curve id's\nidEnt [out] id of new curve-list entity\n\nAdds a 3D curve-list entity which groups the specified curves. Features like Sweep, Revolve and Extrude may be applied to 3D curve-lists as well as 2D sketches. If \"idEnt\" is not NULL, the id of the new entity is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the silhouettes of a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCurveSilh\nidCurve [in] curve id\ndir [in] project direction\niCnt [out] number of new curves (NULL to ignore)\nidList [out] id of new curves (NULL to ignore)\n\nProject a 2D curve along a direction, to find its silhouettes. This will split the curve on its self-intersections. Output new silhouette curves via \"idList\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartCrvFillet()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvFilletInit\ndata [out] fillet data\n\nInitialize the parameters of the cvxPartCrvFillet().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to empty everything before initializing the chain fillet data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvFilletChainInit\ndata [out] chain fillet data\n\nInitialize the parameters of the cvxPartCrvFilletChain().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get chamfer data without assigning a value to the variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvChamferInit\ndata [out] chamfer data\n\nInitialize the parameters of the cvxPartCrvChamfer().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create chamfers of equal setback around a chain of curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvChamferChain\ndata [in] chain chamfer data\nidChamfer [out] index of new chamfer feature (NULL to ignore)\n\nUse this function to create chamfers of equal setback around a chain of curves. There will be a chamfer between each adjacent curve in the chain.\nnote:\nInterface cvxPartCrvChamferChainInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to split a curve at multiple points?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvSplitAtPnts\nidCurve [in] curve id\nCountPnts [in] number of points to split at\nPoints [in] list of points to split at\nCountCrvs [out] number of curves after split (NULL to ignore)\nNewCrvs [out] list of curves after split (NULL to ignore)\n\nSplit a curve at specified points. Outputs a list of indices of the new curves after split. The calling procedure MUST deallocate the internal memory of each element in the output list by calling cvxCurveFree(), after which the output list MUST be deallocated with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to select boundary curves to split or trim to?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvTrimWithCrv\ndata [in] trim with curve data\nCountCrvs [out] count of new curve entities (NULL to ignore)\nNewCrvs [out] index of new curve entities (NULL to ignore)\n\nTrim or split curves to a set of boundary curves. First select the boundary Curves to split or trim to. Then select the curve Segments to delete, keep, or split. Curves can be split or trimmed by each curve in the set of boundary curves. At the part level you can trim 3D non-intersecting curves.\nnote:\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a specific way to set up the data for converting curves to arcs/lines?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCrvConvertToArcsInit\ndata [out] curves convert to arc/line data\n\nInitialize the parameters of the cvxPartCrvConvertToArcs().\nnote:\nDo not assign a value to variable \"data\" before calling this function. The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a component in an active CamPlan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmCompDelete\nidx_CmComp [in] index of the component\n\nDelete the component in active CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to set the component attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxCmCompSetAttr\nidx_Cmcomp [in] index of the component\ncnt [in] count of attributes user wanna set\nattr [in] the enumerations user wanna set\nvalue [in] the values needed\n\nSet the component attributes. \n\n \"attr\" should not be \"ZW_CAM_COMP_ATTR_FACES\". \n\n value->type: ZW_CAM_ATTR_VALUE_TYPE_INTEGER \n\n value->cnt: 1 \n\n value->data: evxCmCompClass"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the names of components?"
            },
            {
                "role": "assistant",
                "content": "cvxCmCompInqInfoByLongPath\ncompCnt [out] number of components\ncompNames [out] name of components\ncompPaths [out] path of components\n\nGet the components' information, including name and file path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the value of specific attributes of a folder?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFolderGetAttr\nidx_folder [in] index of the folder\ncnt [in] cout of the attributes\nattr [in] list of evxCmFolderAttr user wanna get\nvalue [out] list of values return\n\nInquire the attributes of the folder. Its value is output via \"value\".\nvalue->type    &  value->cnt  &  value->data depend on \"attr\"\nZW_CAM_ATTR_VALUE_TYPE_STRING    <=32                 CM_FOLDER_NAME\nZW_CAM_ATTR_VALUE_TYPE_INTEGER   number      index    CM_FOLDER_SUB\n\nUser needs to allocate memory for \"value\", and free memory for \"value->data\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a folder to the OPS item?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpInsFolder\nidx_out [out] index of folder\n\nInsert a Folder to the OPS item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to update the folder name?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFldRename\nidx_fld [in] folder index\nfld_newName [in] new folder name\n\nChange the folder name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the clearances parameters of a form?"
            },
            {
                "role": "assistant",
                "content": "cvxCmGetClearance\ndClearZ [in] Clearances Form's Clear Z\ndAppZ [in] Clearances Form's Approach Z\ndRtZ [in] Clearances Form's Retract Z\ndAutoClear [in] Clearances Form's Auto Clear\niMiniClr [in] Clearances Form's Check the status of Auto Clear\n\nGet the parameter of the clearances."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a NC item to the NC folder?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOutputInsNC\nidx_fld [in] index of nc folder to insert. -1:root folder of Output\nidx_out [out] index of nc or nc folder\nfldType [in] insert type\n\nInsert a NC item or NC folder to the NC folder."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the attribute of an NC item?"
            },
            {
                "role": "assistant",
                "content": "cvxCmGetOutputNCSet\nidx_nc [in] index of nc\nncSet [out] attribute of nc\n\nGet attributes of the NC item. Its value is output via \"ncSet\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the count of operations to be inserted?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOutputInsOps\nidx_nc [in] index of nc\ncnt [in] count of operations\nidx_op [in] list of operations\n\nInsert operations to the NC item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the output files for a specific NC item?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOutputNC\nidx_nc [in] index of nc\noutType [in] out type\n\nOutput files of the NC item, depends on evxCmOutType."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a frame based on a Cartesian coordinate system?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameInsert\nframe_name [in] fame name wanna set\norigin_point [in] origin point to construct the coordinate system\nx_point [in] point in axis X\ny_point [in] point in axis Y\nidx_frame [out] index of the frame\n\nInsert the Frame based on Cartesian coordinate system in the active CamPlan. The 3 svxPoints are not used at this version."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the attribute value of a specific frame?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameGetAttr\nidx_frame [in] index of the frame\nattr [in] enumeration of the attribute\nvalue [out] return value; user needs to free the memory\n\nInquire the Frame attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the retract Z value for a frame?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameSetAttr\nidx_frame [in] index of the frame\nattr [in] enumeration of the attribute\nvalue [in] the value wanna set\n\nSet the Frame attributes.\n\"value->type\"                 &     \"value->cnt\" depends on \"attr\", as follows:\nZW_CAM_ATTR_VALUE_TYPE_STRING       <=32     CM_FRAME_NAME\nZW_CAM_ATTR_VALUE_TYPE_DOUBLE       1        CM_FRAME_CLEAR_Z\n                                             CM_FRAME_APPROACH_Z\n                                             CM_FRAME_RETRACT_Z\n\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the matrix of a frame?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFrameGetMatrix\nidxFrame [in] index of the frame\nframeMat [out] frame matrix\n\nGet the frame matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a new feature in the component?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrInsertNew\nftrType [in] type of the feature\ncnt [in] count of the geometries\ngeom [in] geometry indexes\ndepths [in] depths of holes\nidx_FtrGrp [out] index of feature\n\nAdd a feature in the component.\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a feature with a specific type?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrInsertSK\nftrType [in] type of the feature\nftrName [in] feature name which needs to be added to the new member\nidxSk [in] index of the sketch where the geom is located.\ncnt [in] feature data\ngeom [in] index of geom\nidxFtrGrp [out] index of feature\n\nAdd a feature in the sketch."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to obtain the curve indices in a part?"
            },
            {
                "role": "assistant",
                "content": "cvxCmGetCrvId\nnumLine [out] number of curve\nlstLines [out] list of curve id\n\nGet curves' index in part"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the available display modes for cam plan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmPlanDispSetMode\niMode [in] display mode\n\nSet cam plan display mode."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the attribute of a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxCmFtrSetAttr\nidx_ftrgrp [in] index of the feature\ncnt [in] count of the attributes\nattr [in] Attributes of interest\nvalue [in] values to assign to the feature\n\nModify the attribute of the feature.\nvalue->type:   ZW_CAM_ATTR_VALUE_TYPE_INTEGER\nvalue->cnt:    1\nvalue->data:   0(\"part\")\n               1(\"contain\")\n\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the attributes of a profile curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCmProfSetAttr\nprof_idx [in] profile feature index\ncurve_idx [in] curve in profile feature index\nnewOffset [in] offset value\nnewDraft [in] draft value\ntolloc [in] tool location value\n\nChange the profile curve parameters"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxCmMachineInsert\nmachine_class [in] machine class\nmachine_type [in] machine type\nsub_type [in] machine sub_type\nidx_machine [out] index of machine\n\nInsert a machine to the cam plan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to delete a machine?"
            },
            {
                "role": "assistant",
                "content": "cvxCmMachineDelete\nidx_machine [in] machine index\n\nDelete the machine."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the machine's class attribute?"
            },
            {
                "role": "assistant",
                "content": "cvxCmMachineSetAttr\nidx_machine [in] index of the machine\nattr [in] type of attribute\nvalue [in] value of attribute\n\nModify the machine's attribute .\n\"value->type\"          &     \"value->cnt\"   &value->data depends on     \"attr\", as follows:\nZW_CAM_ATTR_VALUE_TYPE_STRING       <=32                                CM_MACH_NAME\n                                                                        CM_MACH_POST_CONFIGURATION\nZW_CAM_ATTR_VALUE_TYPE_INTEGER      1       evxCmMachClass              CM_MACH_CLASS\n                                            evxCmMachType               CM_MACH_TYPE\n                                            evxCmMachSubType            CM_MACH_SUBTYPE\n                                            evxCmMachCutCompenation     CM_MACH_CUT_COMPENSATION"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove a tool from the active machine?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolChangerDelete\nidx_toolchanger [in] tool index\n\nDelete the tool changer in the active machine.\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to delete a specific operation in the active CamPlan?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpDelete\nidx_Op [in] index of operation\n\nDelete an operation in the active CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove a component from an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpRemoveComp\nidx_Op [in] index of the operation\nidx_CmComp [in] index of the component\n\nRemove the component of the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to delete a feature from an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpRemoveFtr\nidx_Op [in] index of the operation\nidx_ftrgrp [in] index of the feature\n\nRemove the feature of the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to add a tool to an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpAddTool\nidx_Op [in] index of the operation\nidx_Tool [in] index of the tool\n\nAdd a tool in the target operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name and class of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpGetAttr\nidx_Op [in] index of the operation\ncnt [in] count of the attributes\nattr [in] enumerations user wanna get\nvalue [out] the values return\n\nInquire the attributes of the operation. Output a list of svxCmAttrValue via \"value\".\nNot all evxCmQmOpAttr is available for different type of Operation.\nAs follows are 5 Operation Type,\n   value->type        &             value->cnt   & value->data depend on \"attr\"\nZW_CAM_OPERATION_PROFILECUT:\n   ZW_CAM_ATTR_VALUE_TYPE_STRING    <=32                 ZW_CAM_QM_OPERATION_ATTR_NAME\n                                                         ZW_CAM_QM_OPERATION_ATTR_CLASS\n                                                         ZW_CAM_QM_OPERATION_ATTR_FRAME\n   ZW_CAM_ATTR_VALUE_TYPE_INTEGER   1     index of tool  ZW_CAM_QM_OPERATION_ATTR_TOOL\nZW_CAM_OPERATION_SMOOTHFLOW\nZW_CAM_OPERATION_OFFSET2D\nZW_CAM_OPERATION_OFFSET3D\nZW_CAM_OPERATION_ZLEVEL:\n   ZW_CAM_ATTR_VALUE_TYPE_STRING    <=32                 ZW_CAM_QM_OPERATION_ATTR_NAME\n                                                         ZW_CAM_QM_OPERATION_ATTR_CLASS\n                                                         ZW_CAM_QM_OPERATION_ATTR_FRAME\n   ZW_CAM_ATTR_VALUE_TYPE_DOUBLE    1                    ZW_CAM_QM_OPERATION_ATTR_SURF_THICK\n                                                         ZW_CAM_QM_OPERATION_ATTR_MINTOOLHEIGHT\n   ZW_CAM_ATTR_VALUE_TYPE_INTEGER   1     index of tool  ZW_CAM_QM_OPERATION_ATTR_TOOL\n\nThe following is a simple code to get operation's frame and surface thick: \nUser needs to allocate memory for \"value\", and free memory for \"value->data\".\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I use a config file to define the attributes of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpSetAttrAsCfg\nidx_Op [in] index of the operation\ncfg_location [in] cfg file location with file name\n\nSet the attributes of the operation depends on the config file. To get a config file: \n\n\nReturns ZW_API_NO_ERROR if it succeeds; the other value of evxErrors if function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the attributes of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpGetAttr2\nidx_op [in] index of the operation\nfield [in] field id of the attribute\nitem [in] item id of the attribute\nis_on [out] on/off flag (MAYBE NULL)\nvalue [out] value of the attribute, caller should allocate memory\n\nInquire the attributes of the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set a point value to an operation parameter?"
            },
            {
                "role": "assistant",
                "content": "cvxCmSetOpPoint\nidx_op [in] index of operation\np0 [in] point value\nfield [in] operation parameter's field\n\nSet one point to operation parameter."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to update the name of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpRename\nidx_op [in] operation index\nop_newName [in] new name\n\nChange the operation name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the class of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpInqClass\nidx_Op [in] index of operation\nopClass [out] class of operation 0:rough,1:finish\n\nInquire operation's class"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about the type of an operation?"
            },
            {
                "role": "assistant",
                "content": "cvxCmOpInqTypeS\nidx_Op [in] index of operation\nopType [out] type of operation\nnByte [in] size of type\n\nGet the operation's type"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to ensure there is stock for all operations?"
            },
            {
                "role": "assistant",
                "content": "cvxCmSolidVerify\ngouge [out] check gouge value\n\nVerify all operations. There must be a stock."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a string from the configuration file using form and field id?"
            },
            {
                "role": "assistant",
                "content": "cvxCmConfigFileGetString\nform [in] form name\nfield [in] field id number\ncasesensitive [in] case sensitive comparison flag\ndbstring [inout] DB string\nguistring [inout] GUI string\nifound [out] flag to see if item was found\n\nYou can only specify either dbstring or guistring but not both. Whichever one is not specified is returned as output. If the requested string cannot be found then the input string is returned as output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the index of an object by its name?"
            },
            {
                "role": "assistant",
                "content": "cvxCmInqIndexFromName\nobjClass [in] class of object\nsName [in] name of object\nindex [out] index of object found (or -1 if not found)\n\nGet the object index for the object with the specified name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to insert a tool as a template?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolInsertAsTemplate\ntemplate_path [in] template path\nfile_name [in] file name\nlibrary_name [in] library name\ntool_name [in] tool name\nidx_tool [out] tool index\n\nInsert the tool from the library into CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the value of a specific tool attribute?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolGetAttr\nidx_tool [in] index of the tool\nattr [in] enumeration of tool attribute\nvalue [out] the values return; user needs to free the memory\n\nInquire the tool's attribute.\nsee:\ncvxCmToolSetAttr()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to use a template path for inserting a holder?"
            },
            {
                "role": "assistant",
                "content": "cvxCmHolderInsertAsTemplate\ntemplate_path [in] template path\nfile_name [in] file name\nlibrary_name [in] library name\nholder_name [in] holder name\nidx_holder [out] holder index\n\nInsert the holder from the library into CamPlan."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the tool attribute by index?"
            },
            {
                "role": "assistant",
                "content": "cvxCmToolGetData\nidx_tool [in] index of the tool\nattr [in] enumeration of tool attribute\nvalue [out] value of the attribute, caller should allocate memory\n\nInquire the tool's attribute."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the value of a setting from the Configuration form?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetNumber\nName undocumented\nValue undocumented\n\nOutputs the value of a setting from the Configuration form/config file. The variable value is assumed to be a number (0 is assigned to \"Value\" when the value is not a number).\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\\\supp\\\\config.xml.\n\n@param [in] Name name of config file variable\n@param [out] Value value of the specified variable\n\n@retval succeeds\n-        ZW_API_NO_ERROR\n@retval fail\n-        ZW_API_GENERAL_ERROR - variable does not exist and set \"value\" to 0"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the color from a variable with RGB components?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetRgb\nName undocumented\nRgb undocumented\n\nOutputs the value of a setting from the Configuration form/config file. \n\n\nThe variable value is assumed to be the RGB components of a color, i.e. a comma-separated list of 3 integers between 0 and 255.\nThis function should not be used to get the color from a variable whose value is one of the standard color names rather than a 3-integer RGB color. \n\n\nUse the cvxConfigGetColor() function for variables whose values are color names.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\\\supp\\\\config.xml.\n\n@param [in] Name name of config file variable\n@param [out] Rgb value of the specified variable\n\n@retval succeeds\n-        ZW_API_NO_ERROR - variable exists and has a value of 3 integers\n@retval fail\n-        ZW_API_GENERAL_ERROR - variable does not exist and set \"Rgb\" to 0, 0, 0 (black)"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I get the value of a specific variable from the config file?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigGetYesNo\nName undocumented\nYesNo undocumented\n\nOutputs the value of a setting from the Configuration form/config file. The variable value must be one of the strings \"Yes\" or \"No\" (case is ignored). If the value is \"Yes\", 1 is output. If the value is \"No\", 0 is output.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\\\supp\\\\config.xml.\n\n@param [in] Name name of config file variable\n@param [out] YesNo 1 if value is \"Yes\", 0 if value is \"No\"\n\n@retval succeeds\n-        ZW_API_NO_ERROR - variable exists and has a value that is either \"Yes\" or \"No\""
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the value of a setting from the Configuration form?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetInteger\nName [in] name of config file variable\nValue [in] value of the specified variable\n\nSets the value of a setting from the Configuration form/config file. The variable value is assumed to be an integer (0 is assigned to \"Value\" when the value is not a number).\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to change the value of a variable in the config file?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetOption\nName [in] name of config file variable\nOption [in] value of the specified variable\n\nSets the value of a setting from the Configuration form/config file.\nThe \"Option\" should not be longer than 31 bytes, and it should not contain blank spaces.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the value of a variable in the configuration file?"
            },
            {
                "role": "assistant",
                "content": "cvxConfigSetString\nName [in] name of config file variable\nStr [in] value of the specified variable\n\nSets the string value of a setting from the Configuration form/config file.\nnote:\nThe input \"Name\" is defined in \"zw3d installation dir\\supp\\config.xml."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the type of a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqTypeEx\nidDim [in] the index of dimension\ntypeEx [out] the type of specified dimension\n\nGet the type(evxDimTypeEx) of specified dimension.\nIt can't get the corresponding type if \"*type = VX_DIM_EX_LAST\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to inquire the state of a dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqState\nidDim [in] the index of dimension\nstate [out] the state of specified dimension\n\nGet the state(evxDimState) of specified dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the FCS annotation text for a specified dimension object?"
            },
            {
                "role": "assistant",
                "content": "cvxDimFCSDataGet\nidFCS [in] index of FCS dimension\nnumOfFcs [out] number of FCS data (NULL to ignore)\nFcsData [out] list of FCS data (NULL to ignore)\nNote1 [out] FCS annotation text1 (NULL to ignore)\nNote2 [out] FCS annotation text2 (NULL to ignore)\n\nGet data of specified FCS dimension object.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the value of a specified dimension without updating?"
            },
            {
                "role": "assistant",
                "content": "cvxDimValModNoUpdate\nidDim [in] the index of the dimension object\nexp [in] the expression of the dimension object\n\nModify the value of the specified dimension. it is similar to cvxDimValMod(), the difference is no update/eval/redraw in this function so as to speed up. It needs to call cvxDimValMod() for the last dim for update all previous changes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to change the destination text for a dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimModTxt\nidDim [in] id of dimension\nsubDim [in] number to indicate which sub-dimension to be modified. The first sub-dimension starts from 0\npStr [in] new destination text\n\nThis function is to modify dimension text for the dimension with index idDim."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to override value for a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimModTextType\nidDim [in] index of dimension or dimension bundle\nType [in] text type (0-value, 1-user text, 2-override value)\ntext [in] text string or override expression (NULL to ignore when Type=0)\n\nSet user text type and text string or override expression of specified dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the point which a dimension points to?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqPos\nidDim [in] id of dimension\npPos [out] stretchable point coordinate\n\nThis function is to inquire the point which this dimension points to, The parent of dimension should be PMI in part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of dimension curves of a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimInqDimLines\nidDim [in] index of dimension or PMI of dimension type\ncount [out] number of dimension curves\nDimCrvs [out] list of dimension curves\n\nOutputs a list of dimension curves of specified dimension.\nThe calling procedure MUST deallocate the output list with cvxMemFree().\nnote:\nAll points in svxCurve are the points in Frame that the local coordinate system of the curve, the function cvxPntTransform() can be used to convert points into points in the global coordinate system."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the element attribute of an input dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDimAtGetBySub\nidDim [in] id of dimension\nsubDim [in] serial number of sub dimension(0,1,2...), refer to evxHoleDimDataItem for sub-data item of hole dimension\ndmAttr [out] dimension attributes\n\nGets the attributes data of specified dimension. The different between this function and cvxDwgDimAtGet() is that this function get the element attribute of the input dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxDispDataUpdate\n\nCalling this function during a command will cause the data used to display part faces and edges to update/regenerate at the end of the command."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the default color RGB components?"
            },
            {
                "role": "assistant",
                "content": "cvxDispRgbGet\nType [in] display attribute type\nRgb [out] default color RGB components\n\nGets the RGB components of the specified default point/wireframe/face color.\nsee:\ncvxDispColorGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the color id for a specific display attribute type?"
            },
            {
                "role": "assistant",
                "content": "cvxDispColorGet\nType [in] display attribute type\nColor [out] color id\n\nGets the default point/wireframe/face color.\nFace colors may be defined over a broader range of RGB components than can be represented by the evxColor type. If the default face color is not one of the standard colors, this function outputs the nearest evxColor value that approximates it.\nsee:\ncvxDispRgbGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to switch ON automatic display update of a specified GUI item?"
            },
            {
                "role": "assistant",
                "content": "cvxDispSwitch\nItem [in] display/gui item\nisOn [in] 0=OFF, 1=ON\n\nSwitches OFF automatic display update of the specified GUI item when \"isOn=0\". Switches it back ON when \"isOn=1\".\nEach call to this function with \"isOn=0\" MUST be paired with a subsequent call to this same function with the same \"Item\" setting and \"isOn=1\" in order to restore the setting to its original state. This is CRITICAL for the ZW3D display to function properly after your application is done.\nBy default, display update is ON, so this function should ALWAYS be called first with \"isOn=0\" followed by a call with \"isOn=1\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to re-enable display/UI update?"
            },
            {
                "role": "assistant",
                "content": "cvxDispState\nOption [in] 0 to disable display/UI update; \n\n 1 to re-enable display/UI update; \n\n 2 to re-enable AND refresh the display/UI\nState [inout] storage for display states\n\nThis function should ALWAYS be called in pairs to disable display/UI update (Option=0) and then to re-enable it (Option=1). \n\n The first call to disable display/UI update records current display settings in \"State\", then disables them. \n\n The second call uses the settings previously recorded in \"State\" to re-enable display/UI update.\nnote:\nIf this function is being used to re-enable display/UI update after an error occurred in application code, always use \"Option = 1\". In this case \"Option = 2\" could cause further errors by attempting to refresh the display from an erroneous database."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the scene after entering a new environment?"
            },
            {
                "role": "assistant",
                "content": "cvxDispSceneUpdate\n\nAfter using the cvxCmdMacro() command and entering the new environment, user can use this interface to update various UI controls of the environment."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of light sources?"
            },
            {
                "role": "assistant",
                "content": "cvxDispGetLights\nCount [out] number of light sources\nLights [out] list of light sources\n\nGets a list of light sources associated with the active part or assembly.\nThis function allocates memory for the list of light sources. This memory MUST be deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to replace existing light sources with new ones?"
            },
            {
                "role": "assistant",
                "content": "cvxDispSetLights\nCount [in] number of light sources\nLights [in] list of light sources\n\nSet light sources associated with the active part or assembly. New light sources will replace the existing ones.\nnote:\nInterface cvxDispSetLightsInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I display a slide in 'Show-n-Tell' using its slide number?"
            },
            {
                "role": "assistant",
                "content": "cvxShowDisp\nSlideNumber [in] Show-n-Tell slide number ( >= 1)\n\nDisplays the specified \"Show-n-Tell\" slide, numbered from 1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to zoom at a specific location on the active view?"
            },
            {
                "role": "assistant",
                "content": "cvxDispZoomAt\npoint [in] point to zoom at\nfactor [in] the factor to zoom at, mostly to be 0.8\n\nZoom at a specific location on the active view using the zoom factor."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to zoom out using the cvxDispZoomIn function?"
            },
            {
                "role": "assistant",
                "content": "cvxDispZoomIn\nZoomIn [in] 1 to zoom-in, 0 to zoom-out\nStartPoint [in] start point\nEndPoint [in] end point\n\nWindow zoom in or out. StartPoint and endpoint are on the diagonal of the rectangle.\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I modify the display mode of a specific datum plane?"
            },
            {
                "role": "assistant",
                "content": "cvxDatumDispModeSet\nidDatum [in] id of datum plane\nDispMode [in] display mode of datum plane\n\nSet display mode of the specified datum plane."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set display attribute of a datum entity?"
            },
            {
                "role": "assistant",
                "content": "cvxDatumDispAttrSet\nidDatum [in] id of datum entity\nDispAt [in] display attribute of datum entity\n\nSet display attribute of the specified datum entity, including datum plane, datum axis and datum CSYS."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the display mode of a datum axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisDispModeSet\nidAxis [in] id of datum axis\nDspMode [in] display mode of datum axis\n\nSet display mode of the specified datum axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a new drawing border and insert a block to the drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAtSet\nidDrawing [in] drawing id\ndrawingAt [in] attribute of drawing\n\nSet the drawing data. if useTemplate is 1 or templateName is not NULL, add the template to the drawing or replace the template of the drawing else it will create new drawing border and insert block to drawing"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of entities associated with a specified dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqDimEnts\nidDim [in] index of dimension\ncount [out] number of list\nidEnts [out] pointer to pointer of entities array\n\nOutputs the id list of entities associated with the specified dimension.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the height of a dimension text box in a drawing sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgGetDimTextBox\nidDim [in] the index of the dimension object\ntbWid [out] text box width\ntbHgt [out] text box height\nchSlp [out] text box slope\ntxtPt [out] text box position\n\nGet width, height, slope, position for a dimension text box in drawing sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to count the dimensions by drawing id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqDimByDrawing\nidDrawing [in] drawing id\ncount [out] count of \"idDims\"\nidDims [out] list of dimension id\n\nGet dimension id by drawing id.\nnote:\nDimensions and other annotations created prior to version 27.00 (VX_API_VERSION < 2700) might have been attached to either a drawing or to a view within the drawing. Beginning in version 27.00, ZW3D always attaches new dimensions and annotations to the drawing.\nnote:\nThe cvxDwgInqDimByDrawing() function gets entities that are directly attached to the drawing, regardless of the version in which the entity was created. \n\n The cvxDwgInqDimByView() function gets only those older entities that are still attached to a view; \n\n The cvxDwgInqDims() function gets all dimension and annotation entities from a drawing regardless of whether they are attached to the drawing or attached to a view within the drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the attributes data of a specific dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgDimAtGet\nidDim [in] dimension id\ndmAttr [out] dimension attributes\n\nGets the attributes data of specified dimension."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete specified sheets?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSheetDel\ncount [in] count of sheets\nidSheet [in] list of sheet ids\n\nDelete the specified sheets."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the scale of a specified sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSheetScaleSet\nidSheet [in] sheet id, 0(or -1) to use activated sheet\nscale [in] scale of specified sheet\n\nSet the scale of the specified sheet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the name of a drawing using its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqName\nidDrawing [in] drawing id\ndrawingName [out] drawing name\nnBytes [in] string max size of active file name\n\nGet the name of the special drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to ignore the title block and title sketch when getting the index in a specified drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqBorderTitle\nidDrawing [in] index of drawing\nidBorder [out] index of Border block(NULL to ignore)\nidBorderSkt [out] index of Border sketch(NULL to ignore)\nidTitle [out] index of title block(NULL to ignore)\nidTitleSkt [out] index of title sketch(NULL to ignore)\n\nGet index of border and title including block and sketch in specified drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the referenced part of the specified view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSetRefPart\nFile [in] drawing sheet file name (NULL string for the active file)\nRoot [in] drawing sheet root name (NULL string for the active target object)\nidxView [in] update the specified view, -1 for all in the sheet\noldPart [in] old part name to be updated (can be NULL, see the description)\nnewPart [in] new part name\n\nSet the referenced part for the specified drawing sheet. Root can be NULL if the file extension is .Z3DRW.\nIf idxView is >0, only update the specified view, -1 to update all drawing views in the drawing sheet.\nIf oldPart is not specified, suppose to update the referenced part of the specified view (if idxView>0) or the active view of the drawing sheet (mostly the first view)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the name of the active drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqActive\ndrawingName [out] drawing name\nnBytes [in] string max size of active file name\n\nOutputs the name of the active drawing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the properties of character text in the style manager?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgStyleManagerWithTextAtGet\ntype [in] style maneger method\ndata [out] text attribute data\n\nGet the properties of the character text in the style manager.\nIf the type is VX_STYLEMANAGER_TEXT, the data is defined by struct svxDwgStyleManagerText,\nelse if the type is VX_STYLEMANAGER_ANNO_LEADER~VX_STYLEMANAGER_DIM_ORDINATE, the data is defined by struct svxDwgStyleManagerAnnoDimText,\nelse if the type is VX_STYLEMANAGER_TABLE_USER~VX_STYLEMANAGER_TABLE_REVISION, the data is svxDwgStyleManagerTableText,\nelse if the type is VX_STYLEMANAGER_SYM_WELD or VX_STYLEMANAGER_SYM_SRF_FINISH, the data is svxDwgStyleManagerSymText.\nelse if the type is VX_STYLEMANAGER_VIEW_BASE~VX_STYLEMANAGER_VIEW_ALTERNATE, the data is svxDwgStyleManagerViewText."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the text entities in a drawing by their id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqText\nidDrawing [in] drawing id\ncount [in] count of objects\nidEnts [in] list of text entities id's\n\nOutputs the id list of text entities in the specified drawing sheet.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify hatch attribute using hatch id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgHatchAttrSet\nidHatch [in] hatch id\nHatchAttr [in] hatch attribute\n\nSet hatch attribute."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of hatch ids in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqHatchIdByDrawing\nidDrawing [in] drawing id\ncount [out] count of \"idHatchs\"\nidHatchs [out] list of hatch id\n\nGet hatch id by drawing id.\nnote:\nIf the hatch belong to a view and not to a drawing, the hatch id cannot be obtained. It can use cvxDwgInqHatchIdByView in this case."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the parent view index of a geometry in a view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgGeomGetView\nidGeom [in] index of geometry in view\nidView [out] index of parent view\n\nGet index of parent view of specified geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the shape id of a specific geometry in a view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewGeomGetShapeId\ngeomId [in] index of geometry in view\nfileName [out] file name of the component of view of line, it can be NULL\nfileNameBytes [in] maximum bytes that fileName can hold\npartName [out] part name of the component of view of line, it can be NULL\npartNameBytes [in] maximum bytes that partName can hold\npickPath [out] pick path, it can be NULL\ngeom3DId [out] index of geometry 3D corresponding to geomId, it can be NULL\nshapeId [out] shape or sketch id that geometry in view specified by geomId can be traced back to, it can be NULL\n\nThis function is to get shape id that geometry in view specified by geomId can be traced back to. The file name, part name or pick path is also output if one of them is no NULL."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I set the visibility of a component in a drawing view using the file name and part name?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRefCompVisSet\nidView [in] view id in drawing\nfileName [in] file name of component\npartName [in] part name of component\nshow [in] 1 to unblank component; 0 to blank\n\nDisplays or hides the specified reference component in the specified view, Do not support section view and detail view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the hidden state of a reference entity by its index?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRefBlankSet\nidRefEnt [in] index of reference entity\nblank [in] status of reference entity(1 is blank,else display)\n\nSet the hidden state by referencing the entity id."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the wireframe attributes that are not inherited from the view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewRefEntAtGet\nidRefEnt [in] index of reference entity\nclrValid [out] 1 from attribute; 0 inherited from view\ntypeValid [out] 1 from attribute; 0 inherited from view\nwidthValid [out] 1 from attribute; 0 inherited from view\nentAt [out] wireframe attributes, attribute items that are not inherit from view is valid\n\nGets the wireframe attributes of specified reference entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the 3D coordinates of a pick point on an entity in a drawing sheet view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewPnt2DTo3D\npnt2DId [in] point id in view\npnt3D [out] 3D point\n\nGet 3D point in part coordinates corresponding to a pick point on an entity in a drawing sheet view.\nThe 3D coordinates are output in pnt3D. If pzPnt is V_NULL, this function merely determines whether the given pick is on an entity that can be mapped to a 3D point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of symbol objects by id?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqSymObjList\nidSym [in] id of symbol\ncount [out] count of listId\nlistId [out] list of symbol object id\n\nGets a list of symbol objects."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the count of entities associated with a symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqSymEnts\nidSym [in] index of symbol\nCount [out] number of list\nidEnts [out] pointer to pointer of entities array\n\nOutputs the id list of entities associated with the specified symbol.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set attributes for different symbol types like VX_SYM_SURF, VX_SYM_WELD, VX_SYM_BEAD, VX_SYM_ENDTRT?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymAtSet\nidSym [in] index of symbol\nsymAttr [in] symbol attributes\n\nSets the attributes data of specified symbol. the function supports the following 4 symbol types: VX_SYM_SURF, VX_SYM_WELD, VX_SYM_BEAD, VX_SYM_ENDTRT."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve surface roughness data of a specified symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymSurfDataGet\nidSymSurf [in] symbol id\ndata [out] surface roughness data\n\nGet the surface roughness data of specified symbol."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the weld data for a symbol using its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymWeldDataGet\nidSymWeld [in] symbol id\ndata [out] weld data\n\nGet the weld data of special symbol.\nThis function allocates memory for \"jogPoints\" and \"leaderPoints\" in svxSymWeld struct. The memory MUST be deallocated by the calling procedure using cvxSymWeldFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate memory for a weld data structure?"
            },
            {
                "role": "assistant",
                "content": "cvxSymWeldFree\nWeldData [in] weld data structure\n\nFrees memory associated with the specified weld structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the insertion position of a symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymInsPointSet\nidSym [in] id of symbol\npnt [in] symbol insertion point\n\nSet the insertion position of the symbol.\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the file path linked to a symbol?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymLinkGetByLongPath\nidSymLink [in] index of OLE object symbol\nfilePath [out] the linked file path with symbol\nsizePath [in] max size of filePath\n\nGet the linked file path with special symbol.\nA filePath that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"filePath\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if the export path is longer than the maximum size?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgSymLinkExportByLongPath\nidSymLink [in] the index of symbol openLink object\nfilePath [inout] path of export file\nsizePath [in] max size of filePath\n\nExport embedded file from symbol openLink object to specified path. if only the export path is specified, the file uses the original file name.\nA filePath that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the row count of a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgGetTableSize\niTblIdx [in] index of table\npRowNum [out] row number of table\npColNum [out] column number of table\n\nGet the row and column count of table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set the insert point of a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableInsPntSet\nidTable [in] id of table\npnt [in] new insert point\n\nModify the insert position of the table.\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableExport\nidTable [in] table id\npath [in] export file full path\n\nExport the specified table to excel file. The file type is '.xls' or '.xlsx'."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a row below a specified row in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableRowInsert\nidTable [in] index of table\nRow [in] index of row\n\nInsert a row below the specified row in the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to adjust the column width automatically in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableColWidthSet\nidTable [in] index of table\nCol [in] index of column\nWidth [in] width of column, auto adjust column width when width < 0\n\nSet the column width of the specified column in the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I delete a column by its index from a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableColDelete\nidTable [in] index of table\nCol [in] index of column\n\nDelete specified column from table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to set text attribute for the entire table in CAD software?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableCellAtSet\nidTable [in] index of table\nRow [in] index of row\nCol [in] index of column\nTextAt [in] attribute of text (NULL to use table attribute)\n\nSet text attribute of the specified cell in the table.\nRow>0 && Col>0: set text attribute of the specified cell, TextAT can be NULL \n\n Row>0 && Col<0: set text attribute of specified row, TextAT can be NULL \n\n Row<0 && Col>0: set text attribute of specified column, TextAT can be NULL \n\n Row<0 && Col<0: set text attribute for the entire table, TextAT can not be NULL\nnote:\nBecause this function has an internal call to the \"cvxDispRedraw()\" function, it must be called on the main thread."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to merge cells in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgTableCellsMerge\nidTable [in] table id\nstartRow [in] start row\nendRow [in] end row\nstartCol [in] start column\nendCol [in] end column\nkFirstData [in] flag of keep the first data when merging some cells\n\nmerge the selected (endRow-startRow+1)*(endCol-startCol+1) cells to one cell.\nif kFirstData = 0 and the selected cells have a lot of data, it will fail to merge them.\nnote:\n1 <= startRow <= endRow <= maxRow, 1 <= startCol <= endCol <= maxCol. maxRow is the maximum row of the table, maxCol is the maximum column of the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the count of view objects in a drawing?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqViews\nidDrawing [in] drawing id\ntype [in] view type\ncount [out] count of the object\nviews [out] view list\n\nOutputs a list of the view entity IDs in the special drawing. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the type of a particular view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgInqViewType\nidView [in] the index of view\ntype [out] the type of specified view\n\nGet the type(evxViewType) of specified view. \n\n It can't get the corresponding type if \"*type = VX_VIEW_ALL\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the attributes of a specific view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewAtSet\nidView [in] index of view (<= 0 to set the global variables)\nviewAttr [in] view attributes\n\nSet the attribute of specified view. if index of view less than 0, the \n\n function will set the global variables for view layout attributes used in CdV3Ins."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a view is locked?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewLockGet\nidView [in] id view\nisLock [out] 1 is lock ,0 is unlock\n\nDetermine whether the view is locked."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the part from a drawing view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewInqPart\nidView [in] view id, -1 to get the active view for the target sheet\npart [out] part\n\nOutputs source part object of the drawing view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name of the active item of configuration table for a specific drawing view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewInqPartConfigByLongName\nidView [in] view id, -1 to get the active view for the target sheet\npartCfg [out] the name of the active item of configuration table\nsize [in] max size of partCfg.\n\nInquire the name of the active item of configuration table by the source part object of the drawing view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I provide a list of entity IDs to associate with a view?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgViewEntitiesAssociate\nidView [in] index of view (idView = -1 to disassociate)\ncount [in] number of idEnts\nidEnts [in] list of entity id\n\nThis function is to associate the entities with the view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the alignment by idView?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgAlignmentGet\nidView [in] id of view\nalign [out] 1 if application alignment, else 0.\n\nGet alignment by idView."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function should be called before using cvxDwgBrkLineAtSet?"
            },
            {
                "role": "assistant",
                "content": "cvxDwgBrkLineAtSet\nbrkLnViewId [in] id of break line\nbrkLineAt [in] Attribute of Break Line\n\nSet Attribute of special break line. \n\n Before you use this function, you'd better calling cvxDwgBrkLineAtGet() to initialize brkLineAt."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to ensure a valid file name without special characters?"
            },
            {
                "role": "assistant",
                "content": "cvxFileNameCheck\nfileName [inout] file name\nnBytes [in] max size of file name(no longer than 512 bytes)\n\nCheck and fix name without warning messages, \n\n If the name contains some of \\/:*?\"<>|,~!@$# it is invalid,  <br>\nthis function will replace those character with _ to repair it.  <br>\n\nIt is assumed that the input \"fileName\" is no longer than 512 bytes.\nnote:\nNormally, this function used to check the file name when new a file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function allows assigning a description to a new ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileNew2\nName [in] ZW3D file name\nDescription [in] optional object description (or NULL)\n\nThis function is the same as cvxFileNew2(), but it also allows you \n\n to assign a text string description to the new object file. The \n\n description must not be longer than 32 bytes, including the null- \n\n terminator.\nnote:\nUser can call cvxFileNameCheck() to check the Name first."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to open an existing ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileOpen\nFile [in] ZW3D file name\n\nOpens an existing VX or ZW3D file. It is assumed the file resides \n\n somewhere in the active search directories (see cvxPathSet()). \n\n Use cvxPathSearchFirst() to force a particular directory to \n\n be searched first."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to delete the new data file after replacing the original file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileReplace\nfilePath [in] path of the file to be replaced\nnewData [in] path of the file contains the new data\nfDel [in] 1 if want to delete newData, else 0\n\nReplace the file data of filePath with newData. The newData file will be deleted if fDel is not 0.\nnote:\nnewData cannot be already located/opened in ZW3D. \n\n The filePath and newData must the full path of the file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to save the relevant files along with the active ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileSave2\nClose [in] 1 = close file after saving it; 0 = leave it open\n\nSaves the active ZW3D file and its relevant files to the location they were previously saved at."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to save the active ZW3D file to a specified path/filename?"
            },
            {
                "role": "assistant",
                "content": "cvxFileSaveAs\nFile [in] pathname to save file under\n\nSaves the active ZW3D file to the specified path/filename. \n\n If there is prompt dialog, please use \"cvxUserActionStatusSet2()\" to avoid interrupt."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to save files without changing the file name?"
            },
            {
                "role": "assistant",
                "content": "cvxFilesSaveToByLongPath\nCount [in] count of the files list to save\nFileList [in] name list of files to save (only file name)\nPath [in] path to save files\n\nSaves the specified files in memory saved to the specified directory. The file name will not be changed.\nnote:\nIf the file is not opened in ZW3D and it can be found in the search path, just copy it to the specified directory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the alternative function to cvxFileClose with more options?"
            },
            {
                "role": "assistant",
                "content": "cvxFileClose\n\nCloses the active ZW3D file, prompting the user whether to save or discard changes before closing the file.\nsee:\ncvxFileClose2() for a version of this function with more options."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to clear unused files from the cache?"
            },
            {
                "role": "assistant",
                "content": "cvxFileSessionClear\nfile [in] file name (file[0]=0 or NULL to clear all unused files)\n\nRemoves unused files from the cache."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to recover the previous session?"
            },
            {
                "role": "assistant",
                "content": "cvxSessionRestore\n\nRestores the last session backup."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to import STL file data?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImportInit\ndata [out] import file data\ntype [in] import file type\ngeneral [out] setting general properties(NULL to use default settings)\n\nInitialize the parameters of the cvxFileImport().\n\"general\" supports initialization of the following import types, which correspond to the following data types: \n\n If the type = VX_IMPORT_TYPE_UG, the general is svxImportUGData. \n\n If the type = VX_IMPORT_TYPE_STEP, the general is svxImportSTEPData. \n\n If the type = VX_IMPORT_TYPE_DWG_DXF, the general is svxImportDwgDxfData. \n\n If the type = VX_IMPORT_TYPE_STL, the general is svxImportSTLData. if the Type = VX_IMPORT_PTS_FROM_FILE, the general is svxImportPTSData.\nnote:\nDo not assign a value to variable \"data\" before calling this function. \n\n The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to include sub-folders files during import?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImportMulti\nCount [in] count of files or directories list to import\nPathList [in] list of files or directories to import\nSubFolder [in] whether to include sub-folders files (1: yes; 0: no)\nSavePath [in] output path that does not contain file name, NULL to output file to input folder\nType [in] the import file types\nSetting [in] the import setting data (NULL to use default setting)\n\nUse this function to import non-ZW3D files types such as Catia V4, JT,NX etc. into ZW3D as parts, sketches, or drawing sheets. the files will be imported and save as Z3 file automatically.\nCurrently, \"Setting\" only supports the following import type, and the data type matching the type is as follows: \n\n If type = VX_IMPORT_TYPE_UG, Setting is svxImportUGData. \n\n If type = VX_IMPORT_TYPE_STEP, Setting is svxImportSTEPData. \n\n If type = VX_IMPORT_TYPE_DWG_DXF, Setting is svxImportDwgDxfData. \n\n If type = VX_IMPORT_TYPE_STL, Setting is svxImportSTLData.\nnote:\nVX_IMPORT_TYPE_JT and VX_IMPORT_PTS_FROM_FILE are not supported by the function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the import setting data for specific file types?"
            },
            {
                "role": "assistant",
                "content": "cvxFileImportMultiByLongPath\nCount [in] count of files or directories list to import\nPathList [in] list of files or directories to import\nSubFolder [in] whether to include sub-folders files (1: yes; 0: no)\nSavePath [in] output path that does not contain file name, NULL to output file to input folder\nType [in] the import file types\nSetting [in] the import setting data (NULL to use default setting)\n\nUse this function to import non-ZW3D files types such as Catia V4, JT,NX etc. \n\n into ZW3D as parts, sketches, or drawing sheets. the files will be imported \n\n and save as Z3 file automatically.\nCurrently, \"Setting\" only supports the following import type, and the data type matching the type is as follows: \n\n If type = VX_IMPORT_TYPE_UG, Setting is svxImportUGData. \n\n If type = VX_IMPORT_TYPE_STEP, Setting is svxImportSTEPData. \n\n If type = VX_IMPORT_TYPE_DWG_DXF, Setting is svxImportDwgDxfData. \n\n If type = VX_IMPORT_TYPE_STL, Setting is svxImportSTLData.\nnote:\nVX_IMPORT_TYPE_JT and VX_IMPORT_PTS_FROM_FILE are not supported by the function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to export a file to a specified path?"
            },
            {
                "role": "assistant",
                "content": "cvxFileExport\nType [in] type of export\nPath [in] path of export file\nData [in] data of file\n\nExports the specified file to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData. \n\n else if the Type is VX_EXPORT_TYPE_STL, the data is svxSTLData.\nInterface cvxFileExportInit() initializes the corresponding structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to export a file as STL?"
            },
            {
                "role": "assistant",
                "content": "cvxFileExport\nType [in] type of export\nPath [in] path of export file\nData [in] data of file\n\nExports the specified file to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData. \n\n else if the Type is VX_EXPORT_TYPE_STL, the data is svxSTLData.\nInterface cvxFileExportInit() initializes the corresponding structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to export all currently open files to a specified path?"
            },
            {
                "role": "assistant",
                "content": "cvxFileExportMultiByLongPath\nCount [in] count of the files list to export (0 to export all currently open files)\nFileList [in] list of files to export (NULL to export all currently open and newly files)\nFilter [in] type of object to export, VX_FILE_ALL to export all object\nType [in] type of export\nPath [in] destination path for exporting files (excluding file name)\nData [in] export parameter\n\nExports the specified files to specified path. If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. else if the Type is VX_EXPORT_TYPE_STL, the data is svxSTLData.\nInterface cvxFileExportInit() initializes the corresponding structure.\nnote:\nVX_EXPORT_TYPE_GRP and VX_EXPORT_TYPE_HTML are not supported by the function. CAM Plan don't support export."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the data structure for exporting as an IGES file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlatSolidExport\nidFlatten [in] id of flatten\ntype [in] export type\nfilePath [in] file path\ndata [in] data of file\n\nExports the specified flat solid to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the data structure for exporting as an HTML file?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdFlatSolidExport\nidFlatten [in] id of flatten\ntype [in] export type\nfilePath [in] file path\ndata [in] data of file\n\nExports the specified flat solid to specified path. \n\n If the Type is VX_EXPORT_TYPE_IMG, the data is defined by struct svxImgData, \n\n else if the Type is VX_EXPORT_TYPE_PDF, the data is defined by struct svxPdfData, \n\n else if the Type is VX_EXPORT_TYPE_GRP, the data is svxGRPData(can be ignored), \n\n else if the Type is VX_EXPORT_TYPE_DWG, the data is svxDWGData. \n\n else if the Type is VX_EXPORT_TYPE_IGES, the data is svxIGESData. \n\n else if the Type is VX_EXPORT_TYPE_STEP, the data is svxSTEPData. \n\n else if the Type is VX_EXPORT_TYPE_JT, the data is svxJTData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_TEXT, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_PARA_BINARY, the data is svxPARAData. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_PART, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_CAT5_ASM, the data is svxCAT5Data. \n\n else if the Type is VX_EXPORT_TYPE_HTML, the data is svxHTMLData."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters for the callback function?"
            },
            {
                "role": "assistant",
                "content": "cvxFileAction\ntype [in] action type\nparam [in] callback function\n\nSet a callback function. When processing the target file option, the callback function will be called.\nIf this function called many times with the same 'type', only the last will take effect.\nIf param->pfn is null, the original callback function, if there exists, will be removed.\nIf param->pfn isn't null, the first parameter is caller's data, it can be null, the second parameter is actual file, the last parameter may be null, it's used as the path for output file sometimes. lastly, if param->pfn invokes successes, the function will return 0, else 1.\nnote:\nIf one call this function to register a callback in a dll module, he must call this function again, with argument param set as NULL, to unregister the callback for each action before the dll module exit. \n\n Usually we can do this in the exit function of the dll module."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the directory of the saved active file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileDirectory\nDirectory [out] source directory for the active file\n\nIf the active file has been saved, the directory where it resides is output. Otherwise, Dir[0]=0 is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the maximum size of the active file name?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqActive\nName [out] name of active file\nnBytes [in] string max size of active file name\n\nOutputs the name of the active file. \n\n Outputs Name[0]=0 if there is no active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the subtype of a specified file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqSubType\nfileName [in] file name (or NULL)\nfileSubtype [out] file subtype\n\nGet the specified file subtype. \n\n If fileName is NULL or blank string, get current file subtype.\nnote:\nMulti-object files do not have a subtype."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of open file list?"
            },
            {
                "role": "assistant",
                "content": "cvxFileOpenList\ncount [out] count of the list\nfileList [out] file list\n\nGet all of the open file list. \n\n The list referenced by \"**fileList\" is allocated by this function. \n\n And must be deallocated by the calling procedure. \n\n A NULL pointer is output if no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of all loaded and in use files?"
            },
            {
                "role": "assistant",
                "content": "cvxFileLoadList\nstate [in] 0 to get all loaded files; \n\n 1 to get all files loaded and in use \n\n 2 to get all loaded but unused files\ncount [out] count of the list\nfileList [out] file list\n\nGet the loaded file list, including front-open and background-loaded files.\nThe list referenced by \"**fileList\" is allocated by this function. And must be deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check the version of the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileVersionGet\nfile [in] full file path\nversion [out] version number\n\nGet the version of the current file. \n\n If file=NULL, it means return the version of the current active file. \n\n This function will return a four digits value. \n\n the front two means the annual version. The last two means the upgrade. Like: \n\n 1800 means ZW3D 2014 \n\n 1810 means ZW3D 2014 SP \n\n 1900 means ZW3D 2015 \n\n 1910 means ZW3D 2015 SP \n\n ......"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the associated files with a target object?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqAssociatedList\ncount [out] number of files in list\nfileList [out] list of files\n\nGet associated file list with the target object.This includes \n\n assembly component files, drawing view files, imported files (IGES, \n\n STEP,...) and links.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the associated file list with the target object?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqAssociatedListByLongName\nfileName [in] file name to inquire, NULL for just the active target\nnDepth [in] max depth to inquire the linked files, -1 to ignore (see description)\ncount [out] number of files in list\nfileList [out] list of files\n\nGet associated file list with the target object or the specified file.This includes assembly component files, drawing view files, imported files (IGES, STEP,...) and links.\nIf iDepth is >=0, then the link files will be ignore for the depth more than it. Set it as -1 to get all (ignore the depth checking).\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the file name of the top root object in an assembly?"
            },
            {
                "role": "assistant",
                "content": "cvxFileInqAsm\nName [out] file name of top root object in assembly\nnBytes [in] string max size of file name\n\nOutputs the file name of top root object in assembly. Outputs \"Name[0]=0\" if error."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxFileIsUDF\npath [in] file path(NULL to use default path)\nfile [in] file name(contains the file extension)\nisUDF [out] 1 is UDF file,else 0\n\nDetermine whether a file is a UDF file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the description of a specified file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileDescriptionSet\nName [in] ZW3D or VX file name (Name[0]=0 or NULL for active file)\nDescription [in] object description. no longer than 32 bytes.\n\nSets description of specified file. \n\n The file description here is different from the attribute \"Description\" of root object. To set the attribute \"Description\" of root object, you can use the attribute setting functions, such as cvxPartAtItemSet and cvxPartAtItemSetInFile."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to overwrite existing custom data in a ZW3D or VX file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileCustomDataSet\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\ndata [in] customization data\ndataLength [in] length of customization data\n\nSet user custom data to an existing ZW3D or VX file. Program will overwrite existing custom data if file already has custom data."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to remove custom data from a ZW3D or VX file?"
            },
            {
                "role": "assistant",
                "content": "cvxFileCustomDataDel\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\n\nDelete user custom data from an existing ZW3D or VX file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to search for drawing files using a specific file extension?"
            },
            {
                "role": "assistant",
                "content": "cvxPathSearchBeginAdd\nSearchDirectory [in] directory pathname\n\nAdds the specified file directory to the begin of list of search paths. These paths are used to find files specified by name only. The search path added by this interface is used to search resource files\nOnly when the file path is found through the interface cvxPathFindByFileName(), the file will be searched from these search directories.\nUse interface cvxPathCheck to judge whether the input path is correct.\nsee:\ncvxPathSet() can be used to search drawing files(.Z3,.Z3PRT,.Z3DRW...)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check if the path is correct using cvxPathCompose?"
            },
            {
                "role": "assistant",
                "content": "cvxPathCompose\nPath [inout] directory where file is located output directory/file path\nName [in] filename\n\nCombines the input directory name (Path) and file name (Name). Outputs the result via \"Path\".\nsee:\ncvxPathCheck() can check whether the path is correct. \nsee:\ncvxFileExits() can determine whether a file exists."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to output the file path if the file name containing the path is passed in?"
            },
            {
                "role": "assistant",
                "content": "cvxPathCheck\nsrcPath [in] path to a file or directory\ndesPath [out] directory part of srcPath\nsizedes [unknown] sizedes max size of desPath\n\n1. Check the input path to see if it is properly formatted for the target OS.\n   Forward or backward slashes are replaced with the appropriate path delimiter for the operating system.\n   D:/aa/bb <==> D:\\aa\\bb\n\n2. If the file name containing the path is passed in, the file path is output.\n   D:\\aa\\bb\\cc.Z3PRT  ==> D:\\aa\\bb\n\n3. Occurrences of ~ expand to the current user's home directory path, and\noccurrences of ~user expand to the current user's profile directory path.\n   ~user\\aa  ==>  %USERPROFILE%\\aa\n   ~\\aa  ==>  %HOME%\\aa\n   $path\\bb  ==> (the directory represented by the system environment variable \"path\")\\bb  <==> %path%\\bb\n\n4. The directory is verified to exist and to be accessible. If srcPath specifies the path to a file,\nthe file is also required to exist and to be accessible.\n\nA desPath that is too long (longer than \"sizedes\") is truncated.\n\nIt is assumed that the input \"desPath\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the search path temporarily?"
            },
            {
                "role": "assistant",
                "content": "cvxPathSearchFirst\nDirectory [in] directory pathname\n\nCauses ZW3D to search the input directory before searching the directories listed in \"vxpaths\".\nsee:\ncvxPathSet: The search path of the format file supported by ZW3D. \n\n cvxPathAdd: Add search paths for some resource files. Customers are not recommended to use this interface. \n\n cvxPathSearchFirst: Set the search path temporarily. The path set through this interface is easy to be overwritten.Therefore, the path set by this interface is recommended to be used only once."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to remove all paths from the search list?"
            },
            {
                "role": "assistant",
                "content": "cvxPathDelAll\n\nDeletes all paths from the current list of search paths."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to ensure a file pathname ends with a path delimiter?"
            },
            {
                "role": "assistant",
                "content": "cvxPathDelimByLongPath\nPath [inout] file pathname\nsizePath [in] Maximum memory space for \"Path\".\n\nIf \"Path\" does not end with the path delimiter, appends the delimiter. It is assumed that the memory referenced by \"Path\" is sufficient to accommodate addition of another character."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check the path of the directory containing the specified API library?"
            },
            {
                "role": "assistant",
                "content": "cvxPathApiLibByLongPath\nLibName [in] library name (without .dll extension)\nLibDirectory [out] path of directory that contains the library\nsizeLib [in] max size of LibDirectory\n\nGets the path of the \"apilibs\" directory that contains the specified API library. It is assumed the library resides in a sub-directory named \"apilibs\" either in the runtime user directory or in the ZW3D installation directory. The local \"apilibs\" is checked first, then the \"apilibs\" in the installation directory.\nA LibDirectory that is too long (longer than \"sizeLib\") is truncated.\nIt is assumed that the input \"LibDirectory\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle cases where there is no directory specified in the path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathDirByLongPath\nFullPath [in] full path/file name\nDirectory [out] directory portion of \"FullPath\"\nsizeDir [in] max size of Directory\n\nExtracts the directory portion of the specified physical path. If there is no directory specified, outputs \"./\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to extract the filename portion of a specified physical path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathFile2\nFullPath [in] full path/file name\nMaxNameLen [in] maximum name length in bytes (including null-terminator)\nFileName [out] filename portion of \"FullPath\"\n\nExtracts the filename portion of the specified physical path. \n\n The filename may include an extension, if there is one.\nOutputs FileName[0]=0 if a filename could not be extracted or if its length (including the null-terminator) exceeds the size of \"MaxNameLen\".\nIt is assumed \"FileName\" references at least \"MaxNameLen\" bytes of memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there any function to search for a file in default paths?"
            },
            {
                "role": "assistant",
                "content": "cvxPathFindByLongPath\nFileName [in] file name\nFullPath [out] full path to the specified file\nsizeFull undocumented\n\nGiven a filename without any directory path (FileName), this function searches default paths for the file and outputs a complete pathname to the file.\nnote:\nWhen the ZW3D filename exceeds 32bytes,using this function causes ZW3D crashed. \n\n Therefore,this function will be deprecated in the future and is not recommended for use by customers. \n\n User can replace this function with the cvxPathFindByFileName()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the path of ZW3D installation directory?"
            },
            {
                "role": "assistant",
                "content": "cvxPathInstall\nInstallDirectory [out] installation directory\n\nOutputs the path of the ZW3D installation directory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the ZW3D temp directory path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathTempByLongPath\nDirectory [out] ZW3D temp directory\nsizeDir [in] max size of Directory\n\nOutputs the path of the ZW3D \"temp\" directory for the active session.\nA Directory that is too long (longer than \"sizeDir\") is truncated.\nIt is assumed that the input \"Directory\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to limit the size of the user folder path?"
            },
            {
                "role": "assistant",
                "content": "cvxPathUserFolderByLongPath\nDirectory [out] user path\nsizeDir [in] max size of Directory\n\nGet user folder path of ZW3D.\nA Directory that is too long (longer than \"sizeDir\") is truncated.\nIt is assumed that the input \"Directory\" is no longer than 512 bytes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to update the VgSearchPath?"
            },
            {
                "role": "assistant",
                "content": "cvxPathSearchSet\nValue undocumented\n\nSet the VgSearchPath."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if the active path is the only one?"
            },
            {
                "role": "assistant",
                "content": "cvxPathCheckActiveOnlyGet\n\nGet the VgCheckActivePathOnly."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a file path length is within a certain range?"
            },
            {
                "role": "assistant",
                "content": "cvxFilePathLenIsOverrange\nfile_path [in] path to check\n\nCheck if the length of file path is over ranging."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the new entity IDs since a specific operation?"
            },
            {
                "role": "assistant",
                "content": "cvxEntNewList\nStartOp [in] starting operation number ( >= 0)\nType [in] entity type\nCount [out] number of new entities\nidEnts [out] list of new entities (by id)\n\nReturns a list of the id's of the entities of the specified type created since the specified operation (StartOp) of the current transaction.\nUse cvxOpCount() to get the current number of operations in the current transaction.\nnote:\nThis interface can only get the new ID on the feature tree. cvxEntNewAll() can get all newly generated IDs. \n\n All values of evxEntType can be used in this function. \n\n If \"Type > 0\", the specified entity is flagged. \n\n If \"Type = 0\", to signal all entity are valid. \n\n If \"Type = -1\", curve entity (e.g. line,circle, arc,curve) are flagged. \n\n If \"Type = -2\", point entity are flagged. \n\n If \"Type = -3\", history entity (e.g. feature, sketch, datum) are flagged. \n\n If \"Type = -4\", b-rep entity are flagged."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to blank or unblank specified entities?"
            },
            {
                "role": "assistant",
                "content": "cvxEntBlank\nShow [in] 1 to unblank entities; 0 to blank\nCount [in] number of entities\nidEnts [in] entity id's\n\nBlanks or unblanks the specified entities.\nCall this function during echoing will not log any blank/unblank operation to the history, for example:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to highlight an entity by its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxEntHighlight\nidEntity [in] entity id (in active file)\n\nHighlights the specified entity in the active root object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove highlight from all entities?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUnhighlightAll\n\nUnhighlights all entities."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of picked entities?"
            },
            {
                "role": "assistant",
                "content": "cvxEntInqPicked\nCount [out] number of entities\nEnts [out] list of the entity IDs\n\nOutputs a list of the Picked entity IDs. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of entity paths that have been picked?"
            },
            {
                "role": "assistant",
                "content": "cvxEntInqPathPicked\nCount [out] number of entity path\nPaths [out] list of the entity path\n\nOutputs a list of the picked entity path. The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What function can be used to remove the last picked entity in the active field?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUnPickLast\n\nUnpick the last entity in active field."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add an entity to the pick list?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathAddPick\nentPath [in] pick path of entity\n\nAdd the specified entity to the pick list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the number of user attributes for a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUserAtGet\nidEnt [in] the entity index\ncount [out] number of user attributes\nAt [out] list of user attributes\n\nRetrieves attribute data from the specified entity in the active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a specific user attribute of a shell, face, or edge entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUserAtDel\nidEnt [in] the entity(ONLY SHELL, FACE and EDGE) index\ncount [in] number of user attributes (0 to delete all user attributes)\nAt [in] list of user attributes (NULL to delete all user attributes)\n\nDelete user attribute of the specified entity(ONLY SHELL, FACE and EDGE) in the current active part. \n\n the function does not delete any attributes if the specified label is an empty string or the attribute specified label is not found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I set color for entities using their ids?"
            },
            {
                "role": "assistant",
                "content": "cvxEntColorSet\nColor [in] entity color\nCount [in] number of entities\nidEnts [in] entity id's\n\nAssigns the specified color to the specified entities in the active object.\nsee:\ncvxEntRgbSet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set RGB color for multiple entities without creating display attribute?"
            },
            {
                "role": "assistant",
                "content": "cvxEntRgbSetNoAt\nColor [in] entity RGB color\nCount [in] number of entities\nidEnts [in] entity id's\n\nSame as cvxEntRgbSet() except that no display attribute created."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve line attributes by its index?"
            },
            {
                "role": "assistant",
                "content": "cvxEntLineAtGet\nidLine [in] index of entity\nAt [out] line attribute\n\nGet the attributes of specified line."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the unique ID for an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntUidGet\nidEntity [in] entity id\nUid [out] unique id for the specified entity\n\nOutput the unique identifier of the specified entity. \n\n The unique identifier is a tuple of three numbers that, taken together, identify the entity in a persistent way across sessions. \n\n In contrast to \"idEntity\" (the entity ID), which usually changes from session to session, \"Uid\" (the unique ID) does not change between sessions and can be used to identify the entity in any session.\nA unique ID is unique in the sense that no other entity in the same root object should have the same unique ID, but it is possible for two entities in different root objects to have the same unique ID.\nsee:\ncvxRootCopy()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the persistent label of a specified entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntLabelGet\nidEntity [in] entity id\nLabel [out] persistent label as null-terminated array of integers\n\nOutputs the persistent label of the specified entity in the active file, or a NULL pointer if the entity does not have a label. \n\n Currently, only entities generated by a part history have persistent labels.\nThe label is a null-terminated list of integers.\nThe calling procedure is responsible for deallocating the memory out via \"Label\" as shown below:\nsee:\ncvxLabelMatch() and cvxEntByLabel()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the name of an entity in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxEntName\nidEntity [in] entity id\nName [out] entity name\nnBytes [in] string max size of entity name\n\nOutputs the name of the specified entity. \n\n It is assumed the entity resides in the active file. \n\n A blank string is output if the entity doesn't have a name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to delete the name tag of an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntSetNameTag\nidx_ent [in] index of entity\nname [in] name tag\n\nAssign the input name tag to the specified entity. \n\n name:empty-delete the name tag, else add the name tag."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the layer id of a particular entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntLayerId\nidEntity [in] entity id\nLayerId [out] layer id\n\nOutputs the id of the specified entity's layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the transformation matrix for a specified entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntMatrixSet\nidEntity [in] entity id\nMatrix [in] transformation matrix\n\nSets the transformation matrix associated with the specified entity in the active file. \n\n If the entity does not support a transformation matrix, nothing is done."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the bounding box of an entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntBndBox\nidEntity [in] entity id\nBox [out] bounding box of specified entity\n\nThis function gets the bounding box of the specified entity in the target file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the bounding box of a component in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntBox\nidEnt [in] entity id (supported entity: shape,face,component)\nMat [in] optional local frame (or NULL)\nBox [out] shape bounding box\n\nGets the bounding box of the specified entity in the active part. \n\n currently, only shape, face and component are support. If \"*Mat = NULL\", initializes \"Mat\" to the identity matrix. \n\n a bounding box relative to the specified local coordinate frame is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find an entity by label in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntByLabel\nLabel [in] persistent label as null-terminated array of integers\nflag [in] 1 for exact match; 0 if partial match is okay\nidEntity [out] entity id (0 is output if no entity is found)\n\nSearches the active part for an entity with the specified label."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if an entity with a specific name exists in a certain file and root object?"
            },
            {
                "role": "assistant",
                "content": "cvxEntByName2\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nName [in] entity name\nidEntity [out] entity id (0 if undefined)\n\nSearches the specified root object in the specified file for the entity with the specified name. \n\n If it is found, its id is output via \"idEntity\". \n\n If it is not found, \"idEntity = 0\" is output."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the closest entity of a specified type?"
            },
            {
                "role": "assistant",
                "content": "cvxEntFind\nEntType [in] type of entity to search for\nRefPnt [in] reference point\nidEntity [out] entity id (0 if undefined)\nPnt [out] point on entity (or NULL to ignore)\nDist [out] distance (mm) from RefPnt (NULL to ignore)\n\nFinds the closest entity of the specified type to \"RefPnt\" and outputs its index via \"idEntity\" (0 is output if no entity is found). \n\n If \"Pnt\" is not NULL, the coordinates of \"RefPnt\" projected onto the entity are output via \"Pnt\". \n\n If \"Dist\" is not NULL, the shortest distance between the entity and \"RefPnt\" is output via \"Dist\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the class name of an entity by class number?"
            },
            {
                "role": "assistant",
                "content": "cvxEntClassName\nClassNumber [in] entity class number\nClassName [out] class name\n\nOutputs an ascii text string describing the entity class identified by \"ClassNumber\". \n\n The string is stored in the memory referenced by \"ClassName\", which is assumed to be sufficient (min = 64 bytes)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the class number of an entity using its path?"
            },
            {
                "role": "assistant",
                "content": "cvxEntClassNumByPath\nentPath [in] entity path\n\nReturns the class number of the specified entity in the active object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to identify if an entity is an electrode?"
            },
            {
                "role": "assistant",
                "content": "cvxEntIsElectrode\nidEntity [in] entity id (in active file)\n\nDetermine whether an entity is electrode."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the parent sketch of a specific entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntSketch\nidEntity [in] entity id\nidSketch [out] id of entity's parent sketch (0 if undefined)\n\nSearches sketches within the active part for the specified entity (idEntity). \n\n If the entity is found within a sketch, the id of the sketch is output. \n\n If the entity is not found inside a sketch, \"idSketch\" is output as zero."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the entity id defined by a reference entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntRefEnt\nidRefEnt [in] parametric reference entity id\nidEnt [out] id of entity defined by reference entity\n\nIf \"idRefEnt\" is a valid parametric reference entity (i.e. reference geometry) in the active file, this function outputs the database id of the entity (i.e. geometry) that it defines.\n\"idEnt\" is output as zero if it is undefined for \"idRefEnt\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the names of the component's parent file and object?"
            },
            {
                "role": "assistant",
                "content": "cvxEntComp\nidEntity [in] entity id\nidComp [out] component id\nFile [out] if not NULL, output name of component's parent file\nnFileBytes [in] string size of file name\nParent [out] if not NULL, output name of component's parent object\nnParentBytes [in] string size of parent object name\n\nOutputs the id of the assembly component associated with the specified entity in a 2D drawing view layout from a 3D assembly.\nAssumes that \"idEntity\" resides in the active target file.\nOutputs \"idComp = 0\" if no assembly component is found.\nOutputs the names of the component's parent file and object (i.e. part) if non-NULL pointers are input to the \"char *\" variables for \"File\" and \"Parent\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the entity id referenced by a specific path?"
            },
            {
                "role": "assistant",
                "content": "cvxEntActivate\nNewPath [in] path into new target object\nUpdateGUI [in] 1 to update GUI, else 0\nidEntity [out] entity id(input NULL to ignore)\nOldPath [out] path of original target(input NULL to ignore)\n\nActivates the last target object in the specified path (NewPath) and outputs the path of the active target object (OldPath). \n\n If \"OldPath\" is input as a NULL point, the active target path is not output. \n\n After activating a new target object with this function, you can pass \"OldPath\" back into this function as \"NewPath\" in order to re-activate the original target object.\nIf \"UpdateGUI\" is non-zero, this function updates the GUI menus to reflect a change in the target object. \n\n Otherwise, the menus of the original target object remain active.\nThe id of the entity referenced by \"NewPath\" is output via \"idEntity\". \n\n This id can be used to query the entity once its parent object is activated by this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxGlobalSet\nGlobal [in] global setting to modify\nData [in] data to assign to global setting\n\nAssigns the specified data to the specified setting. To accommodate different data types, \"Data\" is a void pointer. Make sure it references the appropriate data type. Look at \"enum evxGlobal\" to see what type of data is required for each setting.\nBe careful using this function to change global settings. It is only meant for temporary modification of a setting while an API function is executing. Always restore the original setting when your function is done."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set notes for the active root object?"
            },
            {
                "role": "assistant",
                "content": "cvxNoteSet\nNote [in] null-terminated text string\n\nAssigns the specified text to the \"Notes\" associated with the active root object"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the status of 'auto regen' for a part?"
            },
            {
                "role": "assistant",
                "content": "cvxAutoRegenSet\nStatus [in] 1 if \"auto regen\" is ON; 0 if OFF\n\nSets the status of part \"auto regen\" (1=ON; 0=OFF)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the active linear units type?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitGet\nType [out] active linear units type\nName [out] abbreviation for active units (NULL to ignore)\n\nOutputs an integer id that identifies the active user units for linear measure (0-microns, 1-millimeters, 2-centimeters, 3-meters, 4-inches, 5-feet).\nIf \"Name\" is not NULL, it is used to output an abbreviation for the name of the active units."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to change the linear unit type?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitSet\nType [in] linear unit type\n\nSets the active user units for linear measure based on the input \"Type\" (0-microns, 1-millimeters, 2-centimeters, 3-meters, 4-inches, 5-feet)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I convert a distance to the active user units?"
            },
            {
                "role": "assistant",
                "content": "cvxUnitToUser\nDistance [inout] distance\n\nConverts the specified distance from system units (millimeters) to the active user units."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the grid spacing?"
            },
            {
                "role": "assistant",
                "content": "cvxSkGridSpacingGet\nspacing [out] grid spacing\n\nOutput grid spacing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to copy svxColorf to svxColor?"
            },
            {
                "role": "assistant",
                "content": "cvxColorfToColor\nrgbf [in] input color (each float component defined over 0.0 to 1.0)\nrgb [out] output color (each component defined over 0 to 255)\n\nThis function copies the input svxColorf structure, in which the color components are floating point values defined over 0.0 to 1.0, to the output svxColor structure, where the color component values are defined over 0 to 255.\nsee:\ncvxColorToColorf() to copy svxColor to svxColorf."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to find the nearest standard color based on RGB components?"
            },
            {
                "role": "assistant",
                "content": "cvxColorRGB\ncolor [in] one of the evxColor values for a standard color or an index color\nrgb [out] RGB components for the input color\n\nOutput the RGB components of a standard color or an index color.\nsee:\ncvxColorNear() for a function that finds the evxColor value of the nearest standard color when given a color's RGB components."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxEscDisable\nEscapeState [out] current escape checking state\n\nDisables checking for \"Escape\" events overriding cvxEscStart(). This function MUST ALWAYS be paired with a subsequent call to cvxEscRestore(). The \"integer\" value output by this function (EscapeState) must be passed to the corresponding call to cvxEscRestore()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should I pair a call to cvxEscStart() with a subsequent call to cvxEscEnd()?"
            },
            {
                "role": "assistant",
                "content": "cvxEscStart\n\nThis function is used to start \"Escape\" checking, whereby execution of a command is aborted if the user presses the <Esc> button or other menu item that generates an \"Escape\" event. This presumes that the currently executing code is calling cvxEscCheck() periodically to allow escape events to be processed.\nTHE CALLING PROCEDURE MUST PAIR A CALL TO cvxEscStart() WITH A SUBSEQUENT CALL TO cvxEscEnd().\nYou should put escape checking in a callback function or other code that could take a long time to execute, but that you want to abort if the user tries to initiate a new input or action through the user interface. Put cvxEscStart() at the beginning of your function and cvxEscEnd() at the end. Add calls to cvxEscCheck() between cvxEscStart() and cvxEscEnd(). If a call to cvxEscCheck() returns a non-zero value, clean up whatever your function has started (including all dynamically allocated memory), call cvxEscEnd() and exit your function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the status of the ZW3D version?"
            },
            {
                "role": "assistant",
                "content": "cvxVersion\nvxStatus [out] status\n\nReturns the active ZW3D version number as an integer (one-hundreths). If \"vxStatus\" is not NULL, a string describing the version is output that indicates whether it is Alpha or Beta along with a revision number. If \"vxStatus\" is not NULL, it should point to at least 80 bytes of memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve the names of filters?"
            },
            {
                "role": "assistant",
                "content": "cvxFilterListGet\ncount [out] the count of filters\nfilterList [out] list of filters' names, request vxName[30]\n\nGet a list of filters' names."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if two labels are matched?"
            },
            {
                "role": "assistant",
                "content": "cvxLabelMatch\nLabel1 [in] first persistent label (null-terminated integer array)\nLabel2 [in] second persistent label (null-terminated integer array)\n\nDetermine whether label are matched."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the network card id of the host computer?"
            },
            {
                "role": "assistant",
                "content": "cvxHostId\nidNetwork [out] decimal encoded network id\nidDongle [out] decimal encoded dongle id\n\nOutputs the network card id and/or dongle id of the host computer for the instance of ZW3D currently executing.\nnote:\nDongle id is not supported from version 14.6 onward."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the value of Misumi Mold installed mark?"
            },
            {
                "role": "assistant",
                "content": "cvxSetMSMMoldInstalled\nIsInstalled [in] 1 if Misumi Mold is installed, 0 otherwise\n\nSet the value of the Misumi Mold installed mark \"VgMoldInstalled\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to acquire paths of 32-bit plugin?"
            },
            {
                "role": "assistant",
                "content": "cvxPluginRegPathGet\npathList [out] plugin path, an array\npCnt [out] count of pathList\nis64 [in] if 0, paths of 32-bit plugin are acquired, else 64-bit plugin path\n\nGet plugin path of ZW3D in regedit.\nnote:\nRelease memory of pathList is the caller's responsibility. There is an example named 'DllRegister' in ApiExample."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Where should the context file and help document file be placed?"
            },
            {
                "role": "assistant",
                "content": "cvxHelpDocLoad\nfilePath [in] the context file path\n\nLoad the context file associated with help chm file in memory.\nnote:\nThere are two files should be prepared. The first one is a context file and the second is a help document file with 'chm' format. These two files should be put in the same directory. The content of context file should be like as below: Line 1: Line 2: CommandNameA xx.html Line 3: CommandNameB xx.html Line 4: FormNameA xx.html ..."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I add a layer with a custom name?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerAdd\nName [in] layer name\n\nCreates a new layer with the specified name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a layer by its number?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerDel2\nNumber [in] layer number (0-255)\n\nDelete a layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to sync layer visibility with entity visibility?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerSync\n\nSynchronizes entity visibility with layer visibility."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the constraints for the source and target layer ids?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerIdModify\nsrcNumber [in] source layer id\ntarNumber [in] target layer id\n\nModify the layer id of layer and related objects, source layer id and target layer id must be 0-255.\nnote:\nThe function does not allow layer id 0 to be modified."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I verify if a layer exists in the active target object?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerExists\nName [in] layer name\n\nDetermine whether the layer exists in the active target object by name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of entities on a specific layer?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerInqEnts\nNumber [in] layer number (0-255)\nnumEnt [out] no. of entities on the specified layer\nPaths [out] pick-path list of entities on the specified layer\n\nGet all entities on the specified layer.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of all layers in the active part or sheet?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerList\nCount [out] layer count\nNames [out] list of layers\n\nOutputs a list of all layers in the active part or sheet. \n\n The calling procedure must deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to retrieve the number of a layer?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerNum\nName [in] layer name\nNumber [out] layer number (0-255)\n\nOutputs the number of the layer with the specified name. Outputs \"Number = -1\" if the layer is not found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the active layer number?"
            },
            {
                "role": "assistant",
                "content": "cvxActiveLayerNumSet\nNumber [in] layer number (0-255)\n\nSet the activate layer."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the options for setting the visibility of a layer?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerStateSet\nName [in] layer name\nisVisible [in] 1 = visible, 0 = blanked, -1 = leave the same\nisFrozen [in] 1 = frozen, 0 = not frozen, -1 = leave the same\n\nSets the state of the specified layer.\nThe input argument \"isFrozen\" can be overloaded (set it to -2) to prevent this function from logging a \"LayerState\" history operation to record a change in layer visibility if a part is active. \n\n In this case, the frozen status of the specified layer remains the same.\nnote:\nSome history and entity selection operations are only applied to visible entities, so be careful using \"isFrozen = -2\". \n\n This function will redraw the screen, if you will call this function many times, you can call cvxDispState() to disable the display and update the display later."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the layer info?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerInfoSet\nNumber [in] layer number (0-255)\npLayerInfo [in] layer info\n\nSet the layer info.\nnote:\nThis function will redraw the screen, if you will call this function many times, you can call cvxDispState() to disable the display and update the display later."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to append existing layers while importing layer information?"
            },
            {
                "role": "assistant",
                "content": "cvxLayerInfoImport\nfile [in] import target file full path with extension \"zwlyr\"\noverWrite [in] 1 to overwrite existing layers; 0 to append existing layers\n\nImport layers information from specified file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle the case when the license is on trial?"
            },
            {
                "role": "assistant",
                "content": "cvxLicModulesGet\nszModules [out] the module name list to be return.(e.g. \"ZW3D_BASE_MODULES\\nZW3D_2AXIS_TURNING\\nZW3D_3AXIS_TURNING\").\n\nGet current authorized module list, the \"szModules\" is split by '\n\n', e.g. \"ZW3D_BASE_MODULES\\nZW3D_2AXIS_TURNING\\nZW3D_3AXIS_TURNING\". If fail to check current license, the license is trial(szModules will be set to \"Trial\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the days before standalone license expires?"
            },
            {
                "role": "assistant",
                "content": "cvxLicStandaloneEvaluationGet\n\nGet days before standalone license expired. \n\n cvxLicEvaluationGet() has the similar function as well."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to deactivate a license by entitlement?"
            },
            {
                "role": "assistant",
                "content": "cvxLicRemove\npzEntitlement [in] the license entitlement.\n\nRemove license by entitlement. \n\n See cvxLicActivate() to activate the license for the current ZW3D session."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to round a number down to the previous whole-number multiple of a specified step size?"
            },
            {
                "role": "assistant",
                "content": "cvxRoundNumber\nNum [in] Number to round.\nStep [in] Incremental step size, may be 0.\nTol [in] Tolerance for two values to be the same.\nDir [in] Rounding direction (0 nearest, -1 down, +1 up).\n\nReturn rounded number. \n\n \"Rounding\" in this case means the number is adjusted to a value that is a whole-number multiple of the incremental step size Step. \n\n For example, if Step is 0.25, this function returns values such as -0.5, -0.25, 0.0, 0.25, 0.5, 0.75, 1.0, and so on. \n\n To round a number to the nearest integer value, set Step to 1.\nIf Step is effectively 0 or negative, the incremental step size is so small that no rounding occurs and the return value is Num.\nIf the rounding direction Dir is 0, Num is rounded to the nearest whole-number multiple of Step, which may be greater or less than Num. \n\n For example, if Step is 1, an input value of 3.4 is rounded down to 3.0, and an input value of 3.6 is rounded up to 4.0.\nIf Dir is +1, the magnitude of Num is rounded up. For example, if Step is 1, an input value of 3.4 is rounded to 4.0, and an input value of -3.4 is rounded to -4.0.\nIf Dir is -1, the magnitude of Num is rounded down. For example, if Step is 1, an input value of 3.6 is rounded to 3.0, and an input value of -3.6 is rounded to -3.0.\nThe tolerance Tol helps to avoid unintended rounding. \n\n If Num is within Tol of a whole-number multiple of Step, Num is rounded to the latter value regardless of the rounding direction specified by Dir. \n\n For example, suppose Step is 1 and Dir is -1, but Num is 3.99999 when Tol is 0.01. \n\n The result will be rounded up to 4.0 because Num is is effectively the same as 4.0 within the given tolerance, despite Dir indicating that Num should be rounded down.\nThe step size Step should be much larger than the tolerance Tol.\nIf Num is a value that represents a distance or an angle, all three inputs Num, Step and Tol should have the same units."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the parametric locations of the closest points between two axes?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisDistance\nAxis1 [in] the first axis\nAxis2 [in] the second axis\nPntOnAxis1 [out] the parameter of the closet point on the first axis (NULL to ignore)\nPntOnAxis2 [out] the parameter of the closet point on the second axis (NULL to ignore)\nFlag [out] flag of the two axes position relationship (NULL to ignore) \n\n 0: axes intersect \n\n 1: axes are parallel \n\n 2: axes are not parallel(no intersection and not coplanar)\n\nComputes the closest point between two 3D axes.\nIf the axes intersect (Flag is 0), ParamOnAxis1 & ParamOnAxis1 define parametric locations of intersection point on the two axes.\nIf the axes are parallel (Flag is 1), ParamOnAxis1 & ParamOnAxis1 are undefined.\nIf the axes are not co-planar and they do not intersect (Flag is 2), ParamOnAxis1 & ParamOnAxis1 define the parametric locations of the closest points."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the points on two entities and calculate the distance between them?"
            },
            {
                "role": "assistant",
                "content": "cvxEntGetDistance\nent1 [in] index of entity 1\nent2 [in] index of entity 2\np1 [out] point on entity 1 (NULL to ignore)\np2 [out] point on entity 2 (NULL to ignore)\ndist [out] distance of p1 and p2\n\nGet the distance between 2 entities in part environment, the entity type includes face, curve, edge, datum plane, point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the angle between two entities?"
            },
            {
                "role": "assistant",
                "content": "cvxEntGetAngle\nent1 [in] index of entity 1\nent2 [in] index of entity 2\nangle [out] angle (radians) between entities\n\nGet the angle between 2 entities.the entity type includes line, curve, edge, datum plane, planar face, sketch.\nnote:\nent1 and ent2 must are defined as \"curve-curve\" or \"planar face-planar face\". when entities are curve, the angle between the tangent direction of the starting point of the line is calculated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output after inquiring the area property?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEntsAreaByPath\ncnt [in] count of curves/face (only one face)\ncrvList [in] entity path list of curves/face\nareaProp [out] area property\n\nInquires a planar area bounded by curves in 3d space.\nThe input boundaries may consist of 3d-curves, 2d-curves, edges, and all of them in the component.\nThe input just support one plane face.\nnote:\nThe calling procedure MUST deallocate the output(pAreaRef and pAreaCA) with cvxMemFree(). \n\n Use cvxPartInqEntsArea() to inquire the area of the entities of current part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the corner points of a specified bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxPnts\nBox [in] pointer to bounding box data\nPnts [inout] pointer to array of 8 point structures\n\nOutputs the corner points of the specified bounding box to the array referenced by \"Pnts\". \n\n Memory for the array must be allocated by the calling procedure. \n\n \"Pnts\" is a pointer to the start of the memory and must reference at least enough memory for 8 svxPoint structures.\nThe corners are assigned to \"Pnts\" as follows, where \"min\" and \"max\" refer to the bounding box's minimum and maximum limits in the specified coordinate direction: \n\n\nPnts[0] = Xmin,Ymin,Zmin \n\n Pnts[1] = Xmax,Ymin,Zmin \n\n Pnts[2] = Xmax,Ymax,Zmin \n\n Pnts[3] = Xmin,Ymax,Zmin \n\n Pnts[4] = Xmin,Ymin,Zmax \n\n Pnts[5] = Xmax,Ymin,Zmax \n\n Pnts[6] = Xmax,Ymax,Zmax \n\n Pnts[7] = Xmin,Ymax,Zmax"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check if a point is outside a bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxPntLoc\nBox [in] the bounding box\nPoint [in] point to measure distance to\nPntLoc [out] returned status of the point on the bounding box\n\nDetermine whether a given point lies inside, outside or on the specified bounding box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to output the merged result to the second bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxMerge\nBox1 [in] the first bounding box\nBox2 [inout] the second bounding box\n\nMerge two bounding boxes and output results to the second bounding box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if one bounding box completely contains another?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxContain\nBaseBox [in] the base bounding box\nOtherBox [in] the other bounding box\n\nCheck whether the base bounding box is completely containing an other bounding box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the minimum distance between two bounding boxes?"
            },
            {
                "role": "assistant",
                "content": "cvxBndBoxDist\nBox1 [in] the first bounding box\nBox2 [in] the second bounding box\nDistMin [out] minimum distance between boxes, 0 if overlap (NULL to ignore)\nDistMax [out] maximum distance between boxes (NULL to ignore)\n\nCompute the maximum and minimum distance between a point and a 3D bounding boxes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to intersect an entire untrimmed surface with a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectCrvFace\nidCurve [in] id of curve entity in active file\nidFace [in] id of face entity in active file\nTrim [in] 1 to intersect trimmed face; 0 to intersect entire untrimmed surface\nTangentOk [in] 1 to include points of tangency; else 0\nCount [out] number of intersection points\nPoints [out] list of intersection points\n\nOutputs a list of the points where the input curve and face intersect. \n\n The calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the list of intersection points between a ray and a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayCrv\nRay [in] ray defined by a point and a direction\nidCurve [in] curve entity\nTangentOk [in] 1 to include points of tangency; else 0\nCount [out] number of intersection points\nPoints [out] list of intersection points\n\nOutputs a list of the points where the input ray and curve intersect. \n\n The calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of intersection points of a ray with a face?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayFaceInfinite\nidFace [in] id of shape in active part\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nInfinite [in] 1 to check both directions of ray, 0 to check positive direction of ray only\nNumber [out] number of points\nPnts [out] list of intersection points (NULL to ignore)\nUVs [out] list of U,V coordinates (NULL to ignore)\n\nIntersects the input ray with the input face and outputs all intersection points to the ray start point (Ray->Pnt).\nThe \"Trim\" option is used to determine what portions of the face are checked against the ray.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find intersection points of a ray with shapes?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayShapes\nnShapes [in] number of shapes\nidShapes [in] index of shapes\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nNumber [out] number of intersection point\nPoints [out] list of intersection points (NULL to ignore)\nidFaces [out] list of face ids that intersection point lies (NULL to ignore)\n\nIntersects the input ray with the input shapes and outputs the intersection points.\nnote:\nThe positive and negative directions of the ray will be involved in the calculation. \n\n The \"Trim\" option is used to determine what portions of the shape's faces are checked against the ray. \n\n This function allocates memory for the array output via \"Points\" and \"FacePaths\". \n\n The calling procedure is responsible for deallocating the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get the id of the face that the intersection point lies on?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayPart\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nPoint [out] closest intersection point (NULL to ignore)\nidFace [out] id of face that intersection point lies on (input NULL to ignore this output)\n\nIntersects the input ray with all faces of the active part and outputs the point closest to the ray startpoint (Ray->Pnt).\nnote:\nThe ray only extends in the specified direction from the startpoint. \n\n Intersections in the other direction are not considered. \n\n If an intersection is found, the id of the intersected face is optionally output. \n\n Use cvxPartInqFaceShape() to get the id of the face's parent shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find intersection points of a ray with components?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayComps\nnComps [in] number of components\nCompPaths [in] pick path of components\nTrim [in] face trim option\nRay [in] ray defined by a point and a direction\nNumber [out] number of intersection point\nPoints [out] list of intersection points (NULL to ignore)\nFacePaths [out] list of face pick paths that intersection point lies (NULL to ignore)\n\nIntersects the input ray with the input components and outputs the intersection points.\n\n\n The calling procedure is responsible for deallocating the memory.\nnote:\nThe positive and negative directions of the ray will be involved in the calculation. \n\n The \"Trim\" option is used to determine what portions of the shape's faces are checked against the ray."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the intersection point of a ray with a bounding box?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectRayBndBox\nRay [in] ray defined by a point and a direction\nBox [in] the bounding box\nIsectPnt [out] the intersection point (NULL to ignore)\n\nIntersect an infinite line with a bounding box. \n\n the intersection point given is the farthest point on the ray along the opposite direction of the ray."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to check if two shapes intersect?"
            },
            {
                "role": "assistant",
                "content": "cvxPartIsectShpChk2\nidBaseShape [in] the need check intersection shape 1\nidOpShape [in] the need check intersection shape 2\nfClosedChk [in] option to control whether check the open shell 1 is excluding the open shell. otherwise is 0\n\nDetermine exist or not exist intersection between the input two shapes. \n\n If should check the two shapes are closed, it will return 0 if any shape of them is not closed."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxIsectBndBoxBndBox to check for intersection of two bounding boxes?"
            },
            {
                "role": "assistant",
                "content": "cvxIsectBndBoxBndBox\nBox1 [in] the first bounding box\nBox2 [in] the second bounding box\n\nCheck whether two bounding boxes intersect."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate eigenvalues and eigenvectors of a 3x3 matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatEigen\nMat3x3 [in] matrix\nValues [out] three real-valued eigenvalues (or NULL)\nVectors [out] three eigenvectors for the eigenvalues (or NULL)\n\nCalculates the eigenvalues and eigenvectors of a 3x3 matrix.\nThree real-valued eigenvalues are output in Values, which is an array that must be provided by the caller and must be dimensioned large enough to hold at least 3 double precision numbers. \n\n The caller may pass NULL for the Values argument if the eigenvalues are not wanted. \n\n This function always computes three eigenvalues, repeating values in the Values array if necessary.\nThe eigenvectors corresponding to the eigenvalues are output in Vectors, which is an array that must be provided by the caller and must be dimensioned large enough to hold at least 3 svxVector structures. \n\n The caller may pass NULL for the Vectors argument if the eigenvectors are not wanted.\nVectors[i] is the eigenvector corresponding to the eigenvalue Values[i], but the eigenvalues are not sorted. \n\n The largest or smallest eigenvalue may be in any element of the Values array."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to invert a transformation matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatInvert\nMat [in] transformation matrix\nInvMat [out] inverted transformation matrix\n\nOutput an inverted version of \"Mat\" via \"InvMat\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to define a reference frame with arbitrary X and Y axis based on origin and Z axis direction?"
            },
            {
                "role": "assistant",
                "content": "cvxMatPntVec\nOrigin [in] origin\nzAxis [in] direction of Z axis\nMat [out] transformation matrix\n\nComposes a transformation matrix that defines a reference frame whose origin coincides with \"Origin\", whose Z axis points in the direction of \"zAxis\", with arbitrary X and Y axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the y-direction of a matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxMatGetPntVecs\nMat [in] origin, optional\nOrigin [out] origin (NULL to ignore)\nxAxis [out] x direction (NULL to ignore)\nyAxis [out] y direction (NULL to ignore)\nzAxis [out] z direction (NULL to ignore)\n\nGets the origin, x-direction, y-direction and z-direction of matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to scale points by different factors in X, Y, and Z directions?"
            },
            {
                "role": "assistant",
                "content": "cvxMatScale\nMat [inout] transformation matrix\nPoint [in] reference point\nsX [in] X scale\nsY [in] Y scale\nsZ [in] Z scale\n\nInitializes \"Mat\" so that it will scale points by sX, sY, sZ relative to \"Point\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize a transformation matrix for translation?"
            },
            {
                "role": "assistant",
                "content": "cvxMatTranslate\nMat [inout] transformation matrix\ndX [in] X distance\ndY [in] Y distance\ndZ [in] Z distance\n\nInitializes \"Mat\" so that it will translate points by dX, dY, dZ."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the categories of rotation sequence for transformation matrix to Euler angles conversion?"
            },
            {
                "role": "assistant",
                "content": "cvxMatToEuler\nSeq [in] rotation sequence type, see description\npMat [in] transformation matrix\npzMatEuler [out] Euler angles and translate vector\n\nConversion Transform Matrix to Euler Angles. Two categories of rotation sequence:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to transform a point from world to local space?"
            },
            {
                "role": "assistant",
                "content": "cvxPntTransform\nMat [in] transformation matrix\nPoint [inout] point\n\nApplies transformation matrix \"Mat\" to \"Point\".\nTransform point from local to world space, if *Mat is a local matrix. \n\n Transform point form world to local space. if *Mat is the inverse of a local matrix."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to apply transformation matrix to a vector?"
            },
            {
                "role": "assistant",
                "content": "cvxVecTransform\nMat [in] transformation matrix\nVector [inout] vector\n\nApplies transformation matrix \"Mat\" to \"Vector\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to transform a surface using a matrix?"
            },
            {
                "role": "assistant",
                "content": "cvxSrfTransform\nMat [in] transformation matrix\nSrf [inout] surface\n\nApplies transformation matrix \"Mat\" to \"Srf\". \n\n Assumes \"Mat\" is an affine transform."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get point and normal of a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvEval\nidCurve [in] curve entity id\nT [in] t parameter value on curve\nPoint [out] point on curve\nNormal [out] normal at point on curve\n\nEvaluates the NURBS representation of the curve entity specified by \"idCurve\". Outputs the point coordinates (Point) and normal direction (Normal) at the specified \"t\" parameter value. \n\n Use cvxCrvParam() to get the curve's parameter limits. \n\n The \"Normal\" output is an arbitrary direction that is perpendicular to the curve at \"t\" and is not the same as the normal direction that is a function of curvature at \"t\".\nsee:\ncvxCrvEvalCrvtr() if you need the normal that points toward the curve's center of curvature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to compute the third derivative of a curve at a given parameter value?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvEval2\nidCurve [in] curve entity id\nt [in] t parameter value on curve\nlevel [in] level of evaluation(0 ~ 3), See description below\neval [out] Result\n\nEvaluates a curve at a specified parameter value.\n\"level\" specifies the level of evaluation. The higher the level, more data gets returned (at the expense of greater computation).\n                     level\n      |  0  |     1     |     2      |    3\n      +-----+-----------+------------+--------\n      | pnt |  deriv_1  |  deriv_2   | deriv_3"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the point at a specified parameter on a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvEvalCrvtr\nidCurve [in] curve entity id\nt [in] parameter at which the curvature is evaluated\npoint [out] point at the specified parameter (input NULL to ignore).\nnormal [out] unit principal normal vector at the specified parameter (input NULL to ignore).\ncurvature [out] curvature at the specified parameter (input NULL to ignore).\n\nEvaluates curvature, point and unit principal normal vector of a given curve at the specified parameter.Use cvxCrvParam() to get the curve's parameter limits."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the T values for a curve entity?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvParam\nidCurve [in] curve entity id\nT [out] min/max T values\n\nOutputs the minimum and maximum t parameter values of the NURBS representation of the specified curve entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "name"
            },
            {
                "role": "assistant",
                "content": "cvxCrvContinuityTolListInit\ndata [out] \n\nInitialize the parameters of the cvxCrvInqMultiContinuity().\nnote:\nDo not assign a value to variable \"data\" before calling this function. \n\n The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to output a list of indices of the edges or curves?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCurveChainFind\nnSeeds [in] number of seed edges or curves\nidSeeds [in] list of id of seed edges or curves\ntype [in] type of edges, only effects the find result of the seed edge \n\n 0: find continuously tangent edges that may be bound by any number of faces \n\n 1: find connected open edges \n\n 2: find continuously tangent manifold edges that are shared by exactly two \n\n faces or are seams having the same face on both sides\nCount [out] number of curves found\nidCrvs [out] list of curves found\n\nUse the function to find connected chain of curves or edges and output a list of indices of the edges or curves.\nIf the seed is a curve, the chain consists of curves that are connected end-to-end, but without any requirement for tangency between curve.\nIf the seed is an edge, the chain consists of edges that are tangent, i.e. smoothly \n\n connected end-to-end. If type is 0, an edge may bound any number of faces. If type \n\n is 1, only open edges are included in the chain, the requirement for tangency between \n\n edges is suspended, so a chain of open edges may continue around sharp corners. If \n\n type is 2, only manifold edges are included in the chain, i.e. edges that are shared \n\n by exactly two faces, or edges that have seams with the same face on both sides.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to find the parameter value of a point on a curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvPntProj\nidCurve [in] id of curve entity\nPnt [in] coordinates of point to project onto curve\nT [out] T parameter value of point-on-curve\nProjPnt [out] XYZ coordinates of projected point\n\nOutputs the T parameter value of the projection of the input XYZ \n\n point onto the NURBS representation of the specified curve. It \n\n is assumed that \"Pnt\" lies on or very close to the curve."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the parameter value of each inflection point?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvGetInflections\nidCurve [in] id of curve in the active object\nCount [out] number of inflection points found\nT [out] T parameter value of each inflection points (NULL to ignore)\nInfPnts [out] the array of inflection points (NULL to ignore)\n\nCalculates inflection points of the specified curve and outputs the list of \n\n parameter value and coordinates of inflection points found.The calling \n\n procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find cusps of a specified curve?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvGetCusps\nidCurve [in] id of curve in the active object\nCount [out] number of cusps found\nT [out] T parameter value of each cusps (NULL to ignore)\nCusps [out] the array of cusps found (NULL to ignore)\n\nFind cusps of the specified curve and outputs the list of \n\n parameter value and coordinates of cusps.The calling \n\n procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to find the length of a NURBS curve between two parameter values?"
            },
            {
                "role": "assistant",
                "content": "cvxCrvLen2\nidCurve [in] curve entity id\nT1 [in] T parameter value of start point\nT2 [in] T parameter value of end point\nLength [out] length of a NURBS curve from T1 to T2\n\nCalculates the curve length of a NURBS curve from the parameter T1 to T2."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to automatically create trim curves around the rectangular surface boundary?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFace\nSrf [in] NURBS surface geometry\nNumCurves [in] number of trim curves\nTrimCurves [in] list of 2D NURBS UV trim curves\nCode [in] non-zero integer code for labeling the face\nSew [in] 1 to sew face to adjacent faces, else 0\nTol [in] 3D proximity tolerance (mm) (0.0 for default)\nidFace [out] database id of new face entity (or NULL)\n\nAdds a face to the active part using the specified surface and trim curves. \n\n The face is sewn to adjacent faces with matching edges.\nIt is assumed the trim curves are 2D NURBS curves defined in the UV space of \n\n the specified surface. If no trim curves are input (NumCurves=0), trim \n\n curves are automatically created around the \"rectangular\" surface boundary.\nThe input 3D proximity tolerance (Tol) is used to match the endpoints of \n\n trim curves when they are sorted into loops, and to match edges of the \n\n new face to edges to existing faces if the \"Sew\" option is enabled.\nIf \"Tol\" is input as 0.0, the active part's default proximity tolerance is used.\nIf \"idFace\" is not NULL, the database id of the new face entity is output.\nThis function copies data passed to it. The calling procedure is \n\n responsible for deallocating memory referenced by the input data structures.\ncvxPartHistStart(), which \n\n defines a \"static\" feature (i.e. history operation) for program-generated \n\n geometry (e.g. faces) to attach to. When you are done adding geometry, \n\n call cvxPartHistEnd(). This function will cause all existing part geometry \n\n and history to be bundled into a single static \"StartData\" history operation.\nnote:\nFaces will not add successfully to the active part unless there \n\n is an active feature (i.e. history operation) for them to link to. This is \n\n accomplished by putting your code inside the callback function associated \n\n with a command-template-defined custom history operation (see cvxTplInit()). \n\n When the history is regenerated, ZW3D will expect the input parameters defined \n\n by the command template to provide sufficient input to the callback function \n\n to re-create (i.e. regenerate) the original geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the purpose of the 3D proximity tolerance parameter (Tol)?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceMod\nidFace [in] index of face\nSrf [in] NURBS surface geometry\nNumCurves [in] number of trim curves\nTrimCurves [in] list of 2D NURBS UV trim curves\nSew [in] 1 to sew face to adjacent faces, else 0\nTol [in] 3D proximity tolerance (mm) (0.0 for default)\n\nModify a face to the active part using the specified surface and trim curves. \n\n The face is sewn to adjacent faces with matching edges.\nIt is assumed the trim curves are 2D NURBS curves defined in the UV space of \n\n the specified surface. If no trim curves are input (NumCurves=0), trim \n\n curves are automatically created around the \"rectangular\" surface boundary.\nThe input 3D proximity tolerance (Tol) is used to match the endpoints of \n\n trim curves when they are sorted into loops, and to match edges of the \n\n new face to edges to existing faces if the \"Sew\" option is enabled.\nIf \"Tol\" is input as 0.0, the active part's default proximity tolerance is used.\nThis function copies data passed to it. The calling procedure is \n\n responsible for deallocating memory referenced by the input data structures.\ncvxPartHistStart(), which \n\n defines a \"static\" feature (i.e. history operation) for program-generated \n\n geometry (e.g. faces) to attach to. When you are done adding geometry, \n\n call cvxPartHistEnd(). This function will cause all existing part geometry \n\n and history to be bundled into a single static \"StartData\" history operation.\nnote:\nFaces will not modify successfully to the active part unless there \n\n is an active feature (i.e. history operation) for them to link to. This is \n\n accomplished by putting your code inside the callback function associated \n\n with a command-template-defined custom history operation. When the history \n\n is regenerated, ZW3D will expect the input parameters defined by the command \n\n template to provide sufficient input to the callback function to re-create \n\n (i.e. regenerate) the original geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the diameter of a specified UV point on a NURB surface?"
            },
            {
                "role": "assistant",
                "content": "cvxSrfDiameterEval\nSrf [in] pointer to NURB surface data structure\nU [in] U parameter value on face\nV [in] V parameter value on face\nDiameter [out] diameter of specified point\n\nGet the surface diameter in the specified UV point. the surface type \n\n must be one of the following: \n\n 1.Cylinder: the cylinder diameter. \n\n 2.Torus: the distance of the point specified from the axis. \n\n 3.Cone: the distance of the point specified from the axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find edges that bound seed faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFaceEdgesFind\nnSeeds [in] number of seed faces\nidSeeds [in] list of id of seed faces\ntype [in] type of boundary\nCount [out] number of edges found\nidEdges [out] list of edges found\n\nUse the function to find edges that bound one or more seed faces.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the pole point in a specific direction from a NURBS surface?"
            },
            {
                "role": "assistant",
                "content": "cvxSrfGetPole\nsrf [in] pointer to NURBS surface data structure\ndir [in] direction\npnt [out] pole point\n\nGet the pole point of the specified surface in a specified direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I find out if a point is a critical point of a 2D curve using the API function?"
            },
            {
                "role": "assistant",
                "content": "cvxPntIsCritical\npnt [in] point\nidCurve [in] index of 2D curve\n\nThis function is to determine whether the pnt is the critical point of \n\n the 2D curve with index idCurve in Drawing Sheet.\nMeaning of critical point is the point with start, end, middle or center position \n\n of the curve."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate a point on a specified face?"
            },
            {
                "role": "assistant",
                "content": "cvxPntOnFace\nidComp [in] id of component that contains face (0 if undefined)\nidFace [in] id of face in active part or specified component\nParam [out] u,v parameter values\nPoint [out] point on face (NULL to ignore)\n\nCalculates a point on the specified face at the midpoint of \n\n the face's bounding box in UV parameter space. The 3D point \n\n coordinates are output in the space of the active part, even \n\n if the face belongs to a child component of the part (idComp > 0). \n\n The corresponding U,V parameters are output as Param[0] and Param[1]."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxPntEntLoc\nPnt [in] point coordinates of the inquiry\nidEntity [in] entity id (only curve, edge, face and shape are supported)\nPntLoc [out] returned status of the point on the entity\n\nDetermine if a given point lies inside, outside or on the boundary of a given curve, \n\n edge, face or shape."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use the cvxPlanePntProject function to project a point onto a plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPlanePntProject\nPlnPnt [in] point on plane\nPlnNormal [in] normal of plane\nPoint [in] point to project\nProjectDir [in] projection direction (NULL to use normal of plane)\nProjPnt [out] point projected on plane\n\nProject point onto infinite plane by point and direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the minimum distance between a point and a shape?"
            },
            {
                "role": "assistant",
                "content": "cvxPntEntDist\nPoint [in] point coordinates of the inquiry\nidEntity [in] index of target entity\nTargetPnt [out] the closest point on target entity (NULL to ignore)\nDistance [out] the minimum distance (NULL to ignore)\n\nAcquire the minimum distance between the point and the target entity, \n\n the target entity type includes shape, face, curve, edge, datum plane, point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the distance from a point to an axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisPntDistance\nAxis [in] axis defined by a point and a direction\nPnt [in] point to measure distance to\nDistance [out] the minimum distance\n\nGets the minimum distance from a point to an infinite line defined by point and direction."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine the point on an axis given a distance from the origin?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisEvalPoint\nAxis [in] axis defined by a point and a direction\nDistance [in] distance \n\n > 0: along direction of axis \n\n < 0: the opppsite direction of axis\nPoint [out] point on the axis at specified distance\n\nGet point on axis at a specified distance from origin of axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the last term in the plane equation?"
            },
            {
                "role": "assistant",
                "content": "cvxPlnThruPnts\nPntCount [in] number of points in point list\nPntList [in] list of points\nNormal [out] unit length vector normal to the plane\nD [out] the last term in the plane equation (see description below)\n\nGiven \"PntCount\" points, this function computes the least squares plane \n\n fitted through these points. It then checks to see if the points are \n\n contained within this plane such that for any point (X,Y,Z) in the plane, \n\n the following equation holds true:\nNormal.x * X + Normal.y * Y + Normal.z * Z + D = 0"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the direction vector between two points?"
            },
            {
                "role": "assistant",
                "content": "cvxVecInit\nPoint1 [in] first point\nPoint2 [in] second point\nVector [out] direction vector\n\nInitializes a normalized \"Vector\" that points along \n\n the direction from \"Point1\" to \"Point2\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to calculate the cross product of two vectors?"
            },
            {
                "role": "assistant",
                "content": "cvxVecCross\nV1 [in] first vector\nV2 [in] second vector\nCross [out] cross product of V1 and V2\n\nGets the cross product of two vectors."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to invert the direction of a vector?"
            },
            {
                "role": "assistant",
                "content": "cvxVecReverse\nVector [inout] vector\n\nReverses the direction of the input vector."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a pointer to the allocated memory?"
            },
            {
                "role": "assistant",
                "content": "cvxMemAlloc\nNumBytes [in] no. of bytes to allocate\nMemPointer [out] pointer to allocated memory\n\nAllocates chunk of memory of requested size from system heap. \n\n Returns void pointer to specified amount of memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free memory at a specified pointer?"
            },
            {
                "role": "assistant",
                "content": "cvxMemFree\nMemPointer [in] address of pointer to be Free'd\n\nFrees memory at specified pointer. \n\n Sets pointer to NULL if memory was freed successfully. \n\n If the input pointer is already NULL, this function does nothing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to enable error message display in ZW3D message area?"
            },
            {
                "role": "assistant",
                "content": "cvxErrEnable\n\nRe-enable display of error messages in the ZW3D message area."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to enable general messages display in the ZW3D message area?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgEnable\n\nRe-enable display of general messages in the ZW3D message area."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I turn off the command prompts?"
            },
            {
                "role": "assistant",
                "content": "cvxPromptDisable\n\nDisables the display of command prompts (when it is possible)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to re-enable the translator status window?"
            },
            {
                "role": "assistant",
                "content": "cvxTranStatusEnable\n\nRe-enables the translator status window. \n\n A call to cvxTranslatorStatusDisable() should always \n\n be paired with a subsequent call to this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the options for disabling the prompt dialog?"
            },
            {
                "role": "assistant",
                "content": "cvxUserActionStatusSet\ndisable [in] disable or enable the prompt dialog\n\nSet the status of prompt dialog. disable: 0-enable \n\n 2-disable: the default action is \"Yes\" \n\n 3-disable: the default action is \"Yes All\", if the option does not have this, \n\n it is \"Yes\" \n\n -1-disable: the default action is \"Cancel\" ,if the option does not have this, \n\n it is \"No\" \n\n -2-disable: the default action is \"No\"\nIf the option is \"Continue\", as long as disable is non-zero, it will choice the action \"Continue\".\nMake sure cvxUserActionStatusGet()has been called before you call this function. \n\n After your operation finished, please called this function again to restore the status. \n\n The \"integer\" value (disable) should be output by cvxUserActionStatusGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to activate the crash prompt dialog?"
            },
            {
                "role": "assistant",
                "content": "cvxCrashPromptEnable\n\nEnable the crash prompt dialog. \n\n \nsee:\ncvxCrashPromptDisable() to disable."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to open the ZW3D message area?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgAreaOpen\n\nOpens the ZW3D message area."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if the output list is displayed or hidden?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgAreaStateGet\naction [out] action; 1-displayed, 2-hidden\n\nGet the hidden or displayed status of the output list \n\n through this interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to access the text of a message by its number and file id?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgPtr\nidFile [in] message file id (see cvxMsgFileLoad())\nMessageNum [in] message number within message file\n\nReturns a pointer to a static memory area containing the text of \n\n the message identified by \"idFile\" and \"MessageNum\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to display a text with specified message level?"
            },
            {
                "role": "assistant",
                "content": "cvxMsgDisp2\nText [in] text string\nlevel [in] message level (0-6)\n\nDisplays the specified text in the output area with specified level. \n\n\nlevel: 0-information\n       1-note\n       2-debug\n       3-warning\n       4-alert\n       5-error\n       6-fatal"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a working window to inform users of a time-consuming operation?"
            },
            {
                "role": "assistant",
                "content": "cvxMessageBox\nMsgType [in] Message box type\nWndMode [in] 0 = modeless, 1 = full application modal\nTitle [in] Window title; set to NULL if not applicable\nMessage [in] Message string\nBtn1Str [in] Button1 string; set to NULL if not applicable\nBtn2Str [in] Button2 string; set to NULL if not applicable\nAction [out] Action\n\nFunction to display message window. A message window is used for common \n\n interaction tasks, which include giving information, asking questions, and \n\n reporting errors.\nValid MsgType is shown below:\nMsgType=1: An error window warns users of action consequences and gives them a choice of resolutions. \n\n\nMsgType=2: An information window gives the user information, such as the status of an action.\nMsgType=3: A message window is used for common interaction tasks.\nMsgType=4: A Question window is used to get the answer to a question from the user.\nMsgType=5: A warning window warns users of action consequences and gives them a choice of resolutions.\nMsgType=6: A working window informs users that there is atime-consuming operation in progress and allows them to cancel the operation."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the error message?"
            },
            {
                "role": "assistant",
                "content": "cvxErrMsgGet\nerror [in] Get the error message\n\nReturn the error message, return NULL if fails to get."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the volume of a part specified by index?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCalcAttrGet\nidPart [in] index of part in database\nattr [out] calculate attribute of part\n\nCalculate length,width,hight,volume,area,mass of part specified by index"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the mass of a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVolumAndMassGet\nName [in] name of part in active file(Name[0]=0 or NULL for active part)\ndVolume [out] volume of part,unit:mm^3\ndMass [out] mass of part,unit:kg\n\nOutput volume and mass data from the specified part in the active file. \n\n Before you use it, you need to use function cvxPartPhyAttrCalc() to calculate \n\n physical attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to modify the density of an existing material?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMaterialSet\nfileName [in] file name(fileName[0]=0 or NULL for active file)\nrootName [in] root name(rootName[0]=0 or NULL for active target object)\nmaterial [in] material name\ndata [in] material attributes\n\nThis interface is used to add materials to the material list of the specified document. \n\n (Attributes->Material...)\nIf the user wants to set material's attribute of the part file, interface cvxPartAtItemSet can be used.\nIf the material exists,modify the density corresponding to the existing material name. \n\n Otherwise, add the material name and density that did not exist before. \n\n The unit of density is kg/m^3.\nnote:\nfileName can only have a file name, or it can be a file name that contains a file path. \n\n If fileName only has a file name, user can add a search path through the cvxPathSearchFirst() interface."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve attribute data from a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtGet\nName [in] name of part in active file\nAt [out] part attribute data\n\nRetrieves attribute data from the specified part in the active file. \n\n If \"Name\" is NULL or an empty string, the active target part is used."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign part attribute data to a specified part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtSet\nName [in] name of part in active file\nAt [in] part attribute data\n\nAssigns the specified part attribute data to the specified part. \n\n Existing part attribute data is replaced with the contents of \n\n the input attribute data structure.\nThis function reflects back into the specified part all of the \n\n attribute data in \"At\", even the blank strings (excluding the \n\n part name field). So, generally speaking, you would want to \n\n initialize \"At\" by passing it to cvxPartAtGet(), modify select \n\n fields of \"At\", then pass \"At\" back into this function.\nIt is assumed that labels of driving dimensions listed in \"At->Dimen[]\" \n\n identify valid dimension or variables in the parent part. It is also \n\n assumed that dimension values stored in \"At->Dimen[].data\" fields are \n\n within valid ranges. No checking is done to ensure it. When driving \n\n dimension values are changed, the parent part is automatically \n\n regenerated by this function.\nUse cvxPartAtMod() to selectively update part attribute data.\nIf \"Name\" is NULL or an empty string, the active target part is used."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to close the part attributes form?"
            },
            {
                "role": "assistant",
                "content": "cvxPartClosePartAt\n\nClose the part attributes form.\nsee:\ncvxPartShowPartAt()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the different part items that can be included in the itemId parameter?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemSet\nitemId [in] item id\nAt [in] part item attribute\n\nSets the value of the specified attribute in the active part.\nThe itemId includes part items of evxAtItemId (VX_AT_USER~VX_AT_HEIGHT).\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must \n\n be assigned to At->label before calling this function. For all other \n\n itemId values, At->label can be an empty string (At->label[0]=0) when \n\n this function is called."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to prevent closing the files that are opened to access attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemSetInFile\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nitemId [in] item id\nAt [in] part item attribute\n\nSets an attribute value in a specified part.\nThe itemId includes part items of evxAtItemId (VX_AT_USER~VX_AT_HEIGHT).\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must \n\n be assigned to At->label before calling this function. For all other \n\n itemId values, At->label can be an empty string (At->label[0]=0) when \n\n this function is called.\nIf the specified file is not already open, this function will open it \n\n to access the attribute, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep() function, before calling this \n\n function, to set a flag that prevents cvxPartAtItemSetInFile() and \n\n cvxPartAtItemGetInFile() from closing the files that they open. (Files \n\n that are already open before cvxPartAtItemSetInFile() or \n\n cvxPartAtItemGetInFile() is called are never closed by these functions.) \n\n Keeping files open is a more efficient way to access multiple \n\n attributes in a file, but you must remember to call cvxFileKeep() again \n\n to reset the flag after you have finished your calls to \n\n cvxPartAtItemGetInFile() and cvxPartAtItemSetInFile(), and you also become \n\n responsible for closing the files, for example by using one of the \n\n cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the description of a specified attribute item?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemDesSet\nitemId [in] attribute item id\nAtLable [in] attribute item name\nAtDes [in] attribute item description\n\nSet the description of the specified attribute item.\nIf the itemId = VX_AT_USER, the parameter AtLable can not be NULL. \n\n The itemId includes part items of evxAtItemId(VX_AT_USER~VX_AT_HEIGHT)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to lock a specific attribute item?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemLockSet\nAtLable [in] custom attribute name\nAtLockState [in] locking state of attribute item\n\nSet the locking state of the specified attribute item. \n\n only custom attribute item are supported."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to access and close the file after setting the locking state of an attribute item?"
            },
            {
                "role": "assistant",
                "content": "cvxPartAtItemLockSetInFile\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nAtLable [in] custom attribute name\nAtLockState [in] locking state of attribute item\n\nSet the locking state of the specified attribute item. \n\n only custom attribute item are supported.\nIf the specified file is not already open, this function will open it \n\n to access attributes, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep() function, before calling this \n\n function, to set a flag that prevents this function from closing the \n\n files that it opens. (Files that are already open before this function \n\n is called are never closed by this function.) If you will be calling \n\n several functions to access data in the same file, keeping the file open \n\n between calls is more efficient than letting each function open and close \n\n the file. However, you must remember to call cvxFileKeep() again to reset \n\n the flag after you have finished all of the function calls that need to \n\n access the specified file, and you also become responsible for closing the \n\n file, for example by using one of the cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to keep the file open while accessing attributes?"
            },
            {
                "role": "assistant",
                "content": "cvxPartUserAtSet\nFile [in] object file name (File[0]=0 or NULL for active file)\nRoot [in] root object name (Root[0]=0 or NULL for active target object)\nDelOrgAt [in] whether to clear original user attribute\nCount [in] number of user attributes\nUserAt [in] list of user attributes\n\nAssigns the specified part attribute data to the specified part. \n\n Existing part attribute data is replaced with the contents of \n\n the input attribute data structure.\nIf the specified file is not already open, this function will open it \n\n to access attributes, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep() function, before calling this \n\n function, to set a flag that prevents this function from closing the \n\n files that it opens. (Files that are already open before this function \n\n is called are never closed by this function.) If you will be calling \n\n several functions to access data in the same file, keeping the file open \n\n between calls is more efficient than letting each function open and close \n\n the file. However, you must remember to call cvxFileKeep() again to reset \n\n the flag after you have finished all of the function calls that need to \n\n access the specified file, and you also become responsible for closing the \n\n file, for example by using one of the cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get custom string attached to a part entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartGetCustomStr\nidEnt [in] part id\nidStr [out] custom string id, can be NULL\nCustomString [out] custom string\n\nGet custom string attached to a entity.\nThe calling procedure MUST deallocate the output string with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set a configuration as active for the current part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgActivate\nidCfg [in] config id\n\nActive the specified configuration to current part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to inquire the id of the current active configuration?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqActiveCfgByName\nfileName [in] file name, NULL for active file name\nrootName [in] root name, NULL for active root name\nidCfg [out] the id of current active configuration\n\nOutputs the active configuration id of specified file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify data in the configuration table?"
            },
            {
                "role": "assistant",
                "content": "cvxCfgTblInfosSet\nidCfg [in] configuration id\ninfo [in] config table info that changed\n\nThis interface can modify data that already exists in the configuration table.\nGet Id by cvxPartInqCfgList(); \n\n Get info by cvxPartInqConfigTableInfos();\nMultiple values for each row of configuration can be set at once.\nnote:\nWhen using this interface to set the configuration table,there are too many structure parameters, \n\n which makes the interface difficult to use. \n\n Therefore ,after all the new interfaces that replace this interface are available, \n\n this interface will be discarded. \n\n Now,it is recommended that customers use cvxPartCfgTblAttrSet() to add, modify, and delete attribute \n\n related items to the configuration table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get configuration table infos by file name and root name?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCfgTblInfosByName\nfileName [in] file name, NULL for active file name\nrootName [in] root name, NULL for active root name\nidCfg [in] configuration id\npartCfg [out] configuration infos\n\nGet specified id configuration table infos. \n\n Get idCfg by cvxPartInqCfgList()/cvxPartInqCfgListByName();\nThe memory referenced by \"partCfg\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxPartFreeCfgTbl(&partCfg))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify items in the configuration table using attribute value and type?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblAttrSet\nmarkDel [in] 1 is delete attribute, -1 if add attribute(default attribute), else 0 is modify \n\n (If it exists, it will be modified;if it does not exist ,it will be added and modified.).\nidCfg [in] configuration id\ncnt [in] count of types(attrs)\ntypes [in] attribute type\nattrs [in] attribute data\n\nUser can add, modify, and delete items in the configuration table through the attribute value and attribute type.\nThe enumerations that can be used for types are: \n\nVX_AT_USER ,VX_AT_NUMBER ,VX_AT_DESIGNER ,VX_AT_COST ,VX_AT_SUPPLIER ,VX_AT_DESCRIPT, \n\nVX_AT_KEYWORD ,VX_AT_MANAGER ,VX_AT_MATERIAL ,VX_AT_NO_SECTION ,VX_AT_NO_HATCH ,VX_AT_NO_BOM, \n\nVX_AT_AREA ,VX_AT_VOLUME ,VX_AT_MASS ,VX_AT_LENGTH ,VX_AT_WIDTH ,VX_AT_HEIGHT.\nThe value of attrs can be obtained through interface cvxPartAtItemGet(),cvxPartAtItemGetInFile()..."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set part color in the configuration table?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblColorSet\nmarkDelClr [in] 1 is delete color, -1 if add color(default color), else 0 is modify (If it exists, it will be modified;if it does not exist ,it will be added and modified.).\nidCfg [in] configuration id\ncolor [in] part color.\n\nUser can add, modify, and delete color item in the configuration table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a variable item in the configuration table?"
            },
            {
                "role": "assistant",
                "content": "cvxPartCfgTblVarsSet\nmarkDelVars [in] 1 is delete variable, -1 if add variable(default variable), else 0 is modify \n\n (If it exists, it will be modified;if it does not exist ,it will be added and modified.).\nidCfg [in] configuration id\ncnt [in] count of vars\nvars [in] list of variable\n\nUser can add, modify, and delete variable item in the configuration table.\nnote:\nIf the user wants to modify the value of the variable, it is recommended to modify svxVariable.Expression."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about the axes in the current part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqAxis\nCount [out] number of axis\nAxis [out] list of index of axises\n\nOutputs a list of axis that belong to the current part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the length of a specified datum axis?"
            },
            {
                "role": "assistant",
                "content": "cvxAxisLengthGet\nidAxis [in] id of datum axis\nLength [out] length of datum axis\n\nGet length of the specified datum axis."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the contained frame of a specified plane?"
            },
            {
                "role": "assistant",
                "content": "cvxPlaneGetData\nidPlane [in] Plane id\nPlane [out] Plane data\n\nGet the Plane data associated with the specified idPlane, contained frame and Entity path.\nnote:\nThis interface can only retrieve datum data created by interface cvxPartPlaneNew()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain the ID of the default CSYS/Datum with Uid three 10?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqDefaultCSYS\nCSYS [out] Default CSYS/Datum id\n\nGet the Default CSYS/Datum ID which Uid is three 10."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve CSYS data by its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxCSYSGetData\nidCSYS [in] CSYS id\nCSYS [out] CSYS data\n\nGet the CSYS data associated with the specified idCSYS, contained frame and Entity path.\nnote:\nThis interface can only retrieve datum data created by interface cvxPartCSYSNew()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list of variables?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqDims\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nCount [out] number of variables\nVariables [out] list of variables\n\nOutputs a list of dimensions that belong to the specified part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the dimension indices for a particular part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqDimIdxs\nFile [in] part file name (File[0]=0 or NULL for active file)\nPart [in] part name (Part[0]=0 or NULL for active part)\nCount [out] number of dimensions\nIdList [out] list of the dimension's index\n\nOutputs a list of dimensions' id that belong to the specified part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the index of the base object of a specified PMI entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPMIInqBaseEnt\nidPMI [in] index of PMI\nidBaseObj [out] index of base object of PMI\n\nGet index of base object of specified PMI entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine if a specific PMI is valid?"
            },
            {
                "role": "assistant",
                "content": "cvxPMIInqValid\nidPMI [in] index of PMI\nisValid [out] whether PMI is valid (1: valid; 0: invalid)\n\nCheck whether the PMI is valid."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Can I get the leader curves for a symbol by its index?"
            },
            {
                "role": "assistant",
                "content": "cvxSymInqLeadLines\nidSym [in] index of symbol or PMI of symbol type\ncount [out] number of leader curves\nLeadCrvs [out] list of leader curves\n\nOutputs a list of leader curves of specified symbol.\nnote:\nall points in svxCurve are the points in Frame that the local \n\n coordinate system of the curve, the function cvxPntTransform() can be \n\n used to convert points into points in the global coordinate system. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a 3D Block and add it to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacetsBySTL\nname [in] block name\nstl [in] STL facets\nidBlock [out] id of new 3D Block\n\nCreates an 3D Block and adds it to the active part.\nIf \"idBlock\" is not NULL, the id of the 3D Block created \n\n by this function is output via \"idBlock\".\nDue to the lack of some data in svxSTL, I treat each triangle \n\n as a strip and store it in the facet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve a list of points in a specific 3D Point Block?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqBlockPnts\nidBlock [in] id of point block in active part\nCount [out] number of points\nPoints [out] list of points\n\nOutputs a list of points in the specified 3D Point Block. \n\n Memory for the point list is allocated by this function and output \n\n via \"Points\". It must be deallocated by the calling procedure \n\n with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to allocate memory for the STL facets?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFacets\nidBlock [in] STL id\nStl [out] STL facets\n\nOutputs a list of triangular facets of the specified STL.\nMemory for the STL facets is allocated by this function and \n\n assigned to the input data structure (Stl). It MUST be \n\n deallocated by the calling procedure using cvxStlFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the path to the original image file of a texture map applied to a facet block?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFacetsTxFileByLongPath\nidBlock [in] 3D block id\nPath [out] path to texture map's original image file\nsizePath [in] max size of Path\n\nOutputs path to the original image file if a texture map has been applied to a facet block. Unlike cvxPartInqFacets2(), which outputs the path to a copy of the original image file that ZW3D has put in its temp directory, this function outputs the path that was originally used to create the texture map. The file might no longer exist, although the image may still exist as an embedded object.\nIt is assumed the specified block (idBlock) resides in the active part.\nA Path that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes.\nsee:\ncvxPartInqFacets2() for a function that outputs all texture map attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to change the display attributes of a 3D block?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFacetsSetAt\nidBlock [in] id of 3D Block\nAt [in] display attributes\n\nModifies display attributes of the specified block. It is assumed the \n\n specified block resides in the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to project an STL to a plane and obtain its boundary curve?"
            },
            {
                "role": "assistant",
                "content": "cvxPartProjStl\nidStl [in] STL id\nidPln [in] plane id\ntol [in] refit tolerance\nsmth [in] refit smooth\nidCurve [out] id of STL boundary curve (NULL to ignore)\n\nProject the STL to a plane, to get its boundary curve. \n\n Output new boundary curve via \"idCurve\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get triangular facets for a specified face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceFacetsByChord\nidFace [in] face id\nChordHeight [in] chord height for facet generation(min = 0.001, )\nCount [out] number of triangular facets\nFacets [out] list of triangular facets\n\nOutputs a list of the triangular facets used to display the specified face at specified chord height.\nMemory for \"Facets\" is allocated by this function. It \n\n MUST be deallocated by the calling procedure with cvxMemFree().\nIt is assumed the specified face (idFace) resides in the active part.\nnote:\nif the idFace is planar, ChordHeight is invalid for this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve texture or shader attributes for a specified face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFaceFacets2ByTol\nRefineData [in] refine facets data\nFacets [out] facet data set\n\nOutputs the facets used to display the specified face along with \n\n display, texture or shader attributes that may be defined for the \n\n specified face at specifies RefineData.\nThis function allocates memory for lists inside the \n\n input \"Facets\" structure. The calling procedure is \n\n responsible to free the lists using cvxFacetsFree(Facets).\nIt is assumed the specified face (RefineData.listFaceId) resides in the active part.\nIf the value of chord height and angle exceeds the specified range, \n\n the default value will be used instead.\nsvxRefineFacets can be initialized through interface cvxPartRefineFacetsInit().\nnote:\nIf the face is planar, ChordHeight(VX_FACETS_TOL_DISTANCE,VX_FACETS_TOL_PIXEL) and angle(VX_FACETS_TOL_ANGLE) are ignored."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to convert STL data to facet data?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSTLConvertToFacets\nstl [in] STL data\nfacets [out] facet data\n\nStructures svxFacets and svxSTL are converted to each other."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to release memory of STL structure?"
            },
            {
                "role": "assistant",
                "content": "cvxStlFree\nStl [in] 3D \"STL\" triangle mesh data structure\n\nFrees memory associated with the specified STL structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate memory of specified svxEdgeDispData structure?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEdgeDispDataFree\ndata [in] display data of edge\n\nFrees memory associated with the specified svxEdgeDispData structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to regenerate triangle facet data for specified faces?"
            },
            {
                "role": "assistant",
                "content": "cvxPartRegenFacets\nCount [in] number of faces\nidFaces [in] list of face id's in active part\nAssembly [in] 1 to regenerate facets for active assembly, else 0\nLOD [in] 1 to generate level-of-detail, else 0\nTol [in] chord-height tolerance for facet generation (0.0 for default)\n\nRegenerates triangle facet data used to display the specified faces (Count and idFaces).\nIf no faces are specified (Count=0 and idFaces=NULL), all faces in the active part are \n\n re-tessellated at the specified tolerance (Tol). If \"Assembly != 0\", all faces in the active assembly are re-tessellated.\nIf \"Tol\" is input as zero, a tolerance based on the active view extent is used.\nIf \"LOD != 0\", levels of detail are calculated for faces that are retessellated. That \n\n means that facet data is generated at a tight tolerance, then organized into several \n\n levels of detail from coarse to fine. Level-of-Detail generates more data for each \n\n face, but the speed and quality of face display can be optimized based on the size \n\n of a face relative to the active view extent."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get history operations that have not been played in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistList\nOption [in] Option=0 : get history operations that have been played \n\n Option=1 : get history operations that have not been played \n\n Option=2 : get played and unplayed history operations\nCnts [out] number of history operations\nHistList [out] list of history operations\n\nGets a list of history operations in the active part as specified by the input \"Option\".\nThe memory referenced by \"HistList\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)HistList)).\nsee:\ncvxPartInqFtrList() is the same as cvxPartHistList when Type = 0."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to determine if a feature is a sub-part?"
            },
            {
                "role": "assistant",
                "content": "cvxFtrIsSubPart\nidFtr [in] feature id\n\nDetermine whether the feature is a sub-part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the associated external root name of a specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrAssoPart\nidFeature [in] index of external feature in active part\nfile [out] associated external file name (NULL to ignore)\nrootName [out] associated external root name (NULL to ignore)\n\nGet information about the source file associated with the specified \n\n external reference feature, including file name, root name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the idData after querying with cvxDataXXX() functions?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrData\nidFeature [in] feature id\niNoEval [in] 1 to get unevaluated data; else 0\nidData [out] id of feature data container\n\nOutputs the id of a copy of the specified feature's data container. \n\n The calling procedure MUST deallocate \"idData\" using cvxDataFree() \n\n after it is done querying \"idData\" with the cvxDataXXX() functions. \n\n\nThe data associated with a feature is stored in a \"persistent\" format. \n\n Entity references in the data are stored in a format that uses entity \n\n labels that were current at the time the feature operation was executed. \n\n Before the data can be queried for current entity id's, it must be \n\n re-evaluated. This can fail if it references entities that no longer \n\n exist. Point selections that reference entities (e.g. entity endpoint) \n\n can also fail to re-evaluate if the referenced entities no longer exist.\nRe-evaluation of the feature data is done without rolling the history \n\n back to the specified feature. For this reason, the success or failure \n\n of this function is very sensitive to whether the current state of the \n\n model contains all of the geometry that existed at the time that the \n\n feature was originally executed.\nIf you know that the feature data will not re-evaluate based on the \n\n current state of the model, you can get the last evaluated state of \n\n point and numeric inputs by calling this function with \"iNoEval=1\". \n\n In this case, you will not be able to successfully query any entity \n\n data fields in \"idData\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the tolerance used by a specific feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrTol\nidFeature [in] feature id\nTolerance [out] feature tolerance\n\nOutputs tolerance used by the specified feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to check the missing state of a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrRegenStatus\nidFtr [in] feature index\nstatus [out] feature regen status\n\nGet the missing state or constraint state of the feature.\nnote:\nThe functions of cvxPartInqFtrRegenStat() interface and cvxPartInqFtrRegenStatus() interface are completely different."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the feature group id of a specific feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrGroup\nidFeature [in] feature id\nidGroup [out] feature group id\n\nOutput the index of the feature group where the specified \n\n feature is located. Output -1 if the specified feature is not \n\n in any feature group."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of parent features for a specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFtrParentFtrs\nidFeature [in] index of feature in active part\ngetAll [in] 1 to get all parent features (parents and grandparents) \n\n 0 to get just the immediate parent features\ncnt [out] no. of parent features\nlist [out] list of indices of parent features\n\nGet a list of parent features upon with the specified feature is dependent.\nThe feature list (list) is allocated by this function and must be \n\n deallocated by the calling procedure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the specified entities of a feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrInqInpEnts\nidFeature [in] index of feature in active bin\ntype [in] entity type id\ncnt [out] no. of specified entities\nlist [out] list of entities\n\nGet the specified entities of the specified feature. These entities are in the VDATA of the feature.\nnote:\nUsually we need to call cvxPartFtrPlayTo() to rollback to \"idFeature\" first, \n\n and then call this function to get the input entities. \n\n The feature list (list) is allocated by this function and must be \n\n deallocated by the calling procedure. \n\n Some of evxEntType(VX_ENT_BREP, VX_ENT_OP, VX_ENT_POINT, VX_ENT_WIRE) are banned in this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to get the number of user attributes for a feature or sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrUserAtGet\nidFeature [in] index of feature or sketch\nCount [out] number of user attributes\nUserAt [out] list of user attributes\n\nRetrieves user attribute data of the specified feature or sketch in the current active part.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to delete a specific user attribute of a feature or sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrUserAtDel\nidFeature [in] index of feature or sketch\nCount [in] number of user attributes (0 to delete all user attributes)\nUserAt [in] list of user attributes (NULL to delete all user attributes)\n\nDelete user attribute of the specified feature or sketch in the current active part. \n\n the function does not delete any attributes if the specified label is an empty string \n\n or the attribute specified label is not found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of curves in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCurves\nCount [out] number of curves\nCurves [out] list of curve id's\n\nOutputs a list of indices of the curves that belong to \n\n the active part. The calling procedure MUST deallocate \n\n the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve a list of curves from a specified curve-list entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqCrvList\nidCrvList [in] id of curve-list entity in active part\nCount [out] number of curves (0 if there are no curves)\nCurves [out] list of curves (NULL if there are no curves)\n\nOutputs a list of the curve or edge entities referenced by the \n\n specified curve-list entity within the active part. The curve \n\n references are output using the \"svxEntPick\" data structure \n\n so that parent sketches can be identified for sketch curves \n\n instanced by the curve list.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate memory for a curve structure?"
            },
            {
                "role": "assistant",
                "content": "cvxCurveFree\nCrv [in] curve structure\n\nFrees memory associated with the specified curve structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of text entities in the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqTexts\ncount [out] number of texts\nidTexts [out] list of text id\n\nOutputs a list of id of the text that belong to the active part, \n\n including annotation, balloon, normal, bit-mapped and ready type. \n\n The calling procedure MUST deallocate the output list with cvxMemFree.\nnote:\nSee cvxPartInqAnnoTexts() for a similar function that collects only annotation text entities."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get count of temp datas?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqTempData\nidPart [in] part id (-1 to use the active part)\ncount [out] count of datas\ndatas [out] temp datas\n\nGet the temp data of the specified part or active part. \n\n Such as the curves' id of the Section View.\nThe memory referenced by \"datas\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)datas))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the name of a publication set?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqPublishSet\nFile [in] file name (File[0]=0 or NULL for active file)\nPart [in] root object name (Part[0]=0 or NULL for active target object or single object file)\nidPubSet [in] id of publication set to query\nName [out] name of publication set (NULL to ignore)\nCount [out] number of entities published by publication set (NULL to ignore)\nidEnts [out] list of ids of the entities published by publication set (NULL to ignore)\n\nQuery data of the specified publication set in the specified part. \n\n The calling procedure MUST deallocate the output list with cvxMemFree().\nIf the specified file is not already open, this function will open it \n\n to query publish sets, and will then close the file. If you want to \n\n keep the file open, use the cvxFileKeep function, before calling this \n\n function, to set a flag that prevents this function from closing the \n\n files that it opens. (Files that are already open before this function \n\n is called are never closed by this function.) If you will be calling \n\n several functions to access data in the same file, keeping the file open \n\n between calls is more efficient than letting each function open and close \n\n the file. However, you must remember to call cvxFileKeep again to reset \n\n the flag after you have finished all of the function calls that need to \n\n access the specified file, and you also become responsible for closing the \n\n file, for example by using one of the cvxFileClose or cvxFileSave functions.\nsee:\ncvxPartPublishSet(): create a publication set to publish the specified entities. \nsee:\ncvxPartInqPublishSets(): get a list of indices of the publication set. \nsee:\ncvxPartPublishSetDel(): delete the specified publication sets."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to create a backup operation in the active part's history?"
            },
            {
                "role": "assistant",
                "content": "cvxPartBackup\n\nInserts a \"Backup\" operation in the active part's history."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the options for encapsulation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEncapsulate\nOption [in] 0 to encapsulate according to active configuration options; \n\n 1 to force encapsulate to use StartData/ExplicitData; \n\n 2 to force encapsulate to use ExplicitData and explicit shape features; \n\n 3 to force encapsulate to use Explicit data with active config setting for explicit shape features\nKeepDimen [in] 1 to save feature dimensions with encapsulated data; 0 to delete them\n\nEncapsulates the active part's history."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxPartHistEnd in conjunction with cvxPartHistStart?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistEnd\n\nUsed in conjunction with cvxPartHistStart() to bundle all existing part geometry and history to be bundled into a single static \"StartData\" history operation. It is the equivalent of cvxPartEncapsulate(1, 0)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to play the feature history to the top of a specified feature?"
            },
            {
                "role": "assistant",
                "content": "cvxPartFtrPlayTo\nidxFtrPlayTo [in] id of feature play to\nstate [in] state of feature(1-has played, 0-not)\n\nPlay the feature history to the top of specified feature. If the state is 1, rollback to the specified feature, else play to this feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to close a new group of history operations?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistGroup\nidFirst [in] id of first history operation\nidLast [in] id of last history operation\nName [in] group name (input NULL for default name)\nClose [in] 1 to close new group, else 0\n\nGroup the specified history operations."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to transfer clipboard operations to part history?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistPaste\n\nPaste operations currently on the clipboard into the history of the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to rename an operation in the history of the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistRename\nidOp [in] id of history operation (i.e. feature)\nName [in] new operation name\nDescript [in] new description (NULL if undefined)\n\nRenames an operation in the history of the active part and assigns the specified description to it (if defined). Passing in a blank string for \"Descript\" will clear the description currently assigned to \"idOp\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to prompt the user for deleting history operations?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistDelUtil\nCount [in] number of history operations to delete\nOperations [in] list of history operation id's\nOpType [in] OpType=0 : prompt to the user \n\n OpType=1 : auto delete associated history operations \n\n OpType=2 : auto suppress failed feature\n\nDeletes the specified operations from the history of the active part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to change the status of a profile/datum to internal or external?"
            },
            {
                "role": "assistant",
                "content": "cvxPartMkEntExternal\nidEnt [in] index of the profile/datum to make internal/external\nexternal [in] 1-make external, else 0\n\nMake the specified profile/datum internal/external.\nnote:\nThe profile/datum must be used by only one feature."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to pair the call to re-enable history tree update with a prior call to disable?"
            },
            {
                "role": "assistant",
                "content": "cvxHistEnable\n\nRe-enable history tree update.\nCalls to this function MUST ALWAYS be paired with a prior call to cvxHistDisable()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to scroll to a feature in the history tree using a special entity?"
            },
            {
                "role": "assistant",
                "content": "cvxPartHistScrollTo\nidEnt [in] located entity\n\nUse this function to scroll to the feature in the history tree by the special entity."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to retrieve sheet metal attribute values?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdAtGet\nat [out] sheet metal attribute\n\nGet the sheet metal attribute values."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to obtain the faces opposite the stationary face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqSmdStatFcs\nidShape [in] shape id\ncountStat [out] count of \"statFcs\" (NULL to ignore)\nstatFcs [out] see description(NULL to ignore)\ncountPair [out] count of \"pairStatFcs\" (NULL to ignore)\npairStatFcs [out] see description(NULL to ignore)\n\nGet the faces on the same side as the stationary face(statFaces). \n\n Get the faces opposite the stationary face(pairStatFaces).\nsee:\nInterface cvxPartInqSmdStatFace can only obtain one face of sheet metal whose attribute is the stationary face.\nnote:\nSheet metal must have a stationary face to call this interface. \n\n The memory referenced by \"statFcs\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)statFcs)). \n\n The memory referenced by \"pairStatFcs\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)pairStatFcs))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the surface type of a sheet metal face?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqSmdSrfType\nidFace [in] face id\ntype [out] sheet metal surface type\n\nGet surface type of sheet metal."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to specify the stationary face of a sheet metal part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartSmdStatFaceSet\nidFace [in] id of face\nidFtr [out] id of feature(NULL to ignore)\n\nSet the stationary face of a sheet metal part."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to free the memory referenced by idFlattens and flattenNames?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqFlattens\ncount [out] count of idFlattens(flattenNames).\nidFlattens [out] list of flatten id\nflattenNames [out] list of flatten name\n\nGets a list of sheet metal flatten id and flatten name in the active part. \n\n At least one of idFlattens and flattenNames must exist.\nThe memory referenced by \"idFlattens\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)idFlattens)). \n\n The memory referenced by \"FlattenNames\" is allocated by this function. \n\n The calling procedure is responsible to free it (cvxMemFree((void**)FlattenNames))."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a variable to the active part?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarAdd\nVariable [in] definition of a variable\n\nAdds the specified variable to the active part.\nExpression format of string type :\"\\\"str\\\"\"; \n\n Expression format of point type :\"Point(1,2,3)\"; \n\n Expression format of vector type :\"Vector(1,2,3)\";\nIf the type of variable is set to 0,then the sub_type must be set,else ignore. \n\n If the sub_type of variable is set to 1 or 2,then the unit_type must be set,else ignore.\nevxUnitType for length unit and evxAngUnitType for angle unit."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the value of a specified variable?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarGet\nVariable [inout] variable data\n\nSearches the active part for the variable named \"Variable->Name\".\nThe value of the specified variable is output via \n\n \"Variable->Value\" in database units (mm, deg).\nIf \"Variable->Name\" is a string variable, the associated \n\n text is output via \"Variable->Expression\". Strings longer \n\n than 256 bytes are truncated.\nnote:\n\"Variable->Expression\" is not used to output the \n\n expression that defines a variable. It is used to output \n\n text associated with a \"string\" variable."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the expression format for the point type?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarSet\nCount [in] number of variables\nVariables [in] list of variables\nWorking [in] 1 to display \"Working...\" message, else 0\n\nUpdates the part variables (e.g. dimensions, parameters) \n\n specified by \"Variables\" and regenerates the active part \n\n with the modified values.\nYou can disable the object regeneration normally performed by \n\n this function by inputing \"Working = -1\".\n\n\nExpression format of point type :\"Point(1,2,3)\"; \n\nExpression format of vector type :\"Vector(1,2,3)\";\nsee:\nthe description of \"cvxRootVarSet()\" for the names \n\n used to identify various part parameters and attributes."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to copy existent expressions to a specified equation set?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarAddToEqnSet\nidEqnSet [in] equation set id\ncnt [in] number of variables\nvars [in] list of variables\n\nAdds some non-existent expressions or copys some existent expressions to the specified equation set.\nUnlike the cvxPartEqnMoveToEqnSet() interface, this interface does not change the position of original expression."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is it possible to specify the name of the equation set while creating it?"
            },
            {
                "role": "assistant",
                "content": "cvxPartEqnSetWithName\nsetName [in] equation set name(can be NULL)\ncount [in] number of variables\nvars [in] list of variables\n\nDESCRIPTION: Create an equation set in active part, and add variables into this equation set.\nThis interface can create an empty equation set or specify the name of the equation set."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the parameters of cvxPartViewAdd()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartViewAddInit\ndata [out] view data(z3prt,z3asm)\n\nInitialize the parameters of the cvxPartViewAdd().\nnote:\nDo not assign a value to variable \"data\" before calling this function. \n\n The cvxMemZero() is called inside the interface to empty everything."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to save view information in the view manager?"
            },
            {
                "role": "assistant",
                "content": "cvxPartViewRecord\nidView [in] view id\nView [in] view information\n\nRecord the view object in view manager."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "When should I use cvxPartShowTarg() function over cvxPartShowAll()?"
            },
            {
                "role": "assistant",
                "content": "cvxPartShowTarg\n\nLimit the scope of display traversal to only the active target object. \n\n This affects operations such as drawing and picking in all views. For \n\n example, when the root object is an assembly and the active target is \n\n one of its components, this function prevents other components in the \n\n assembly from being drawn. If the root object is the active target, \n\n this function and cvxPartShowAll() produce the same results."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to split selected roots into multiple single files?"
            },
            {
                "role": "assistant",
                "content": "cvxRootSeparate\ndata [in] separate data\n\nThe function of this interface is to split the selected roots in multiple files into multiple single files.\nInterface cvxRootSeparateInit can initialize the structure."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to edit a root object in the active file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootActivate\nName [in] root object name\n\nActivates the specified root object in the active file for editing."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to back up information about the current target object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootActivateLoadAsmCtx\nFile [in] root object file\nName [in] root object name\nisLoad [in] 1 is load assembly context data, 0 is not load\n\nActivates the root object specified by \"File\" and \"Name\" as the \n\n target object and backs up information about the current target \n\n object to an internal stack (up to 16 calls deep).\nWhen this function is called with \"File=NULL\" and \"Name=NULL\", \n\n the last target object on the stack is restored. \n\n When this function is called with \"File=\"*\" and \"Name=NULL\", \n\n the stack is cleared.\nThe calling application MUST reliably pair calls to this function to set \n\n and restore target objects.\nfor example:\n...(coding)\ncvxRootActivateLoadAsmCtx(File,Name,1);\n...(coding)\n...(when no code is needed to execute in the current environment, the interface closure file needs to be called again)\ncvxRootActivateLoadAsmCtx(NULL,NULL,1);\n...(coding)\n\nnote:\nIf cvxRootActivateLoadAsmCtx(NULL,NULL,) is not called,unpredictable errors can occur. \n\n cvxRootActivateLoadAsmCtx(File,Name,0) and cvxRootActivate2(File,Name) have the same function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add a root object with a description for a part?"
            },
            {
                "role": "assistant",
                "content": "cvxRootAdd2\nName [in] root object name\nTemplate [in] optional template object name (or NULL)\nDescription [in] optional object description (or NULL)\n\nThe function is same as cvxRootAdd() but add a parameter Description to add \n\n description for part"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the parameters required to copy a root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCopy\nSourceFile [in] name of file to copy from\nSourceName [in] name of root object in source file\nDestFile [in] name of file to copy to\nDestName [in] name to assign copied root object\nOverwrite [in] 0 = upgrade DestName to avoid naming conflict, \n\n 1 = prompt before overwriting existing object. \n\n -1 = automatically overwrite existing object.\nUpdateUid [in] 1 to make UID's of copied geometry unique, else 0\n\nCopies the specified root object from \"SourceFile\" to \"DestFile\". \n\n Both files must already exist and must reside in one of the \n\n directories specified in \"vxpaths\" (see cvxPathAdd() and \n\n cvxPathSearchFirst()).\nNormally, when a root object is copied, the unique id's in the copied \n\n object are the same as the original object. When \"UpdateUid=1\", the \n\n the unique id's of the copied object are updated so they are different \n\n from the original object. You should input \"UpdateUid=0\", unless you \n\n have a specific purpose for generating copies with different unique id's. \n\n In normal usage, ZW3D is able to differentiate entities in a copied object \n\n from the original object without changing unique id's."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to exit the active root object to the parent file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootExit\n\nExits the active root object to either the parent object or the parent file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the maximum size of the root object name?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqActive\nName [out] name of active root object\nnBytes [in] string max size of root object name\n\nOutputs the name of the active root object. \n\n Outputs \"Name[0]=0\" if there is not an active root object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a specific root object has been modified?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqModByName\nfileName [in] Z3/VX file name (fileName[0]=0 or NULL for active file)\nrootName [in] root object name (rootName[0]=0 or NULL for active object)\nmod [out] 1 if active root object has been modified\n\nOutputs 1 if the specified root object has been modified since it was \n\n last activated, otherwise outputs 0.\nsee:\ncvxRootInqModSinceRegen() and cvxFileIsModified()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get a list of symbol names in a specified file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqSymbol\nfile [in] file path (pass in NULL if undefined)\niCount [out] number of symbol names\nnames [out] list of symbol names\n\nIf \"file\" is input as NULL, this function gets a list of the symbol names in the active file.\nIf the path of a valid ZW3D file is input via \"file\", this function gets a \n\n list of symbol names in the specified file.\nThe list referenced by \"**names\" is allocated by this function and must \n\n be deallocated by the calling procedure. A NULL pointer is output if \n\n no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to deallocate the list of root object names obtained from the function?"
            },
            {
                "role": "assistant",
                "content": "cvxRootList\nFile [in] optional ZW3D file path (pass in NULL if undefined)\nCount [out] no. of root objects output via \"Names\"\nNames [out] list of root object names\n\nif \"File\" is input as NULL, this function gets a list of the names of all \n\n the root objects in the active file.\nIf the path of a valid ZW3D file is input via \"File\", this function gets a \n\n list of the root objects in the specified file.\nThe list referenced by \"**Names\" is allocated by this function and must \n\n be deallocated by the calling procedure. A NULL pointer is output if \n\n no data is found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to register a template object file name?"
            },
            {
                "role": "assistant",
                "content": "cvxRootTemplateFile\nFile [in] template object file name (NULL for default name)\n\nRegisters the specified object file name as the file from \n\n which cvxRootAdd() retrieves template objects. The file \n\n should reside in one of the active search directories \n\n (see cvxPathAdd()). Input NULL or a blank string to \n\n use the default template file name (defined in config)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to assign a new description to a root object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootRename2\nName [in] name of root object to rename (in active file)\nNewName [in] new name for root object\nDescript [in] new description for root object (NULL if undefined)\nUpdate [in] 1 to update references by name, else 0\n\nRenames a root object in the active file and assigns the specified \n\n description to it (if defined). If \"Update\" is input as a non-zero \n\n value, references to \"Name\" in the active file are changed to \"NewName\". \n\n Passing in a blank string for \"Descript\" will clear the current \n\n description associated with the specified root object.\nnote:\nCan only rename the root name of .Z3 File."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What happens if an error occurs during renaming?"
            },
            {
                "role": "assistant",
                "content": "cvxRootRenameMulti\nCount [in] the number of names in each input array\nFileName [in] array of \"Count\" file names or full paths to rename. each file that needs to be renamed must have add file name or full path to the array.\nRootName [in] array of \"Count\" root object names to rename, may be NULL. multi-objects files must specify the root object to be renamed. single-object files do not need to be specified.\nNewFileName [in] array of \"Count\" new file names or full paths, may be NULL. if don't specify new file name, the original file name is used by default. single-object file should always specify new file name.\nNewRootName [in] array of \"Count\" new root object names, may be NULL. if no new root object name is specified for multi-objects file, the original root object name is used by default. single-object files do not need to be specified.\nfDelOriginal [in] 1 to delete original files after renaming, 0 to keep them\n\nRename the given files and/or root objects. If neither the new file name nor the new root object name is specified, the function does nothing and returns ZW_API_INVALID_INPUT.\nIn the active file and files referenced by the active file, references to the given names are updated to use the new names.\nRenaming a root object with this function clears the object's description. Refer to cvxRootRename2() for a function that can assign a description to a root object while renaming it.\nWhen files are renamed, a new copy of each file is saved using the new name rather than actually changing the name of the original file. If the fDelOriginal argument is 1, this function deletes the original files for which new files have been created. If fDelOriginal is 0, the original files are preserved.\nIf a n error does occur, some files and objects might be renamed and others might still have their original names when this function returns."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the value of a specified variable?"
            },
            {
                "role": "assistant",
                "content": "cvxRootVarGet\nName [in] root object name\nVariable [inout] variable data\n\nSearches the specified root object in the active file \n\n for the variable named \"Variable->Name\".\nThe value of the specified variable is output via \n\n \"Variable->Value\" in database units (mm, deg). \n\n The \"isDistance\" parameter is not set by this function.\nIf \"Variable->Name\" is a string variable, the associated \n\n text is output via \"Variable->Expression\". Strings longer \n\n than 256 bytes are truncated.\nnote:\n\"Variable->Expression\" is not used to output the \n\n expression that defines a variable. It is used to output \n\n text associated with a \"string\" variable."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to show or hide a root object in the root object browser?"
            },
            {
                "role": "assistant",
                "content": "cvxRootVisibility\nName [in] root object name\nVisible [in] 1 to show; 0 to hide\n\nIf \"Visible = 0\", suppress display of the specified \n\n root object in the root object browser.\nIf \"Visible = 1\", enable display of the specified \n\n root object in the root object browser.\nIf is assumed \"Name\" identifies a valid root object \n\n in the active file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the items included in evxAtItemId for cvxRootAtItemGet?"
            },
            {
                "role": "assistant",
                "content": "cvxRootAtItemGet\nfile [in] object file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active target object)\nitemId [in] item id\nat [inout] part item attribute\n\nOutputs an attribute from a specified root.\nThe itemId includes the following items of evxAtItemId: VX_AT_USER VX_AT_NAME VX_AT_NUMBER VX_AT_DESIGNER VX_AT_MANAGER VX_AT_SUPPLIER VX_AT_KEYWORD VX_AT_DESCRIPT VX_AT_START VX_AT_END\nWhen itemId is VX_AT_USER, the name of the user-defined attribute must be assigned to at->label before calling this function. For all other itemId values, at->label can be an empty string (at->label[0]=0) when this function is called.\nIf the specified file is not already open, this function will open it to access the attribute, and will then close the file. If you want to keep the file open, use the cvxFileKeep() function, before calling this function, to set a flag that prevents cvxRootAtItemGet() and cvxRootAtItemSet() from closing the files that they open. (Files that are already open before cvxRootAtItemGet() or cvxRootAtItemSet() is called are never closed by these functions.) Keeping files open is a more efficient way to access multiple attributes in a file, but you must remember to call cvxFileKeep() again to reset the flag after you have finished your calls to cvxRootAtItemGet() and cvxRootAtItemSet(), and you also become responsible for closing the files, for example by using one of the cvxFileClose() or cvxFileSave() functions."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to set user custom data to an active object?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataSet\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\nobjectName [in] root object name (objName[0]=0 or NULL for active object)\ndata [in] customization data\ndataLength [in] length of customization data\n\nSet user custom data to a specific root object of an existing ZW3D file. \n\n Program will overwrite the first custom data if root object already has custom data."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to remove custom data from a ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataDel\nfile [in] ZW3D or VX file name (file[0]=0 or NULL for active file)\nobjectName [in] root object name (objName[0]=0 or NULL for active object)\n\nDelete the first user custom data from a existing root object of an existing ZW3D file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the customization data for an existing ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootInqCustomData\nfile [in] ZW3D file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active object)\ncount [out] number of customization data\nidCustomDatas [out] id's list of customization data objects\n\nOutputs a list of indices of the customization data that belong to a existing root object of an existing ZW3D file. The calling procedure MUST deallocate the output list with cvxMemFree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify customization data of an existing ZW3D file?"
            },
            {
                "role": "assistant",
                "content": "cvxRootCustomDataModById\nfile [in] ZW3D file name (file[0]=0 or NULL for active file)\nroot [in] root object name (root[0]=0 or NULL for active object)\nidCustomData [in] index of customization data object\ndata [in] customization data (pointer to null-terminated ascii string)\n\nModify specified customization data from a existing root object of an existing ZW3D file."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of dimension entity id's in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqDim\nCount [out] number of dimensions\nidEnts [out] list of dimension entity id's\n\nOutputs a list of indices of dimension entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the reference flag of a dimension?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqDimRefFlag\nidDim [in] id of dimension to inquire\nrefFlag [out] reference dimension flag\n\nOutputs the reference flag that belong to the specified id. \n\n 1-reference flag, 0-no, -1-function fails."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a sketch is cosmetic?"
            },
            {
                "role": "assistant",
                "content": "cvxSkIsCosmetic\nIdSketch [in] d of sketch\n\nThis function is to determine whether the sketch is cosmetic."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqExternalSk\nidSketch [in] id of external sketch\nfileName [out] file name of source sketch\nrootName [out] root name of source sketch (output an empty string when file is a single object file)\nskName [out] name of sketch entity (output an empty string when root object is a sketch)\n\nGet information about the source sketch associated with the specified \n\n external sketch, including file name, root name and sketch name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the area properties about centroid?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqArea\nnCrv [in] number of curve list\nidCrvs [in] list of boundary curves\ninnerPnt [in] reference point (the inner point)\naboutCM [out] Area properties about centroid\naboutRf [out] Area properties about ref\n\nCalculates the area properties of closed profile(2D). \n\n If the third argument (innerPnt) is V_NULL, aboutRf will be calculated \n\n about (0,0)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the default X and Y axis indices for a sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqAxis\nidSketch [in] index of sketch (-1 to inquire active sketch)\nxAxis [out] index of X axis\nyAxis [out] index of Y axis\n\nGet index of the default x and y axis of the specified sketch. \n\n if the specified default axis is not found, the value is assigned \n\n to -1, such as *xAxis = -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the start point of a 2D axis?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqAxisDir\nidAxis [in] index of 2d axis\npPnt [out] start point of axis\npDir [out] direction of axis\n\nGet the direction associated with the specified object (idAxis)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of geometry entity id's in a specified sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqGeomById\nidSketch [in] id of sketch\ncount [out] number of geometry entities\nidEnts [out] list of geometry entity id's\n\nOutputs a list of indices of geometry entities in specified sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to inquire about construction geometry entities by sketch id?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqGeomXById\nidSketch [in] id of sketch\ncount [out] number of construction geometry entities\nidEnts [out] list of construction geometry entity id's\n\nOutputs a list of indices of construction geometry entities in specified sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of external reference entities in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqRef\nCount [out] number of external reference entities\nidEnts [out] list of external reference entity id's\n\nOutputs a list of indices of external reference entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of text entity id's in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqText\nCount [out] number of text entities\nidEnts [out] list of text entity id's\n\nOutputs a list of indices of text entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to deallocate the output list of constraint entities in an active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqCns\nCount [out] number of constraints\nidEnts [out] list of constraint entity id's\n\nOutputs a list of indices of constraint entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if an entity is a construct line?"
            },
            {
                "role": "assistant",
                "content": "cvxSkEntWireType\nentId [in] id of entity\ntype [out] wire type of specified entity, 1-construct, 0-no\n\nOutputs the construct type of specified entity. \n\n 1-the entity is construct line, 0-no."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the list of ready sketch text entity indices?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqReadyText\nidSketch [in] index of sketch (-1 to inquire active sketch)\nCount [out] number of ready sketch text entities\nidEnts [out] list of ready sketch text entity id's\n\nOutputs a list of indices of ready sketch text entities in the active sketch.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to deallocate memory for the text string obtained from ready sketch text?"
            },
            {
                "role": "assistant",
                "content": "cvxSkReadyTextInqText\nidRdText [in] index of the ready sketch text\nRdText [out] data of ready sketch text\n\nGet string of the specified ready sketch text.\nThis function allocates memory for the text string. The memory MUST \n\n be deallocated by the calling procedure using cvxReadyTextFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of sketch block reference entities in a specified sketch or sketch block?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqBlockReferences\nidSketch [in] id of sketch or sketch block in active file (<1 for active one)\nCount [out] number of sketch block reference entities\nidEnts [out] list of sketch block reference entity id's\n\nOutputs a list of indices of sketch block reference entities \n\n in the specified sketch or sketch block.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to update the GUI after activating a sketch block?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockActivate\nidBlock [in] id of 2d sketch block in active file (0 to exit active sketch block)\nUpdateGUI [in] 1 to update GUI; 0 to leave GUI unchanged\n\nActivates the specified 2d sketch block for query or editing.\nIn addition, idBlock can also be the index of a sketch block reference. \n\n In this case the definition sketch block will be activated at the position \n\n of the block reference.\nCall this function with \"idBlock = 0\" to exit the sketch block \n\n back to its parent object or previous target object."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the id of the definition sketch block for a given block reference?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockRefGetDefinition\nidRef [in] id of sketch block reference\nidBlock [out] id of the definition sketch block\n\nOutput the index of the definition sketch block of the specified block reference."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get dimension of a block?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockInqDim\nblockName [in] block name\nCount [out] number of dimension entities\nidEnts [out] list of dimension entity id's\n\nOutputs a list of indices of dimension entities that belong to the specified block.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the count of sketch block reference entities for a specific block?"
            },
            {
                "role": "assistant",
                "content": "cvxSkBlockInqRefs\nidBlock [in] id of 2d sketch block\ncount [out] number of sketch block reference entities\nidEnts [out] list of sketch block reference entity id's\n\nOutputs a list of sketch block reference entity id's that belong to the specified block.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the geometry entities associated with a specific constraint?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqCnsGeoms\nidCons [in] index of geometry constraint\nCount [out] number of geometry entities\ngeoms [out] data of geometry entities\n\nOutputs the geom data array of entities associated with the specified \n\n geometry constraint.\nThe calling procedure MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to search for a variable in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkVarGet\nVariable [inout] variable data\n\nSearches the active sketch for the variable named \"Variable->Name\".\nThe value of the specified variable is output via \n\n \"Variable->Value\" in database units (mm, deg).\nIf \"Variable->Name\" is a string variable, the associated \n\n text is output via \"Variable->Expression\". Strings longer \n\n than 256 bytes are truncated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to obtain a list of variables in the active sketch?"
            },
            {
                "role": "assistant",
                "content": "cvxSkInqVars\nCount [out] number of variables\nVariables [out] list of variables\n\nOutputs a list of variables that belong to the active sketch. \n\n The calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I update the text content of a text entity?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTextMod\nidText [in] id of text entity\nText [in] null-terminated ascii text string to assign to entity\n\nReplaces the text currently associated with \"idText\" with the input text string (Text)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the location of a specified text?"
            },
            {
                "role": "assistant",
                "content": "cvxEntTextLocGet\nidText [in] text id\nloc [out] location\n\nOutputs the location of specified text."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to inquire about the active entity path?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathInqActive\nentPath [out] entity path of entity\n\nOutputs current active entity path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to append one entity path to another?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathAppendPath\ndstPath [inout] entity path that be appended\nsrcPath [in] the appended entity path\n\nAppends an entity path to the end of the specified entity path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the parent component of a specified entity path?"
            },
            {
                "role": "assistant",
                "content": "cvxEntPathGetParentComp\nentPath [in] entity path\nparentComp [out] entity path of parent component\n\nOutputs the entity path of the parent component of the specified entity path."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to change the current selected item by index?"
            },
            {
                "role": "assistant",
                "content": "cvxComboSetCurrentItem\nsForm [in] form name\nfield [in] field number\nitem [in] index\n\nSet the id of current selected item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the item text in the combobox of a form?"
            },
            {
                "role": "assistant",
                "content": "cvxComboCurrentTextSet\nsForm [in] form name\nidField [in] field id\ntext [in] current text\n\nSet the item text in the combobox widget of a form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a specified GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormShow\nForm [in] GUI form name\n\nShows (i.e. display) the specified GUI form.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to kill a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormKill\nForm [in] GUI form name\n\nKills (i.e. cancel and undisplay) the specified GUI form.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a specified GUI form and wait for user input?"
            },
            {
                "role": "assistant",
                "content": "cvxFormWait\nForm [in] GUI form name (null-terminated ascii string)\n\nThis function displays the specified GUI form and waits for the \n\n user to press the \"Okay\", \"Apply\" or \"Cancel\" button on the form. \n\n It returns 0 if the user pressed \"Cancel\", 1 if the user pressed \n\n \"Okay\" or 2 if the user pressed \"Apply\".\nIf you want to cause another widget on the form to cause cvxFormWait() \n\n to return, attach a callback function that invokes cvxFormWaitExit() to \n\n the widget. Whatever integer value is passed to cvxFormWaitExit() will \n\n be returned by this function.\nIf \"Okay\" or \"Cancel\" are pressed, the GUI form is automatically \n\n undisplayed. If this functions returns because the user pressed \"Apply\" \n\n or because cvxFormWaitExit() was called, the GUI form remains displayed \n\n until the calling application undisplays it using cvxFormKill().\nnote:\ncvxFormKill() can be applied to a form that has already been \n\n undisplayed without any bad consequences."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxFormWaitExit to exit cvxFormWait and pass an integer value?"
            },
            {
                "role": "assistant",
                "content": "cvxFormWaitExit\nReturnValue [in] integer value to pass to cvxFormWait ()\n\nWhen a GUI form is displayed with cvxFormWait(), invoking this function \n\n will cause cvxFormWait() to exit and return the integer value passed to \n\n this function. Ordinarily, this function would be invoked from a callback \n\n function associated with the form actively displayed by cvxFormWait()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to automatically adjust the size of a form when its children are modified?"
            },
            {
                "role": "assistant",
                "content": "cvxFormAdjustSize\nForm [in] form name\n\nAuto adjust the form size when its children are changed (hidden or modified)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to insert a form to a specific position in the UI manager?"
            },
            {
                "role": "assistant",
                "content": "cvxFormInsertTo\nFormInfo [in] form information that the \"Form\" add to\nIndex [in] position that the form insert to, only support VX_UI_MANAGER type\nAddTo [in] form type that the \"Form\" add to\n\nAdd specified form to file browser or ui manager. We show in all environments as default. \n\n If want to hide in some environment, please use cvxFormVisibleSet."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I store the form title as a null-terminated string in memory?"
            },
            {
                "role": "assistant",
                "content": "cvxFormTitleGet\nForm [in] GUI form name\nNumBytes [in] number of bytes of memory referenced by \"Title\"\nTitle [out] form title (null-terminated text string)\n\nGets the specified form's caption title (if it has one) and stores it \n\n as a null-terminated string in the memory referenced by \"Title\". If \n\n the string is longer than \"NumBytes\", it is truncated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize a GUI form using encoded data?"
            },
            {
                "role": "assistant",
                "content": "cvxFormDataSet\nForm [in] GUI form name\nData [in] GUI data encoded in a null-terminated string\n\nUses the data encoded in \"text\" to initialize the specified GUI form.\nsee:\ncvxFormDataGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the process to register a function pointer in the Init function?"
            },
            {
                "role": "assistant",
                "content": "cvxFormCallback\nName [in] function name\nFunction [in] function pointer\n\nRegisters a pointer to a callback function referenced by name \n\n in the definition of a GUI form template field (e.g. \"callback=MyCallback\").\nFunction pointers should be registered in the \"Init\" function \n\n called when your library is dynamically loaded by ZW3D at runtime.\nThe callback function should be of the following type:\nint Callback(char *FormName, int idField, int idItem)\nIf developer wants to unload the DLL plug in file dynamically. \n\n It is a MUST to run cvxCmdFuncUnload() in the exit function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to retrieve the ID of the active field in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFormActiveField\nidField [out] active field id\n\nOutputs the ID of the active field of the active template-driven GUI form. \n\n Outputs \"idField = 0\" if the active field cannot be determined."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the available types of forms that can be set visible in a specific environment?"
            },
            {
                "role": "assistant",
                "content": "cvxFormVisibleSet\nEnvironment [in] environments\nForm [in] GUI form name\nState [in] visibility of form (1: visible; 0: invisible)\nType [in] form type that the \"Form\" set visible\n\nedit the page config about whether to be show in particular environment. the function \n\n currently only supports VX_UI_MANAGER;\nZW3D has entire 13 environments. the corresponding type can see evxEnvironment"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number of fields for a specified template?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFields\nName [in] template name\nNumFld [out] number of fields\nidFields [out] list of fields id's\n\nOutputs a list of indices of the fields for the specified template.\nThe calling procedure MUST deallocate the output list with cvxMemFree()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the options string for a specific field in a template?"
            },
            {
                "role": "assistant",
                "content": "cvxTplInqFieldOptions\nName [in] template name\nidField [in] index of field\nNumBytes [in] no. bytes of option string\nOptions [out] option string\n\nGets the string of the \"options\" of the specified field for the specified template."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set focus for user input in GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldFocusSet\nForm [in] GUI form name\nidField [in] field id\n\nIf possible, sets the focus for user input to the specified field of the specified form.\nIf this function does not work, especially for a command form displayed \n\n in the ZW3D Manager area, try calling cvxCmdSend(\"@@idField\"), \n\n where \"idField\" is the actual integer value of the variable \"idField\". \n\n For example, if \"idField=3\", call cvxCmdSend(\"@@3\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to disable a field in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldDisable\nForm [in] GUI form name\nidField [in] field id\n\nDisable the specified GUI form field.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if a specific form field is enabled?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldEnableGet\nForm [in] GUI form name\nidField [in] field id\n\nGet the enable state of the specified form field.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to assign an image to a label field?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldImageSet\nForm [in] GUI form name\nidField [in] label field id\nImage [in] image file name\n\nAssigns the specified image to the specified label field. \n\n ZW3D looks in the default search paths for the image file. \n\n See cvxPathFind().\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize an input field for selecting a font?"
            },
            {
                "role": "assistant",
                "content": "cvxFieldInitFont\nForm [in] GUI form name\nidField [in] id of form field for font combo box\nName [in] name of default font, may be NULL\nhasZwFont [in] judge if fonts have ZW fonts.1:include ZW fonts,0:no ZW fonts\n\nInitializes an input field for selecting a font. This function is \n\n intended for use when initializing a form. It can be called during \n\n initialization of a GUI form or from the \"init_after\" callback \n\n function of an \"Options\" form.\nIt is assumed the form has an option (integer) field \"idField\" that \n\n has a combo box widget. Any prior contents of the combo box list are \n\n discarded, and the combo box list is filled with the names of fonts \n\n currently available on the local computer. If \"Name\" is a non-empty \n\n string that matches the name of one of those fonts, that font becomes \n\n the default selection in the combo box.\nTo apply this function to an \"Options\" form, input \"OptForm\" as the \n\n value of the \"Form\" argument.\nIt is recommended that the form's field \"idField\" should reference the \n\n global variable \"VgRdTxtFont\" to hold the index of the selected item. \n\n This will synchronize the default font selection with the font \n\n selection fields in native ZW3D commands. This function updates \n\n \"VgRdTxtFont\" if a match to \"Name\" is found. If \"Name\" does not match \n\n any font name, the current value of \"VgRdTxtFont\" selects the default \n\n item in the combo box list.\nWhen working with an \"Options\" form, the usual practice for managing a \n\n font input field is to use an option field having a combo box for the \n\n font names, and to use a hidden text field in the form's data \n\n container to hold the name of the selected font. In the form's \n\n \"init_after\" callback, call this function with the contents of the \n\n hidden field as the \"Name\" argument. In the form's \"function\" \n\n callback, query the combo box for the text of the selected item, save \n\n the text to the hidden field, and use the text wherever the font name \n\n is needed. If the combo box cannot be queried because the \"Options\" \n\n form is not active (such as during regeneration), use whatever text \n\n was previously saved in the hidden field as the font name. For \n\n example, an \"init_after\" callback might include this snippet of code \n\n to initialize a font selection combo box in field 5, with a hidden \n\n text field 4 that might contain the name of a previously selected font \n\n (the data container is specified by \"idData\").\nnote:\nThe font name will be an empty string if field 4 does not exist:"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to add an item to a specific field in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxItemAdd\nForm [in] GUI form name\nidField [in] field id\nText [in] item text (NULL to Ignore)\n\nAdds a new item to the end of the list associated with the specified \"w_list\" or \"w_combo\" field.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to modify the text associated with a specified item?"
            },
            {
                "role": "assistant",
                "content": "cvxItemModify\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\nText [in] item text\n\nModifies the text associated with the specified item. See \n\n cvxItemSet() for the meaning of \"idItem\" for each field type.\nIf the field is a w_list, this function changes the item's icon (if \n\n Text is recognized as the path to an image file) or it changes the \n\n item's text (if Text is not an image file path) without otherwise \n\n re-initializing the item as cvxItemSet() would do. A typical use for \n\n this function is to augment cvxItemAdd() or cvxItemSet() to create a \n\n list item that has both text and an icon: specify the path to the icon \n\n image file as the Text argument using one of the latter two functions, \n\n then call this function to add text to the item.\nFor all other field types, this function is the same as cvxItemSet().\nInput \"OptForm\" as the form name to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find an item by its text in a field?"
            },
            {
                "role": "assistant",
                "content": "cvxItemFind\nForm [in] GUI form name\nidField [in] field id\nText [in] item text\nidItem [out] item id\n\nSearches the specified \"w_list\" or \"w_combo\" field for \n\n the specified text and outputs the corresponding item id. \n\n \"idItem\" is set to zero if the specified text is not found.\nFor \"Options\" form, the id starts form 1, and 0 means it is not set. So item returns 0, indicating that it is not found.\nFor ListWidget and ComboCheck, the position of the item is transmitted through +1 processing. Therefore, the minimum transmitted position is 0 + 1 =1. Therefore, if the item is 0 ,it means that it is not found."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxItemSelect with GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxItemSelect\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\n\nSelects the specified item.\nInput \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check the status of a GUI item?"
            },
            {
                "role": "assistant",
                "content": "cvxItemStateGet\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\nisOn [out] 1 if item is ON; 0 if it is OFF\n\nGets the ON/OFF status of a GUI item. \n\n Input \"OptForm\" to apply this function to an \"Options\" form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to check if an item is partially checked in a tree view?"
            },
            {
                "role": "assistant",
                "content": "cvxItemGetCheckState\nForm [in] GUI form name\nidField [in] field id\nidItem [in] item id\ncheckState [out] 0:Unchecked, 1:PartiallyChecked, 2:Checked\n\nGet item check state of list Widget or tree view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I determine if a particular item is hidden or visible in a form field?"
            },
            {
                "role": "assistant",
                "content": "cvxItemVisibleGet\nForm [in] form name\nidField [in] field id\nidItem [in] item number\nstate [out] 1 is visible ,0 is hide\n\nGet the visibility of the field's specialized item."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to rename UI settings?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsRename\nName [in] the name of the Settings to be renamed\nDest [in] the new name of the Settings\n\nRename the specified ui settings to the given name"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to import UI settings from a file?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsImport\nPath [in] the path of the settings file to be imported\n\nImport the ui settings file"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I verify the existence of a UI setting using its name?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsExists\nName [in] the name of the settings\n\nTest the existence of ui setting by the given name"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to fetch UI settings by index?"
            },
            {
                "role": "assistant",
                "content": "cvxUiSettingsFetch\ni [in] the index of the settings to be fetched\nName [out] the name of the settings to be fetched\n\nGet the ui settings name by the given index."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display percent progress using GUI callback function?"
            },
            {
                "role": "assistant",
                "content": "cvxProgress\niprogress [in] percent progress (0-100)\n\nInvoke GUI callback function to display percent progress \n\n or to clear the progress meter if \"iprogress < 0\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to set a tooltip for a specific field in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxListItemToolTipSet\nform [in] form name\nfield [in] field id\nrow [in] item row\ntoolTip [in] tooltip\n\nSet the tooltip for specified row item of listWdiget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I access and show a specific popup menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupShow\nname [in] popup menu name\n\nShow the specified popup menu. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the visibility of a specific pop up menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSetVisible\nname [in] popup menu name\nvisible [in] visible or not\n\nSet the visible state for the specified pop up menu. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the count of actions in a specific sub-menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSubMenuCnt\nName [in] menu name\nSub [in] sub-menu name\ncnt [out] count of actions\n\nGet count of sub-menu actions. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to remove all items from a sub-menu in a menu?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSubMenuItemRemove\nname [in] menu name\nSub [in] sub-menu name\nindex [in] index in the sub-menu\n\nRemove a item from specific sub-menu in menu. \n\n The function of this interface is similar to cvxPopupSubMenuActionsRemove(). \n\n If index = -1, remove all. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the sub-menu name for inserting a separator?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupSubMenuSeparatorInsert\nName [in] menu name\nSub [in] sub-menu name\n\nInsert a separator to specific sub-menu in menu. \n\n This interface can only insert separator at the end of the sub-menu. \n\n If there is no \"action\" after the separator, the separator is not displayed. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to insert a specified popup item?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemInsert\nname [in] menu name\nindex [in] index in the menu\nLabel [in] label name\nAction [in] action name\n\nInsert specified popup item. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/). \n\n If this menu is NULL, \"index\" = -1. \n\n If this menu is not NULL, \"index\" >=0"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to find the popup menu name for removal?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemRemove\nname [in] menu name\nindex [in] index in the menu\n\nRemove specified popup item. \n\n If index = -1, remove all. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the minimum value for the action index?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemSetAction\nname [in] menu name\nindex [in] action index\nAction [in] action script\n\nSet the action of menu specified item \n\n This interface cannot change the action label. \n\n The \"index\" can't be less than 0. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the visible state of a menu item?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemVisibleGet\nname [in] menu name\nitem [in] menu item\nVisible [out] visible state\n\nGet the action's visible state. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the action state of popup bar?"
            },
            {
                "role": "assistant",
                "content": "cvxPopupItemSetEnabledByAction\nname [in] menu name\naction [in] action name\nenabled [in] action state\n\nSet the action state of quick bar, popup bar according to the specified \n\n menu name and action name. \n\n Get the popup menu name through using \"$report\" or viewing the configuration file(ZW3D/Settings/)."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "description"
            },
            {
                "role": "assistant",
                "content": "cvxRibbonSetStatus\nenable [in] 1: enable the ribbon. 0: disable the ribbon\n\nEnable or disable the ribbon."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the minimum and maximum of a slider?"
            },
            {
                "role": "assistant",
                "content": "cvxSliderLimitSet\nForm [in] form name\nidfield [in] id of field\nmin [in] slider minimum\nmax [in] slider maximum\n\nUse this function to set slider's minimum and maximum. \n\n Activate the form before calling this function.\nsee:\ncvxSliderLimitGet()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set table attributes in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxTableAtSet\nForm [in] GUI form name\nidTable [in] table field id\nAt [in] table attributes\n\nApplies the attributes specified in \"At\" to the GUI table identified \n\n by \"Form\" and \"idTable\".\nnote:\nInterface cvxTableAtSetInit() can initialize variables of this function."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to select a specific range in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSetSelRange\nForm [in] GUI form name\nidTable [in] table field id\nSelRange [in] select range \n\n left: left column \n\n right: right column \n\n top: top row \n\n bottom: bottom row\nbSelect [in] select the range or not,1 for select\n\nSet selected range of the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to unselect all items in a specific GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxTableUnselectAll\nForm [in] GUI form name\nidTable [in] table field id\n\nUnselect all items"
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the row count of a specified table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableRowCnt\nForm [in] GUI form name\nidTable [in] table field id\n\nGet the row count the specified table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to add a row to a table field?"
            },
            {
                "role": "assistant",
                "content": "cvxTableRowInsert\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] Row id (>=0)\n\nInsert a row to table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the method to insert a new column to a table field?"
            },
            {
                "role": "assistant",
                "content": "cvxTableColInsert\nForm [in] GUI form name\nidTable [in] table field id\nCol [in] Column id (>=0)\n\nInsert a column to table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set a combo box for a specific cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableComboSet2\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nOptions [in] null-terminated, comma-delimited list of text labels\nImages [in] null-terminated, comma-delimited list of image, it will be ignored when it is NULL\n\nMakes the table cell identified by \"Row\" and \"Col\" a combo box of options \n\n specified by the input list of comma-delimited text labels and images.\nOptions: each option is separated by ',' (\"1,2,3\"). \n\n Images: each image is separated by ',' (\"A.png,B.png,C.png\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the options for an indexed combo box in a table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableIndexComboSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nOptions [in] null-terminated, comma-delimited list of text labels\n\nMakes the table cell identified by \"Row\" and \"Col\" a indexed combo box of options \n\n specified by the input list of comma-delimited text labels.\nOptions: each option is separated by ',' (\"1,2,3\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify images for a table cell combo box?"
            },
            {
                "role": "assistant",
                "content": "cvxTableIndexComboSet2\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nOptions [in] null-terminated, comma-delimited list of text labels\nImages [in] null-terminated, comma-delimited list of image, it will be ignored when it is NULL\n\nMakes the table cell identified by \"Row\" and \"Col\" a indexed combo box of options \n\n specified by the input list of comma-delimited text labels and images.\nOptions: each option is separated by ',' (\"1,2,3\").\nImages: each image is separated by ',' (\"A.png,B.png,C.png\")."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the selected text for a specified table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableComboSetOption\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nIndex [in] Option index\nIdxText [in] null-terminated, Option text\n\nSet the option index for the specified table cell defined as combo box or indexed combo box or editable combo box. \n\n If variable Index is not equal to -1, variable IdxText can be empty, \n\n and when variable Index equals -1, set variable IdxText to the selected text."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to make sure a table cell is visible within the table limits?"
            },
            {
                "role": "assistant",
                "content": "cvxTableVisSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\n\nMakes sure the table cell identified by \"Row\" and \"Col\" is visible \n\n within a table that may scroll vertically or horizontally beyond the \n\n limits of the display area on its parent form."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the text of a specific table cell?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCellTextGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\ntext [out] text to get\nnBytes [in] string max size of text\n\nGet the text of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to set the tooltip for a table cell based on row and column?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCellTipSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=-1)\nCol [in] table column (>=-1)\ntip [in] tooltip string\n\nSet the tooltip of the table cell identified by \"Row\" and \"Col\".\nnote:\nThe row and column can not both be -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the text of a table cell in a GUI form?"
            },
            {
                "role": "assistant",
                "content": "cvxTableCellTextSet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\ntext [in] text to set\n\nSet the text of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the date of a specific cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableDateGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nDate [out] Date to get (time in seconds elapsed since 00:00:00 Jan 1, 1970)\nDateType [out] Date type to get\n\nGet the date of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the color of a specific cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableColorGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nColor [out] true color, such as RGB(255,0,0)\nClrIdx [out] index color (V_COLOR_NULL ~ V_COLOR_LAST)\nType [out] color type: 0-true color, 1-index color\n\nGet the color of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the number from a specific cell in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableNumGet\nForm [in] GUI form name\nidTable [in] table field id\nRow [in] table row (>=0)\nCol [in] table column (>=0)\nNum [out] Number to get\nBytes [in] string max size of Num\n\nGet number of the table cell identified by \"Row\" and \"Col\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the horizontal header string list to a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSetHorHeaderList\nForm [in] form name\nidTable [in] field id\nnum [in] number of header list\npHeaderList [in] header string list\n\nSet the Horizontal header string list to table.\nThis interface means the header represented by the top row of the table."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to align the header text in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSetHeaderAlignment\nForm [in] form name\nidTable [in] field id\nisVertical [in] Direction: 0-Horizontal, 1-Vertical\nalign [in] Alignment mode\n\nSet header text alignment direction: Center, Left, Right."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I affect the behavior of column width resizing and display in a table?"
            },
            {
                "role": "assistant",
                "content": "cvxTableSetHeaderSectionSize\nForm [in] form name\nidTable [in] field id\nsize [in] the header section limited size(>=-1)\nisMin [in] if it is 1, means minimum limitation, else maximum\n\nset header column size limitation to affect the behavior of resizing and display for columns' width."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the icon for a specific section of the tree header in TreeView?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetHeaderIcon\nname [in] form name\nfield [in] field number\nsection [in] section of tree header\nicon [in] tree header icon name\n\nSet the icon of tree header according to specified section. \n\n This interface is used for the widget TreeView."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the height of a specified tree widget header item?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeHeaderGetSize\nform [in] form name\nfield [in] the item id\nwidth [out] width of the item\nheight [out] height of the item\n\nThis function gets the header size of the specified tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to specify the number of columns displayed in a tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetColumnCount\nform [in] form name\nfield [in] field id\ncount [out] count\n\nThis function sets the number of columns displayed in the specified tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the width of a specific column in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetColumnWidth\nform [in] form name\nfield [in] field number\ncol [in] column to get\n\nGet the width of the given column."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to determine the visibility of a column in a form?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeIsColumnHidden\nform [in] form name\nfield [in] field number\ncol [in] column to query\n\nGet visible state of the specified column."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to expand all nodes of a tree based on a field number?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeExpandAll\nform [in] form name\nfield [in] field number\n\nExpand all the nodes of the tree."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the selection mode of a tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetSelectionMode\nform [in] form name\nfield [in] field number\nmode [in] tree view control selection mode \n\n 0: No selection; \n\n 1: Single selection; \n\n 2: Multiple selection; \n\n 3: Extended selection; \n\n 4: Contiguous selection\n\nThis function sets the selection mode of a tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve callback function parameter pointer for the tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetCbParam\nform [in] form name\nfield [in] filed id\nitemId [in] item id\ncbp [out] assigned with tree callback function parameter pointer\n\nGet callback parameters for the tree widget when the callback function being invoked."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to specify the form and field for adding a node to the tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeAddItem\nform [in] form name\nfield [in] field number\nparentId [in] Parent node id, if without parent, assign 0\nsiblingId [in] Prev sibling node id, if without previous node, assign VX_INSERT_LAST\nlabel [in] Node label text\nimgIdx [in] Index of the item's expanded image in the imagelist\nfolderIdx [in] Index of the item's collapsed image in the imagelist\nitemType [in] Node type\ndbIdx [in] Object index in database\nitemflag [in] evxTreeItemFlag\noutItemId [out] new added node's id\ncmdName [in] icon name\n\nAdd a node with specified informations to the tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the icon for a specific column of a tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetItemIconNameByColumn\nform [in] form name\nfield [in] field number\nid [in] tree node id\ncol [in] column to set\niconName [in] icon name without extension name\n\nSet the cell item (the specified column of the specified tree node) icon by name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to retrieve the text of a column in a tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetItemTextByColumn\nform [in] form name\nfield [in] field id\nid [in] tree item id\ncol [in] column\ntext [out] column text\nsize [in] column text size\n\nGet the cell item text of the specified column of the tree node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I retrieve the object index in the database for a given node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetDBIdByItem\nform [in] form name\nfield [in] field id\nid [in] tree node id\nobjectIndex [out] object index in database matched to node\n\nGet object index in database which the specified node is associated to."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to activate a node for editing using line edit?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeEditItemByLineEdit\nform [in] form name\nfield [in] field number\nid [in] tree node id\ncol [in] column\ndefaultLabel [in] default text when editing\n\nActivate the specified node to edit by a line edit."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the previous sibling node of a specific tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetPrevSiblingItem\nform [in] form name\nfield [in] field number\nid [in] tree node id\nprevId [out] previous sibling node id\n\nGet previous sibling node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the child node id at a specific index from a specified node in the tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetChildItem\nform [in] form name\nfield [in] field id\nid [in] parent node id\nindex [in] index of node, 0 based\nchild_id [out] first child node id\n\nGet the nth(index) child item of the specified node from the tree widget. \n\n If the node has no child node or index is not valid, child_id will be VX_INVALID_ITEM."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to move tree nodes to a specified position?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeMoveItems\nform [in] form name\nfield [in] field number\nnumNodes [in] number of nodes moved\nids [in] list of nodes moved\ninsParentId [in] destination node's parent. If none, pass with 0\nsiblingId [in] destination node's prev sibling, \n\n if insert as first child, pass with VX_INSERT_FIRST, \n\n if insert as last child, pass with VX_INSERT_LAST\n\nMove tree nodes to the specified position with all its descendants."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to deallocate the output list of selected nodes?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeGetSelectedItems\nform [in] form name\nfield [in] field number\ncount [out] number of nodes\nids [out] IDs of selected nodes\n\nGet all of the current selected nodes of the tree widget. The calling procedure \n\n MUST deallocate the output list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxTreeSelectItem to select a node in a tree widget?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSelectItem\nform [in] form name\nfield [in] field id\nid [in] tree node id\n\nThis function is to select the specified node of the tree widget."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to set the check state of a tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeSetItemCheckState\nform [in] form name\nfield [in] field number\nid [in] tree node id\ncheckState [in] check state\nextToChild [in] flag to set children nodes check state\n\nSet check state of the tree node identified by id defined as check box."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to collapse a specified tree node?"
            },
            {
                "role": "assistant",
                "content": "cvxTreeExpandItem\nform [in] form name\nfield [in] field number\nid [in] tree node id\noption [in] status (1 to expand, 2 to collapse, 3 to toggle)\n\nSet expand status of specified tree node."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to prompt the user for distance input?"
            },
            {
                "role": "assistant",
                "content": "cvxGetDistance\nPrompt [in] text prompt\nDistance [out] distance (mm)\n\nGets distance input from the user, using the specified prompt."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What are the options for entity input?"
            },
            {
                "role": "assistant",
                "content": "cvxGetEnt\nPrompt [in] text prompt\nOpt [in] entity input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nidEntity [out] entity id (0 if undefined)\n\nDisplays the specified \"Prompt\" and waits for the user to pick an entity whose id is output via \"idEntity\"."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a prompt and wait for user to pick a list of entities?"
            },
            {
                "role": "assistant",
                "content": "cvxGetEntPaths\nPrompt [in] text prompt\nOpt [in] entity input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nCount [out] number of entity picks\nPaths [out] list of entity path\n\nDisplays the specified \"Prompt\" and waits for the user to pick \n\n a list of entities, which is output via \"Paths\". The calling \n\n procedure is responsible for deallocating the entity path list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to display a prompt and wait for user to pick a list of entities?"
            },
            {
                "role": "assistant",
                "content": "cvxGetEntPathsMultiFilter\nPrompt [in] text prompt\npOpt [in] entity input option array pointer\nnpOpt [in] entity input option array elements` number\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nCount [out] number of entity picks\nPaths [out] list of entity path\n\nDisplays the specified \"Prompt\" and waits for the user to pick \n\n a list of entities whose type already exists in the entity option array by himself, which is output via \"Paths\". \n\n The calling procedure is responsible for deallocating the entity path list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the pick-path of an external entity?"
            },
            {
                "role": "assistant",
                "content": "cvxGetExternalPick\nPrompt [in] text prompt\nOpt [in] point input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nPoint [out] point defined in the local space of its parent entity\nEntPath [out] entity pick-path (Entity->Count=0 if undefined)\nMatrix [out] transform that maps point from local space to space of active target\n\nDisplays the specified \"prompt\" and waits for the user to select \n\n a point based on the input option (evxPntInpOpt). This function \n\n is especially designed to manage the selection of points on entities \n\n that lie outside of the active target object, such as a point on a \n\n face of an assembly component. Your objective may be to get the \n\n coordinates of a point that lies external to the active object (e.g. part), \n\n the pick-path of an external entity (e.g. an assembly face), or both.\nThe selected point's coordinates are output in the local space of the point's \n\n parent entity. \"Matrix\" may be used to transform the point (and entity) \n\n coordinates from their local space to the space of the target object that \n\n was active at the time the point was selected (see cvxPntTransform(), \n\n cvxCrvTransform()and cvxSrfTransform()).\nIf the point was selected by snapping to an entity, the pick-path of the \n\n entity is output via \"EntPath\". A pick-path defines the sequence of object \n\n references (i.e. nested assembly components) that locate the entity relative \n\n to the active target object. A pick-path could lead to an entity that lies \n\n in a different file or object than the active file/object.\nAPI functions for querying entities generally require that an entity's parent \n\n file and object(i.e. part, sketch, plan, drawing) be active. If you want to \n\n query information about an entity, such as its geometry, use cvxEntPathActivate() \n\n to activate the entity's parent file and object, and to get the entity's id. \n\n Query the geometry and, if desired, transform it into the space of the original \n\n target object using \"Matrix\". When you are done querying the geometry, restore \n\n the original target file and object with cvxEntPathActivate()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the count of point picks?"
            },
            {
                "role": "assistant",
                "content": "cvxGetPoints\nPrompt [in] text prompt\nOpt [in] point input option\nEmptyOk [in] 1 if <middle-click> without input is okay; else 0\nCount [out] number of point picks\nPoints [out] list of points\n\nDisplays the specified \"Prompt\" and waits for the user to input \n\n a list of points, which is output via \"Points\". The calling \n\n procedure is responsible for deallocating the point list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to get the number of point picks?"
            },
            {
                "role": "assistant",
                "content": "cvxGetPointsOnEnts\nprompt [in] text prompt\nopt [in] point input option\nemptyOk [in] 1 if <middle-click> without input is okay; else 0\ncount [out] number of point picks\npoints [out] list of points\npaths [out] list of paths(path of point on entity, NULL to ignore)\n\nDisplays the specified \"Prompt\" and waits for the user to input \n\n a list of points and paths, which is output via \"points\" and \"paths\". \n\n The calling procedure is responsible for deallocating the point and path list."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the file browser to a default folder?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFileByLongPath\nOpen [in] 1 to open files, 0 to save files\nPrompt [in] null-terminated text prompt\nDefault [in] default directory (null-terminated string)\nFilter [in] file filter (null-terminated string)\nPath [out] user-selected file path\nsizePath [unknown] sizePath max size of Path user-selected file path\n\nDisplays the file browser with the specified \"Prompt\" and initialized to the \"Default\" folder. The browser will display the files specified by \"Filter\", which is a string like the following examples:\nShow all files: \"All Files (*.*)|*.*|\" Show DXF and DWG files: \"DWG File (*.dwg)|*.dwg|DXF File (*.dxf)|*.dxf|\"\nIf \"Open = 1\", the file browser will come up in the configuration used to select a file to be opened.\nIf \"Open = 0\", the file browser will come up in the configuration used to specify a file to be saved. If the file already exists, the user will be asked whether he wants to overwrite it.\nThe path of the file selected by the user is output via the string variable \"Path\". If there is an error, or the user presses cancel, an empty string is output. It is assumed that \"Path\" references sufficient memory to hold the output path (max = 512 bytes).\nTo initialize the file browser to both a default directory and file selection, input \"Default\" as the desired directory, followed by a comma, followed by the desired file name.\nA Path that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes.\nsee:\ncvxGetFileActiveField()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to handle a path that is too long in the file browser?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFileByLongPath\nOpen [in] 1 to open files, 0 to save files\nPrompt [in] null-terminated text prompt\nDefault [in] default directory (null-terminated string)\nFilter [in] file filter (null-terminated string)\nPath [out] user-selected file path\nsizePath [unknown] sizePath max size of Path user-selected file path\n\nDisplays the file browser with the specified \"Prompt\" and initialized to the \"Default\" folder. The browser will display the files specified by \"Filter\", which is a string like the following examples:\nShow all files: \"All Files (*.*)|*.*|\" Show DXF and DWG files: \"DWG File (*.dwg)|*.dwg|DXF File (*.dxf)|*.dxf|\"\nIf \"Open = 1\", the file browser will come up in the configuration used to select a file to be opened.\nIf \"Open = 0\", the file browser will come up in the configuration used to specify a file to be saved. If the file already exists, the user will be asked whether he wants to overwrite it.\nThe path of the file selected by the user is output via the string variable \"Path\". If there is an error, or the user presses cancel, an empty string is output. It is assumed that \"Path\" references sufficient memory to hold the output path (max = 512 bytes).\nTo initialize the file browser to both a default directory and file selection, input \"Default\" as the desired directory, followed by a comma, followed by the desired file name.\nA Path that is too long (longer than \"sizePath\") is truncated.\nIt is assumed that the input \"Path\" is no longer than 512 bytes.\nsee:\ncvxGetFileActiveField()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is it possible to implement a command function that automatically displays the file browser when the user activates a string input field?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFileActiveField\nOpen [in] 1 to open files, 0 to save files\nPrompt [in] null-terminated text prompt\nDefault [in] default directory (null-terminated string)\nFilter [in] file filter (null-terminated string)\n\nSimilar to cvxGetFile(), this function is intended for use when a form \n\n is open and a string field is active. The file browser is initialized \n\n using the parent folder of the file path from the active field. If \n\n the active field is empty, the file browser is initialized using the \n\n \"Default\" folder string. The specified \"Prompt\" is shown to the user \n\n when the file browser opens, and the browser displays the files \n\n specified by \"Filter\". Refer to cvxGetFile() for more information about \n\n the syntax of the \"Filter\" string.\nWhen the user closes the file browser, the path to the file selected \n\n by the user is sent to the active field. If the user cancels the \n\n browser, or if an error occurs, the active field is not changed. \n\n\nIf \"Open = 1\", the file browser will be configured to select a file to be opened.\nIf \"Open = 0\", the file browser will be configured to select or name a \n\n file to be saved. If the file already exists, the user will be asked \n\n to confirm that the file is to be replaced.\nA default will be provided if the \"Prompt\", \"Default\" or \"Filter\" \n\n argument is NULL. When \"Open\" is 1, the default filter allows any \n\n file to be selected, but when \"Open\" is 0 the caller should always \n\n provide the filter, although this function will use a default in this \n\n case, too, if necessary guessing at the type of file to be saved.\nWhen saving (\"Open\" is 0), the file browser can be configured to show \n\n a default folder and also pre-select a specified file. Do this by \n\n assigning the path to the desired folder to \"Default\", followed by a \n\n comma, followed by the desired file name.\nUnlike the cvxGetFile() function, this function does not allow multiple \n\n selections. Only a single file selection is sent to the active field \n\n when the user closes the file browser.\nThis function is particularly helpful for implementing command \n\n functions that automatically display the file browser when the user \n\n activates a string input field. For example, a function that displays \n\n the file browser to open a text file might look like this:\nand after installing a symbol with the same name as the function, \n\n using the cvxCmdFunc() function, it can be referenced in the string \n\n field's options property by preceding the symbol name with a tilde \n\n character:\n~TextFileCb,\nsee:\ncvxGetFile()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to initialize the folder browser using the path found in the active field?"
            },
            {
                "role": "assistant",
                "content": "cvxGetFolderActiveField\nPrompt [in] prompt displayed on folder browser title bar\nDefault [in] default folder (null-terminated string)\n\nSimilar to cvxGetFolder(), this function is intended for use when a form \n\n is open and a string field is active. The folder browser is \n\n initialized using the path found in the active field. If the active \n\n field is empty, the folder browser is initialized using the \"Default\" \n\n folder string. The specified \"Prompt\" is shown to the user when the \n\n folder browser opens.\nWhen the user closes the folder browser, the path to the folder \n\n selected by the user is sent to the active field. If the user cancels \n\n the browser, or if an error occurs, the active field is not changed. \n\n\nIf the \"Prompt\" or \"Default\" argument is NULL, a default will be provided.\nThis function is particularly helpful for implementing command \n\n functions that automatically display the folder browser when the user \n\n activates a string input field. For example, a function that displays \n\n the browser for selecting an output folder might look like this:\nand after installing a symbol with the same name as the function, \n\n using the cvxCmdFunc() function, it can be referenced in the string \n\n field's options property by preceding the symbol name with a tilde \n\n character:\n~OutputDirCb,\nsee:\ncvxGetFolder()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to prompt the user for a text input?"
            },
            {
                "role": "assistant",
                "content": "cvxGetString\nPrompt [in] null-terminated text prompt\nDefault [in] default input string (or empty string)\nNumBytes [in] no. bytes of storage referenced by \"String\"\nString [out] user input text string\n\nGets string input from the user. \n\n The string input is placed in the memory referenced by \"String\". \n\n If necessary, the input string is truncated to fit the memory."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to retrieve the equation set containing a specific equation?"
            },
            {
                "role": "assistant",
                "content": "cvxPartInqEqnAssociatedSet\nidEqn [in] equation id\nidSet [out] equation set id\n\nGet equation set containing specified equation. \n\n If cannot find, *idSet = -1."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to update the description of a specified equation by its ID?"
            },
            {
                "role": "assistant",
                "content": "cvxEqSetDescById\nidEqn [in] equation id\ndesc [in] description that defines the equation\n\nUpdate the specified equation's description without regard for how \n\n the equation was generated."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a function to resize a string after substituting variable values?"
            },
            {
                "role": "assistant",
                "content": "cvxPartVarSubstituteResize\nStr [inout] null-terminated string, may be NULL\n\nSubstitute variable values into a string for all occurrences of \n\n variable references. The syntax for each variable reference is [$VAR] \n\n where VAR is the name of a variable in the active target. References \n\n for which the variable cannot be found are left in the string. \n\n\nThis function is not limited to parts, but can be used when the active \n\n target is any type of root object in which variables may exist.\nThe string will be reallocated (if necessary) to insert the variable values.\nIt is not an error if \"Str\" is NULL or empty, nor is it an error if the \n\n string has no [$VAR] references, but it is an error if a variable \n\n specified in such a reference cannot be found in the active target.\nThe string is reallocated if substituting the variable values produces \n\n a longer string. The string is not reallocated if it becomes shorter \n\n or stays the same length.\nIf the block of memory used for the string is larger than needed for \n\n the string (i.e. larger than the number of bytes in the string plus \n\n 1), this function might make the block smaller. That is because \n\n reallocation requests only the amount of memory needed for the string, \n\n and might not consider unused space in the block. There is no need to \n\n allocate more memory than the string needs before calling this function.\nsee:\ncvxPartVarSubstitute() for a similar function that truncates a string instead of resizing it."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "param"
            },
            {
                "role": "assistant",
                "content": "cvxEqRegen\nidEqn [in] -1 to regen all equation; equation id to regen specified equation\n\nRegenerate all/specified equations."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "What is the function to identify if a view is a section view?"
            },
            {
                "role": "assistant",
                "content": "cvxViewIsSection\nidView [in] id view\n\nDetermine whether the view is a section view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to activate a specific view?"
            },
            {
                "role": "assistant",
                "content": "cvxViewActivate\nidView [in] id view\n\nActivate the specified view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to retrieve the position and orientation of the active view?"
            },
            {
                "role": "assistant",
                "content": "cvxViewGet\nFrame [out] align active view with specified coordinate frame\nExtent [out] view extent\n\nRetrieves the position, orientation and extent of the active view."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I set the origin of the active view to a new point?"
            },
            {
                "role": "assistant",
                "content": "cvxViewOrigin\nOrigin [in] new view origin\n\nMoves the origin of the active view to the specified point."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to get the top left and bottom right coordinates of the active view?"
            },
            {
                "role": "assistant",
                "content": "cvxGetViewRect\nincludeFrame [in] 1=include window frame; 0=exclude window frame;\nisGlobal [in] 1=get global coordinates; 0=get client coordinates;\ntlX [out] top left X\ntlY [out] top left Y\nbrX [out] bottom right X\nbrY [out] bottom right Y\n\nGet the global or client coordinates of active View."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to change the orientation of the active view to a custom view?"
            },
            {
                "role": "assistant",
                "content": "cvxCustomViewActivate\nidView [in] index of custom view\n\nChanges the orientation of the active view (part, sketch, cam plan) \n\n to the specified custom view type and then does a \"zoom all\".\nnote:\nthe input view extent is only used if the \"zoom all\" doesn't find any geometry."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to find the index of a custom view using its name?"
            },
            {
                "role": "assistant",
                "content": "cvxCustomViewId\nName [in] custom view name\nidView [out] index of custom view\n\nGet index of custom view of specified name."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How can I obtain the current undo step count?"
            },
            {
                "role": "assistant",
                "content": "cvxXnUndoCount\n\nGet the present undo step count."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "Is there a way to undo/redo to a specific transaction by name?"
            },
            {
                "role": "assistant",
                "content": "cvxUndoRedoTo\nUndo [in] 1-undo, 0-redo\nName [in] undo-redo transaction name\n\nUndo/redo up to, and including, the specified transaction \n\n or to the start/end of the undo-redo transaction list \n\n whichever is encountered first.\nsee:\ncvxCmdMarker()."
            }
        ]
    },
    {
        "dialog": [
            {
                "role": "user",
                "content": "How to use cvxXnUndoCount() to ensure present steps is greater than iCount?"
            },
            {
                "role": "assistant",
                "content": "cvxXnBundle\niCount [in] special step count\nxn_name [in] transaction name\n\nBundle the steps from the iCount+1 to the present into a new step(transaction).\nMake sure the present steps is greater than iCount, use cvxXnUndoCount() to get it."
            }
        ]
    }
]